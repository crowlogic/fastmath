/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGJAVA
#define SWIGJAVA
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1,
  SWIG_JavaIOException,
  SWIG_JavaRuntimeException,
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError,
  SWIG_JavaIllegalStateException,
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { SWIG_JavaIllegalStateException, "java/lang/IllegalStateException" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1VERSION_1MAJOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1VERSION_1MINOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1VERSION_1PATCHLEVEL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_MPFR_1VERSION_1STRING_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("4.1.0");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1VERSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((((4) << 16L)|((1) << 8)|(0)));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1IOSFWD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1CXX_1CONFIG_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1RELEASE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(10);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GLIBCXX_1_1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(20200930);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ATTRIBUTE_1VISIBILITY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1DEPRECATED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1OS_1DEFINES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1NO_1CTYPE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1FEATURES_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1DEFAULT_1SOURCE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GLIBC_1USE_1ISOC2X_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1USE_1POSIX_1IMPLICITLY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1POSIX_1SOURCE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1POSIX_1C_1SOURCE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)(200809L);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1USE_1POSIX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1USE_1POSIX2_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1USE_1POSIX199309_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1USE_1POSIX199506_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1USE_1XOPEN2K_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1USE_1ISOC95_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1USE_1ISOC99_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1USE_1XOPEN2K8_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1ATFILE_1SOURCE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1USE_1MISC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1USE_1ATFILE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1USE_1FORTIFY_1LEVEL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GLIBC_1USE_1DEPRECATED_1GETS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GLIBC_1USE_1DEPRECATED_1SCANF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1STDC_1PREDEF_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1STDC_1IEC_1559_1_1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1STDC_1IEC_1559_1COMPLEX_1_1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1STDC_1ISO_110646_1_1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)(201706L);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GNU_1LIBRARY_1_1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GLIBC_1_1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GLIBC_1MINOR_1_1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(32);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1SYS_1CDEFS_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1glibc_1c99_1flexarr_1available_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1WORDSIZE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(32);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1WORDSIZE32_1SIZE_1ULONG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1WORDSIZE32_1PTRDIFF_1LONG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1WORDSIZE_1TIME64_1COMPAT32_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1LDOUBLE_1REDIRECTS_1TO_1FLOAT128_1ABI_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1GENERIC_1SELECTION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1NO_1OBSOLETE_1ISINF_1ISNAN_1DYNAMIC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(((2 << 16) +32 >= ((2) << 16) +(23)));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1CPU_1DEFINES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1FAST_1MATH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ACOSF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ACOSL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ALIGNED_1ALLOC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ARPA_1INET_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ASINF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ASINL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1AS_1SYMVER_1DIRECTIVE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ATAN2F_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ATAN2L_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ATANF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ATANL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ATOMIC_1LOCK_1POLICY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1AT_1QUICK_1EXIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1CEILF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1CEILL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1COMPLEX_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1COSF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1COSHF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1COSHL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1COSL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1DIRENT_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1DLFCN_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1EBADMSG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ECANCELED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ECHILD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1EIDRM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ENDIAN_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ENODATA_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ENOLINK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ENOSPC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ENOSR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ENOSTR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ENOTRECOVERABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ENOTSUP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1EOVERFLOW_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1EOWNERDEAD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1EPERM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1EPROTO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ETIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ETIMEDOUT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ETXTBSY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1EWOULDBLOCK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1EXCEPTION_1PTR_1SINCE_1GCC46_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1EXECINFO_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1EXPF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1EXPL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FABSF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FABSL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FCNTL_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FENV_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FINITE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FINITEF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FINITEL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FLOAT_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FLOORF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FLOORL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FMODF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FMODL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FREXPF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1FREXPL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1GETIPINFO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1GETS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1HYPOT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1HYPOTF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1HYPOTL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ICONV_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1INT64_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1INT64_1T_1LONG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1INTTYPES_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ISINFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ISINFL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ISNANF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ISNANL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1ISWBLANK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LC_1MESSAGES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LDEXPF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LDEXPL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LIBINTL_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LIMIT_1AS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LIMIT_1DATA_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LIMIT_1FSIZE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LIMIT_1RSS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LIMIT_1VMEM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LINK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LINUX_1FUTEX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LINUX_1RANDOM_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LINUX_1TYPES_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LOCALE_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LOG10F_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LOG10L_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LOGF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1LOGL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1MBSTATE_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1MEMALIGN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1MEMORY_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1MODF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1MODFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1MODFL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1NETDB_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1NETINET_1IN_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1NETINET_1TCP_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1POLL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1POLL_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1POSIX_1MEMALIGN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1POWF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1POWL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1QUICK_1EXIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1READLINK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SETENV_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SINCOS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SINCOSF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SINCOSL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SINF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SINHF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SINHL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SINL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SOCKATMARK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SQRTF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SQRTL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1STDALIGN_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1STDBOOL_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1STDINT_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1STDLIB_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1STRERROR_1L_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1STRERROR_1R_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1STRINGS_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1STRING_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1STRTOF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1STRTOLD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1STRUCT_1DIRENT_1D_1TYPE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1STRXFRM_1L_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYMLINK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYMVER_1SYMBOL_1RENAMING_1RUNTIME_1SUPPORT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYS_1IOCTL_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYS_1IPC_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYS_1PARAM_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYS_1RESOURCE_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYS_1SDT_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYS_1SEM_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYS_1SOCKET_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYS_1STATVFS_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYS_1STAT_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYS_1SYSINFO_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYS_1TIME_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYS_1TYPES_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1SYS_1UIO_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1S_1ISREG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1TANF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1TANHF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1TANHL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1TANL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1TGMATH_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1TIMESPEC_1GET_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1TLS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1TRUNCATE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1UCHAR_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1UNISTD_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1UTIME_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1VFWSCANF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1VSWSCANF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1VWSCANF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1WCHAR_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1WCSTOF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1WCTYPE_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1WRITEV_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAVE_1_1_1CXA_1THREAD_1ATEXIT_1IMPL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_LT_1OBJDIR_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)(".libs/");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1GLIBCXX_1PACKAGE_1BUGREPORT_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1GLIBCXX_1PACKAGE_1NAME_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("package-unused");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1GLIBCXX_1PACKAGE_1STRING_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("package-unused version-unused");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1GLIBCXX_1PACKAGE_1TARNAME_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("libstdc++");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1GLIBCXX_1PACKAGE_1URL_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1GLIBCXX_1PACKAGE_1_1GLIBCXX_1VERSION_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("version-unused");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_STDC_1HEADERS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1DARWIN_1USE_164_1BIT_1INODE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX11_1USE_1C99_1COMPLEX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX11_1USE_1C99_1MATH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX11_1USE_1C99_1STDIO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX11_1USE_1C99_1STDLIB_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX11_1USE_1C99_1WCHAR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX98_1USE_1C99_1COMPLEX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX98_1USE_1C99_1MATH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX98_1USE_1C99_1STDIO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX98_1USE_1C99_1STDLIB_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX98_1USE_1C99_1WCHAR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1ATOMIC_1BUILTINS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1FULLY_1DYNAMIC_1STRING_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HAS_1GTHREADS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1HOSTED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1RES_1LIMITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1STDIO_1EOF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(-1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1STDIO_1SEEK_1CUR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1STDIO_1SEEK_1END_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1SYMVER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1SYMVER_1GNU_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1C11_1UCHAR_1CXX11_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1C99_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1C99_1COMPLEX_1TR1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1C99_1CTYPE_1TR1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1C99_1FENV_1TR1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1C99_1INTTYPES_1TR1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1C99_1INTTYPES_1WCHAR_1T_1TR1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1C99_1MATH_1TR1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1C99_1STDINT_1TR1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1CLOCK_1MONOTONIC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1CLOCK_1REALTIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1DECIMAL_1FLOAT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1DEV_1RANDOM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1FCHMOD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1FCHMODAT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1GETTIMEOFDAY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1GET_1NPROCS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1INT128_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1LFS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1LONG_1LONG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1LSTAT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1NANOSLEEP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1NLS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1PTHREAD_1COND_1CLOCKWAIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1PTHREAD_1MUTEX_1CLOCKLOCK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1PTHREAD_1RWLOCK_1CLOCKLOCK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1PTHREAD_1RWLOCK_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1RANDOM_1TR1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1REALPATH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1SCHED_1YIELD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1SC_1NPROCESSORS_1ONLN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1SENDFILE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1ST_1MTIM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1TMPNAM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1UTIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1UTIMENSAT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1USE_1WCHAR_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1VERBOSE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1X86_1RDRAND_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1X86_1RDSEED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GTHREAD_1USE_1MUTEX_1TIMEDLOCK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1STRINGFWD_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1MEMORYFWD_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1POSTYPES_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1WCHAR_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GLIBC_1USE_1LIB_1EXT2_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GLIBC_1USE_1IEC_160559_1BFP_1EXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GLIBC_1USE_1IEC_160559_1BFP_1EXT_1C2X_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GLIBC_1USE_1IEC_160559_1FUNCS_1EXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GLIBC_1USE_1IEC_160559_1FUNCS_1EXT_1C2X_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GLIBC_1USE_1IEC_160559_1TYPES_1EXT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1FLOAT128_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1DISTINCT_1FLOAT128_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1FLOAT64X_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1FLOAT64X_1LONG_1DOUBLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1FLOAT16_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1FLOAT32_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1FLOAT64_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1FLOAT32X_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1FLOAT128X_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1DISTINCT_1FLOAT16_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1DISTINCT_1FLOAT32_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1DISTINCT_1FLOAT64_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1DISTINCT_1FLOAT32X_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1DISTINCT_1FLOAT64X_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1DISTINCT_1FLOAT128X_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1HAVE_1FLOATN_1NOT_1TYPEDEF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1WCHAR_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1WCHAR_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((0x7fffffff+L'\0'));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1WCHAR_1MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((-(0x7fffffff+L'\0') -1));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1wint_1t_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1WINT_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1mbstate_1t_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1_1_1mbstate_1t_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mbstate_1t_1_1_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __mbstate_t *arg1 = (__mbstate_t *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mbstate_t **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->__count = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1mbstate_1t_1_1_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __mbstate_t *arg1 = (__mbstate_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mbstate_t **)&jarg1; 
  result = (int) ((arg1)->__count);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1mbstate_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __mbstate_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__mbstate_t *)new __mbstate_t();
  *(__mbstate_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1mbstate_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __mbstate_t *arg1 = (__mbstate_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__mbstate_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1_1_1FILE_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FILE_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1TYPES_1LOCALE_1T_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1TYPES_1_1_1LOCALE_1T_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1locale_1struct_1_1_1locales_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __locale_struct *arg1 = (__locale_struct *) 0 ;
  __locale_data **arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__locale_struct **)&jarg1; 
  arg2 = *(__locale_data ***)&jarg2; 
  {
    size_t ii;
    __locale_data * *b = (__locale_data * *) arg1->__locales;
    for (ii = 0; ii < (size_t)13; ii++) b[ii] = *((__locale_data * *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1locale_1struct_1_1_1locales_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __locale_struct *arg1 = (__locale_struct *) 0 ;
  __locale_data **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__locale_struct **)&jarg1; 
  result = (__locale_data **)(__locale_data **) ((arg1)->__locales);
  *(__locale_data ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1locale_1struct_1_1_1ctype_1b_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __locale_struct *arg1 = (__locale_struct *) 0 ;
  unsigned short *arg2 = (unsigned short *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__locale_struct **)&jarg1; 
  arg2 = *(unsigned short **)&jarg2; 
  if (arg1) (arg1)->__ctype_b = (unsigned short const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1locale_1struct_1_1_1ctype_1b_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __locale_struct *arg1 = (__locale_struct *) 0 ;
  unsigned short *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__locale_struct **)&jarg1; 
  result = (unsigned short *) ((arg1)->__ctype_b);
  *(unsigned short **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1locale_1struct_1_1_1ctype_1tolower_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __locale_struct *arg1 = (__locale_struct *) 0 ;
  int *arg2 = (int *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__locale_struct **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  if (arg1) (arg1)->__ctype_tolower = (int const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1locale_1struct_1_1_1ctype_1tolower_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __locale_struct *arg1 = (__locale_struct *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__locale_struct **)&jarg1; 
  result = (int *) ((arg1)->__ctype_tolower);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1locale_1struct_1_1_1ctype_1toupper_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __locale_struct *arg1 = (__locale_struct *) 0 ;
  int *arg2 = (int *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__locale_struct **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  if (arg1) (arg1)->__ctype_toupper = (int const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1locale_1struct_1_1_1ctype_1toupper_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __locale_struct *arg1 = (__locale_struct *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__locale_struct **)&jarg1; 
  result = (int *) ((arg1)->__ctype_toupper);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1locale_1struct_1_1_1names_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __locale_struct *arg1 = (__locale_struct *) 0 ;
  char **arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__locale_struct **)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  {
    size_t ii;
    char const * *b = (char const * *) arg1->__names;
    for (ii = 0; ii < (size_t)13; ii++) b[ii] = *((char const * *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1locale_1struct_1_1_1names_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __locale_struct *arg1 = (__locale_struct *) 0 ;
  char **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__locale_struct **)&jarg1; 
  result = (char **)(char **) ((arg1)->__names);
  *(char ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1locale_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __locale_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__locale_struct *)new __locale_struct();
  *(__locale_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1locale_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __locale_struct *arg1 = (__locale_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__locale_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_WCHAR_1MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((-(0x7fffffff+L'\0') -1));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_WCHAR_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((0x7fffffff+L'\0'));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_WEOF_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)((0xffffffffu));
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcscpy(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (wchar_t *)wcscpy(arg1,(wchar_t const *)arg2);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsncpy(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t arg3 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = (size_t)jarg3; 
  result = (wchar_t *)wcsncpy(arg1,(wchar_t const *)arg2,arg3);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcscat(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (wchar_t *)wcscat(arg1,(wchar_t const *)arg2);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsncat(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t arg3 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = (size_t)jarg3; 
  result = (wchar_t *)wcsncat(arg1,(wchar_t const *)arg2,arg3);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wcscmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (int)wcscmp((wchar_t const *)arg1,(wchar_t const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wcsncmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = (size_t)jarg3; 
  result = (int)wcsncmp((wchar_t const *)arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wcscasecmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (int)wcscasecmp((wchar_t const *)arg1,(wchar_t const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wcsncasecmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = (size_t)jarg3; 
  result = (int)wcsncasecmp((wchar_t const *)arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wcscasecmp_1l(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  locale_t arg3 = (locale_t) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = *(locale_t *)&jarg3; 
  result = (int)wcscasecmp_l((wchar_t const *)arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wcsncasecmp_1l(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t arg3 ;
  locale_t arg4 = (locale_t) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = *(locale_t *)&jarg4; 
  result = (int)wcsncasecmp_l((wchar_t const *)arg1,(wchar_t const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wcscoll(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (int)wcscoll((wchar_t const *)arg1,(wchar_t const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsxfrm(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t arg3 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = (size_t)jarg3; 
  result = wcsxfrm(arg1,(wchar_t const *)arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wcscoll_1l(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  locale_t arg3 = (locale_t) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = *(locale_t *)&jarg3; 
  result = (int)wcscoll_l((wchar_t const *)arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsxfrm_1l(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t arg3 ;
  locale_t arg4 = (locale_t) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = *(locale_t *)&jarg4; 
  result = wcsxfrm_l(arg1,(wchar_t const *)arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsdup(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  result = (wchar_t *)wcsdup((wchar_t const *)arg1);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcschr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t arg2 ;
  wchar_t *argp2 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  argp2 = *(wchar_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null wchar_t");
    return 0;
  }
  arg2 = *argp2; 
  result = (wchar_t *)wcschr((wchar_t const *)arg1,arg2);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsrchr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t arg2 ;
  wchar_t *argp2 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  argp2 = *(wchar_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null wchar_t");
    return 0;
  }
  arg2 = *argp2; 
  result = (wchar_t *)wcsrchr((wchar_t const *)arg1,arg2);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcscspn(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = wcscspn((wchar_t const *)arg1,(wchar_t const *)arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsspn(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = wcsspn((wchar_t const *)arg1,(wchar_t const *)arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcspbrk(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (wchar_t *)wcspbrk((wchar_t const *)arg1,(wchar_t const *)arg2);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsstr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (wchar_t *)wcsstr((wchar_t const *)arg1,(wchar_t const *)arg2);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcstok(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t **arg3 = (wchar_t **) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = *(wchar_t ***)&jarg3; 
  result = (wchar_t *)wcstok(arg1,(wchar_t const *)arg2,arg3);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcslen(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  result = wcslen((wchar_t const *)arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsnlen(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  size_t arg2 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = (size_t)jarg2; 
  result = wcsnlen((wchar_t const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wmemchr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t arg2 ;
  size_t arg3 ;
  wchar_t *argp2 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  argp2 = *(wchar_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null wchar_t");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = (size_t)jarg3; 
  result = (wchar_t *)wmemchr((wchar_t const *)arg1,arg2,arg3);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wmemcmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = (size_t)jarg3; 
  result = (int)wmemcmp((wchar_t const *)arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wmemcpy(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t arg3 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = (size_t)jarg3; 
  result = (wchar_t *)wmemcpy(arg1,(wchar_t const *)arg2,arg3);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wmemmove(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t arg3 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = (size_t)jarg3; 
  result = (wchar_t *)wmemmove(arg1,(wchar_t const *)arg2,arg3);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wmemset(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t arg2 ;
  size_t arg3 ;
  wchar_t *argp2 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  argp2 = *(wchar_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null wchar_t");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = (size_t)jarg3; 
  result = (wchar_t *)wmemset(arg1,arg2,arg3);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_btowc(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  int arg1 ;
  wint_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (wint_t)btowc(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wctob(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  wint_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (wint_t)jarg1; 
  result = (int)wctob(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mbsinit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mbstate_t *arg1 = (mbstate_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mbstate_t **)&jarg1; 
  result = (int)mbsinit((__mbstate_t const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mbrtowc(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  mbstate_t *arg4 = (mbstate_t *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (size_t)jarg3; 
  arg4 = *(mbstate_t **)&jarg4; 
  result = mbrtowc(arg1,(char const *)arg2,arg3,arg4);
  jresult = (jlong)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcrtomb(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  wchar_t arg2 ;
  mbstate_t *arg3 = (mbstate_t *) 0 ;
  wchar_t *argp2 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  argp2 = *(wchar_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null wchar_t");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = *(mbstate_t **)&jarg3; 
  result = wcrtomb(arg1,arg2,arg3);
  jresult = (jlong)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1mbrlen(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  mbstate_t *arg3 = (mbstate_t *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (size_t)jarg2; 
  arg3 = *(mbstate_t **)&jarg3; 
  result = __mbrlen((char const *)arg1,arg2,arg3);
  jresult = (jlong)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mbrlen(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  mbstate_t *arg3 = (mbstate_t *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (size_t)jarg2; 
  arg3 = *(mbstate_t **)&jarg3; 
  result = mbrlen((char const *)arg1,arg2,arg3);
  jresult = (jlong)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mbsrtowcs(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  char **arg2 = (char **) 0 ;
  size_t arg3 ;
  mbstate_t *arg4 = (mbstate_t *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = *(mbstate_t **)&jarg4; 
  result = mbsrtowcs(arg1,(char const **)arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsrtombs(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  wchar_t **arg2 = (wchar_t **) 0 ;
  size_t arg3 ;
  mbstate_t *arg4 = (mbstate_t *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(wchar_t ***)&jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = *(mbstate_t **)&jarg4; 
  result = wcsrtombs(arg1,(wchar_t const **)arg2,arg3,arg4);
  jresult = (jlong)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mbsnrtowcs(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  char **arg2 = (char **) 0 ;
  size_t arg3 ;
  size_t arg4 ;
  mbstate_t *arg5 = (mbstate_t *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = (size_t)jarg4; 
  arg5 = *(mbstate_t **)&jarg5; 
  result = mbsnrtowcs(arg1,(char const **)arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsnrtombs(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  wchar_t **arg2 = (wchar_t **) 0 ;
  size_t arg3 ;
  size_t arg4 ;
  mbstate_t *arg5 = (mbstate_t *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(wchar_t ***)&jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = (size_t)jarg4; 
  arg5 = *(mbstate_t **)&jarg5; 
  result = wcsnrtombs(arg1,(wchar_t const **)arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_wcstod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jdouble jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t **arg2 = (wchar_t **) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t ***)&jarg2; 
  result = (double)wcstod((wchar_t const *)arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_arblib_arblibJNI_wcstof(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jfloat jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t **arg2 = (wchar_t **) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t ***)&jarg2; 
  result = (float)wcstof((wchar_t const *)arg1,arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcstold(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t **arg2 = (wchar_t **) 0 ;
  long double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t ***)&jarg2; 
  result = (long double)wcstold((wchar_t const *)arg1,arg2);
  *(long double **)&jresult = new long double((const long double &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wcstol(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t **arg2 = (wchar_t **) 0 ;
  int arg3 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t ***)&jarg2; 
  arg3 = (int)jarg3; 
  result = (long)wcstol((wchar_t const *)arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcstoul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t **arg2 = (wchar_t **) 0 ;
  int arg3 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t ***)&jarg2; 
  arg3 = (int)jarg3; 
  result = (unsigned long)wcstoul((wchar_t const *)arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcstoll(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t **arg2 = (wchar_t **) 0 ;
  int arg3 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t ***)&jarg2; 
  arg3 = (int)jarg3; 
  result = (long long)wcstoll((wchar_t const *)arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_wcstoull(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jobject jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t **arg2 = (wchar_t **) 0 ;
  int arg3 ;
  unsigned long long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t ***)&jarg2; 
  arg3 = (int)jarg3; 
  result = (unsigned long long)wcstoull((wchar_t const *)arg1,arg2,arg3);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcpcpy(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (wchar_t *)wcpcpy(arg1,(wchar_t const *)arg2);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcpncpy(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t arg3 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = (size_t)jarg3; 
  result = (wchar_t *)wcpncpy(arg1,(wchar_t const *)arg2,arg3);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_open_1wmemstream(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t **arg1 = (wchar_t **) 0 ;
  size_t *arg2 = (size_t *) 0 ;
  __FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t ***)&jarg1; 
  arg2 = *(size_t **)&jarg2; 
  result = (__FILE *)open_wmemstream(arg1,arg2);
  *(__FILE **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fwide(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  __FILE *arg1 = (__FILE *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__FILE **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)fwide(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fwprintf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  __FILE *arg1 = (__FILE *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__FILE **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (int)fwprintf(arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wprintf(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  void *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  result = (int)wprintf((wchar_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_swprintf(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  size_t arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  void *arg4 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = (size_t)jarg2; 
  arg3 = *(wchar_t **)&jarg3; 
  result = (int)swprintf(arg1,arg2,(wchar_t const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vfwprintf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  __FILE *arg1 = (__FILE *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  __gnuc_va_list arg3 ;
  __gnuc_va_list *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__FILE **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  argp3 = *(__gnuc_va_list **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)vfwprintf(arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vwprintf(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  __gnuc_va_list arg2 ;
  __gnuc_va_list *argp2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  argp2 = *(__gnuc_va_list **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg2 = *argp2; 
  result = (int)vwprintf((wchar_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vswprintf(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  size_t arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  __gnuc_va_list arg4 ;
  __gnuc_va_list *argp4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = (size_t)jarg2; 
  arg3 = *(wchar_t **)&jarg3; 
  argp4 = *(__gnuc_va_list **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg4 = *argp4; 
  result = (int)vswprintf(arg1,arg2,(wchar_t const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fwscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  __FILE *arg1 = (__FILE *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__FILE **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (int)fwscanf(arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wscanf(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  void *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  result = (int)wscanf((wchar_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_swscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (int)swscanf((wchar_t const *)arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isoc99_1fwscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  __FILE *arg1 = (__FILE *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__FILE **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (int)__isoc99_fwscanf(arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isoc99_1wscanf(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  void *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  result = (int)__isoc99_wscanf((wchar_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isoc99_1swscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (int)__isoc99_swscanf((wchar_t const *)arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vfwscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  __FILE *arg1 = (__FILE *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  __gnuc_va_list arg3 ;
  __gnuc_va_list *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__FILE **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  argp3 = *(__gnuc_va_list **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)vfwscanf(arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vwscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  __gnuc_va_list arg2 ;
  __gnuc_va_list *argp2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  argp2 = *(__gnuc_va_list **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg2 = *argp2; 
  result = (int)vwscanf((wchar_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vswscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  __gnuc_va_list arg3 ;
  __gnuc_va_list *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  argp3 = *(__gnuc_va_list **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)vswscanf((wchar_t const *)arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isoc99_1vfwscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  __FILE *arg1 = (__FILE *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  __gnuc_va_list arg3 ;
  __gnuc_va_list *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__FILE **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  argp3 = *(__gnuc_va_list **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)__isoc99_vfwscanf(arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isoc99_1vwscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  __gnuc_va_list arg2 ;
  __gnuc_va_list *argp2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  argp2 = *(__gnuc_va_list **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg2 = *argp2; 
  result = (int)__isoc99_vwscanf((wchar_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isoc99_1vswscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  __gnuc_va_list arg3 ;
  __gnuc_va_list *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  argp3 = *(__gnuc_va_list **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)__isoc99_vswscanf((wchar_t const *)arg1,(wchar_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fgetwc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __FILE *arg1 = (__FILE *) 0 ;
  wint_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__FILE **)&jarg1; 
  result = (wint_t)fgetwc(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_getwc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __FILE *arg1 = (__FILE *) 0 ;
  wint_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__FILE **)&jarg1; 
  result = (wint_t)getwc(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_getwchar(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  wint_t result;
  
  (void)jenv;
  (void)jcls;
  result = (wint_t)getwchar();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fputwc(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  wchar_t arg1 ;
  __FILE *arg2 = (__FILE *) 0 ;
  wchar_t *argp1 ;
  wint_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  argp1 = *(wchar_t **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null wchar_t");
    return 0;
  }
  arg1 = *argp1; 
  arg2 = *(__FILE **)&jarg2; 
  result = (wint_t)fputwc(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_putwc(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  wchar_t arg1 ;
  __FILE *arg2 = (__FILE *) 0 ;
  wchar_t *argp1 ;
  wint_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  argp1 = *(wchar_t **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null wchar_t");
    return 0;
  }
  arg1 = *argp1; 
  arg2 = *(__FILE **)&jarg2; 
  result = (wint_t)putwc(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_putwchar(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  wchar_t arg1 ;
  wchar_t *argp1 ;
  wint_t result;
  
  (void)jenv;
  (void)jcls;
  argp1 = *(wchar_t **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null wchar_t");
    return 0;
  }
  arg1 = *argp1; 
  result = (wint_t)putwchar(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fgetws(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  int arg2 ;
  __FILE *arg3 = (__FILE *) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(__FILE **)&jarg3; 
  result = (wchar_t *)fgetws(arg1,arg2,arg3);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fputws(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  __FILE *arg2 = (__FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(__FILE **)&jarg2; 
  result = (int)fputws((wchar_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ungetwc(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  wint_t arg1 ;
  __FILE *arg2 = (__FILE *) 0 ;
  wint_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (wint_t)jarg1; 
  arg2 = *(__FILE **)&jarg2; 
  result = (wint_t)ungetwc(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsftime(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  size_t arg2 ;
  wchar_t *arg3 = (wchar_t *) 0 ;
  tm *arg4 = (tm *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = (size_t)jarg2; 
  arg3 = *(wchar_t **)&jarg3; 
  arg4 = *(tm **)&jarg4; 
  result = wcsftime(arg1,arg2,(wchar_t const *)arg3,(tm const *)arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1CWCHAR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcschr_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t arg2 ;
  wchar_t *argp2 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  argp2 = *(wchar_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null wchar_t");
    return 0;
  }
  arg2 = *argp2; 
  result = (wchar_t *)std::wcschr(arg1,arg2);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcspbrk_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (wchar_t *)std::wcspbrk(arg1,(wchar_t const *)arg2);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsrchr_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t arg2 ;
  wchar_t *argp2 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  argp2 = *(wchar_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null wchar_t");
    return 0;
  }
  arg2 = *argp2; 
  result = (wchar_t *)std::wcsrchr(arg1,arg2);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcsstr_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = *(wchar_t **)&jarg2; 
  result = (wchar_t *)std::wcsstr(arg1,(wchar_t const *)arg2);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wmemchr_1_1SWIG_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  wchar_t arg2 ;
  size_t arg3 ;
  wchar_t *argp2 ;
  wchar_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  argp2 = *(wchar_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null wchar_t");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = (size_t)jarg3; 
  result = (wchar_t *)std::wmemchr(arg1,arg2,arg3);
  *(wchar_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1STDIO_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1TYPES_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1TIMESIZE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(32);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1TYPESIZES_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1RLIM_1T_1MATCHES_1RLIM64_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1STATFS_1MATCHES_1STATFS64_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1KERNEL_1OLD_1TIMEVAL_1MATCHES_1TIMEVAL64_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FD_1SETSIZE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1024);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1TIME64_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1fsid_1t_1_1_1val_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __fsid_t *arg1 = (__fsid_t *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__fsid_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->__val;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1fsid_1t_1_1_1val_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __fsid_t *arg1 = (__fsid_t *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__fsid_t **)&jarg1; 
  result = (int *)(int *) ((arg1)->__val);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1fsid_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __fsid_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__fsid_t *)new __fsid_t();
  *(__fsid_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1fsid_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __fsid_t *arg1 = (__fsid_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__fsid_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1_1_1_1fpos_1t_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1fpos_1t_1_1_1pos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _G_fpos_t *arg1 = (_G_fpos_t *) 0 ;
  __off_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_G_fpos_t **)&jarg1; 
  arg2 = (__off_t)jarg2; 
  if (arg1) (arg1)->__pos = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1fpos_1t_1_1_1pos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _G_fpos_t *arg1 = (_G_fpos_t *) 0 ;
  __off_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_G_fpos_t **)&jarg1; 
  result = (__off_t) ((arg1)->__pos);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1fpos_1t_1_1_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  _G_fpos_t *arg1 = (_G_fpos_t *) 0 ;
  __mbstate_t *arg2 = (__mbstate_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(_G_fpos_t **)&jarg1; 
  arg2 = *(__mbstate_t **)&jarg2; 
  if (arg1) (arg1)->__state = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1fpos_1t_1_1_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _G_fpos_t *arg1 = (_G_fpos_t *) 0 ;
  __mbstate_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_G_fpos_t **)&jarg1; 
  result = (__mbstate_t *)& ((arg1)->__state);
  *(__mbstate_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1fpos_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  _G_fpos_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (_G_fpos_t *)new _G_fpos_t();
  *(_G_fpos_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1fpos_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  _G_fpos_t *arg1 = (_G_fpos_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(_G_fpos_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1_1_1_1fpos64_1t_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1fpos64_1t_1_1_1pos_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _G_fpos64_t *arg1 = (_G_fpos64_t *) 0 ;
  __off64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_G_fpos64_t **)&jarg1; 
  arg2 = (__off64_t)jarg2; 
  if (arg1) (arg1)->__pos = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1fpos64_1t_1_1_1pos_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _G_fpos64_t *arg1 = (_G_fpos64_t *) 0 ;
  __off64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_G_fpos64_t **)&jarg1; 
  result = (__off64_t) ((arg1)->__pos);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1fpos64_1t_1_1_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  _G_fpos64_t *arg1 = (_G_fpos64_t *) 0 ;
  __mbstate_t *arg2 = (__mbstate_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(_G_fpos64_t **)&jarg1; 
  arg2 = *(__mbstate_t **)&jarg2; 
  if (arg1) (arg1)->__state = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1fpos64_1t_1_1_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _G_fpos64_t *arg1 = (_G_fpos64_t *) 0 ;
  __mbstate_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_G_fpos64_t **)&jarg1; 
  result = (__mbstate_t *)& ((arg1)->__state);
  *(__mbstate_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1fpos64_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  _G_fpos64_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (_G_fpos64_t *)new _G_fpos64_t();
  *(_G_fpos64_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1fpos64_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  _G_fpos64_t *arg1 = (_G_fpos64_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(_G_fpos64_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1struct_1FILE_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1flags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->_flags = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1flags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (int) ((arg1)->_flags);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1read_1ptr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_IO_read_ptr;
    if (arg2) {
      arg1->_IO_read_ptr = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_IO_read_ptr, (const char *)arg2);
    } else {
      arg1->_IO_read_ptr = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1read_1ptr_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (char *) ((arg1)->_IO_read_ptr);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1read_1end_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_IO_read_end;
    if (arg2) {
      arg1->_IO_read_end = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_IO_read_end, (const char *)arg2);
    } else {
      arg1->_IO_read_end = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1read_1end_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (char *) ((arg1)->_IO_read_end);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1read_1base_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_IO_read_base;
    if (arg2) {
      arg1->_IO_read_base = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_IO_read_base, (const char *)arg2);
    } else {
      arg1->_IO_read_base = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1read_1base_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (char *) ((arg1)->_IO_read_base);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1write_1base_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_IO_write_base;
    if (arg2) {
      arg1->_IO_write_base = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_IO_write_base, (const char *)arg2);
    } else {
      arg1->_IO_write_base = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1write_1base_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (char *) ((arg1)->_IO_write_base);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1write_1ptr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_IO_write_ptr;
    if (arg2) {
      arg1->_IO_write_ptr = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_IO_write_ptr, (const char *)arg2);
    } else {
      arg1->_IO_write_ptr = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1write_1ptr_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (char *) ((arg1)->_IO_write_ptr);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1write_1end_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_IO_write_end;
    if (arg2) {
      arg1->_IO_write_end = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_IO_write_end, (const char *)arg2);
    } else {
      arg1->_IO_write_end = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1write_1end_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (char *) ((arg1)->_IO_write_end);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1buf_1base_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_IO_buf_base;
    if (arg2) {
      arg1->_IO_buf_base = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_IO_buf_base, (const char *)arg2);
    } else {
      arg1->_IO_buf_base = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1buf_1base_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (char *) ((arg1)->_IO_buf_base);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1buf_1end_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_IO_buf_end;
    if (arg2) {
      arg1->_IO_buf_end = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_IO_buf_end, (const char *)arg2);
    } else {
      arg1->_IO_buf_end = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1buf_1end_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (char *) ((arg1)->_IO_buf_end);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1save_1base_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_IO_save_base;
    if (arg2) {
      arg1->_IO_save_base = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_IO_save_base, (const char *)arg2);
    } else {
      arg1->_IO_save_base = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1save_1base_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (char *) ((arg1)->_IO_save_base);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1backup_1base_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_IO_backup_base;
    if (arg2) {
      arg1->_IO_backup_base = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_IO_backup_base, (const char *)arg2);
    } else {
      arg1->_IO_backup_base = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1backup_1base_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (char *) ((arg1)->_IO_backup_base);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1save_1end_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->_IO_save_end;
    if (arg2) {
      arg1->_IO_save_end = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->_IO_save_end, (const char *)arg2);
    } else {
      arg1->_IO_save_end = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1IO_1save_1end_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (char *) ((arg1)->_IO_save_end);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1markers_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  _IO_marker *arg2 = (_IO_marker *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = *(_IO_marker **)&jarg2; 
  if (arg1) (arg1)->_markers = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1markers_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  _IO_marker *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (_IO_marker *) ((arg1)->_markers);
  *(_IO_marker **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1chain_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  _IO_FILE *arg2 = (_IO_FILE *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = *(_IO_FILE **)&jarg2; 
  if (arg1) (arg1)->_chain = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1chain_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  _IO_FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (_IO_FILE *) ((arg1)->_chain);
  *(_IO_FILE **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1fileno_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->_fileno = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1fileno_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (int) ((arg1)->_fileno);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1flags2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->_flags2 = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1flags2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (int) ((arg1)->_flags2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1old_1offset_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  __off_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = (__off_t)jarg2; 
  if (arg1) (arg1)->_old_offset = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1old_1offset_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  __off_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (__off_t) ((arg1)->_old_offset);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1cur_1column_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  unsigned short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = (unsigned short)jarg2; 
  if (arg1) (arg1)->_cur_column = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1cur_1column_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  unsigned short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (unsigned short) ((arg1)->_cur_column);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1vtable_1offset_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jbyte jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  signed char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = (signed char)jarg2; 
  if (arg1) (arg1)->_vtable_offset = arg2;
}


SWIGEXPORT jbyte JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1vtable_1offset_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jbyte jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  signed char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (signed char) ((arg1)->_vtable_offset);
  jresult = (jbyte)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1shortbuf_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->_shortbuf, (const char *)arg2, 1-1);
      arg1->_shortbuf[1-1] = 0;
    } else {
      arg1->_shortbuf[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1shortbuf_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (char *)(char *) ((arg1)->_shortbuf);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1lock_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  _IO_lock_t *arg2 = (_IO_lock_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = *(_IO_lock_t **)&jarg2; 
  if (arg1) (arg1)->_lock = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1lock_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  _IO_lock_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (_IO_lock_t *) ((arg1)->_lock);
  *(_IO_lock_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1offset_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  __off64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = (__off64_t)jarg2; 
  if (arg1) (arg1)->_offset = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1offset_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  __off64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (__off64_t) ((arg1)->_offset);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1codecvt_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  _IO_codecvt *arg2 = (_IO_codecvt *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = *(_IO_codecvt **)&jarg2; 
  if (arg1) (arg1)->_codecvt = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1codecvt_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  _IO_codecvt *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (_IO_codecvt *) ((arg1)->_codecvt);
  *(_IO_codecvt **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1wide_1data_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  _IO_wide_data *arg2 = (_IO_wide_data *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = *(_IO_wide_data **)&jarg2; 
  if (arg1) (arg1)->_wide_data = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1wide_1data_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  _IO_wide_data *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (_IO_wide_data *) ((arg1)->_wide_data);
  *(_IO_wide_data **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1freeres_1list_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  _IO_FILE *arg2 = (_IO_FILE *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = *(_IO_FILE **)&jarg2; 
  if (arg1) (arg1)->_freeres_list = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1freeres_1list_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  _IO_FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (_IO_FILE *) ((arg1)->_freeres_list);
  *(_IO_FILE **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1freeres_1buf_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  if (arg1) (arg1)->_freeres_buf = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1freeres_1buf_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (void *) ((arg1)->_freeres_buf);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1_1pad5_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  size_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = (size_t)jarg2; 
  if (arg1) (arg1)->__pad5 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1_1pad5_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result =  ((arg1)->__pad5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1mode_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->_mode = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1mode_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (int) ((arg1)->_mode);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1unused2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->_unused2, (const char *)arg2, 15*sizeof(int)-4*sizeof(void *)-sizeof(size_t)-1);
      arg1->_unused2[15*sizeof(int)-4*sizeof(void *)-sizeof(size_t)-1] = 0;
    } else {
      arg1->_unused2[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1IO_1FILE_1_1unused2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_IO_FILE **)&jarg1; 
  result = (char *)(char *) ((arg1)->_unused2);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1IO_1FILE(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  _IO_FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (_IO_FILE *)new _IO_FILE();
  *(_IO_FILE **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1IO_1FILE(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  _IO_FILE *arg1 = (_IO_FILE *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(_IO_FILE **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1IO_1EOF_1SEEN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x0010);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1IO_1ERR_1SEEN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x0020);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1IO_1USER_1LOCK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x8000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1IOFBF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1IOLBF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1IONBF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_BUFSIZ_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(8192);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_EOF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((-1));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SEEK_1SET_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SEEK_1CUR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SEEK_1END_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_P_1tmpdir_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("/tmp");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1STDIO_1LIM_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_L_1tmpnam_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(20);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_TMP_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(238328);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FILENAME_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4096);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_L_1ctermid_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(9);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FOPEN_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(16);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_stdin_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  FILE *arg1 = (FILE *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  stdin = arg1;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_stdin_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (FILE *)stdin;
  *(FILE **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_stdout_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  FILE *arg1 = (FILE *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  stdout = arg1;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_stdout_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (FILE *)stdout;
  *(FILE **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_stderr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  FILE *arg1 = (FILE *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  stderr = arg1;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_stderr_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (FILE *)stderr;
  *(FILE **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_remove(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)remove((char const *)arg1);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_rename(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)rename((char const *)arg1,(char const *)arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_renameat(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jint jarg3, jstring jarg4) {
  jint jresult = 0 ;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  char *arg4 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return 0;
  }
  result = (int)renameat(arg1,(char const *)arg2,arg3,(char const *)arg4);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_tmpfile(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (FILE *)tmpfile();
  *(FILE **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_tmpnam(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (char *)tmpnam(arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_tmpnam_1r(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (char *)tmpnam_r(arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_tempnam(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (char *)tempnam((char const *)arg1,(char const *)arg2);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fclose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)fclose(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fflush(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)fflush(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fflush_1unlocked(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)fflush_unlocked(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fopen(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (FILE *)fopen((char const *)arg1,(char const *)arg2);
  *(FILE **)&jresult = result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_freopen(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  FILE *arg3 = (FILE *) 0 ;
  FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(FILE **)&jarg3; 
  result = (FILE *)freopen((char const *)arg1,(char const *)arg2,arg3);
  *(FILE **)&jresult = result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fdopen(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (FILE *)fdopen(arg1,(char const *)arg2);
  *(FILE **)&jresult = result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmemopen(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jstring jarg3) {
  jlong jresult = 0 ;
  void *arg1 = (void *) 0 ;
  size_t arg2 ;
  char *arg3 = (char *) 0 ;
  FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  arg2 = (size_t)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (FILE *)fmemopen(arg1,arg2,(char const *)arg3);
  *(FILE **)&jresult = result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_open_1memstream(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  char **arg1 = (char **) 0 ;
  size_t *arg2 = (size_t *) 0 ;
  FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(char ***)&jarg1; 
  arg2 = *(size_t **)&jarg2; 
  result = (FILE *)open_memstream(arg1,arg2);
  *(FILE **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_setbuf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  setbuf(arg1,arg2);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_setvbuf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3, jlong jarg4) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  size_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = (size_t)jarg4; 
  result = (int)setvbuf(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_setbuffer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3) {
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  arg3 = (size_t)jarg3; 
  setbuffer(arg1,arg2,arg3);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_setlinebuf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  FILE *arg1 = (FILE *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  setlinebuf(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fprintf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)fprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_printf(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)printf((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_sprintf(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)sprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vfprintf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  __gnuc_va_list arg3 ;
  __gnuc_va_list *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  argp3 = *(__gnuc_va_list **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)vfprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vprintf(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  __gnuc_va_list arg2 ;
  __gnuc_va_list *argp2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  argp2 = *(__gnuc_va_list **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg2 = *argp2; 
  result = (int)vprintf((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vsprintf(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jlong jarg3) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  __gnuc_va_list arg3 ;
  __gnuc_va_list *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  argp3 = *(__gnuc_va_list **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)vsprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_snprintf(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jstring jarg3) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  char *arg3 = (char *) 0 ;
  void *arg4 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (size_t)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (int)snprintf(arg1,arg2,(char const *)arg3,arg4);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vsnprintf(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jstring jarg3, jlong jarg4) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  char *arg3 = (char *) 0 ;
  __gnuc_va_list arg4 ;
  __gnuc_va_list *argp4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (size_t)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  argp4 = *(__gnuc_va_list **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg4 = *argp4; 
  result = (int)vsnprintf(arg1,arg2,(char const *)arg3,arg4);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vdprintf(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2, jlong jarg3) {
  jint jresult = 0 ;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  __gnuc_va_list arg3 ;
  __gnuc_va_list *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  argp3 = *(__gnuc_va_list **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)vdprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dprintf(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2) {
  jint jresult = 0 ;
  int arg1 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)dprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)fscanf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_scanf(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)scanf((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_sscanf(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)sscanf((char const *)arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isoc99_1fscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)__isoc99_fscanf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isoc99_1scanf(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)__isoc99_scanf((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isoc99_1sscanf(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)__isoc99_sscanf((char const *)arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vfscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  __gnuc_va_list arg3 ;
  __gnuc_va_list *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  argp3 = *(__gnuc_va_list **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)vfscanf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vscanf(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  __gnuc_va_list arg2 ;
  __gnuc_va_list *argp2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  argp2 = *(__gnuc_va_list **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg2 = *argp2; 
  result = (int)vscanf((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_vsscanf(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jlong jarg3) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  __gnuc_va_list arg3 ;
  __gnuc_va_list *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  argp3 = *(__gnuc_va_list **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)vsscanf((char const *)arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isoc99_1vfscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  __gnuc_va_list arg3 ;
  __gnuc_va_list *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  argp3 = *(__gnuc_va_list **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)__isoc99_vfscanf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isoc99_1vscanf(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  __gnuc_va_list arg2 ;
  __gnuc_va_list *argp2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  argp2 = *(__gnuc_va_list **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg2 = *argp2; 
  result = (int)__isoc99_vscanf((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isoc99_1vsscanf(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jlong jarg3) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  __gnuc_va_list arg3 ;
  __gnuc_va_list *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  argp3 = *(__gnuc_va_list **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null __gnuc_va_list");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)__isoc99_vsscanf((char const *)arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fgetc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)fgetc(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_getc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)getc(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_getchar(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)getchar();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_getc_1unlocked(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)getc_unlocked(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_getchar_1unlocked(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)getchar_unlocked();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fgetc_1unlocked(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)fgetc_unlocked(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fputc(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  int arg1 ;
  FILE *arg2 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (int)jarg1; 
  arg2 = *(FILE **)&jarg2; 
  result = (int)fputc(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_putc(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  int arg1 ;
  FILE *arg2 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (int)jarg1; 
  arg2 = *(FILE **)&jarg2; 
  result = (int)putc(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_putchar(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  int arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (int)putchar(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fputc_1unlocked(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  int arg1 ;
  FILE *arg2 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (int)jarg1; 
  arg2 = *(FILE **)&jarg2; 
  result = (int)fputc_unlocked(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_putc_1unlocked(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  int arg1 ;
  FILE *arg2 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (int)jarg1; 
  arg2 = *(FILE **)&jarg2; 
  result = (int)putc_unlocked(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_putchar_1unlocked(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  int arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (int)putchar_unlocked(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_getw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)getw(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_putw(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  int arg1 ;
  FILE *arg2 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (int)jarg1; 
  arg2 = *(FILE **)&jarg2; 
  result = (int)putw(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_fgets(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3, jobject jarg3_) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  FILE *arg3 = (FILE *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (int)jarg2; 
  arg3 = *(FILE **)&jarg3; 
  result = (char *)fgets(arg1,arg2,arg3);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_gets(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (char *)gets(arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1getdelim(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  char **arg1 = (char **) 0 ;
  size_t *arg2 = (size_t *) 0 ;
  int arg3 ;
  FILE *arg4 = (FILE *) 0 ;
  __ssize_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(char ***)&jarg1; 
  arg2 = *(size_t **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(FILE **)&jarg4; 
  result = (__ssize_t)__getdelim(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_getdelim(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  char **arg1 = (char **) 0 ;
  size_t *arg2 = (size_t *) 0 ;
  int arg3 ;
  FILE *arg4 = (FILE *) 0 ;
  __ssize_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(char ***)&jarg1; 
  arg2 = *(size_t **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(FILE **)&jarg4; 
  result = (__ssize_t)getdelim(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_getline(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  char **arg1 = (char **) 0 ;
  size_t *arg2 = (size_t *) 0 ;
  FILE *arg3 = (FILE *) 0 ;
  __ssize_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(char ***)&jarg1; 
  arg2 = *(size_t **)&jarg2; 
  arg3 = *(FILE **)&jarg3; 
  result = (__ssize_t)getline(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fputs(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(FILE **)&jarg2; 
  result = (int)fputs((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_puts(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)puts((char const *)arg1);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ungetc(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  int arg1 ;
  FILE *arg2 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (int)jarg1; 
  arg2 = *(FILE **)&jarg2; 
  result = (int)ungetc(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fread(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  void *arg1 = (void *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  FILE *arg4 = (FILE *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(void **)&jarg1; 
  arg2 = (size_t)jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = *(FILE **)&jarg4; 
  result = fread(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fwrite(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  void *arg1 = (void *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  FILE *arg4 = (FILE *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(void **)&jarg1; 
  arg2 = (size_t)jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = *(FILE **)&jarg4; 
  result = fwrite((void const *)arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fread_1unlocked(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  void *arg1 = (void *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  FILE *arg4 = (FILE *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(void **)&jarg1; 
  arg2 = (size_t)jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = *(FILE **)&jarg4; 
  result = fread_unlocked(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fwrite_1unlocked(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  void *arg1 = (void *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  FILE *arg4 = (FILE *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(void **)&jarg1; 
  arg2 = (size_t)jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = *(FILE **)&jarg4; 
  result = fwrite_unlocked((void const *)arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fseek(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  long arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)fseek(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ftell(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (long)ftell(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_rewind(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  FILE *arg1 = (FILE *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  rewind(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fseeko(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  __off_t arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = (__off_t)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)fseeko(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ftello(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  __off_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (__off_t)ftello(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fgetpos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fpos_t *arg2 = (fpos_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fpos_t **)&jarg2; 
  result = (int)fgetpos(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fsetpos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fpos_t *arg2 = (fpos_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fpos_t **)&jarg2; 
  result = (int)fsetpos(arg1,(_G_fpos_t const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_clearerr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  FILE *arg1 = (FILE *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  clearerr(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_feof(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)feof(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ferror(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)ferror(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_clearerr_1unlocked(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  FILE *arg1 = (FILE *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  clearerr_unlocked(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_feof_1unlocked(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)feof_unlocked(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ferror_1unlocked(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)ferror_unlocked(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_perror(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  char *arg1 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return ;
  }
  perror((char const *)arg1);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fileno(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)fileno(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fileno_1unlocked(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)fileno_unlocked(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_popen(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  FILE *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (FILE *)popen((char const *)arg1,(char const *)arg2);
  *(FILE **)&jresult = result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pclose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)pclose(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_ctermid(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (char *)ctermid(arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flockfile(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  FILE *arg1 = (FILE *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  flockfile(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ftrylockfile(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)ftrylockfile(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_funlockfile(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  FILE *arg1 = (FILE *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  funlockfile(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1uflow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  result = (int)__uflow(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1overflow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)__overflow(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GLIBCXX_1CSTDIO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GMP_1HAVE_1HOST_1CPU_1FAMILY_1power_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GMP_1HAVE_1HOST_1CPU_1FAMILY_1powerpc_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_GMP_1LIMB_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(64);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_GMP_1NAIL_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_GMP_1NUMB_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((64-0));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GNU_1MP_1_1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NR_1OPEN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1024);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NGROUPS_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(65536);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARG_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(131072);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_LINK_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(127);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MAX_1CANON_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(255);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MAX_1INPUT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(255);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NAME_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(255);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PATH_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4096);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PIPE_1BUF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4096);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_XATTR_1NAME_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(255);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_XATTR_1SIZE_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(65536);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_XATTR_1LIST_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(65536);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_RTSIG_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(32);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GMP_1LIBGMP_1DLL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mpz_1struct_1_1mp_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __mpz_struct *arg1 = (__mpz_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpz_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->_mp_alloc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1mpz_1struct_1_1mp_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __mpz_struct *arg1 = (__mpz_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpz_struct **)&jarg1; 
  result = (int) ((arg1)->_mp_alloc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mpz_1struct_1_1mp_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __mpz_struct *arg1 = (__mpz_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpz_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->_mp_size = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1mpz_1struct_1_1mp_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __mpz_struct *arg1 = (__mpz_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpz_struct **)&jarg1; 
  result = (int) ((arg1)->_mp_size);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mpz_1struct_1_1mp_1d_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __mpz_struct *arg1 = (__mpz_struct *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpz_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  if (arg1) (arg1)->_mp_d = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1mpz_1struct_1_1mp_1d_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __mpz_struct *arg1 = (__mpz_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpz_struct **)&jarg1; 
  result = (mp_limb_t *) ((arg1)->_mp_d);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1mpz_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __mpz_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__mpz_struct *)new __mpz_struct();
  *(__mpz_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1mpz_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __mpz_struct *arg1 = (__mpz_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__mpz_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GMP_1MP_1SIZE_1T_1INT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mpq_1struct_1_1mp_1num_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __mpq_struct *arg1 = (__mpq_struct *) 0 ;
  __mpz_struct *arg2 = (__mpz_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__mpq_struct **)&jarg1; 
  arg2 = *(__mpz_struct **)&jarg2; 
  if (arg1) (arg1)->_mp_num = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1mpq_1struct_1_1mp_1num_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __mpq_struct *arg1 = (__mpq_struct *) 0 ;
  __mpz_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpq_struct **)&jarg1; 
  result = (__mpz_struct *)& ((arg1)->_mp_num);
  *(__mpz_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mpq_1struct_1_1mp_1den_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __mpq_struct *arg1 = (__mpq_struct *) 0 ;
  __mpz_struct *arg2 = (__mpz_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__mpq_struct **)&jarg1; 
  arg2 = *(__mpz_struct **)&jarg2; 
  if (arg1) (arg1)->_mp_den = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1mpq_1struct_1_1mp_1den_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __mpq_struct *arg1 = (__mpq_struct *) 0 ;
  __mpz_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpq_struct **)&jarg1; 
  result = (__mpz_struct *)& ((arg1)->_mp_den);
  *(__mpz_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1mpq_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __mpq_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__mpq_struct *)new __mpq_struct();
  *(__mpq_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1mpq_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __mpq_struct *arg1 = (__mpq_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__mpq_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mpf_1struct_1_1mp_1prec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __mpf_struct *arg1 = (__mpf_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpf_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->_mp_prec = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1mpf_1struct_1_1mp_1prec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __mpf_struct *arg1 = (__mpf_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpf_struct **)&jarg1; 
  result = (int) ((arg1)->_mp_prec);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mpf_1struct_1_1mp_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __mpf_struct *arg1 = (__mpf_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpf_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->_mp_size = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1mpf_1struct_1_1mp_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __mpf_struct *arg1 = (__mpf_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpf_struct **)&jarg1; 
  result = (int) ((arg1)->_mp_size);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mpf_1struct_1_1mp_1exp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __mpf_struct *arg1 = (__mpf_struct *) 0 ;
  mp_exp_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpf_struct **)&jarg1; 
  arg2 = (mp_exp_t)jarg2; 
  if (arg1) (arg1)->_mp_exp = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1mpf_1struct_1_1mp_1exp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __mpf_struct *arg1 = (__mpf_struct *) 0 ;
  mp_exp_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpf_struct **)&jarg1; 
  result = (mp_exp_t) ((arg1)->_mp_exp);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mpf_1struct_1_1mp_1d_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __mpf_struct *arg1 = (__mpf_struct *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpf_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  if (arg1) (arg1)->_mp_d = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1mpf_1struct_1_1mp_1d_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __mpf_struct *arg1 = (__mpf_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpf_struct **)&jarg1; 
  result = (mp_limb_t *) ((arg1)->_mp_d);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1mpf_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __mpf_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__mpf_struct *)new __mpf_struct();
  *(__mpf_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1mpf_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __mpf_struct *arg1 = (__mpf_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__mpf_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_GMP_1RAND_1ALG_1DEFAULT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  gmp_randalg_t result;
  
  (void)jenv;
  (void)jcls;
  result = (gmp_randalg_t)GMP_RAND_ALG_DEFAULT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_GMP_1RAND_1ALG_1LC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  gmp_randalg_t result;
  
  (void)jenv;
  (void)jcls;
  result = (gmp_randalg_t)GMP_RAND_ALG_LC;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmp_1randstate_1struct_1_1mp_1seed_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __gmp_randstate_struct *arg1 = (__gmp_randstate_struct *) 0 ;
  __mpz_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  arg2 = *(__mpz_struct **)&jarg2; 
  {
    size_t ii;
    __mpz_struct *b = (__mpz_struct *) arg1->_mp_seed;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((__mpz_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmp_1randstate_1struct_1_1mp_1seed_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __gmp_randstate_struct *arg1 = (__gmp_randstate_struct *) 0 ;
  __mpz_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  result = (__mpz_struct *) ((arg1)->_mp_seed);
  *(__mpz_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmp_1randstate_1struct_1_1mp_1alg_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __gmp_randstate_struct *arg1 = (__gmp_randstate_struct *) 0 ;
  gmp_randalg_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  arg2 = (gmp_randalg_t)jarg2; 
  if (arg1) (arg1)->_mp_alg = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmp_1randstate_1struct_1_1mp_1alg_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __gmp_randstate_struct *arg1 = (__gmp_randstate_struct *) 0 ;
  gmp_randalg_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  result = (gmp_randalg_t) ((arg1)->_mp_alg);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1gmp_1randstate_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __gmp_randstate_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__gmp_randstate_struct *)new __gmp_randstate_struct();
  *(__gmp_randstate_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1gmp_1randstate_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __gmp_randstate_struct *arg1 = (__gmp_randstate_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1GMP_1H_1HAVE_1FILE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GMP_1INLINE_1PROTOTYPES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmp_1set_1memory_1functions(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  void *(*arg1)(size_t) = (void *(*)(size_t)) 0 ;
  void *(*arg2)(void *,size_t,size_t) = (void *(*)(void *,size_t,size_t)) 0 ;
  void (*arg3)(void *,size_t) = (void (*)(void *,size_t)) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void *(**)(size_t))&jarg1; 
  arg2 = *(void *(**)(void *,size_t,size_t))&jarg2; 
  arg3 = *(void (**)(void *,size_t))&jarg3; 
  __gmp_set_memory_functions(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmp_1get_1memory_1functions(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  void *(**arg1)(size_t) = (void *(**)(size_t)) 0 ;
  void *(**arg2)(void *,size_t,size_t) = (void *(**)(void *,size_t,size_t)) 0 ;
  void (**arg3)(void *,size_t) = (void (**)(void *,size_t)) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void *(***)(size_t))&jarg1; 
  arg2 = *(void *(***)(void *,size_t,size_t))&jarg2; 
  arg3 = *(void (***)(void *,size_t))&jarg3; 
  __gmp_get_memory_functions(arg1,arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmp_1bits_1per_1limb_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(int)__gmp_bits_per_limb;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmp_1errno_1set(JNIEnv *jenv, jclass jcls, jint jarg1) {
  int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  __gmp_errno = arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmp_1errno_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)__gmp_errno;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1_1gmp_1version_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)(char *)__gmp_version;
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmp_1randinit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __gmp_randstate_struct *arg1 ;
  gmp_randalg_t arg2 ;
  void *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  arg2 = (gmp_randalg_t)jarg2; 
  __gmp_randinit(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmp_1randinit_1default(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  __gmp_randstate_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  __gmp_randinit_default(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmp_1randinit_1lc_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  __gmp_randstate_struct *arg1 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  mp_bitcnt_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mp_bitcnt_t)jarg4; 
  __gmp_randinit_lc_2exp(arg1,(__mpz_struct const *)arg2,arg3,arg4);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmp_1randinit_1lc_12exp_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  __gmp_randstate_struct *arg1 ;
  mp_bitcnt_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  result = (int)__gmp_randinit_lc_2exp_size(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmp_1randinit_1mt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  __gmp_randstate_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  __gmp_randinit_mt(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmp_1randinit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __gmp_randstate_struct *arg1 ;
  __gmp_randstate_struct *arg2 = (__gmp_randstate_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  arg2 = *(__gmp_randstate_struct **)&jarg2; 
  __gmp_randinit_set(arg1,(__gmp_randstate_struct const *)arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmp_1randseed(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __gmp_randstate_struct *arg1 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  __gmp_randseed(arg1,(__mpz_struct const *)arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmp_1randseed_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __gmp_randstate_struct *arg1 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  __gmp_randseed_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmp_1randclear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  __gmp_randstate_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  __gmp_randclear(arg1);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmp_1urandomb_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  __gmp_randstate_struct *arg1 ;
  unsigned long arg2 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  result = (unsigned long)__gmp_urandomb_ui(arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmp_1urandomm_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  __gmp_randstate_struct *arg1 ;
  unsigned long arg2 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  result = (unsigned long)__gmp_urandomm_ui(arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmp_1asprintf(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
  jint jresult = 0 ;
  char **arg1 = (char **) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(char ***)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)__gmp_asprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmp_1fprintf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)__gmp_fprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmp_1printf(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)__gmp_printf((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmp_1snprintf(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jstring jarg3) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  char *arg3 = (char *) 0 ;
  void *arg4 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (size_t)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (int)__gmp_snprintf(arg1,arg2,(char const *)arg3,arg4);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmp_1sprintf(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)__gmp_sprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmp_1fscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)__gmp_fscanf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmp_1scanf(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)__gmp_scanf((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmp_1sscanf(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)__gmp_sscanf((char const *)arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1realloc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mp_size_t arg2 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  result = (void *)__gmpz_realloc(arg1,arg2);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_add(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1add_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_add_ui(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_addmul(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1addmul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_addmul_ui(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1and(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_and(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1array_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mp_size_t arg2 ;
  mp_size_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  arg3 = (mp_size_t)jarg3; 
  __gmpz_array_init(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1bin_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_bin_ui(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1bin_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  unsigned long arg2 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_bin_uiui(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1cdiv_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_cdiv_q(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1cdiv_1q_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpz_cdiv_q_2exp(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1cdiv_1q_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  result = (unsigned long)__gmpz_cdiv_q_ui(arg1,(__mpz_struct const *)arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1cdiv_1qr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_ptr arg2 = (mpz_ptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  mpz_srcptr arg4 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_ptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = *(mpz_srcptr *)&jarg4; 
  __gmpz_cdiv_qr(arg1,arg2,(__mpz_struct const *)arg3,(__mpz_struct const *)arg4);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1cdiv_1qr_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_ptr arg2 = (mpz_ptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  unsigned long arg4 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_ptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = (unsigned long)jarg4; 
  result = (unsigned long)__gmpz_cdiv_qr_ui(arg1,arg2,(__mpz_struct const *)arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1cdiv_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_cdiv_r(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1cdiv_1r_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpz_cdiv_r_2exp(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1cdiv_1r_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  result = (unsigned long)__gmpz_cdiv_r_ui(arg1,(__mpz_struct const *)arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1cdiv_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  unsigned long arg2 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  result = (unsigned long)__gmpz_cdiv_ui((__mpz_struct const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  __gmpz_clear(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1clears(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  void *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  __gmpz_clears(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1clrbit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mp_bitcnt_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  __gmpz_clrbit(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  result = (int)__gmpz_cmp((__mpz_struct const *)arg1,(__mpz_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1cmp_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  double arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (double)jarg2; 
  result = (int)__gmpz_cmp_d((__mpz_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1cmp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  long arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (long)jarg2; 
  result = (int)__gmpz_cmp_si((__mpz_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1cmp_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  unsigned long arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  result = (int)__gmpz_cmp_ui((__mpz_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1cmpabs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  result = (int)__gmpz_cmpabs((__mpz_struct const *)arg1,(__mpz_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1cmpabs_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  double arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (double)jarg2; 
  result = (int)__gmpz_cmpabs_d((__mpz_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1cmpabs_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  unsigned long arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  result = (int)__gmpz_cmpabs_ui((__mpz_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1com(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  __gmpz_com(arg1,(__mpz_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1combit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mp_bitcnt_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  __gmpz_combit(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1congruent_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  result = (int)__gmpz_congruent_p((__mpz_struct const *)arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1congruent_12exp_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mp_bitcnt_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  result = (int)__gmpz_congruent_2exp_p((__mpz_struct const *)arg1,(__mpz_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1congruent_1ui_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  unsigned long arg2 ;
  unsigned long arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (unsigned long)jarg3; 
  result = (int)__gmpz_congruent_ui_p((__mpz_struct const *)arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1divexact(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_divexact(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1divexact_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_divexact_ui(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1divisible_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  result = (int)__gmpz_divisible_p((__mpz_struct const *)arg1,(__mpz_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1divisible_1ui_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  unsigned long arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  result = (int)__gmpz_divisible_ui_p((__mpz_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1divisible_12exp_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mp_bitcnt_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  result = (int)__gmpz_divisible_2exp_p((__mpz_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1dump(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  __gmpz_dump((__mpz_struct const *)arg1);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1export(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jobject jarg7_) {
  jlong jresult = 0 ;
  void *arg1 = (void *) 0 ;
  size_t *arg2 = (size_t *) 0 ;
  int arg3 ;
  size_t arg4 ;
  int arg5 ;
  size_t arg6 ;
  mpz_srcptr arg7 = (mpz_srcptr) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(void **)&jarg1; 
  arg2 = *(size_t **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (size_t)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (size_t)jarg6; 
  arg7 = *(mpz_srcptr *)&jarg7; 
  result = (void *)__gmpz_export(arg1,arg2,arg3,arg4,arg5,arg6,(__mpz_struct const *)arg7);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1fac_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  __gmpz_fac_ui(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_12fac_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  __gmpz_2fac_ui(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1mfac_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  unsigned long arg2 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_mfac_uiui(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1primorial_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  __gmpz_primorial_ui(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1fdiv_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_fdiv_q(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1fdiv_1q_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpz_fdiv_q_2exp(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1fdiv_1q_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  result = (unsigned long)__gmpz_fdiv_q_ui(arg1,(__mpz_struct const *)arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1fdiv_1qr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_ptr arg2 = (mpz_ptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  mpz_srcptr arg4 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_ptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = *(mpz_srcptr *)&jarg4; 
  __gmpz_fdiv_qr(arg1,arg2,(__mpz_struct const *)arg3,(__mpz_struct const *)arg4);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1fdiv_1qr_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_ptr arg2 = (mpz_ptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  unsigned long arg4 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_ptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = (unsigned long)jarg4; 
  result = (unsigned long)__gmpz_fdiv_qr_ui(arg1,arg2,(__mpz_struct const *)arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1fdiv_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_fdiv_r(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1fdiv_1r_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpz_fdiv_r_2exp(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1fdiv_1r_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  result = (unsigned long)__gmpz_fdiv_r_ui(arg1,(__mpz_struct const *)arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1fdiv_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  unsigned long arg2 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  result = (unsigned long)__gmpz_fdiv_ui((__mpz_struct const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1fib_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  __gmpz_fib_ui(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1fib2_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_ptr arg2 = (mpz_ptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_ptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_fib2_ui(arg1,arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1fits_1sint_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = (int)__gmpz_fits_sint_p((__mpz_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1fits_1slong_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = (int)__gmpz_fits_slong_p((__mpz_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1fits_1sshort_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = (int)__gmpz_fits_sshort_p((__mpz_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1gcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_gcd(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1gcd_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  result = (unsigned long)__gmpz_gcd_ui(arg1,(__mpz_struct const *)arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1gcdext(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_ptr arg2 = (mpz_ptr) 0 ;
  mpz_ptr arg3 = (mpz_ptr) 0 ;
  mpz_srcptr arg4 = (mpz_srcptr) 0 ;
  mpz_srcptr arg5 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_ptr *)&jarg2; 
  arg3 = *(mpz_ptr *)&jarg3; 
  arg4 = *(mpz_srcptr *)&jarg4; 
  arg5 = *(mpz_srcptr *)&jarg5; 
  __gmpz_gcdext(arg1,arg2,arg3,(__mpz_struct const *)arg4,(__mpz_struct const *)arg5);
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1gmpz_1get_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = (double)__gmpz_get_d((__mpz_struct const *)arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1gmpz_1get_1d_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jdouble jresult = 0 ;
  long *arg1 = (long *) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  result = (double)__gmpz_get_d_2exp(arg1,(__mpz_struct const *)arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1get_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = (long)__gmpz_get_si((__mpz_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1_1gmpz_1get_1str(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3, jobject jarg3_) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (int)jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  result = (char *)__gmpz_get_str(arg1,arg2,(__mpz_struct const *)arg3);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1hamdist(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mp_bitcnt_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  result = (mp_bitcnt_t)__gmpz_hamdist((__mpz_struct const *)arg1,(__mpz_struct const *)arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1import(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  size_t arg2 ;
  int arg3 ;
  size_t arg4 ;
  int arg5 ;
  size_t arg6 ;
  void *arg7 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (size_t)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (size_t)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (size_t)jarg6; 
  arg7 = *(void **)&jarg7; 
  __gmpz_import(arg1,arg2,arg3,arg4,arg5,arg6,(void const *)arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  __gmpz_init(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1init2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mp_bitcnt_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  __gmpz_init2(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1inits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  void *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  __gmpz_inits(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1init_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  __gmpz_init_set(arg1,(__mpz_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1init_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (double)jarg2; 
  __gmpz_init_set_d(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1init_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (long)jarg2; 
  __gmpz_init_set_si(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1init_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  result = (int)__gmpz_init_set_str(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1init_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  __gmpz_init_set_ui(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1inp_1raw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(FILE **)&jarg2; 
  result = __gmpz_inp_raw(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1inp_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  int arg3 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(FILE **)&jarg2; 
  arg3 = (int)jarg3; 
  result = __gmpz_inp_str(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1invert(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  result = (int)__gmpz_invert(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1ior(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_ior(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1jacobi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  result = (int)__gmpz_jacobi((__mpz_struct const *)arg1,(__mpz_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1kronecker_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  long arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (long)jarg2; 
  result = (int)__gmpz_kronecker_si((__mpz_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1kronecker_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  unsigned long arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  result = (int)__gmpz_kronecker_ui((__mpz_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1si_1kronecker(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  long arg1 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (long)jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  result = (int)__gmpz_si_kronecker(arg1,(__mpz_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1ui_1kronecker(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  unsigned long arg1 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (unsigned long)jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  result = (int)__gmpz_ui_kronecker(arg1,(__mpz_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1lcm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_lcm(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1lcm_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_lcm_ui(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1lucnum_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  __gmpz_lucnum_ui(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1lucnum2_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_ptr arg2 = (mpz_ptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_ptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_lucnum2_ui(arg1,arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1millerrabin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)__gmpz_millerrabin((__mpz_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_mod(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_mul(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1mul_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpz_mul_2exp(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (long)jarg3; 
  __gmpz_mul_si(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_mul_ui(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1nextprime(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  __gmpz_nextprime(arg1,(__mpz_struct const *)arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1out_1raw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  result = __gmpz_out_raw(arg1,(__mpz_struct const *)arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1out_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int arg2 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  result = __gmpz_out_str(arg1,arg2,(__mpz_struct const *)arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1perfect_1power_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = (int)__gmpz_perfect_power_p((__mpz_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_pow_ui(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1powm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  mpz_srcptr arg4 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = *(mpz_srcptr *)&jarg4; 
  __gmpz_powm(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3,(__mpz_struct const *)arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1powm_1sec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  mpz_srcptr arg4 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = *(mpz_srcptr *)&jarg4; 
  __gmpz_powm_sec(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3,(__mpz_struct const *)arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1powm_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  mpz_srcptr arg4 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = *(mpz_srcptr *)&jarg4; 
  __gmpz_powm_ui(arg1,(__mpz_struct const *)arg2,arg3,(__mpz_struct const *)arg4);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1probab_1prime_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)__gmpz_probab_prime_p((__mpz_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1random(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mp_size_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  __gmpz_random(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1random2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mp_size_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  __gmpz_random2(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1realloc2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mp_bitcnt_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  __gmpz_realloc2(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1remove(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  mp_bitcnt_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  result = (mp_bitcnt_t)__gmpz_remove(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  result = (int)__gmpz_root(arg1,(__mpz_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1rootrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_ptr arg2 = (mpz_ptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  unsigned long arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_ptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = (unsigned long)jarg4; 
  __gmpz_rootrem(arg1,arg2,(__mpz_struct const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1rrandomb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  __gmp_randstate_struct *arg2 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(__gmp_randstate_struct **)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpz_rrandomb(arg1,arg2,arg3);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1scan0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mp_bitcnt_t arg2 ;
  mp_bitcnt_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  result = (mp_bitcnt_t)__gmpz_scan0((__mpz_struct const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1scan1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mp_bitcnt_t arg2 ;
  mp_bitcnt_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  result = (mp_bitcnt_t)__gmpz_scan1((__mpz_struct const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  __gmpz_set(arg1,(__mpz_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (double)jarg2; 
  __gmpz_set_d(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1set_1f(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  __gmpz_set_f(arg1,(__mpf_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (long)jarg2; 
  __gmpz_set_si(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  result = (int)__gmpz_set_str(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  __gmpz_set_ui(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1setbit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mp_bitcnt_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  __gmpz_setbit(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1sizeinbase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  int arg2 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (int)jarg2; 
  result = __gmpz_sizeinbase((__mpz_struct const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  __gmpz_sqrt(arg1,(__mpz_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1sqrtrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_ptr arg2 = (mpz_ptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_ptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_sqrtrem(arg1,arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_sub(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1sub_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_sub_ui(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1ui_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  unsigned long arg2 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_ui_sub(arg1,arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1submul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_submul(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1submul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_submul_ui(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_ptr arg2 = (mpz_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_ptr *)&jarg2; 
  __gmpz_swap(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1tdiv_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  unsigned long arg2 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  result = (unsigned long)__gmpz_tdiv_ui((__mpz_struct const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1tdiv_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_tdiv_q(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1tdiv_1q_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpz_tdiv_q_2exp(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1tdiv_1q_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  result = (unsigned long)__gmpz_tdiv_q_ui(arg1,(__mpz_struct const *)arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1tdiv_1qr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_ptr arg2 = (mpz_ptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  mpz_srcptr arg4 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_ptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = *(mpz_srcptr *)&jarg4; 
  __gmpz_tdiv_qr(arg1,arg2,(__mpz_struct const *)arg3,(__mpz_struct const *)arg4);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1tdiv_1qr_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_ptr arg2 = (mpz_ptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  unsigned long arg4 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_ptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = (unsigned long)jarg4; 
  result = (unsigned long)__gmpz_tdiv_qr_ui(arg1,arg2,(__mpz_struct const *)arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1tdiv_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_tdiv_r(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1tdiv_1r_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpz_tdiv_r_2exp(arg1,(__mpz_struct const *)arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1tdiv_1r_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  unsigned long arg3 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  result = (unsigned long)__gmpz_tdiv_r_ui(arg1,(__mpz_struct const *)arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1tstbit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mp_bitcnt_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  result = (int)__gmpz_tstbit((__mpz_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1ui_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  unsigned long arg2 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpz_ui_pow_ui(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1urandomb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  __gmp_randstate_struct *arg2 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(__gmp_randstate_struct **)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpz_urandomb(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1urandomm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  __gmp_randstate_struct *arg2 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(__gmp_randstate_struct **)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_urandomm(arg1,arg2,(__mpz_struct const *)arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1xor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  __gmpz_xor(arg1,(__mpz_struct const *)arg2,(__mpz_struct const *)arg3);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1limbs_1read(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mp_srcptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = (mp_srcptr)__gmpz_limbs_read((__mpz_struct const *)arg1);
  *(mp_srcptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1limbs_1write(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mp_size_t arg2 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  result = (mp_ptr)__gmpz_limbs_write(arg1,arg2);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1limbs_1modify(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mp_size_t arg2 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  result = (mp_ptr)__gmpz_limbs_modify(arg1,arg2);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1limbs_1finish(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mp_size_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  __gmpz_limbs_finish(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1roinit_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mpz_srcptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  result = (mpz_srcptr)__gmpz_roinit_n(arg1,(unsigned long const *)arg2,arg3);
  *(mpz_srcptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  mpq_srcptr arg3 = (mpq_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  arg3 = *(mpq_srcptr *)&jarg3; 
  __gmpq_add(arg1,(__mpq_struct const *)arg2,(__mpq_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1canonicalize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpq_ptr *)&jarg1; 
  __gmpq_canonicalize(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpq_ptr *)&jarg1; 
  __gmpq_clear(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1clears(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  void *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpq_ptr *)&jarg1; 
  __gmpq_clears(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpq_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpq_srcptr arg1 = (mpq_srcptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_srcptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  result = (int)__gmpq_cmp((__mpq_struct const *)arg1,(__mpq_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpq_1cmp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  jint jresult = 0 ;
  mpq_srcptr arg1 = (mpq_srcptr) 0 ;
  long arg2 ;
  unsigned long arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpq_srcptr *)&jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (unsigned long)jarg3; 
  result = (int)__gmpq_cmp_si((__mpq_struct const *)arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpq_1cmp_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  mpq_srcptr arg1 = (mpq_srcptr) 0 ;
  unsigned long arg2 ;
  unsigned long arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpq_srcptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (unsigned long)jarg3; 
  result = (int)__gmpq_cmp_ui((__mpq_struct const *)arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpq_1cmp_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpq_srcptr arg1 = (mpq_srcptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_srcptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  result = (int)__gmpq_cmp_z((__mpq_struct const *)arg1,(__mpz_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  mpq_srcptr arg3 = (mpq_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  arg3 = *(mpq_srcptr *)&jarg3; 
  __gmpq_div(arg1,(__mpq_struct const *)arg2,(__mpq_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1div_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpq_div_2exp(arg1,(__mpq_struct const *)arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpq_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpq_srcptr arg1 = (mpq_srcptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_srcptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  result = (int)__gmpq_equal((__mpq_struct const *)arg1,(__mpq_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1get_1num(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  __gmpq_get_num(arg1,(__mpq_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1get_1den(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  __gmpq_get_den(arg1,(__mpq_struct const *)arg2);
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1gmpq_1get_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  mpq_srcptr arg1 = (mpq_srcptr) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpq_srcptr *)&jarg1; 
  result = (double)__gmpq_get_d((__mpq_struct const *)arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1_1gmpq_1get_1str(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3, jobject jarg3_) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  mpq_srcptr arg3 = (mpq_srcptr) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (int)jarg2; 
  arg3 = *(mpq_srcptr *)&jarg3; 
  result = (char *)__gmpq_get_str(arg1,arg2,(__mpq_struct const *)arg3);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpq_ptr *)&jarg1; 
  __gmpq_init(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1inits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  void *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpq_ptr *)&jarg1; 
  __gmpq_inits(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpq_1inp_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  int arg3 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(FILE **)&jarg2; 
  arg3 = (int)jarg3; 
  result = __gmpq_inp_str(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1inv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  __gmpq_inv(arg1,(__mpq_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  mpq_srcptr arg3 = (mpq_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  arg3 = *(mpq_srcptr *)&jarg3; 
  __gmpq_mul(arg1,(__mpq_struct const *)arg2,(__mpq_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1mul_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpq_mul_2exp(arg1,(__mpq_struct const *)arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpq_1out_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int arg2 ;
  mpq_srcptr arg3 = (mpq_srcptr) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(mpq_srcptr *)&jarg3; 
  result = __gmpq_out_str(arg1,arg2,(__mpq_struct const *)arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  __gmpq_set(arg1,(__mpq_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = (double)jarg2; 
  __gmpq_set_d(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1set_1den(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  __gmpq_set_den(arg1,(__mpz_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1set_1f(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  __gmpq_set_f(arg1,(__mpf_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1set_1num(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  __gmpq_set_num(arg1,(__mpz_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  long arg2 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpq_set_si(arg1,arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpq_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  result = (int)__gmpq_set_str(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  unsigned long arg2 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpq_set_ui(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1set_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  __gmpq_set_z(arg1,(__mpz_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  mpq_srcptr arg3 = (mpq_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  arg3 = *(mpq_srcptr *)&jarg3; 
  __gmpq_sub(arg1,(__mpq_struct const *)arg2,(__mpq_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpq_ptr arg2 = (mpq_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpq_ptr *)&jarg2; 
  __gmpq_swap(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  __gmpf_abs(arg1,(__mpf_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  mpf_srcptr arg3 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = *(mpf_srcptr *)&jarg3; 
  __gmpf_add(arg1,(__mpf_struct const *)arg2,(__mpf_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1add_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpf_add_ui(arg1,(__mpf_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1ceil(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  __gmpf_ceil(arg1,(__mpf_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  __gmpf_clear(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1clears(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  void *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  __gmpf_clears(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  result = (int)__gmpf_cmp((__mpf_struct const *)arg1,(__mpf_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1cmp_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  result = (int)__gmpf_cmp_z((__mpf_struct const *)arg1,(__mpz_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1cmp_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  double arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  arg2 = (double)jarg2; 
  result = (int)__gmpf_cmp_d((__mpf_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1cmp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  long arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  arg2 = (long)jarg2; 
  result = (int)__gmpf_cmp_si((__mpf_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1cmp_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  unsigned long arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  result = (int)__gmpf_cmp_ui((__mpf_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  mpf_srcptr arg3 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = *(mpf_srcptr *)&jarg3; 
  __gmpf_div(arg1,(__mpf_struct const *)arg2,(__mpf_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1div_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpf_div_2exp(arg1,(__mpf_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1div_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpf_div_ui(arg1,(__mpf_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1dump(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  __gmpf_dump((__mpf_struct const *)arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1eq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  mp_bitcnt_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  result = (int)__gmpf_eq((__mpf_struct const *)arg1,(__mpf_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1fits_1sint_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  result = (int)__gmpf_fits_sint_p((__mpf_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1fits_1slong_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  result = (int)__gmpf_fits_slong_p((__mpf_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1fits_1sshort_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  result = (int)__gmpf_fits_sshort_p((__mpf_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1fits_1uint_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  result = (int)__gmpf_fits_uint_p((__mpf_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1fits_1ulong_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  result = (int)__gmpf_fits_ulong_p((__mpf_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1fits_1ushort_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  result = (int)__gmpf_fits_ushort_p((__mpf_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1floor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  __gmpf_floor(arg1,(__mpf_struct const *)arg2);
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1gmpf_1get_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  result = (double)__gmpf_get_d((__mpf_struct const *)arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1gmpf_1get_1d_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jdouble jresult = 0 ;
  long *arg1 = (long *) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  result = (double)__gmpf_get_d_2exp(arg1,(__mpf_struct const *)arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpf_1get_1default_1prec(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mp_bitcnt_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mp_bitcnt_t)__gmpf_get_default_prec();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpf_1get_1prec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  mp_bitcnt_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  result = (mp_bitcnt_t)__gmpf_get_prec((__mpf_struct const *)arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1get_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  result = (long)__gmpf_get_si((__mpf_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1_1gmpf_1get_1str(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  mp_exp_t *arg2 = (mp_exp_t *) 0 ;
  int arg3 ;
  size_t arg4 ;
  mpf_srcptr arg5 = (mpf_srcptr) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(mp_exp_t **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (size_t)jarg4; 
  arg5 = *(mpf_srcptr *)&jarg5; 
  result = (char *)__gmpf_get_str(arg1,arg2,arg3,arg4,(__mpf_struct const *)arg5);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpf_1get_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  result = (unsigned long)__gmpf_get_ui((__mpf_struct const *)arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  __gmpf_init(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1init2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mp_bitcnt_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  __gmpf_init2(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1inits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  void *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  __gmpf_inits(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1init_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  __gmpf_init_set(arg1,(__mpf_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1init_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = (double)jarg2; 
  __gmpf_init_set_d(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1init_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = (long)jarg2; 
  __gmpf_init_set_si(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1init_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  result = (int)__gmpf_init_set_str(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1init_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  __gmpf_init_set_ui(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpf_1inp_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  int arg3 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(FILE **)&jarg2; 
  arg3 = (int)jarg3; 
  result = __gmpf_inp_str(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1integer_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  result = (int)__gmpf_integer_p((__mpf_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  mpf_srcptr arg3 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = *(mpf_srcptr *)&jarg3; 
  __gmpf_mul(arg1,(__mpf_struct const *)arg2,(__mpf_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1mul_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpf_mul_2exp(arg1,(__mpf_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpf_mul_ui(arg1,(__mpf_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  __gmpf_neg(arg1,(__mpf_struct const *)arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpf_1out_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int arg2 ;
  size_t arg3 ;
  mpf_srcptr arg4 = (mpf_srcptr) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = *(mpf_srcptr *)&jarg4; 
  result = __gmpf_out_str(arg1,arg2,arg3,(__mpf_struct const *)arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpf_pow_ui(arg1,(__mpf_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1random2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mp_size_t arg2 ;
  mp_exp_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  arg3 = (mp_exp_t)jarg3; 
  __gmpf_random2(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1reldiff(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  mpf_srcptr arg3 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = *(mpf_srcptr *)&jarg3; 
  __gmpf_reldiff(arg1,(__mpf_struct const *)arg2,(__mpf_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  __gmpf_set(arg1,(__mpf_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = (double)jarg2; 
  __gmpf_set_d(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1set_1default_1prec(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mp_bitcnt_t arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_bitcnt_t)jarg1; 
  __gmpf_set_default_prec(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1set_1prec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mp_bitcnt_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  __gmpf_set_prec(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1set_1prec_1raw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mp_bitcnt_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  __gmpf_set_prec_raw(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1set_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  __gmpf_set_q(arg1,(__mpq_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = (long)jarg2; 
  __gmpf_set_si(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpf_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  result = (int)__gmpf_set_str(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  __gmpf_set_ui(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1set_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  __gmpf_set_z(arg1,(__mpz_struct const *)arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpf_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mpf_srcptr arg1 = (mpf_srcptr) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_srcptr *)&jarg1; 
  result = __gmpf_size((__mpf_struct const *)arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  __gmpf_sqrt(arg1,(__mpf_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1sqrt_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  __gmpf_sqrt_ui(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  mpf_srcptr arg3 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = *(mpf_srcptr *)&jarg3; 
  __gmpf_sub(arg1,(__mpf_struct const *)arg2,(__mpf_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1sub_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  unsigned long arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  __gmpf_sub_ui(arg1,(__mpf_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_ptr arg2 = (mpf_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_ptr *)&jarg2; 
  __gmpf_swap(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  __gmpf_trunc(arg1,(__mpf_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1ui_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  unsigned long arg2 ;
  mpf_srcptr arg3 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = *(mpf_srcptr *)&jarg3; 
  __gmpf_ui_div(arg1,arg2,(__mpf_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1ui_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  unsigned long arg2 ;
  mpf_srcptr arg3 = (mpf_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = *(mpf_srcptr *)&jarg3; 
  __gmpf_ui_sub(arg1,arg2,(__mpf_struct const *)arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpf_1urandomb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  __mpf_struct *arg1 ;
  __gmp_randstate_struct *arg2 ;
  mp_bitcnt_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__mpf_struct **)&jarg1; 
  arg2 = *(__gmp_randstate_struct **)&jarg2; 
  arg3 = (mp_bitcnt_t)jarg3; 
  __gmpf_urandomb(arg1,arg2,arg3);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1add_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  result = (mp_limb_t)__gmpn_add_n(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1addmul_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)__gmpn_addmul_1(arg1,(unsigned long const *)arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1divexact_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  __gmpn_divexact_1(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1divexact_1by3c(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)__gmpn_divexact_by3c(arg1,(unsigned long const *)arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1divrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_size_t arg2 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_size_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_size_t arg6 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_size_t)jarg6; 
  result = (mp_limb_t)__gmpn_divrem(arg1,arg2,arg3,arg4,(unsigned long const *)arg5,arg6);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1divrem_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jint jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_size_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (mp_limb_t)__gmpn_divrem_1(arg1,arg2,(unsigned long const *)arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1divrem_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jint jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_size_t arg2 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_size_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  result = (mp_limb_t)__gmpn_divrem_2(arg1,arg2,arg3,arg4,(unsigned long const *)arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1div_1qr_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (mp_limb_t)__gmpn_div_qr_1(arg1,arg2,(unsigned long const *)arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1div_1qr_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  result = (mp_limb_t)__gmpn_div_qr_2(arg1,arg2,(unsigned long const *)arg3,arg4,(unsigned long const *)arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1gcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_size_t arg3 ;
  mp_ptr arg4 = (mp_ptr) 0 ;
  mp_size_t arg5 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = *(mp_ptr *)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  result = (mp_size_t)__gmpn_gcd(arg1,arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1gcd_111(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)__gmpn_gcd_11(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1gcd_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_size_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)__gmpn_gcd_1((unsigned long const *)arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1gcdext_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)__gmpn_gcdext_1(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1gcdext(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_size_t *arg3 = (mp_size_t *) 0 ;
  mp_ptr arg4 = (mp_ptr) 0 ;
  mp_size_t arg5 ;
  mp_ptr arg6 = (mp_ptr) 0 ;
  mp_size_t arg7 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_size_t **)&jarg3; 
  arg4 = *(mp_ptr *)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  arg6 = *(mp_ptr *)&jarg6; 
  arg7 = (mp_size_t)jarg7; 
  result = (mp_size_t)__gmpn_gcdext(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1get_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jint jarg4) {
  jlong jresult = 0 ;
  unsigned char *arg1 = (unsigned char *) 0 ;
  int arg2 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_size_t arg4 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(unsigned char **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  result = __gmpn_get_str(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1hamdist(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_bitcnt_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  result = (mp_bitcnt_t)__gmpn_hamdist((unsigned long const *)arg1,(unsigned long const *)arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1lshift(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  unsigned int arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (unsigned int)jarg4; 
  result = (mp_limb_t)__gmpn_lshift(arg1,(unsigned long const *)arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1mod_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_size_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)__gmpn_mod_1((unsigned long const *)arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_size_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  result = (mp_limb_t)__gmpn_mul(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1mul_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)__gmpn_mul_1(arg1,(unsigned long const *)arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1mul_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  __gmpn_mul_n(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1sqr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  __gmpn_sqr(arg1,(unsigned long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1com(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  __gmpn_com(arg1,(unsigned long const *)arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1perfect_1square_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_size_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  result = (int)__gmpn_perfect_square_p((unsigned long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1perfect_1power_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_size_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  result = (int)__gmpn_perfect_power_p((unsigned long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1popcount(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_size_t arg2 ;
  mp_bitcnt_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  result = (mp_bitcnt_t)__gmpn_popcount((unsigned long const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1pow_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_limb_t arg4 ;
  mp_ptr arg5 = (mp_ptr) 0 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = *(mp_ptr *)&jarg5; 
  result = (mp_size_t)__gmpn_pow_1(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1preinv_1mod_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_size_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)__gmpn_preinv_mod_1((unsigned long const *)arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1random(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_size_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  __gmpn_random(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1random2(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_size_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  __gmpn_random2(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1rshift(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  unsigned int arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (unsigned int)jarg4; 
  result = (mp_limb_t)__gmpn_rshift(arg1,(unsigned long const *)arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1scan0(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_bitcnt_t arg2 ;
  mp_bitcnt_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  result = (mp_bitcnt_t)__gmpn_scan0((unsigned long const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1scan1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_bitcnt_t arg2 ;
  mp_bitcnt_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  result = (mp_bitcnt_t)__gmpn_scan1((unsigned long const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  size_t arg3 ;
  int arg4 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(unsigned char **)&jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_size_t)__gmpn_set_str(arg1,(unsigned char const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1sizeinbase(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_size_t arg2 ;
  int arg3 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  arg3 = (int)jarg3; 
  result = __gmpn_sizeinbase((unsigned long const *)arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1sqrtrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  result = (mp_size_t)__gmpn_sqrtrem(arg1,arg2,(unsigned long const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1sub_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  result = (mp_limb_t)__gmpn_sub_n(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1submul_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)__gmpn_submul_1(arg1,(unsigned long const *)arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1tdiv_1qr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_size_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_size_t arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_size_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_size_t)jarg7; 
  __gmpn_tdiv_qr(arg1,arg2,arg3,(unsigned long const *)arg4,arg5,(unsigned long const *)arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1and_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  __gmpn_and_n(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1andn_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  __gmpn_andn_n(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1nand_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  __gmpn_nand_n(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1ior_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  __gmpn_ior_n(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1iorn_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  __gmpn_iorn_n(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1nior_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  __gmpn_nior_n(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1xor_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  __gmpn_xor_n(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1xnor_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  __gmpn_xnor_n(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1copyi(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  __gmpn_copyi(arg1,(unsigned long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1copyd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  __gmpn_copyd(arg1,(unsigned long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_size_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  __gmpn_zero(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1cnd_1add_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_size_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  result = (mp_limb_t)__gmpn_cnd_add_n(arg1,arg2,(unsigned long const *)arg3,(unsigned long const *)arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1cnd_1sub_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_size_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  result = (mp_limb_t)__gmpn_cnd_sub_n(arg1,arg2,(unsigned long const *)arg3,(unsigned long const *)arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1add_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_limb_t arg4 ;
  mp_ptr arg5 = (mp_ptr) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = *(mp_ptr *)&jarg5; 
  result = (mp_limb_t)__gmpn_sec_add_1(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1add_11_1itch(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  mp_size_t arg1 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_size_t)jarg1; 
  result = (mp_size_t)__gmpn_sec_add_1_itch(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1sub_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_limb_t arg4 ;
  mp_ptr arg5 = (mp_ptr) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = *(mp_ptr *)&jarg5; 
  result = (mp_limb_t)__gmpn_sec_sub_1(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1sub_11_1itch(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  mp_size_t arg1 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_size_t)jarg1; 
  result = (mp_size_t)__gmpn_sec_sub_1_itch(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1cnd_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  mp_limb_t arg1 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  mp_size_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  __gmpn_cnd_swap(arg1,(unsigned long volatile *)arg2,(unsigned long volatile *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_size_t arg5 ;
  mp_ptr arg6 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  arg6 = *(mp_ptr *)&jarg6; 
  __gmpn_sec_mul(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1mul_1itch(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jint jresult = 0 ;
  mp_size_t arg1 ;
  mp_size_t arg2 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_size_t)jarg1; 
  arg2 = (mp_size_t)jarg2; 
  result = (mp_size_t)__gmpn_sec_mul_itch(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1sqr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_ptr arg4 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = *(mp_ptr *)&jarg4; 
  __gmpn_sec_sqr(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1sqr_1itch(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  mp_size_t arg1 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_size_t)jarg1; 
  result = (mp_size_t)__gmpn_sec_sqr_itch(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1powm(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jint jarg7, jlong jarg8) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_bitcnt_t arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_size_t arg7 ;
  mp_ptr arg8 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_bitcnt_t)jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_size_t)jarg7; 
  arg8 = *(mp_ptr *)&jarg8; 
  __gmpn_sec_powm(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,(unsigned long const *)arg6,arg7,arg8);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1powm_1itch(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  mp_size_t arg1 ;
  mp_bitcnt_t arg2 ;
  mp_size_t arg3 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_size_t)jarg1; 
  arg2 = (mp_bitcnt_t)jarg2; 
  arg3 = (mp_size_t)jarg3; 
  result = (mp_size_t)__gmpn_sec_powm_itch(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1tabselect(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jint jarg5) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_size_t arg3 ;
  mp_size_t arg4 ;
  mp_size_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = (mp_size_t)jarg5; 
  __gmpn_sec_tabselect((unsigned long volatile *)arg1,(unsigned long const volatile *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1div_1qr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_size_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_size_t arg5 ;
  mp_ptr arg6 = (mp_ptr) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  arg6 = *(mp_ptr *)&jarg6; 
  result = (mp_limb_t)__gmpn_sec_div_qr(arg1,arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1div_1qr_1itch(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jint jresult = 0 ;
  mp_size_t arg1 ;
  mp_size_t arg2 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_size_t)jarg1; 
  arg2 = (mp_size_t)jarg2; 
  result = (mp_size_t)__gmpn_sec_div_qr_itch(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1div_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jint jarg4, jlong jarg5) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_size_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  mp_ptr arg5 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = *(mp_ptr *)&jarg5; 
  __gmpn_sec_div_r(arg1,arg2,(unsigned long const *)arg3,arg4,arg5);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1div_1r_1itch(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jint jresult = 0 ;
  mp_size_t arg1 ;
  mp_size_t arg2 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_size_t)jarg1; 
  arg2 = (mp_size_t)jarg2; 
  result = (mp_size_t)__gmpn_sec_div_r_itch(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1invert(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jlong jarg6) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  mp_bitcnt_t arg5 ;
  mp_ptr arg6 = (mp_ptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = (mp_bitcnt_t)jarg5; 
  arg6 = *(mp_ptr *)&jarg6; 
  result = (int)__gmpn_sec_invert(arg1,arg2,(unsigned long const *)arg3,arg4,arg5,arg6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1sec_1invert_1itch(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  mp_size_t arg1 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_size_t)jarg1; 
  result = (mp_size_t)__gmpn_sec_invert_itch(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  __gmpz_abs(arg1,(__mpz_struct const *)arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1fits_1uint_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = (int)__gmpz_fits_uint_p((__mpz_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1fits_1ulong_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = (int)__gmpz_fits_ulong_p((__mpz_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1fits_1ushort_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = (int)__gmpz_fits_ushort_p((__mpz_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1get_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = (unsigned long)__gmpz_get_ui((__mpz_struct const *)arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1getlimbn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mp_size_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  result = (mp_limb_t)__gmpz_getlimbn((__mpz_struct const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  __gmpz_neg(arg1,(__mpz_struct const *)arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpz_1perfect_1square_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = (int)__gmpz_perfect_square_p((__mpz_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1popcount(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  mp_bitcnt_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = (mp_bitcnt_t)__gmpz_popcount((__mpz_struct const *)arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpz_1set_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  __gmpz_set_q(arg1,(__mpq_struct const *)arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpz_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mpz_srcptr arg1 = (mpz_srcptr) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpz_srcptr *)&jarg1; 
  result = __gmpz_size((__mpz_struct const *)arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  __gmpq_abs(arg1,(__mpq_struct const *)arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1gmpq_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  __gmpq_neg(arg1,(__mpq_struct const *)arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_size_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  result = (mp_limb_t)__gmpn_add(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1add_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)__gmpn_add_1(arg1,(unsigned long const *)arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  result = (int)__gmpn_cmp((unsigned long const *)arg1,(unsigned long const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpn_1zero_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_size_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  result = (int)__gmpn_zero_p((unsigned long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_size_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  result = (mp_limb_t)__gmpn_sub(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1sub_11(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)__gmpn_sub_1(arg1,(unsigned long const *)arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpn_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  result = (mp_limb_t)__gmpn_neg(arg1,(unsigned long const *)arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_GMP_1ERROR_1NONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)GMP_ERROR_NONE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_GMP_1ERROR_1UNSUPPORTED_1ARGUMENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)GMP_ERROR_UNSUPPORTED_ARGUMENT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_GMP_1ERROR_1DIVISION_1BY_1ZERO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)GMP_ERROR_DIVISION_BY_ZERO;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_GMP_1ERROR_1SQRT_1OF_1NEGATIVE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)GMP_ERROR_SQRT_OF_NEGATIVE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_GMP_1ERROR_1INVALID_1ARGUMENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)GMP_ERROR_INVALID_ARGUMENT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1_1GMP_1CC_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("x86_64-linux-gnu-gcc");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1_1GMP_1CFLAGS_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("-g -O2 -fdebug-prefix-map=/build/gmp-tyJiw5/gmp-6.2.0+dfsg=. -fstack-protector-strong -Wformat -Werror=format-security -O3");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GNU_1MP_1VERSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GNU_1MP_1VERSION_1MINOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GNU_1MP_1VERSION_1PATCHLEVEL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GNU_1MP_1RELEASE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((6*10000+2*100+0));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1FLAGS_1UNDERFLOW_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1FLAGS_1OVERFLOW_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1FLAGS_1NAN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1FLAGS_1INEXACT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1FLAGS_1ERANGE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(16);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1FLAGS_1DIVBY0_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(32);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1FLAGS_1ALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((1|2|4|8|16|32));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1RNDN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_rnd_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_rnd_t)MPFR_RNDN;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1RNDNA_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_rnd_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_rnd_t)MPFR_RNDNA;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1MPFR_1PREC_1FORMAT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1MPFR_1EXP_1FORMAT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1PREC_1MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mpfr_1struct_1_1mpfr_1prec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __mpfr_struct *arg1 = (__mpfr_struct *) 0 ;
  mpfr_prec_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  arg2 = (mpfr_prec_t)jarg2; 
  if (arg1) (arg1)->_mpfr_prec = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1mpfr_1struct_1_1mpfr_1prec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __mpfr_struct *arg1 = (__mpfr_struct *) 0 ;
  mpfr_prec_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  result = (mpfr_prec_t) ((arg1)->_mpfr_prec);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mpfr_1struct_1_1mpfr_1sign_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __mpfr_struct *arg1 = (__mpfr_struct *) 0 ;
  mpfr_sign_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  arg2 = (mpfr_sign_t)jarg2; 
  if (arg1) (arg1)->_mpfr_sign = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1mpfr_1struct_1_1mpfr_1sign_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __mpfr_struct *arg1 = (__mpfr_struct *) 0 ;
  mpfr_sign_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  result = (mpfr_sign_t) ((arg1)->_mpfr_sign);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mpfr_1struct_1_1mpfr_1exp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __mpfr_struct *arg1 = (__mpfr_struct *) 0 ;
  mpfr_exp_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  arg2 = (mpfr_exp_t)jarg2; 
  if (arg1) (arg1)->_mpfr_exp = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1mpfr_1struct_1_1mpfr_1exp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __mpfr_struct *arg1 = (__mpfr_struct *) 0 ;
  mpfr_exp_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  result = (mpfr_exp_t) ((arg1)->_mpfr_exp);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1mpfr_1struct_1_1mpfr_1d_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __mpfr_struct *arg1 = (__mpfr_struct *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  if (arg1) (arg1)->_mpfr_d = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1mpfr_1struct_1_1mpfr_1d_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __mpfr_struct *arg1 = (__mpfr_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  result = (mp_limb_t *) ((arg1)->_mpfr_d);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1mpfr_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __mpfr_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__mpfr_struct *)new __mpfr_struct();
  *(__mpfr_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1mpfr_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __mpfr_struct *arg1 = (__mpfr_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__mpfr_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1NAN_1KIND_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_kind_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_kind_t)MPFR_NAN_KIND;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1INF_1KIND_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_kind_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_kind_t)MPFR_INF_KIND;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1ZERO_1KIND_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_kind_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_kind_t)MPFR_ZERO_KIND;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1REGULAR_1KIND_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_kind_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_kind_t)MPFR_REGULAR_KIND;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1FREE_1LOCAL_1CACHE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_free_cache_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_free_cache_t)MPFR_FREE_LOCAL_CACHE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1FREE_1GLOBAL_1CACHE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_free_cache_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_free_cache_t)MPFR_FREE_GLOBAL_CACHE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MPFR_1USE_1C99_1FEATURE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_mpfr_1get_1version(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)mpfr_get_version();
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_mpfr_1get_1patches(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)mpfr_get_patches();
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1buildopt_1tls_1p(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)mpfr_buildopt_tls_p();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1buildopt_1float128_1p(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)mpfr_buildopt_float128_p();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1buildopt_1decimal_1p(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)mpfr_buildopt_decimal_p();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1buildopt_1gmpinternals_1p(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)mpfr_buildopt_gmpinternals_p();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1buildopt_1sharedcache_1p(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)mpfr_buildopt_sharedcache_p();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_mpfr_1buildopt_1tune_1case(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)mpfr_buildopt_tune_case();
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1emin(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_exp_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_exp_t)mpfr_get_emin();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1emin(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  mpfr_exp_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mpfr_exp_t)jarg1; 
  result = (int)mpfr_set_emin(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1emin_1min(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_exp_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_exp_t)mpfr_get_emin_min();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1emin_1max(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_exp_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_exp_t)mpfr_get_emin_max();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1emax(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_exp_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_exp_t)mpfr_get_emax();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1emax(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  mpfr_exp_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mpfr_exp_t)jarg1; 
  result = (int)mpfr_set_emax(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1emax_1min(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_exp_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_exp_t)mpfr_get_emax_min();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1emax_1max(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_exp_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_exp_t)mpfr_get_emax_max();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1set_1default_1rounding_1mode(JNIEnv *jenv, jclass jcls, jint jarg1) {
  mpfr_rnd_t arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mpfr_rnd_t)jarg1; 
  mpfr_set_default_rounding_mode(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1default_1rounding_1mode(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_rnd_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_rnd_t)mpfr_get_default_rounding_mode();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_mpfr_1print_1rnd_1mode(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  mpfr_rnd_t arg1 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mpfr_rnd_t)jarg1; 
  result = (char *)mpfr_print_rnd_mode(arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1clear_1flags(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_clear_flags();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1clear_1underflow(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_clear_underflow();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1clear_1overflow(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_clear_overflow();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1clear_1divby0(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_clear_divby0();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1clear_1nanflag(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_clear_nanflag();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1clear_1inexflag(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_clear_inexflag();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1clear_1erangeflag(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_clear_erangeflag();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1set_1underflow(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_set_underflow();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1set_1overflow(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_set_overflow();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1set_1divby0(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_set_divby0();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1set_1nanflag(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_set_nanflag();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1set_1inexflag(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_set_inexflag();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1set_1erangeflag(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_set_erangeflag();
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1underflow_1p(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)mpfr_underflow_p();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1overflow_1p(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)mpfr_overflow_p();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1divby0_1p(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)mpfr_divby0_p();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1nanflag_1p(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)mpfr_nanflag_p();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1inexflag_1p(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)mpfr_inexflag_p();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1erangeflag_1p(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)mpfr_erangeflag_p();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1flags_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mpfr_flags_t arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mpfr_flags_t)jarg1; 
  mpfr_flags_clear(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1flags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mpfr_flags_t arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mpfr_flags_t)jarg1; 
  mpfr_flags_set(arg1);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mpfr_1flags_1test(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mpfr_flags_t arg1 ;
  mpfr_flags_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mpfr_flags_t)jarg1; 
  result = (mpfr_flags_t)mpfr_flags_test(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mpfr_1flags_1save(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mpfr_flags_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_flags_t)mpfr_flags_save();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1flags_1restore(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  mpfr_flags_t arg1 ;
  mpfr_flags_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mpfr_flags_t)jarg1; 
  arg2 = (mpfr_flags_t)jarg2; 
  mpfr_flags_restore(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1check_1range(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  int arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_check_range(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1init2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_prec_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (mpfr_prec_t)jarg2; 
  mpfr_init2(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  mpfr_init(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  mpfr_clear(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1inits2(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_) {
  mpfr_prec_t arg1 ;
  mpfr_ptr arg2 = (mpfr_ptr) 0 ;
  void *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (mpfr_prec_t)jarg1; 
  arg2 = *(mpfr_ptr *)&jarg2; 
  mpfr_inits2(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1inits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  void *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  mpfr_inits(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1clears(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  void *arg2 = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  mpfr_clears(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1prec_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_prec_t arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (mpfr_prec_t)jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_prec_round(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1can_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_exp_t arg2 ;
  mpfr_rnd_t arg3 ;
  mpfr_rnd_t arg4 ;
  mpfr_prec_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_exp_t)jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  arg5 = (mpfr_prec_t)jarg5; 
  result = (int)mpfr_can_round((__mpfr_struct const *)arg1,arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1min_1prec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_prec_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (mpfr_prec_t)mpfr_min_prec((__mpfr_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_exp_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (mpfr_exp_t)mpfr_get_exp((__mpfr_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_exp_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (mpfr_exp_t)jarg2; 
  result = (int)mpfr_set_exp(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1prec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_prec_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (mpfr_prec_t)mpfr_get_prec((__mpfr_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1set_1prec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_prec_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (mpfr_prec_t)jarg2; 
  mpfr_set_prec(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1set_1prec_1raw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_prec_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (mpfr_prec_t)jarg2; 
  mpfr_set_prec_raw(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1set_1default_1prec(JNIEnv *jenv, jclass jcls, jint jarg1) {
  mpfr_prec_t arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mpfr_prec_t)jarg1; 
  mpfr_set_default_prec(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1default_1prec(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mpfr_prec_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mpfr_prec_t)mpfr_get_default_prec();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  double arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_set_d(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1flt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jfloat jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  float arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (float)jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_set_flt(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1ld(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  long double arg2 ;
  mpfr_rnd_t arg3 ;
  long double *argp2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  argp2 = *(long double **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null long double");
    return 0;
  }
  arg2 = *argp2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_set_ld(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_set_z(arg1,(__mpz_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1z_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpfr_exp_t arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = (mpfr_exp_t)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_set_z_2exp(arg1,(__mpz_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1set_1nan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  mpfr_set_nan(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1set_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (int)jarg2; 
  mpfr_set_inf(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1set_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (int)jarg2; 
  mpfr_set_zero(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1f(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_set_f(arg1,(__mpf_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cmp_1f(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpf_srcptr arg2 = (mpf_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpf_srcptr *)&jarg2; 
  result = (int)mpfr_cmp_f((__mpfr_struct const *)arg1,(__mpf_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1f(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpf_ptr arg1 = (mpf_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_get_f(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  long arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_set_si(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  unsigned long arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_set_ui(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1si_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  long arg2 ;
  mpfr_exp_t arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (mpfr_exp_t)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_set_si_2exp(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1ui_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  unsigned long arg2 ;
  mpfr_exp_t arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (mpfr_exp_t)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_set_ui_2exp(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_set_q(arg1,(__mpq_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1mul_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpq_srcptr arg3 = (mpq_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpq_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_mul_q(arg1,(__mpfr_struct const *)arg2,(__mpq_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1div_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpq_srcptr arg3 = (mpq_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpq_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_div_q(arg1,(__mpfr_struct const *)arg2,(__mpq_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1add_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpq_srcptr arg3 = (mpq_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpq_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_add_q(arg1,(__mpfr_struct const *)arg2,(__mpq_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sub_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpq_srcptr arg3 = (mpq_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpq_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_sub_q(arg1,(__mpfr_struct const *)arg2,(__mpq_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cmp_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpq_srcptr arg2 = (mpq_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpq_srcptr *)&jarg2; 
  result = (int)mpfr_cmp_q((__mpfr_struct const *)arg1,(__mpq_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1get_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpq_ptr arg1 = (mpq_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpq_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  mpfr_get_q(arg1,(__mpfr_struct const *)arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_set_str(arg1,(char const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1init_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_init_set_str(arg1,(char const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set4(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)mpfr_set4(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_abs(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_set(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_neg(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1signbit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (int)mpfr_signbit((__mpfr_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1setsign(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_setsign(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1copysign(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_copysign(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1z_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_exp_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (mpfr_exp_t)mpfr_get_z_2exp(arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_arblib_arblibJNI_mpfr_1get_1flt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jfloat jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg2 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (float)mpfr_get_flt((__mpfr_struct const *)arg1,arg2);
  jresult = (jfloat)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_mpfr_1get_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jdouble jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (double)mpfr_get_d((__mpfr_struct const *)arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mpfr_1get_1ld(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg2 ;
  long double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (long double)mpfr_get_ld((__mpfr_struct const *)arg1,arg2);
  *(long double **)&jresult = new long double((const long double &)result); 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_mpfr_1get_1d1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (double)mpfr_get_d1((__mpfr_struct const *)arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_mpfr_1get_1d_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jdouble jresult = 0 ;
  long *arg1 = (long *) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (double)mpfr_get_d_2exp(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mpfr_1get_1ld_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  long *arg1 = (long *) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  long double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (long double)mpfr_get_ld_2exp(arg1,(__mpfr_struct const *)arg2,arg3);
  *(long double **)&jresult = new long double((const long double &)result); 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1frexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_exp_t *arg1 = (mpfr_exp_t *) 0 ;
  mpfr_ptr arg2 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_exp_t **)&jarg1; 
  arg2 = *(mpfr_ptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_frexp(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg2 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (long)mpfr_get_si((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mpfr_1get_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg2 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (unsigned long)mpfr_get_ui((__mpfr_struct const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mpfr_1get_1str_1ndigits(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jlong jresult = 0 ;
  int arg1 ;
  mpfr_prec_t arg2 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (mpfr_prec_t)jarg2; 
  result = mpfr_get_str_ndigits(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_mpfr_1get_1str(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  mpfr_exp_t *arg2 = (mpfr_exp_t *) 0 ;
  int arg3 ;
  size_t arg4 ;
  mpfr_srcptr arg5 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg6 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(mpfr_exp_t **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (size_t)jarg4; 
  arg5 = *(mpfr_srcptr *)&jarg5; 
  arg6 = (mpfr_rnd_t)jarg6; 
  result = (char *)mpfr_get_str(arg1,arg2,arg3,arg4,(__mpfr_struct const *)arg5,arg6);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1get_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_get_z(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1free_1str(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  char *arg1 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return ;
  }
  mpfr_free_str(arg1);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1urandom(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  __gmp_randstate_struct *arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(__gmp_randstate_struct **)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_urandom(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1grandom(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_ptr arg2 = (mpfr_ptr) 0 ;
  __gmp_randstate_struct *arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_ptr *)&jarg2; 
  arg3 = *(__gmp_randstate_struct **)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_grandom(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1nrandom(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  __gmp_randstate_struct *arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(__gmp_randstate_struct **)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_nrandom(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1erandom(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  __gmp_randstate_struct *arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(__gmp_randstate_struct **)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_erandom(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1urandomb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  __gmp_randstate_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(__gmp_randstate_struct **)&jarg2; 
  result = (int)mpfr_urandomb(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1nextabove(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  mpfr_nextabove(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1nextbelow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  mpfr_nextbelow(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1nexttoward(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  mpfr_nexttoward(arg1,(__mpfr_struct const *)arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1printf(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)mpfr_printf((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1asprintf(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
  jint jresult = 0 ;
  char **arg1 = (char **) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(char ***)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)mpfr_asprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sprintf(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)mpfr_sprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1snprintf(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jstring jarg3) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  char *arg3 = (char *) 0 ;
  void *arg4 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (size_t)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (int)mpfr_snprintf(arg1,arg2,(char const *)arg3,arg4);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_pow(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1pow_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_pow_si(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  unsigned long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_pow_ui(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1ui_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  unsigned long arg2 ;
  unsigned long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_ui_pow_ui(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1ui_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  unsigned long arg2 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_ui_pow(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1pow_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_pow_z(arg1,(__mpfr_struct const *)arg2,(__mpz_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_sqrt(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sqrt_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  unsigned long arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_sqrt_ui(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1rec_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_rec_sqrt(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_add(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_sub(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_mul(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_div(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1add_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  unsigned long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_add_ui(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sub_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  unsigned long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_sub_ui(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1ui_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  unsigned long arg2 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_ui_sub(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  unsigned long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_mul_ui(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1div_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  unsigned long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_div_ui(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1ui_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  unsigned long arg2 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_ui_div(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1add_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_add_si(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sub_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_sub_si(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1si_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  long arg2 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (long)jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_si_sub(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_mul_si(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1div_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_div_si(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1si_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  long arg2 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (long)jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_si_div(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1add_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  double arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_add_d(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sub_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  double arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_sub_d(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1d_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  double arg2 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (double)jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_d_sub(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1mul_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  double arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_mul_d(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1div_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  double arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_div_d(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1d_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  double arg2 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (double)jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_d_div(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sqr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_sqr(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1const_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_rnd_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (int)mpfr_const_pi(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1const_1log2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_rnd_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (int)mpfr_const_log2(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1const_1euler(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_rnd_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (int)mpfr_const_euler(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1const_1catalan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_rnd_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (int)mpfr_const_catalan(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1agm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_agm(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1log(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_log(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1log2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_log2(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1log10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_log10(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1log1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_log1p(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1log_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  unsigned long arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_log_ui(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_exp(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1exp2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_exp2(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1exp10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_exp10(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1expm1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_expm1(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1eint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_eint(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1li2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_li2(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_cmp((__mpfr_struct const *)arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cmp3(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (int)jarg3; 
  result = (int)mpfr_cmp3((__mpfr_struct const *)arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cmp_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  double arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (double)jarg2; 
  result = (int)mpfr_cmp_d((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cmp_1ld(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  long double arg2 ;
  long double *argp2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  argp2 = *(long double **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null long double");
    return 0;
  }
  arg2 = *argp2; 
  result = (int)mpfr_cmp_ld((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cmp_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  unsigned long arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  result = (int)mpfr_cmp_ui((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cmp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  long arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (long)jarg2; 
  result = (int)mpfr_cmp_si((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cmp_1ui_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  unsigned long arg2 ;
  mpfr_exp_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (mpfr_exp_t)jarg3; 
  result = (int)mpfr_cmp_ui_2exp((__mpfr_struct const *)arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cmp_1si_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  long arg2 ;
  mpfr_exp_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (mpfr_exp_t)jarg3; 
  result = (int)mpfr_cmp_si_2exp((__mpfr_struct const *)arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cmpabs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_cmpabs((__mpfr_struct const *)arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cmpabs_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  unsigned long arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  result = (int)mpfr_cmpabs_ui((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1reldiff(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  mpfr_reldiff(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1eq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  unsigned long arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  result = (int)mpfr_eq((__mpfr_struct const *)arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sgn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (int)mpfr_sgn((__mpfr_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1mul_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  unsigned long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_mul_2exp(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1div_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  unsigned long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_div_2exp(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1mul_12ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  unsigned long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_mul_2ui(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1div_12ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  unsigned long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_div_2ui(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1mul_12si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_mul_2si(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1div_12si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_div_2si(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1rint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_rint(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1roundeven(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_roundeven(arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_round(arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_trunc(arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1ceil(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_ceil(arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1floor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_floor(arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1rint_1roundeven(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_rint_roundeven(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1rint_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_rint_round(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1rint_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_rint_trunc(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1rint_1ceil(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_rint_ceil(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1rint_1floor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_rint_floor(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1frac(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_frac(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1modf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_ptr arg2 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_ptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_modf(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1remquo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  long *arg2 = (long *) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg4 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = *(mpfr_srcptr *)&jarg4; 
  arg5 = (mpfr_rnd_t)jarg5; 
  result = (int)mpfr_remquo(arg1,arg2,(__mpfr_struct const *)arg3,(__mpfr_struct const *)arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1remainder(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_remainder(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_fmod(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fmodquo(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  long *arg2 = (long *) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg4 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = *(mpfr_srcptr *)&jarg4; 
  arg5 = (mpfr_rnd_t)jarg5; 
  result = (int)mpfr_fmodquo(arg1,arg2,(__mpfr_struct const *)arg3,(__mpfr_struct const *)arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fits_1ulong_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (int)mpfr_fits_ulong_p((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fits_1slong_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (int)mpfr_fits_slong_p((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fits_1uint_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (int)mpfr_fits_uint_p((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fits_1sint_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (int)mpfr_fits_sint_p((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fits_1ushort_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (int)mpfr_fits_ushort_p((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fits_1sshort_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (int)mpfr_fits_sshort_p((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fits_1uintmax_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (int)mpfr_fits_uintmax_p((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fits_1intmax_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = (mpfr_rnd_t)jarg2; 
  result = (int)mpfr_fits_intmax_p((__mpfr_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1extract(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpz_ptr arg1 = (mpz_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  unsigned int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpz_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (unsigned int)jarg3; 
  mpfr_extract(arg1,(__mpfr_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_ptr arg2 = (mpfr_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_ptr *)&jarg2; 
  mpfr_swap(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1dump(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  mpfr_dump((__mpfr_struct const *)arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1nan_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (int)mpfr_nan_p((__mpfr_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1inf_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (int)mpfr_inf_p((__mpfr_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1number_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (int)mpfr_number_p((__mpfr_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1integer_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (int)mpfr_integer_p((__mpfr_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1zero_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (int)mpfr_zero_p((__mpfr_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1regular_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (int)mpfr_regular_p((__mpfr_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1greater_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_greater_p((__mpfr_struct const *)arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1greaterequal_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_greaterequal_p((__mpfr_struct const *)arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1less_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_less_p((__mpfr_struct const *)arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1lessequal_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_lessequal_p((__mpfr_struct const *)arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1lessgreater_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_lessgreater_p((__mpfr_struct const *)arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1equal_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_equal_p((__mpfr_struct const *)arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1unordered_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_unordered_p((__mpfr_struct const *)arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1atanh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_atanh(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1acosh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_acosh(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1asinh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_asinh(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cosh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_cosh(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sinh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_sinh(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1tanh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_tanh(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sinh_1cosh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_ptr arg2 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_ptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_sinh_cosh(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sech(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_sech(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1csch(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_csch(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1coth(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_coth(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1acos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_acos(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1asin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_asin(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1atan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_atan(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_sin(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sin_1cos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_ptr arg2 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_ptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_sin_cos(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_cos(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1tan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_tan(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1atan2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_atan2(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_sec(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1csc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_csc(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_cot(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1hypot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_hypot(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1erf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_erf(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1erfc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_erfc(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cbrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_cbrt(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  unsigned long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_root(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1rootn_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  unsigned long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_rootn_ui(arg1,(__mpfr_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1gamma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_gamma(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1gamma_1inc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_gamma_inc(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1beta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_beta(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1lngamma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_lngamma(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1lgamma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  int *arg2 = (int *) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(int **)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_lgamma(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1digamma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_digamma(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1zeta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_zeta(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1zeta_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  unsigned long arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_zeta_ui(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fac_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  unsigned long arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_fac_ui(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1j0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_j0(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1j1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_j1(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1jn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  long arg2 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (long)jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_jn(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1y0(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_y0(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1y1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_y1(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1yn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  long arg2 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (long)jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_yn(arg1,arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1ai(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_ai(arg1,(__mpfr_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1min(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_min(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1max(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_max(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1dim(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_dim(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1mul_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_mul_z(arg1,(__mpfr_struct const *)arg2,(__mpz_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1div_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_div_z(arg1,(__mpfr_struct const *)arg2,(__mpz_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1add_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_add_z(arg1,(__mpfr_struct const *)arg2,(__mpz_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sub_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_sub_z(arg1,(__mpfr_struct const *)arg2,(__mpz_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1z_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_z_sub(arg1,(__mpz_struct const *)arg2,(__mpfr_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1cmp_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpz_srcptr arg2 = (mpz_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpz_srcptr *)&jarg2; 
  result = (int)mpfr_cmp_z((__mpfr_struct const *)arg1,(__mpz_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg4 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = *(mpfr_srcptr *)&jarg4; 
  arg5 = (mpfr_rnd_t)jarg5; 
  result = (int)mpfr_fma(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,(__mpfr_struct const *)arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fms(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg4 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = *(mpfr_srcptr *)&jarg4; 
  arg5 = (mpfr_rnd_t)jarg5; 
  result = (int)mpfr_fms(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,(__mpfr_struct const *)arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fmma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jint jarg6) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg4 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg5 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = *(mpfr_srcptr *)&jarg4; 
  arg5 = *(mpfr_srcptr *)&jarg5; 
  arg6 = (mpfr_rnd_t)jarg6; 
  result = (int)mpfr_fmma(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,(__mpfr_struct const *)arg4,(__mpfr_struct const *)arg5,arg6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1fmms(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jint jarg6) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg3 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg4 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg5 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  arg3 = *(mpfr_srcptr *)&jarg3; 
  arg4 = *(mpfr_srcptr *)&jarg4; 
  arg5 = *(mpfr_srcptr *)&jarg5; 
  arg6 = (mpfr_rnd_t)jarg6; 
  result = (int)mpfr_fmms(arg1,(__mpfr_struct const *)arg2,(__mpfr_struct const *)arg3,(__mpfr_struct const *)arg4,(__mpfr_struct const *)arg5,arg6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1sum(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_ptr *arg2 = (mpfr_ptr *) 0 ;
  unsigned long arg3 ;
  mpfr_rnd_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_ptr **)&jarg2; 
  arg3 = (unsigned long)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = (int)mpfr_sum(arg1,(__mpfr_struct *const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1dot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  mpfr_ptr *arg2 = (mpfr_ptr *) 0 ;
  mpfr_ptr *arg3 = (mpfr_ptr *) 0 ;
  unsigned long arg4 ;
  mpfr_rnd_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(mpfr_ptr **)&jarg2; 
  arg3 = *(mpfr_ptr **)&jarg3; 
  arg4 = (unsigned long)jarg4; 
  arg5 = (mpfr_rnd_t)jarg5; 
  result = (int)mpfr_dot(arg1,(__mpfr_struct *const *)arg2,(__mpfr_struct *const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1free_1cache(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_free_cache();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1free_1cache2(JNIEnv *jenv, jclass jcls, jint jarg1) {
  mpfr_free_cache_t arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mpfr_free_cache_t)jarg1; 
  mpfr_free_cache2(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1free_1pool(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  mpfr_free_pool();
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1mp_1memory_1cleanup(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)mpfr_mp_memory_cleanup();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1subnormalize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  int arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)mpfr_subnormalize(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1strtofr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  char *arg2 = (char *) 0 ;
  char **arg3 = (char **) 0 ;
  int arg4 ;
  mpfr_rnd_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = *(char ***)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (mpfr_rnd_t)jarg5; 
  result = (int)mpfr_strtofr(arg1,(char const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1round_1nearest_1away_1begin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  __mpfr_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  mpfr_round_nearest_away_begin(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1round_1nearest_1away_1end(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  __mpfr_struct *arg1 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)mpfr_round_nearest_away_end(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mpfr_1custom_1get_1size(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  mpfr_prec_t arg1 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mpfr_prec_t)jarg1; 
  result = mpfr_custom_get_size(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1custom_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  void *arg1 = (void *) 0 ;
  mpfr_prec_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  arg2 = (mpfr_prec_t)jarg2; 
  mpfr_custom_init(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mpfr_1custom_1get_1significand(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (void *)mpfr_custom_get_significand((__mpfr_struct const *)arg1);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1custom_1get_1exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_exp_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (mpfr_exp_t)mpfr_custom_get_exp((__mpfr_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1custom_1move(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(void **)&jarg2; 
  mpfr_custom_move(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpfr_1custom_1init_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4, jlong jarg5) {
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  int arg2 ;
  mpfr_exp_t arg3 ;
  mpfr_prec_t arg4 ;
  void *arg5 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (mpfr_exp_t)jarg3; 
  arg4 = (mpfr_prec_t)jarg4; 
  arg5 = *(void **)&jarg5; 
  mpfr_custom_init_set(arg1,arg2,arg3,arg4,arg5);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1custom_1get_1kind(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  result = (int)mpfr_custom_get_kind((__mpfr_struct const *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpfr_1total_1order_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_srcptr arg1 = (mpfr_srcptr) 0 ;
  mpfr_srcptr arg2 = (mpfr_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_srcptr *)&jarg1; 
  arg2 = *(mpfr_srcptr *)&jarg2; 
  result = (int)mpfr_total_order_p((__mpfr_struct const *)arg1,(__mpfr_struct const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1MPFR_1H_1HAVE_1FILE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpfr_1inp_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jlong jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  int arg3 ;
  mpfr_rnd_t arg4 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(FILE **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mpfr_rnd_t)jarg4; 
  result = __gmpfr_inp_str(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1gmpfr_1out_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  jlong jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  int arg2 ;
  size_t arg3 ;
  mpfr_srcptr arg4 = (mpfr_srcptr) 0 ;
  mpfr_rnd_t arg5 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = *(mpfr_srcptr *)&jarg4; 
  arg5 = (mpfr_rnd_t)jarg5; 
  result = __gmpfr_out_str(arg1,arg2,arg3,(__mpfr_struct const *)arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpfr_1fprintf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)__gmpfr_fprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpfr_1fpif_1export(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  mpfr_ptr arg2 = (mpfr_ptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(mpfr_ptr *)&jarg2; 
  result = (int)__gmpfr_fpif_export(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1gmpfr_1fpif_1import(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpfr_ptr arg1 = (mpfr_ptr) 0 ;
  FILE *arg2 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpfr_ptr *)&jarg1; 
  arg2 = *(FILE **)&jarg2; 
  result = (int)__gmpfr_fpif_import(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1SYS_1PARAM_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1SYS_1TYPES_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1clock_1t_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1clockid_1t_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1time_1t_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1timer_1t_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1STDINT_1INTN_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1BIT_1TYPES_1DEFINED_1_1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1ENDIAN_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1ENDIAN_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1LITTLE_1ENDIAN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1234);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1BIG_1ENDIAN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4321);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1PDP_1ENDIAN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3412);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1ENDIANNESS_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1BYTE_1ORDER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1234);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FLOAT_1WORD_1ORDER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1234);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_LITTLE_1ENDIAN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1234);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_BIG_1ENDIAN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4321);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PDP_1ENDIAN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3412);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_BYTE_1ORDER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1234);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1BYTESWAP_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1bswap_116(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  __uint16_t arg1 ;
  __uint16_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (__uint16_t)jarg1; 
  result = (__uint16_t)__bswap_16(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1bswap_132(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  __uint32_t arg1 ;
  __uint32_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (__uint32_t)jarg1; 
  result = (__uint32_t)__bswap_32(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI__1_1bswap_164(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jobject jresult = 0 ;
  __uint64_t arg1 ;
  __uint64_t result;
  
  (void)jenv;
  (void)jcls;
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg1) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return 0;
    }
    clazz = jenv->GetObjectClass(jarg1);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg1, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg1 = 0;
    if (sz > 0) {
      arg1 = (__uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg1 = (arg1 << 8) | (__uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  result = (__uint64_t)__bswap_64(arg1);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1UINTN_1IDENTITY_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1uint16_1identity(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  __uint16_t arg1 ;
  __uint16_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (__uint16_t)jarg1; 
  result = (__uint16_t)__uint16_identity(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1uint32_1identity(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  __uint32_t arg1 ;
  __uint32_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (__uint32_t)jarg1; 
  result = (__uint32_t)__uint32_identity(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI__1_1uint64_1identity(JNIEnv *jenv, jclass jcls, jobject jarg1) {
  jobject jresult = 0 ;
  __uint64_t arg1 ;
  __uint64_t result;
  
  (void)jenv;
  (void)jcls;
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg1) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return 0;
    }
    clazz = jenv->GetObjectClass(jarg1);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg1, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg1 = 0;
    if (sz > 0) {
      arg1 = (__uint64_t)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg1 = (arg1 << 8) | (__uint64_t)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  result = (__uint64_t)__uint64_identity(arg1);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1SYS_1SELECT_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1sigset_1t_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1sigset_1t_1_1_1val_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __sigset_t *arg1 = (__sigset_t *) 0 ;
  unsigned long *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__sigset_t **)&jarg1; 
  arg2 = *(unsigned long **)&jarg2; 
  {
    size_t ii;
    unsigned long *b = (unsigned long *) arg1->__val;
    for (ii = 0; ii < (size_t)(1024/(8*sizeof(unsigned long))); ii++) b[ii] = *((unsigned long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1sigset_1t_1_1_1val_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __sigset_t *arg1 = (__sigset_t *) 0 ;
  unsigned long *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__sigset_t **)&jarg1; 
  result = (unsigned long *)(unsigned long *) ((arg1)->__val);
  *(unsigned long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1sigset_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __sigset_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__sigset_t *)new __sigset_t();
  *(__sigset_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1sigset_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __sigset_t *arg1 = (__sigset_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__sigset_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1timeval_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_timeval_1tv_1sec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  timeval *arg1 = (timeval *) 0 ;
  __time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(timeval **)&jarg1; 
  arg2 = (__time_t)jarg2; 
  if (arg1) (arg1)->tv_sec = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_timeval_1tv_1sec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  timeval *arg1 = (timeval *) 0 ;
  __time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(timeval **)&jarg1; 
  result = (__time_t) ((arg1)->tv_sec);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_timeval_1tv_1usec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  timeval *arg1 = (timeval *) 0 ;
  __suseconds_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(timeval **)&jarg1; 
  arg2 = (__suseconds_t)jarg2; 
  if (arg1) (arg1)->tv_usec = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_timeval_1tv_1usec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  timeval *arg1 = (timeval *) 0 ;
  __suseconds_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(timeval **)&jarg1; 
  result = (__suseconds_t) ((arg1)->tv_usec);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1timeval(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  timeval *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (timeval *)new timeval();
  *(timeval **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1timeval(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  timeval *arg1 = (timeval *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(timeval **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1STRUCT_1TIMESPEC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_timespec_1tv_1sec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  timespec *arg1 = (timespec *) 0 ;
  __time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(timespec **)&jarg1; 
  arg2 = (__time_t)jarg2; 
  if (arg1) (arg1)->tv_sec = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_timespec_1tv_1sec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  timespec *arg1 = (timespec *) 0 ;
  __time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(timespec **)&jarg1; 
  result = (__time_t) ((arg1)->tv_sec);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_timespec_1tv_1nsec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  timespec *arg1 = (timespec *) 0 ;
  __syscall_slong_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(timespec **)&jarg1; 
  arg2 = (__syscall_slong_t)jarg2; 
  if (arg1) (arg1)->tv_nsec = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_timespec_1tv_1nsec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  timespec *arg1 = (timespec *) 0 ;
  __syscall_slong_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(timespec **)&jarg1; 
  result = (__syscall_slong_t) ((arg1)->tv_nsec);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1timespec(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  timespec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (timespec *)new timespec();
  *(timespec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1timespec(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  timespec *arg1 = (timespec *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(timespec **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fd_1set_1_1_1fds_1bits_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fd_set *arg1 = (fd_set *) 0 ;
  __fd_mask *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fd_set **)&jarg1; 
  arg2 = *(__fd_mask **)&jarg2; 
  {
    size_t ii;
    __fd_mask *b = (__fd_mask *) arg1->__fds_bits;
    for (ii = 0; ii < (size_t)1024/(8*(int) sizeof(__fd_mask)); ii++) b[ii] = *((__fd_mask *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fd_1set_1_1_1fds_1bits_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fd_set *arg1 = (fd_set *) 0 ;
  __fd_mask *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fd_set **)&jarg1; 
  result = (__fd_mask *)(__fd_mask *) ((arg1)->__fds_bits);
  *(__fd_mask **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fd_1set(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fd_set *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fd_set *)new fd_set();
  *(fd_set **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fd_1set(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fd_set *arg1 = (fd_set *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fd_set **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FD_1SETSIZE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1024);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_select(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  jint jresult = 0 ;
  int arg1 ;
  fd_set *arg2 = (fd_set *) 0 ;
  fd_set *arg3 = (fd_set *) 0 ;
  fd_set *arg4 = (fd_set *) 0 ;
  timeval *arg5 = (timeval *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = (int)jarg1; 
  arg2 = *(fd_set **)&jarg2; 
  arg3 = *(fd_set **)&jarg3; 
  arg4 = *(fd_set **)&jarg4; 
  arg5 = *(timeval **)&jarg5; 
  result = (int)select(arg1,arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pselect(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_) {
  jint jresult = 0 ;
  int arg1 ;
  fd_set *arg2 = (fd_set *) 0 ;
  fd_set *arg3 = (fd_set *) 0 ;
  fd_set *arg4 = (fd_set *) 0 ;
  timespec *arg5 = (timespec *) 0 ;
  __sigset_t *arg6 = (__sigset_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  (void)jarg6_;
  arg1 = (int)jarg1; 
  arg2 = *(fd_set **)&jarg2; 
  arg3 = *(fd_set **)&jarg3; 
  arg4 = *(fd_set **)&jarg4; 
  arg5 = *(timespec **)&jarg5; 
  arg6 = *(__sigset_t **)&jarg6; 
  result = (int)pselect(arg1,arg2,arg3,arg4,(timespec const *)arg5,(__sigset_t const *)arg6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1PTHREADTYPES_1COMMON_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1THREAD_1SHARED_1TYPES_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1PTHREADTYPES_1ARCH_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1SIZEOF_1PTHREAD_1MUTEX_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(24);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1SIZEOF_1PTHREAD_1ATTR_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(36);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1SIZEOF_1PTHREAD_1RWLOCK_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(32);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1SIZEOF_1PTHREAD_1BARRIER_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(20);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1SIZEOF_1PTHREAD_1MUTEXATTR_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1SIZEOF_1PTHREAD_1COND_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(48);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1SIZEOF_1PTHREAD_1CONDATTR_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1SIZEOF_1PTHREAD_1RWLOCKATTR_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1SIZEOF_1PTHREAD_1BARRIERATTR_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1list_1t_1_1_1prev_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __pthread_internal_list *arg1 = (__pthread_internal_list *) 0 ;
  __pthread_internal_list *arg2 = (__pthread_internal_list *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__pthread_internal_list **)&jarg1; 
  arg2 = *(__pthread_internal_list **)&jarg2; 
  if (arg1) (arg1)->__prev = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1list_1t_1_1_1prev_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_internal_list *arg1 = (__pthread_internal_list *) 0 ;
  __pthread_internal_list *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_internal_list **)&jarg1; 
  result = (__pthread_internal_list *) ((arg1)->__prev);
  *(__pthread_internal_list **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1list_1t_1_1_1next_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __pthread_internal_list *arg1 = (__pthread_internal_list *) 0 ;
  __pthread_internal_list *arg2 = (__pthread_internal_list *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__pthread_internal_list **)&jarg1; 
  arg2 = *(__pthread_internal_list **)&jarg2; 
  if (arg1) (arg1)->__next = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1list_1t_1_1_1next_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_internal_list *arg1 = (__pthread_internal_list *) 0 ;
  __pthread_internal_list *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_internal_list **)&jarg1; 
  result = (__pthread_internal_list *) ((arg1)->__next);
  *(__pthread_internal_list **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1pthread_1list_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __pthread_internal_list *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__pthread_internal_list *)new __pthread_internal_list();
  *(__pthread_internal_list **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1pthread_1list_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __pthread_internal_list *arg1 = (__pthread_internal_list *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__pthread_internal_list **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1slist_1t_1_1_1next_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __pthread_internal_slist *arg1 = (__pthread_internal_slist *) 0 ;
  __pthread_internal_slist *arg2 = (__pthread_internal_slist *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__pthread_internal_slist **)&jarg1; 
  arg2 = *(__pthread_internal_slist **)&jarg2; 
  if (arg1) (arg1)->__next = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1slist_1t_1_1_1next_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_internal_slist *arg1 = (__pthread_internal_slist *) 0 ;
  __pthread_internal_slist *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_internal_slist **)&jarg1; 
  result = (__pthread_internal_slist *) ((arg1)->__next);
  *(__pthread_internal_slist **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1pthread_1slist_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __pthread_internal_slist *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__pthread_internal_slist *)new __pthread_internal_slist();
  *(__pthread_internal_slist **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1pthread_1slist_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __pthread_internal_slist *arg1 = (__pthread_internal_slist *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__pthread_internal_slist **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1THREAD_1MUTEX_1INTERNAL_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1mutex_1s_1_1_1lock_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __pthread_mutex_s *arg1 = (__pthread_mutex_s *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_mutex_s **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->__lock = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1pthread_1mutex_1s_1_1_1lock_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __pthread_mutex_s *arg1 = (__pthread_mutex_s *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_mutex_s **)&jarg1; 
  result = (int) ((arg1)->__lock);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1mutex_1s_1_1_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_mutex_s *arg1 = (__pthread_mutex_s *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_mutex_s **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->__count = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1mutex_1s_1_1_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_mutex_s *arg1 = (__pthread_mutex_s *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_mutex_s **)&jarg1; 
  result = (unsigned int) ((arg1)->__count);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1mutex_1s_1_1_1owner_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __pthread_mutex_s *arg1 = (__pthread_mutex_s *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_mutex_s **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->__owner = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1pthread_1mutex_1s_1_1_1owner_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __pthread_mutex_s *arg1 = (__pthread_mutex_s *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_mutex_s **)&jarg1; 
  result = (int) ((arg1)->__owner);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1mutex_1s_1_1_1kind_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __pthread_mutex_s *arg1 = (__pthread_mutex_s *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_mutex_s **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->__kind = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1pthread_1mutex_1s_1_1_1kind_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __pthread_mutex_s *arg1 = (__pthread_mutex_s *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_mutex_s **)&jarg1; 
  result = (int) ((arg1)->__kind);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1mutex_1s_1_1_1nusers_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_mutex_s *arg1 = (__pthread_mutex_s *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_mutex_s **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->__nusers = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1mutex_1s_1_1_1nusers_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_mutex_s *arg1 = (__pthread_mutex_s *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_mutex_s **)&jarg1; 
  result = (unsigned int) ((arg1)->__nusers);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1mutex_1s_1_1_1list_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __pthread_mutex_s *arg1 = (__pthread_mutex_s *) 0 ;
  __pthread_slist_t *arg2 = (__pthread_slist_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__pthread_mutex_s **)&jarg1; 
  arg2 = *(__pthread_slist_t **)&jarg2; 
  if (arg1) (arg1)->__list = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1mutex_1s_1_1_1list_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_mutex_s *arg1 = (__pthread_mutex_s *) 0 ;
  __pthread_slist_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_mutex_s **)&jarg1; 
  result = (__pthread_slist_t *)& ((arg1)->__list);
  *(__pthread_slist_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1PTHREAD_1MUTEX_1HAVE_1PREV_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1pthread_1mutex_1s(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __pthread_mutex_s *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__pthread_mutex_s *)new __pthread_mutex_s();
  *(__pthread_mutex_s **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1pthread_1mutex_1s(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __pthread_mutex_s *arg1 = (__pthread_mutex_s *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__pthread_mutex_s **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1readers_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->__readers = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1readers_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  result = (unsigned int) ((arg1)->__readers);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1writers_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->__writers = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1writers_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  result = (unsigned int) ((arg1)->__writers);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1wrphase_1futex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->__wrphase_futex = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1wrphase_1futex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  result = (unsigned int) ((arg1)->__wrphase_futex);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1writers_1futex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->__writers_futex = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1writers_1futex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  result = (unsigned int) ((arg1)->__writers_futex);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1pad3_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->__pad3 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1pad3_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  result = (unsigned int) ((arg1)->__pad3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1pad4_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->__pad4 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1pad4_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  result = (unsigned int) ((arg1)->__pad4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1flags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->__flags = arg2;
}


SWIGEXPORT jshort JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1flags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  result = (unsigned char) ((arg1)->__flags);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1shared_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->__shared = arg2;
}


SWIGEXPORT jshort JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1shared_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  result = (unsigned char) ((arg1)->__shared);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1rwelision_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jbyte jarg2) {
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  signed char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  arg2 = (signed char)jarg2; 
  if (arg1) (arg1)->__rwelision = arg2;
}


SWIGEXPORT jbyte JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1rwelision_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jbyte jresult = 0 ;
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  signed char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  result = (signed char) ((arg1)->__rwelision);
  jresult = (jbyte)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1pad2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jshort jarg2) {
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned char arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  arg2 = (unsigned char)jarg2; 
  if (arg1) (arg1)->__pad2 = arg2;
}


SWIGEXPORT jshort JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1pad2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jshort jresult = 0 ;
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  unsigned char result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  result = (unsigned char) ((arg1)->__pad2);
  jresult = (jshort)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1cur_1writer_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->__cur_writer = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1pthread_1rwlock_1arch_1t_1_1_1cur_1writer_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  result = (int) ((arg1)->__cur_writer);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1pthread_1rwlock_1arch_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __pthread_rwlock_arch_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__pthread_rwlock_arch_t *)new __pthread_rwlock_arch_t();
  *(__pthread_rwlock_arch_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1pthread_1rwlock_1arch_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __pthread_rwlock_arch_t *arg1 = (__pthread_rwlock_arch_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__pthread_rwlock_arch_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1wseq_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned long long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (unsigned long long)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (unsigned long long)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->__wseq = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1wseq_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned long long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  result = (unsigned long long) ((arg1)->__wseq);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1g1_1start_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned long long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (unsigned long long)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (unsigned long long)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->__g1_start = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1g1_1start_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned long long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  result = (unsigned long long) ((arg1)->__g1_start);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1g_1refs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  arg2 = *(unsigned int **)&jarg2; 
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->__g_refs;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1g_1refs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  result = (unsigned int *)(unsigned int *) ((arg1)->__g_refs);
  *(unsigned int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1g_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  arg2 = *(unsigned int **)&jarg2; 
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->__g_size;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1g_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  result = (unsigned int *)(unsigned int *) ((arg1)->__g_size);
  *(unsigned int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1g1_1orig_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->__g1_orig_size = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1g1_1orig_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  result = (unsigned int) ((arg1)->__g1_orig_size);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1wrefs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  if (arg1) (arg1)->__wrefs = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1wrefs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  result = (unsigned int) ((arg1)->__wrefs);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1g_1signals_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  arg2 = *(unsigned int **)&jarg2; 
  {
    size_t ii;
    unsigned int *b = (unsigned int *) arg1->__g_signals;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((unsigned int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1cond_1s_1_1_1g_1signals_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  unsigned int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  result = (unsigned int *)(unsigned int *) ((arg1)->__g_signals);
  *(unsigned int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1pthread_1cond_1s(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __pthread_cond_s *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__pthread_cond_s *)new __pthread_cond_s();
  *(__pthread_cond_s **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1pthread_1cond_1s(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __pthread_cond_s *arg1 = (__pthread_cond_s *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__pthread_cond_s **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1once_1flag_1_1_1data_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __once_flag *arg1 = (__once_flag *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__once_flag **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->__data = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1once_1flag_1_1_1data_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __once_flag *arg1 = (__once_flag *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__once_flag **)&jarg1; 
  result = (int) ((arg1)->__data);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1once_1flag(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __once_flag *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__once_flag *)new __once_flag();
  *(__once_flag **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1once_1flag(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __once_flag *arg1 = (__once_flag *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__once_flag **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1t_1_1_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->__size, (const char *)arg2, 4-1);
      arg1->__size[4-1] = 0;
    } else {
      arg1->__size[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1t_1_1_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  result = (char *)(char *) ((arg1)->__size);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1t_1_1_1align_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->__align = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1t_1_1_1align_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  result = (int) ((arg1)->__align);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1pthread_1mutexattr_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  pthread_mutexattr_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (pthread_mutexattr_t *)new pthread_mutexattr_t();
  *(pthread_mutexattr_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1pthread_1mutexattr_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1condattr_1t_1_1_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  pthread_condattr_t *arg1 = (pthread_condattr_t *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_condattr_t **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->__size, (const char *)arg2, 4-1);
      arg1->__size[4-1] = 0;
    } else {
      arg1->__size[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_pthread_1condattr_1t_1_1_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  pthread_condattr_t *arg1 = (pthread_condattr_t *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_condattr_t **)&jarg1; 
  result = (char *)(char *) ((arg1)->__size);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1condattr_1t_1_1_1align_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  pthread_condattr_t *arg1 = (pthread_condattr_t *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_condattr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->__align = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1condattr_1t_1_1_1align_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_condattr_t *arg1 = (pthread_condattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_condattr_t **)&jarg1; 
  result = (int) ((arg1)->__align);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1pthread_1condattr_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  pthread_condattr_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (pthread_condattr_t *)new pthread_condattr_t();
  *(pthread_condattr_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1pthread_1condattr_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  pthread_condattr_t *arg1 = (pthread_condattr_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_condattr_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1attr_1t_1_1_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->__size, (const char *)arg2, 36-1);
      arg1->__size[36-1] = 0;
    } else {
      arg1->__size[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_pthread_1attr_1t_1_1_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  result = (char *)(char *) ((arg1)->__size);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1attr_1t_1_1_1align_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->__align = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1t_1_1_1align_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  result = (long) ((arg1)->__align);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1pthread_1attr_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  pthread_attr_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (pthread_attr_t *)new pthread_attr_t();
  *(pthread_attr_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1pthread_1attr_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_attr_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1have_1pthread_1attr_1t_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1mutex_1t_1_1_1data_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  __pthread_mutex_s *arg2 = (__pthread_mutex_s *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  arg2 = *(__pthread_mutex_s **)&jarg2; 
  if (arg1) (arg1)->__data = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_pthread_1mutex_1t_1_1_1data_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  __pthread_mutex_s *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  result = (__pthread_mutex_s *)& ((arg1)->__data);
  *(__pthread_mutex_s **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1mutex_1t_1_1_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->__size, (const char *)arg2, 24-1);
      arg1->__size[24-1] = 0;
    } else {
      arg1->__size[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_pthread_1mutex_1t_1_1_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  result = (char *)(char *) ((arg1)->__size);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1mutex_1t_1_1_1align_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->__align = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutex_1t_1_1_1align_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  result = (long) ((arg1)->__align);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1pthread_1mutex_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  pthread_mutex_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (pthread_mutex_t *)new pthread_mutex_t();
  *(pthread_mutex_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1pthread_1mutex_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1cond_1t_1_1_1data_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  pthread_cond_t *arg1 = (pthread_cond_t *) 0 ;
  __pthread_cond_s *arg2 = (__pthread_cond_s *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(pthread_cond_t **)&jarg1; 
  arg2 = *(__pthread_cond_s **)&jarg2; 
  if (arg1) (arg1)->__data = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_pthread_1cond_1t_1_1_1data_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  pthread_cond_t *arg1 = (pthread_cond_t *) 0 ;
  __pthread_cond_s *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_cond_t **)&jarg1; 
  result = (__pthread_cond_s *)& ((arg1)->__data);
  *(__pthread_cond_s **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1cond_1t_1_1_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  pthread_cond_t *arg1 = (pthread_cond_t *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_cond_t **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->__size, (const char *)arg2, 48-1);
      arg1->__size[48-1] = 0;
    } else {
      arg1->__size[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_pthread_1cond_1t_1_1_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  pthread_cond_t *arg1 = (pthread_cond_t *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_cond_t **)&jarg1; 
  result = (char *)(char *) ((arg1)->__size);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1cond_1t_1_1_1align_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  pthread_cond_t *arg1 = (pthread_cond_t *) 0 ;
  long long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_cond_t **)&jarg1; 
  arg2 = (long long)jarg2; 
  if (arg1) (arg1)->__align = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_pthread_1cond_1t_1_1_1align_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  pthread_cond_t *arg1 = (pthread_cond_t *) 0 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_cond_t **)&jarg1; 
  result = (long long) ((arg1)->__align);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1pthread_1cond_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  pthread_cond_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (pthread_cond_t *)new pthread_cond_t();
  *(pthread_cond_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1pthread_1cond_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  pthread_cond_t *arg1 = (pthread_cond_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_cond_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1t_1_1_1data_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  __pthread_rwlock_arch_t *arg2 = (__pthread_rwlock_arch_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  arg2 = *(__pthread_rwlock_arch_t **)&jarg2; 
  if (arg1) (arg1)->__data = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1t_1_1_1data_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  __pthread_rwlock_arch_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  result = (__pthread_rwlock_arch_t *)& ((arg1)->__data);
  *(__pthread_rwlock_arch_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1t_1_1_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->__size, (const char *)arg2, 32-1);
      arg1->__size[32-1] = 0;
    } else {
      arg1->__size[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1t_1_1_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  result = (char *)(char *) ((arg1)->__size);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1t_1_1_1align_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->__align = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1t_1_1_1align_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  result = (long) ((arg1)->__align);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1pthread_1rwlock_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  pthread_rwlock_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (pthread_rwlock_t *)new pthread_rwlock_t();
  *(pthread_rwlock_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1pthread_1rwlock_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1rwlockattr_1t_1_1_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  pthread_rwlockattr_t *arg1 = (pthread_rwlockattr_t *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlockattr_t **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->__size, (const char *)arg2, 8-1);
      arg1->__size[8-1] = 0;
    } else {
      arg1->__size[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_pthread_1rwlockattr_1t_1_1_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  pthread_rwlockattr_t *arg1 = (pthread_rwlockattr_t *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlockattr_t **)&jarg1; 
  result = (char *)(char *) ((arg1)->__size);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1rwlockattr_1t_1_1_1align_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  pthread_rwlockattr_t *arg1 = (pthread_rwlockattr_t *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlockattr_t **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->__align = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlockattr_1t_1_1_1align_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_rwlockattr_t *arg1 = (pthread_rwlockattr_t *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlockattr_t **)&jarg1; 
  result = (long) ((arg1)->__align);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1pthread_1rwlockattr_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  pthread_rwlockattr_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (pthread_rwlockattr_t *)new pthread_rwlockattr_t();
  *(pthread_rwlockattr_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1pthread_1rwlockattr_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  pthread_rwlockattr_t *arg1 = (pthread_rwlockattr_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_rwlockattr_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1barrier_1t_1_1_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  pthread_barrier_t *arg1 = (pthread_barrier_t *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrier_t **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->__size, (const char *)arg2, 20-1);
      arg1->__size[20-1] = 0;
    } else {
      arg1->__size[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_pthread_1barrier_1t_1_1_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  pthread_barrier_t *arg1 = (pthread_barrier_t *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrier_t **)&jarg1; 
  result = (char *)(char *) ((arg1)->__size);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1barrier_1t_1_1_1align_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  pthread_barrier_t *arg1 = (pthread_barrier_t *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrier_t **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->__align = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1barrier_1t_1_1_1align_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_barrier_t *arg1 = (pthread_barrier_t *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrier_t **)&jarg1; 
  result = (long) ((arg1)->__align);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1pthread_1barrier_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  pthread_barrier_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (pthread_barrier_t *)new pthread_barrier_t();
  *(pthread_barrier_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1pthread_1barrier_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  pthread_barrier_t *arg1 = (pthread_barrier_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_barrier_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1barrierattr_1t_1_1_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  pthread_barrierattr_t *arg1 = (pthread_barrierattr_t *) 0 ;
  char *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrierattr_t **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    if(arg2) {
      strncpy((char*)arg1->__size, (const char *)arg2, 4-1);
      arg1->__size[4-1] = 0;
    } else {
      arg1->__size[0] = 0;
    }
  }
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_pthread_1barrierattr_1t_1_1_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  pthread_barrierattr_t *arg1 = (pthread_barrierattr_t *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrierattr_t **)&jarg1; 
  result = (char *)(char *) ((arg1)->__size);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1barrierattr_1t_1_1_1align_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  pthread_barrierattr_t *arg1 = (pthread_barrierattr_t *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrierattr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->__align = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1barrierattr_1t_1_1_1align_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_barrierattr_t *arg1 = (pthread_barrierattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrierattr_t **)&jarg1; 
  result = (int) ((arg1)->__align);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1pthread_1barrierattr_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  pthread_barrierattr_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (pthread_barrierattr_t *)new pthread_barrierattr_t();
  *(pthread_barrierattr_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1pthread_1barrierattr_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  pthread_barrierattr_t *arg1 = (pthread_barrierattr_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_barrierattr_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1BITS_1PER_1LONG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(32);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1fd_1set_1fds_1bits_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __kernel_fd_set *arg1 = (__kernel_fd_set *) 0 ;
  unsigned long *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_fd_set **)&jarg1; 
  arg2 = *(unsigned long **)&jarg2; 
  {
    size_t ii;
    unsigned long *b = (unsigned long *) arg1->fds_bits;
    for (ii = 0; ii < (size_t)1024/(8*sizeof(long)); ii++) b[ii] = *((unsigned long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1kernel_1fd_1set_1fds_1bits_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __kernel_fd_set *arg1 = (__kernel_fd_set *) 0 ;
  unsigned long *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_fd_set **)&jarg1; 
  result = (unsigned long *)(unsigned long *) ((arg1)->fds_bits);
  *(unsigned long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1kernel_1fd_1set(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __kernel_fd_set *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__kernel_fd_set *)new __kernel_fd_set();
  *(__kernel_fd_set **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1kernel_1fd_1set(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __kernel_fd_set *arg1 = (__kernel_fd_set *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__kernel_fd_set **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1fsid_1t_1val_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __kernel_fsid_t *arg1 = (__kernel_fsid_t *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_fsid_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->val;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1kernel_1fsid_1t_1val_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __kernel_fsid_t *arg1 = (__kernel_fsid_t *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_fsid_t **)&jarg1; 
  result = (int *)(int *) ((arg1)->val);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1kernel_1fsid_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __kernel_fsid_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__kernel_fsid_t *)new __kernel_fsid_t();
  *(__kernel_fsid_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1kernel_1fsid_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __kernel_fsid_t *arg1 = (__kernel_fsid_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__kernel_fsid_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1timespec_1tv_1sec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __kernel_timespec *arg1 = (__kernel_timespec *) 0 ;
  __kernel_time64_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_timespec **)&jarg1; 
  arg2 = (__kernel_time64_t)jarg2; 
  if (arg1) (arg1)->tv_sec = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1kernel_1timespec_1tv_1sec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __kernel_timespec *arg1 = (__kernel_timespec *) 0 ;
  __kernel_time64_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_timespec **)&jarg1; 
  result = (__kernel_time64_t) ((arg1)->tv_sec);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1timespec_1tv_1nsec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __kernel_timespec *arg1 = (__kernel_timespec *) 0 ;
  long long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_timespec **)&jarg1; 
  arg2 = (long long)jarg2; 
  if (arg1) (arg1)->tv_nsec = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1kernel_1timespec_1tv_1nsec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __kernel_timespec *arg1 = (__kernel_timespec *) 0 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_timespec **)&jarg1; 
  result = (long long) ((arg1)->tv_nsec);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1kernel_1timespec(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __kernel_timespec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__kernel_timespec *)new __kernel_timespec();
  *(__kernel_timespec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1kernel_1timespec(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __kernel_timespec *arg1 = (__kernel_timespec *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__kernel_timespec **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1itimerspec_1it_1interval_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __kernel_itimerspec *arg1 = (__kernel_itimerspec *) 0 ;
  __kernel_timespec *arg2 = (__kernel_timespec *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__kernel_itimerspec **)&jarg1; 
  arg2 = *(__kernel_timespec **)&jarg2; 
  if (arg1) (arg1)->it_interval = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1kernel_1itimerspec_1it_1interval_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __kernel_itimerspec *arg1 = (__kernel_itimerspec *) 0 ;
  __kernel_timespec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_itimerspec **)&jarg1; 
  result = (__kernel_timespec *)& ((arg1)->it_interval);
  *(__kernel_timespec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1itimerspec_1it_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __kernel_itimerspec *arg1 = (__kernel_itimerspec *) 0 ;
  __kernel_timespec *arg2 = (__kernel_timespec *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__kernel_itimerspec **)&jarg1; 
  arg2 = *(__kernel_timespec **)&jarg2; 
  if (arg1) (arg1)->it_value = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1kernel_1itimerspec_1it_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __kernel_itimerspec *arg1 = (__kernel_itimerspec *) 0 ;
  __kernel_timespec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_itimerspec **)&jarg1; 
  result = (__kernel_timespec *)& ((arg1)->it_value);
  *(__kernel_timespec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1kernel_1itimerspec(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __kernel_itimerspec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__kernel_itimerspec *)new __kernel_itimerspec();
  *(__kernel_itimerspec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1kernel_1itimerspec(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __kernel_itimerspec *arg1 = (__kernel_itimerspec *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__kernel_itimerspec **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1old_1timeval_1tv_1sec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __kernel_old_timeval *arg1 = (__kernel_old_timeval *) 0 ;
  __kernel_long_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_old_timeval **)&jarg1; 
  arg2 = (__kernel_long_t)jarg2; 
  if (arg1) (arg1)->tv_sec = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1kernel_1old_1timeval_1tv_1sec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __kernel_old_timeval *arg1 = (__kernel_old_timeval *) 0 ;
  __kernel_long_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_old_timeval **)&jarg1; 
  result = (__kernel_long_t) ((arg1)->tv_sec);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1old_1timeval_1tv_1usec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __kernel_old_timeval *arg1 = (__kernel_old_timeval *) 0 ;
  __kernel_long_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_old_timeval **)&jarg1; 
  arg2 = (__kernel_long_t)jarg2; 
  if (arg1) (arg1)->tv_usec = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1kernel_1old_1timeval_1tv_1usec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __kernel_old_timeval *arg1 = (__kernel_old_timeval *) 0 ;
  __kernel_long_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_old_timeval **)&jarg1; 
  result = (__kernel_long_t) ((arg1)->tv_usec);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1kernel_1old_1timeval(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __kernel_old_timeval *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__kernel_old_timeval *)new __kernel_old_timeval();
  *(__kernel_old_timeval **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1kernel_1old_1timeval(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __kernel_old_timeval *arg1 = (__kernel_old_timeval *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__kernel_old_timeval **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1old_1timespec_1tv_1sec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __kernel_old_timespec *arg1 = (__kernel_old_timespec *) 0 ;
  __kernel_old_time_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_old_timespec **)&jarg1; 
  arg2 = (__kernel_old_time_t)jarg2; 
  if (arg1) (arg1)->tv_sec = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1kernel_1old_1timespec_1tv_1sec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __kernel_old_timespec *arg1 = (__kernel_old_timespec *) 0 ;
  __kernel_old_time_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_old_timespec **)&jarg1; 
  result = (__kernel_old_time_t) ((arg1)->tv_sec);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1old_1timespec_1tv_1nsec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __kernel_old_timespec *arg1 = (__kernel_old_timespec *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_old_timespec **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->tv_nsec = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1kernel_1old_1timespec_1tv_1nsec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __kernel_old_timespec *arg1 = (__kernel_old_timespec *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_old_timespec **)&jarg1; 
  result = (long) ((arg1)->tv_nsec);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1kernel_1old_1timespec(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __kernel_old_timespec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__kernel_old_timespec *)new __kernel_old_timespec();
  *(__kernel_old_timespec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1kernel_1old_1timespec(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __kernel_old_timespec *arg1 = (__kernel_old_timespec *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__kernel_old_timespec **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1old_1itimerval_1it_1interval_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __kernel_old_itimerval *arg1 = (__kernel_old_itimerval *) 0 ;
  __kernel_old_timeval *arg2 = (__kernel_old_timeval *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__kernel_old_itimerval **)&jarg1; 
  arg2 = *(__kernel_old_timeval **)&jarg2; 
  if (arg1) (arg1)->it_interval = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1kernel_1old_1itimerval_1it_1interval_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __kernel_old_itimerval *arg1 = (__kernel_old_itimerval *) 0 ;
  __kernel_old_timeval *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_old_itimerval **)&jarg1; 
  result = (__kernel_old_timeval *)& ((arg1)->it_interval);
  *(__kernel_old_timeval **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1old_1itimerval_1it_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __kernel_old_itimerval *arg1 = (__kernel_old_itimerval *) 0 ;
  __kernel_old_timeval *arg2 = (__kernel_old_timeval *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__kernel_old_itimerval **)&jarg1; 
  arg2 = *(__kernel_old_timeval **)&jarg2; 
  if (arg1) (arg1)->it_value = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1kernel_1old_1itimerval_1it_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __kernel_old_itimerval *arg1 = (__kernel_old_itimerval *) 0 ;
  __kernel_old_timeval *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_old_itimerval **)&jarg1; 
  result = (__kernel_old_timeval *)& ((arg1)->it_value);
  *(__kernel_old_timeval **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1kernel_1old_1itimerval(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __kernel_old_itimerval *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__kernel_old_itimerval *)new __kernel_old_itimerval();
  *(__kernel_old_itimerval **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1kernel_1old_1itimerval(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __kernel_old_itimerval *arg1 = (__kernel_old_itimerval *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__kernel_old_itimerval **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1sock_1timeval_1tv_1sec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __kernel_sock_timeval *arg1 = (__kernel_sock_timeval *) 0 ;
  __s64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_sock_timeval **)&jarg1; 
  arg2 = (__s64)jarg2; 
  if (arg1) (arg1)->tv_sec = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1kernel_1sock_1timeval_1tv_1sec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __kernel_sock_timeval *arg1 = (__kernel_sock_timeval *) 0 ;
  __s64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_sock_timeval **)&jarg1; 
  result = (__s64) ((arg1)->tv_sec);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1kernel_1sock_1timeval_1tv_1usec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __kernel_sock_timeval *arg1 = (__kernel_sock_timeval *) 0 ;
  __s64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_sock_timeval **)&jarg1; 
  arg2 = (__s64)jarg2; 
  if (arg1) (arg1)->tv_usec = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1kernel_1sock_1timeval_1tv_1usec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __kernel_sock_timeval *arg1 = (__kernel_sock_timeval *) 0 ;
  __s64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__kernel_sock_timeval **)&jarg1; 
  result = (__s64) ((arg1)->tv_usec);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1kernel_1sock_1timeval(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __kernel_sock_timeval *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__kernel_sock_timeval *)new __kernel_sock_timeval();
  *(__kernel_sock_timeval **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1kernel_1sock_1timeval(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __kernel_sock_timeval *arg1 = (__kernel_sock_timeval *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__kernel_sock_timeval **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_itimerspec_1it_1interval_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  itimerspec *arg1 = (itimerspec *) 0 ;
  timespec *arg2 = (timespec *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(itimerspec **)&jarg1; 
  arg2 = *(timespec **)&jarg2; 
  if (arg1) (arg1)->it_interval = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_itimerspec_1it_1interval_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  itimerspec *arg1 = (itimerspec *) 0 ;
  timespec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(itimerspec **)&jarg1; 
  result = (timespec *)& ((arg1)->it_interval);
  *(timespec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_itimerspec_1it_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  itimerspec *arg1 = (itimerspec *) 0 ;
  timespec *arg2 = (timespec *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(itimerspec **)&jarg1; 
  arg2 = *(timespec **)&jarg2; 
  if (arg1) (arg1)->it_value = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_itimerspec_1it_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  itimerspec *arg1 = (itimerspec *) 0 ;
  timespec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(itimerspec **)&jarg1; 
  result = (timespec *)& ((arg1)->it_value);
  *(timespec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1itimerspec(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  itimerspec *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (itimerspec *)new itimerspec();
  *(itimerspec **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1itimerspec(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  itimerspec *arg1 = (itimerspec *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(itimerspec **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_itimerval_1it_1interval_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  itimerval *arg1 = (itimerval *) 0 ;
  timeval *arg2 = (timeval *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(itimerval **)&jarg1; 
  arg2 = *(timeval **)&jarg2; 
  if (arg1) (arg1)->it_interval = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_itimerval_1it_1interval_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  itimerval *arg1 = (itimerval *) 0 ;
  timeval *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(itimerval **)&jarg1; 
  result = (timeval *)& ((arg1)->it_interval);
  *(timeval **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_itimerval_1it_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  itimerval *arg1 = (itimerval *) 0 ;
  timeval *arg2 = (timeval *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(itimerval **)&jarg1; 
  arg2 = *(timeval **)&jarg2; 
  if (arg1) (arg1)->it_value = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_itimerval_1it_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  itimerval *arg1 = (itimerval *) 0 ;
  timeval *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(itimerval **)&jarg1; 
  result = (timeval *)& ((arg1)->it_value);
  *(timeval **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1itimerval(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  itimerval *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (itimerval *)new itimerval();
  *(itimerval **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1itimerval(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  itimerval *arg1 = (itimerval *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(itimerval **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_timezone_1tz_1minuteswest_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  timezone *arg1 = (timezone *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(timezone **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->tz_minuteswest = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_timezone_1tz_1minuteswest_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  timezone *arg1 = (timezone *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(timezone **)&jarg1; 
  result = (int) ((arg1)->tz_minuteswest);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_timezone_1tz_1dsttime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  timezone *arg1 = (timezone *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(timezone **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->tz_dsttime = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_timezone_1tz_1dsttime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  timezone *arg1 = (timezone *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(timezone **)&jarg1; 
  result = (int) ((arg1)->tz_dsttime);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1timezone(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  timezone *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (timezone *)new timezone();
  *(timezone **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1timezone(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  timezone *arg1 = (timezone *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(timezone **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ITIMER_1REAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ITIMER_1VIRTUAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ITIMER_1PROF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCK_1REALTIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCK_1MONOTONIC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCK_1PROCESS_1CPUTIME_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCK_1THREAD_1CPUTIME_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCK_1MONOTONIC_1RAW_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCK_1REALTIME_1COARSE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCK_1MONOTONIC_1COARSE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCK_1BOOTTIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCK_1REALTIME_1ALARM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCK_1BOOTTIME_1ALARM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(9);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCK_1SGI_1CYCLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(10);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCK_1TAI_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(11);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MAX_1CLOCKS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(16);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCKS_1MASK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((0|1));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLOCKS_1MONO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_TIMER_1ABSTIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x01);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NSIG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(32);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGHUP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGINT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGQUIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGILL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGTRAP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGABRT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGIOT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGBUS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGFPE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGKILL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(9);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGUSR1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(10);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGSEGV_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(11);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGUSR2_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(12);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGPIPE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(13);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGALRM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(14);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGTERM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(15);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGSTKFLT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(16);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGCHLD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(17);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGCONT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(18);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGSTOP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(19);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGTSTP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(20);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGTTIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(21);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGTTOU_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(22);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGURG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(23);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGXCPU_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(24);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGXFSZ_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(25);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGVTALRM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(26);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGPROF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(27);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGWINCH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(28);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGIO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(29);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGPOLL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(29);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGPWR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(30);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGSYS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(31);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGUNUSED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(31);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGRTMIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(32);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_SA_1NOCLDSTOP_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)(0x00000001u);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_SA_1NOCLDWAIT_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)(0x00000002u);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_SA_1SIGINFO_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)(0x00000004u);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_SA_1ONSTACK_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)(0x08000000u);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_SA_1RESTART_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)(0x10000000u);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_SA_1NODEFER_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)(0x40000000u);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_SA_1RESETHAND_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)(0x80000000u);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_SA_1NOMASK_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)(0x40000000u);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_SA_1ONESHOT_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)(0x80000000u);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SA_1RESTORER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x04000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MINSIGSTKSZ_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2048);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGSTKSZ_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(8192);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIG_1BLOCK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIG_1UNBLOCK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIG_1SETMASK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_sigaction_1sa_1handler_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  sigaction *arg1 = (sigaction *) 0 ;
  __sighandler_t arg2 = (__sighandler_t) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigaction **)&jarg1; 
  arg2 = *(__sighandler_t *)&jarg2; 
  if (arg1) (arg1)->sa_handler = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_sigaction_1sa_1handler_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  sigaction *arg1 = (sigaction *) 0 ;
  __sighandler_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigaction **)&jarg1; 
  result = (__sighandler_t) ((arg1)->sa_handler);
  *(__sighandler_t *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_sigaction_1sa_1flags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  sigaction *arg1 = (sigaction *) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigaction **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  if (arg1) (arg1)->sa_flags = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_sigaction_1sa_1flags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  sigaction *arg1 = (sigaction *) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigaction **)&jarg1; 
  result = (unsigned long) ((arg1)->sa_flags);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_sigaction_1sa_1restorer_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  sigaction *arg1 = (sigaction *) 0 ;
  __sigrestore_t arg2 = (__sigrestore_t) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigaction **)&jarg1; 
  arg2 = *(__sigrestore_t *)&jarg2; 
  if (arg1) (arg1)->sa_restorer = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_sigaction_1sa_1restorer_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  sigaction *arg1 = (sigaction *) 0 ;
  __sigrestore_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigaction **)&jarg1; 
  result = (__sigrestore_t) ((arg1)->sa_restorer);
  *(__sigrestore_t *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_sigaction_1sa_1mask_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  sigaction *arg1 = (sigaction *) 0 ;
  sigset_t *arg2 = (sigset_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(sigaction **)&jarg1; 
  arg2 = *(sigset_t **)&jarg2; 
  if (arg1) (arg1)->sa_mask = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_sigaction_1sa_1mask_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  sigaction *arg1 = (sigaction *) 0 ;
  sigset_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigaction **)&jarg1; 
  result = (sigset_t *)& ((arg1)->sa_mask);
  *(sigset_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1sigaction(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  sigaction *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (sigaction *)new sigaction();
  *(sigaction **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1sigaction(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  sigaction *arg1 = (sigaction *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(sigaction **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_stack_1t_1ss_1sp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  sigaltstack *arg1 = (sigaltstack *) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigaltstack **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  if (arg1) (arg1)->ss_sp = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_stack_1t_1ss_1sp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  sigaltstack *arg1 = (sigaltstack *) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigaltstack **)&jarg1; 
  result = (void *) ((arg1)->ss_sp);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_stack_1t_1ss_1flags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  sigaltstack *arg1 = (sigaltstack *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigaltstack **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->ss_flags = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_stack_1t_1ss_1flags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  sigaltstack *arg1 = (sigaltstack *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigaltstack **)&jarg1; 
  result = (int) ((arg1)->ss_flags);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_stack_1t_1ss_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  sigaltstack *arg1 = (sigaltstack *) 0 ;
  size_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigaltstack **)&jarg1; 
  arg2 = (size_t)jarg2; 
  if (arg1) (arg1)->ss_size = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_stack_1t_1ss_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  sigaltstack *arg1 = (sigaltstack *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigaltstack **)&jarg1; 
  result =  ((arg1)->ss_size);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1stack_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  sigaltstack *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (sigaltstack *)new sigaltstack();
  *(sigaltstack **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1stack_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  sigaltstack *arg1 = (sigaltstack *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(sigaltstack **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_sigval_1t_1sival_1int_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  sigval *arg1 = (sigval *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigval **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->sival_int = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_sigval_1t_1sival_1int_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  sigval *arg1 = (sigval *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigval **)&jarg1; 
  result = (int) ((arg1)->sival_int);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_sigval_1t_1sival_1ptr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  sigval *arg1 = (sigval *) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigval **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  if (arg1) (arg1)->sival_ptr = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_sigval_1t_1sival_1ptr_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  sigval *arg1 = (sigval *) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigval **)&jarg1; 
  result = (void *) ((arg1)->sival_ptr);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1sigval_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  sigval *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (sigval *)new sigval();
  *(sigval **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1sigval_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  sigval *arg1 = (sigval *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(sigval **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SI_1MAX_1SIZE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(128);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1sifields(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __sifields *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__sifields *)new __sifields();
  *(__sifields **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1sifields(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __sifields *arg1 = (__sifields *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__sifields **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_siginfo_1t_1si_1signo_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  siginfo *arg1 = (siginfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(siginfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->si_signo = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_siginfo_1t_1si_1signo_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  siginfo *arg1 = (siginfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(siginfo **)&jarg1; 
  result = (int) ((arg1)->si_signo);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_siginfo_1t_1si_1errno_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  siginfo *arg1 = (siginfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(siginfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->si_errno = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_siginfo_1t_1si_1errno_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  siginfo *arg1 = (siginfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(siginfo **)&jarg1; 
  result = (int) ((arg1)->si_errno);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_siginfo_1t_1si_1code_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  siginfo *arg1 = (siginfo *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(siginfo **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->si_code = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_siginfo_1t_1si_1code_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  siginfo *arg1 = (siginfo *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(siginfo **)&jarg1; 
  result = (int) ((arg1)->si_code);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_siginfo_1t_1_1sifields_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  siginfo *arg1 = (siginfo *) 0 ;
  __sifields *arg2 = (__sifields *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(siginfo **)&jarg1; 
  arg2 = *(__sifields **)&jarg2; 
  if (arg1) (arg1)->_sifields = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_siginfo_1t_1_1sifields_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  siginfo *arg1 = (siginfo *) 0 ;
  __sifields *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(siginfo **)&jarg1; 
  result = (__sifields *)& ((arg1)->_sifields);
  *(__sifields **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_siginfo_1t_1_1si_1pad_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  siginfo *arg1 = (siginfo *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(siginfo **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->_si_pad;
    for (ii = 0; ii < (size_t)128/sizeof(int); ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_siginfo_1t_1_1si_1pad_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  siginfo *arg1 = (siginfo *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(siginfo **)&jarg1; 
  result = (int *)(int *) ((arg1)->_si_pad);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1siginfo_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  siginfo *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (siginfo *)new siginfo();
  *(siginfo **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1siginfo_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  siginfo *arg1 = (siginfo *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(siginfo **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SI_1USER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SI_1KERNEL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x80);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SI_1QUEUE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(-1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SI_1TIMER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(-2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SI_1MESGQ_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(-3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SI_1ASYNCIO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(-4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SI_1SIGIO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(-5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SI_1TKILL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(-6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SI_1DETHREAD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(-7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SI_1ASYNCNL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(-60);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ILL_1ILLOPC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ILL_1ILLOPN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ILL_1ILLADR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ILL_1ILLTRP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ILL_1PRVOPC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ILL_1PRVREG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ILL_1COPROC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ILL_1BADSTK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ILL_1BADIADDR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(9);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1ILL_1BREAK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(10);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1ILL_1BNDMOD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(11);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NSIGILL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(11);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FPE_1INTDIV_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FPE_1INTOVF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FPE_1FLTDIV_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FPE_1FLTOVF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FPE_1FLTUND_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FPE_1FLTRES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FPE_1FLTINV_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FPE_1FLTSUB_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FPE_1DECOVF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(9);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FPE_1DECDIV_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(10);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FPE_1DECERR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(11);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FPE_1INVASC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(12);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FPE_1INVDEC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(13);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FPE_1FLTUNK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(14);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FPE_1CONDTRAP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(15);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NSIGFPE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(15);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SEGV_1MAPERR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SEGV_1ACCERR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SEGV_1BNDERR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SEGV_1PKUERR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SEGV_1ACCADI_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SEGV_1ADIDERR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SEGV_1ADIPERR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NSIGSEGV_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_BUS_1ADRALN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_BUS_1ADRERR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_BUS_1OBJERR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_BUS_1MCEERR_1AR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_BUS_1MCEERR_1AO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NSIGBUS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_TRAP_1BRKPT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_TRAP_1TRACE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_TRAP_1BRANCH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_TRAP_1HWBKPT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_TRAP_1UNK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NSIGTRAP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLD_1EXITED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLD_1KILLED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLD_1DUMPED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLD_1TRAPPED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLD_1STOPPED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLD_1CONTINUED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NSIGCHLD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_POLL_1IN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_POLL_1OUT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_POLL_1MSG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_POLL_1ERR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_POLL_1PRI_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_POLL_1HUP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NSIGPOLL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SYS_1SECCOMP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NSIGSYS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_EMT_1TAGOVF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NSIGEMT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGEV_1SIGNAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGEV_1NONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGEV_1THREAD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGEV_1THREAD_1ID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SIGEV_1MAX_1SIZE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(64);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_sigevent_1t_1sigev_1value_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  sigevent *arg1 = (sigevent *) 0 ;
  sigval_t *arg2 = (sigval_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(sigevent **)&jarg1; 
  arg2 = *(sigval_t **)&jarg2; 
  if (arg1) (arg1)->sigev_value = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_sigevent_1t_1sigev_1value_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  sigevent *arg1 = (sigevent *) 0 ;
  sigval_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigevent **)&jarg1; 
  result = (sigval_t *)& ((arg1)->sigev_value);
  *(sigval_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_sigevent_1t_1sigev_1signo_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  sigevent *arg1 = (sigevent *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigevent **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->sigev_signo = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_sigevent_1t_1sigev_1signo_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  sigevent *arg1 = (sigevent *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigevent **)&jarg1; 
  result = (int) ((arg1)->sigev_signo);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_sigevent_1t_1sigev_1notify_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  sigevent *arg1 = (sigevent *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigevent **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->sigev_notify = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_sigevent_1t_1sigev_1notify_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  sigevent *arg1 = (sigevent *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(sigevent **)&jarg1; 
  result = (int) ((arg1)->sigev_notify);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1sigevent_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  sigevent *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (sigevent *)new sigevent();
  *(sigevent **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1sigevent_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  sigevent *arg1 = (sigevent *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(sigevent **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SS_1ONSTACK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SS_1DISABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_SS_1AUTODISARM_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)((1U << 31));
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_SS_1FLAG_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int)((1U << 31));
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_HZ_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(100);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_EXEC_1PAGESIZE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4096);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NOGROUP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((-1));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MAXHOSTNAMELEN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(64);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MAXSYMLINKS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(20);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NOFILE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(256);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NCARGS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(131072);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NGROUPS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(65536);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CANBSIZ_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(255);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MAXPATHLEN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4096);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DEV_1BSIZE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(512);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1STDLIB_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_WNOHANG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_WUNTRACED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_WSTOPPED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_WEXITED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_WCONTINUED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_WNOWAIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x01000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1WNOTHREAD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x20000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1WALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x40000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1WCLONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x80000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1ENUM_1IDTYPE_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1W_1CONTINUED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0xffff);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1WCOREFLAG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x80);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_div_1t_1quot_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  div_t *arg1 = (div_t *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(div_t **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->quot = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_div_1t_1quot_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  div_t *arg1 = (div_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(div_t **)&jarg1; 
  result = (int) ((arg1)->quot);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_div_1t_1rem_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  div_t *arg1 = (div_t *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(div_t **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->rem = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_div_1t_1rem_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  div_t *arg1 = (div_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(div_t **)&jarg1; 
  result = (int) ((arg1)->rem);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1div_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  div_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (div_t *)new div_t();
  *(div_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1div_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  div_t *arg1 = (div_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(div_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ldiv_1t_1quot_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ldiv_t *arg1 = (ldiv_t *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ldiv_t **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->quot = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ldiv_1t_1quot_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ldiv_t *arg1 = (ldiv_t *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ldiv_t **)&jarg1; 
  result = (long) ((arg1)->quot);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ldiv_1t_1rem_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  ldiv_t *arg1 = (ldiv_t *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ldiv_t **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->rem = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ldiv_1t_1rem_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  ldiv_t *arg1 = (ldiv_t *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ldiv_t **)&jarg1; 
  result = (long) ((arg1)->rem);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1ldiv_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ldiv_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ldiv_t *)new ldiv_t();
  *(ldiv_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1ldiv_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ldiv_t *arg1 = (ldiv_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ldiv_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1ldiv_1t_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_lldiv_1t_1quot_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  lldiv_t *arg1 = (lldiv_t *) 0 ;
  long long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(lldiv_t **)&jarg1; 
  arg2 = (long long)jarg2; 
  if (arg1) (arg1)->quot = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_lldiv_1t_1quot_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  lldiv_t *arg1 = (lldiv_t *) 0 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(lldiv_t **)&jarg1; 
  result = (long long) ((arg1)->quot);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_lldiv_1t_1rem_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  lldiv_t *arg1 = (lldiv_t *) 0 ;
  long long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(lldiv_t **)&jarg1; 
  arg2 = (long long)jarg2; 
  if (arg1) (arg1)->rem = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_lldiv_1t_1rem_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  lldiv_t *arg1 = (lldiv_t *) 0 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(lldiv_t **)&jarg1; 
  result = (long long) ((arg1)->rem);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1lldiv_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  lldiv_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (lldiv_t *)new lldiv_t();
  *(lldiv_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1lldiv_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  lldiv_t *arg1 = (lldiv_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(lldiv_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1lldiv_1t_1defined_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_RAND_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2147483647);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_EXIT_1FAILURE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_EXIT_1SUCCESS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1ctype_1get_1mb_1cur_1max(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  result = __ctype_get_mb_cur_max();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_atof(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  char *arg1 = (char *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (double)atof((char const *)arg1);
  jresult = (jdouble)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_atoi(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)atoi((char const *)arg1);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_atol(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (long)atol((char const *)arg1);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_atoll(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (long long)atoll((char const *)arg1);
  jresult = (jlong)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_strtod(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  jdouble jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char **arg2 = (char **) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(char ***)&jarg2; 
  result = (double)strtod((char const *)arg1,arg2);
  jresult = (jdouble)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jfloat JNICALL Java_arblib_arblibJNI_strtof(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  jfloat jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char **arg2 = (char **) 0 ;
  float result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(char ***)&jarg2; 
  result = (float)strtof((char const *)arg1,arg2);
  jresult = (jfloat)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_strtold(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char **arg2 = (char **) 0 ;
  long double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(char ***)&jarg2; 
  result = (long double)strtold((char const *)arg1,arg2);
  *(long double **)&jresult = new long double((const long double &)result); 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_strtol(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char **arg2 = (char **) 0 ;
  int arg3 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(char ***)&jarg2; 
  arg3 = (int)jarg3; 
  result = (long)strtol((char const *)arg1,arg2,arg3);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_strtoul(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char **arg2 = (char **) 0 ;
  int arg3 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(char ***)&jarg2; 
  arg3 = (int)jarg3; 
  result = (unsigned long)strtoul((char const *)arg1,arg2,arg3);
  jresult = (jlong)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_strtoq(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char **arg2 = (char **) 0 ;
  int arg3 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(char ***)&jarg2; 
  arg3 = (int)jarg3; 
  result = (long long)strtoq((char const *)arg1,arg2,arg3);
  jresult = (jlong)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_strtouq(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jint jarg3) {
  jobject jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char **arg2 = (char **) 0 ;
  int arg3 ;
  unsigned long long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(char ***)&jarg2; 
  arg3 = (int)jarg3; 
  result = (unsigned long long)strtouq((char const *)arg1,arg2,arg3);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_strtoll(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char **arg2 = (char **) 0 ;
  int arg3 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(char ***)&jarg2; 
  arg3 = (int)jarg3; 
  result = (long long)strtoll((char const *)arg1,arg2,arg3);
  jresult = (jlong)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_strtoull(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jint jarg3) {
  jobject jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char **arg2 = (char **) 0 ;
  int arg3 ;
  unsigned long long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(char ***)&jarg2; 
  arg3 = (int)jarg3; 
  result = (unsigned long long)strtoull((char const *)arg1,arg2,arg3);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_l64a(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jstring jresult = 0 ;
  long arg1 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (char *)l64a(arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_a64l(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (long)a64l((char const *)arg1);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_random(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)random();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_srandom(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  unsigned int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (unsigned int)jarg1; 
  srandom(arg1);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_initstate(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3) {
  jstring jresult = 0 ;
  unsigned int arg1 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (unsigned int)jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (size_t)jarg3; 
  result = (char *)initstate(arg1,arg2,arg3);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_setstate(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (char *)setstate(arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_random_1data_1fptr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  random_data *arg1 = (random_data *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  arg2 = *(int32_t **)&jarg2; 
  if (arg1) (arg1)->fptr = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_random_1data_1fptr_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  random_data *arg1 = (random_data *) 0 ;
  int32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  result = (int32_t *) ((arg1)->fptr);
  *(int32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_random_1data_1rptr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  random_data *arg1 = (random_data *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  arg2 = *(int32_t **)&jarg2; 
  if (arg1) (arg1)->rptr = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_random_1data_1rptr_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  random_data *arg1 = (random_data *) 0 ;
  int32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  result = (int32_t *) ((arg1)->rptr);
  *(int32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_random_1data_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  random_data *arg1 = (random_data *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  arg2 = *(int32_t **)&jarg2; 
  if (arg1) (arg1)->state = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_random_1data_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  random_data *arg1 = (random_data *) 0 ;
  int32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  result = (int32_t *) ((arg1)->state);
  *(int32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_random_1data_1rand_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  random_data *arg1 = (random_data *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->rand_type = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_random_1data_1rand_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  random_data *arg1 = (random_data *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  result = (int) ((arg1)->rand_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_random_1data_1rand_1deg_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  random_data *arg1 = (random_data *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->rand_deg = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_random_1data_1rand_1deg_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  random_data *arg1 = (random_data *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  result = (int) ((arg1)->rand_deg);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_random_1data_1rand_1sep_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  random_data *arg1 = (random_data *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->rand_sep = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_random_1data_1rand_1sep_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  random_data *arg1 = (random_data *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  result = (int) ((arg1)->rand_sep);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_random_1data_1end_1ptr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  random_data *arg1 = (random_data *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  arg2 = *(int32_t **)&jarg2; 
  if (arg1) (arg1)->end_ptr = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_random_1data_1end_1ptr_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  random_data *arg1 = (random_data *) 0 ;
  int32_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  result = (int32_t *) ((arg1)->end_ptr);
  *(int32_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1random_1data(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  random_data *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (random_data *)new random_data();
  *(random_data **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1random_1data(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  random_data *arg1 = (random_data *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(random_data **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_random_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  random_data *arg1 = (random_data *) 0 ;
  int32_t *arg2 = (int32_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(random_data **)&jarg1; 
  arg2 = *(int32_t **)&jarg2; 
  result = (int)random_r(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_srandom_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  unsigned int arg1 ;
  random_data *arg2 = (random_data *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (unsigned int)jarg1; 
  arg2 = *(random_data **)&jarg2; 
  result = (int)srandom_r(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_initstate_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  unsigned int arg1 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  random_data *arg4 = (random_data *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = (unsigned int)jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (size_t)jarg3; 
  arg4 = *(random_data **)&jarg4; 
  result = (int)initstate_r(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_setstate_1r(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  random_data *arg2 = (random_data *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(random_data **)&jarg2; 
  result = (int)setstate_r(arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_rand(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)rand();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_srand(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  unsigned int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (unsigned int)jarg1; 
  srand(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_rand_1r(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  unsigned int *arg1 = (unsigned int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(unsigned int **)&jarg1; 
  result = (int)rand_r(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_drand48(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)drand48();
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_erand48(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jdouble jresult = 0 ;
  unsigned short *arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(unsigned short **)&jarg1; 
  result = (double)erand48(arg1);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_lrand48(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)lrand48();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nrand48(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  unsigned short *arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(unsigned short **)&jarg1; 
  result = (long)nrand48(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mrand48(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)mrand48();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_jrand48(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  unsigned short *arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(unsigned short **)&jarg1; 
  result = (long)jrand48(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_srand48(JNIEnv *jenv, jclass jcls, jint jarg1) {
  long arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  srand48(arg1);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_seed48(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  unsigned short *arg1 ;
  unsigned short *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(unsigned short **)&jarg1; 
  result = (unsigned short *)seed48(arg1);
  *(unsigned short **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_lcong48(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  unsigned short *arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(unsigned short **)&jarg1; 
  lcong48(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_drand48_1data_1_1_1x_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  drand48_data *arg1 = (drand48_data *) 0 ;
  unsigned short *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(drand48_data **)&jarg1; 
  arg2 = *(unsigned short **)&jarg2; 
  {
    size_t ii;
    unsigned short *b = (unsigned short *) arg1->__x;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned short *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_drand48_1data_1_1_1x_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  drand48_data *arg1 = (drand48_data *) 0 ;
  unsigned short *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(drand48_data **)&jarg1; 
  result = (unsigned short *)(unsigned short *) ((arg1)->__x);
  *(unsigned short **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_drand48_1data_1_1_1old_1x_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  drand48_data *arg1 = (drand48_data *) 0 ;
  unsigned short *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(drand48_data **)&jarg1; 
  arg2 = *(unsigned short **)&jarg2; 
  {
    size_t ii;
    unsigned short *b = (unsigned short *) arg1->__old_x;
    for (ii = 0; ii < (size_t)3; ii++) b[ii] = *((unsigned short *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_drand48_1data_1_1_1old_1x_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  drand48_data *arg1 = (drand48_data *) 0 ;
  unsigned short *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(drand48_data **)&jarg1; 
  result = (unsigned short *)(unsigned short *) ((arg1)->__old_x);
  *(unsigned short **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_drand48_1data_1_1_1c_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  drand48_data *arg1 = (drand48_data *) 0 ;
  unsigned short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(drand48_data **)&jarg1; 
  arg2 = (unsigned short)jarg2; 
  if (arg1) (arg1)->__c = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_drand48_1data_1_1_1c_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  drand48_data *arg1 = (drand48_data *) 0 ;
  unsigned short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(drand48_data **)&jarg1; 
  result = (unsigned short) ((arg1)->__c);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_drand48_1data_1_1_1init_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  drand48_data *arg1 = (drand48_data *) 0 ;
  unsigned short arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(drand48_data **)&jarg1; 
  arg2 = (unsigned short)jarg2; 
  if (arg1) (arg1)->__init = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_drand48_1data_1_1_1init_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  drand48_data *arg1 = (drand48_data *) 0 ;
  unsigned short result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(drand48_data **)&jarg1; 
  result = (unsigned short) ((arg1)->__init);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_drand48_1data_1_1_1a_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  drand48_data *arg1 = (drand48_data *) 0 ;
  unsigned long long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(drand48_data **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (unsigned long long)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (unsigned long long)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->__a = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_drand48_1data_1_1_1a_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  drand48_data *arg1 = (drand48_data *) 0 ;
  unsigned long long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(drand48_data **)&jarg1; 
  result = (unsigned long long) ((arg1)->__a);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1drand48_1data(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  drand48_data *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (drand48_data *)new drand48_data();
  *(drand48_data **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1drand48_1data(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  drand48_data *arg1 = (drand48_data *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(drand48_data **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_drand48_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  drand48_data *arg1 = (drand48_data *) 0 ;
  double *arg2 = (double *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(drand48_data **)&jarg1; 
  arg2 = *(double **)&jarg2; 
  result = (int)drand48_r(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_erand48_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  unsigned short *arg1 ;
  drand48_data *arg2 = (drand48_data *) 0 ;
  double *arg3 = (double *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(unsigned short **)&jarg1; 
  arg2 = *(drand48_data **)&jarg2; 
  arg3 = *(double **)&jarg3; 
  result = (int)erand48_r(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_lrand48_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  drand48_data *arg1 = (drand48_data *) 0 ;
  long *arg2 = (long *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(drand48_data **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)lrand48_r(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nrand48_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  unsigned short *arg1 ;
  drand48_data *arg2 = (drand48_data *) 0 ;
  long *arg3 = (long *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(unsigned short **)&jarg1; 
  arg2 = *(drand48_data **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (int)nrand48_r(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mrand48_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  drand48_data *arg1 = (drand48_data *) 0 ;
  long *arg2 = (long *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(drand48_data **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)mrand48_r(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_jrand48_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  unsigned short *arg1 ;
  drand48_data *arg2 = (drand48_data *) 0 ;
  long *arg3 = (long *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(unsigned short **)&jarg1; 
  arg2 = *(drand48_data **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (int)jrand48_r(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_srand48_1r(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  long arg1 ;
  drand48_data *arg2 = (drand48_data *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (long)jarg1; 
  arg2 = *(drand48_data **)&jarg2; 
  result = (int)srand48_r(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_seed48_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  unsigned short *arg1 ;
  drand48_data *arg2 = (drand48_data *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(unsigned short **)&jarg1; 
  arg2 = *(drand48_data **)&jarg2; 
  result = (int)seed48_r(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_lcong48_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  unsigned short *arg1 ;
  drand48_data *arg2 = (drand48_data *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(unsigned short **)&jarg1; 
  arg2 = *(drand48_data **)&jarg2; 
  result = (int)lcong48_r(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_malloc(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  size_t arg1 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (size_t)jarg1; 
  result = (void *)malloc(arg1);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_calloc(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  size_t arg1 ;
  size_t arg2 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (size_t)jarg1; 
  arg2 = (size_t)jarg2; 
  result = (void *)calloc(arg1,arg2);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_realloc(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  void *arg1 = (void *) 0 ;
  size_t arg2 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  arg2 = (size_t)jarg2; 
  result = (void *)realloc(arg1,arg2);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_reallocarray(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  void *arg1 = (void *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  arg2 = (size_t)jarg2; 
  arg3 = (size_t)jarg3; 
  result = (void *)reallocarray(arg1,arg2,arg3);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_free(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  void *arg1 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  free(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1ALLOCA_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_alloca(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  size_t arg1 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (size_t)jarg1; 
  result = (void *)alloca(arg1);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_valloc(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  size_t arg1 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (size_t)jarg1; 
  result = (void *)valloc(arg1);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_posix_1memalign(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  void **arg1 = (void **) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void ***)&jarg1; 
  arg2 = (size_t)jarg2; 
  arg3 = (size_t)jarg3; 
  result = (int)posix_memalign(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_abort(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  abort();
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_atexit(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  void (*arg1)(void) = (void (*)(void)) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void (**)(void))&jarg1; 
  result = (int)atexit(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_on_1exit(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  void (*arg1)(int,void *) = (void (*)(int,void *)) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void (**)(int,void *))&jarg1; 
  arg2 = *(void **)&jarg2; 
  result = (int)on_exit(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_exit(JNIEnv *jenv, jclass jcls, jint jarg1) {
  int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  exit(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1Exit(JNIEnv *jenv, jclass jcls, jint jarg1) {
  int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  _Exit(arg1);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_getenv(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (char *)getenv((char const *)arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_putenv(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)putenv(arg1);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_setenv(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2, jint jarg3) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  result = (int)setenv((char const *)arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_unsetenv(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)unsetenv((char const *)arg1);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_clearenv(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)clearenv();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_mktemp(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (char *)mktemp(arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mkstemp(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)mkstemp(arg1);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mkstemps(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (int)jarg2; 
  result = (int)mkstemps(arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_mkdtemp(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (char *)mkdtemp(arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_system(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)system((char const *)arg1);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_realpath(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (char *)realpath((char const *)arg1,arg2);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_bsearch(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  void *arg1 = (void *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  size_t arg4 ;
  __compar_fn_t arg5 = (__compar_fn_t) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = (size_t)jarg4; 
  arg5 = *(__compar_fn_t *)&jarg5; 
  result = (void *)bsearch((void const *)arg1,(void const *)arg2,arg3,arg4,arg5);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_qsort(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  void *arg1 = (void *) 0 ;
  size_t arg2 ;
  size_t arg3 ;
  __compar_fn_t arg4 = (__compar_fn_t) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  arg2 = (size_t)jarg2; 
  arg3 = (size_t)jarg3; 
  arg4 = *(__compar_fn_t *)&jarg4; 
  qsort(arg1,arg2,arg3,arg4);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_abs(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  int arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (int)abs(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_labs(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  long arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  result = (long)labs(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_llabs(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  long long arg1 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long long)jarg1; 
  result = (long long)llabs(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_div(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jlong jresult = 0 ;
  int arg1 ;
  int arg2 ;
  div_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = div(arg1,arg2);
  *(div_t **)&jresult = new div_t((const div_t &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ldiv(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jlong jresult = 0 ;
  long arg1 ;
  long arg2 ;
  ldiv_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long)jarg1; 
  arg2 = (long)jarg2; 
  result = ldiv(arg1,arg2);
  *(ldiv_t **)&jresult = new ldiv_t((const ldiv_t &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_lldiv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  long long arg1 ;
  long long arg2 ;
  lldiv_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (long long)jarg1; 
  arg2 = (long long)jarg2; 
  result = lldiv(arg1,arg2);
  *(lldiv_t **)&jresult = new lldiv_t((const lldiv_t &)result); 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_ecvt(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  jstring jresult = 0 ;
  double arg1 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(int **)&jarg3; 
  arg4 = *(int **)&jarg4; 
  result = (char *)ecvt(arg1,arg2,arg3,arg4);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_fcvt(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  jstring jresult = 0 ;
  double arg1 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(int **)&jarg3; 
  arg4 = *(int **)&jarg4; 
  result = (char *)fcvt(arg1,arg2,arg3,arg4);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_gcvt(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2, jstring jarg3) {
  jstring jresult = 0 ;
  double arg1 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (char *)gcvt(arg1,arg2,arg3);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_qecvt(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  jstring jresult = 0 ;
  long double arg1 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  long double *argp1 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  argp1 = *(long double **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null long double");
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (int)jarg2; 
  arg3 = *(int **)&jarg3; 
  arg4 = *(int **)&jarg4; 
  result = (char *)qecvt(arg1,arg2,arg3,arg4);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_qfcvt(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  jstring jresult = 0 ;
  long double arg1 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  long double *argp1 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  argp1 = *(long double **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null long double");
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (int)jarg2; 
  arg3 = *(int **)&jarg3; 
  arg4 = *(int **)&jarg4; 
  result = (char *)qfcvt(arg1,arg2,arg3,arg4);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_qgcvt(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3) {
  jstring jresult = 0 ;
  long double arg1 ;
  int arg2 ;
  char *arg3 = (char *) 0 ;
  long double *argp1 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  argp1 = *(long double **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null long double");
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (int)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (char *)qgcvt(arg1,arg2,arg3);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ecvt_1r(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2, jlong jarg3, jlong jarg4, jstring jarg5, jlong jarg6) {
  jint jresult = 0 ;
  double arg1 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  char *arg5 = (char *) 0 ;
  size_t arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(int **)&jarg3; 
  arg4 = *(int **)&jarg4; 
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return 0;
  }
  arg6 = (size_t)jarg6; 
  result = (int)ecvt_r(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (jint)result; 
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fcvt_1r(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2, jlong jarg3, jlong jarg4, jstring jarg5, jlong jarg6) {
  jint jresult = 0 ;
  double arg1 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  char *arg5 = (char *) 0 ;
  size_t arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(int **)&jarg3; 
  arg4 = *(int **)&jarg4; 
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return 0;
  }
  arg6 = (size_t)jarg6; 
  result = (int)fcvt_r(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (jint)result; 
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_qecvt_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4, jstring jarg5, jlong jarg6) {
  jint jresult = 0 ;
  long double arg1 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  char *arg5 = (char *) 0 ;
  size_t arg6 ;
  long double *argp1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  argp1 = *(long double **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null long double");
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (int)jarg2; 
  arg3 = *(int **)&jarg3; 
  arg4 = *(int **)&jarg4; 
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return 0;
  }
  arg6 = (size_t)jarg6; 
  result = (int)qecvt_r(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (jint)result; 
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_qfcvt_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4, jstring jarg5, jlong jarg6) {
  jint jresult = 0 ;
  long double arg1 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int *arg4 = (int *) 0 ;
  char *arg5 = (char *) 0 ;
  size_t arg6 ;
  long double *argp1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  argp1 = *(long double **)&jarg1; 
  if (!argp1) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null long double");
    return 0;
  }
  arg1 = *argp1; 
  arg2 = (int)jarg2; 
  arg3 = *(int **)&jarg3; 
  arg4 = *(int **)&jarg4; 
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return 0;
  }
  arg6 = (size_t)jarg6; 
  result = (int)qfcvt_r(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (jint)result; 
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mblen(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  size_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (size_t)jarg2; 
  result = (int)mblen((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mbtowc(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3) {
  jint jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (size_t)jarg3; 
  result = (int)mbtowc(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_wctomb(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  wchar_t arg2 ;
  wchar_t *argp2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  argp2 = *(wchar_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null wchar_t");
    return 0;
  }
  arg2 = *argp2; 
  result = (int)wctomb(arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mbstowcs(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  wchar_t *arg1 = (wchar_t *) 0 ;
  char *arg2 = (char *) 0 ;
  size_t arg3 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(wchar_t **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (size_t)jarg3; 
  result = mbstowcs(arg1,(char const *)arg2,arg3);
  jresult = (jlong)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_wcstombs(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  char *arg1 = (char *) 0 ;
  wchar_t *arg2 = (wchar_t *) 0 ;
  size_t arg3 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = *(wchar_t **)&jarg2; 
  arg3 = (size_t)jarg3; 
  result = wcstombs(arg1,(wchar_t const *)arg2,arg3);
  jresult = (jlong)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_rpmatch(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)rpmatch((char const *)arg1);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_getsubopt(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  char **arg1 = (char **) 0 ;
  char **arg2 = (char **) 0 ;
  char **arg3 = (char **) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(char ***)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  arg3 = *(char ***)&jarg3; 
  result = (int)getsubopt(arg1,(char *const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_getloadavg(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  double *arg1 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)getloadavg(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1KNOW_1STRONG_1ORDER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1BITS4_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((64/4));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_rec_1word_1tab_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (int *)(int *)rec_word_tab;
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_HAVE_1BLAS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_HAVE_1TLS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_HAVE_1FENV_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_HAVE_1PTHREAD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_HAVE_1GC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_HAVE_1CPU_1SET_1T_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1REENTRANT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_WANT_1ASSERT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FLINT_1VERSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FLINT_1VERSION_1MINOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FLINT_1VERSION_1PATCHLEVEL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_FLINT_1VERSION_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("2.6.3");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FLINT_1RELEASE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((2*10000+6*100+3));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1version_1set(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  char *arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return ;
  }
  {
    if (arg1) strcpy((char *)flint_version, (const char *)arg1);
    else flint_version[0] = 0;
  }
  
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_flint_1version_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)(char *)flint_version;
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_flint_1malloc(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  size_t arg1 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (size_t)jarg1; 
  result = (void *)flint_malloc(arg1);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_flint_1realloc(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  void *arg1 = (void *) 0 ;
  size_t arg2 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  arg2 = (size_t)jarg2; 
  result = (void *)flint_realloc(arg1,arg2);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_flint_1calloc(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  size_t arg1 ;
  size_t arg2 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (size_t)jarg1; 
  arg2 = (size_t)jarg2; 
  result = (void *)flint_calloc(arg1,arg2);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1free(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  void *arg1 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  flint_free(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1register_1cleanup_1function(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  flint_cleanup_function_t arg1 = (flint_cleanup_function_t) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(flint_cleanup_function_t *)&jarg1; 
  flint_register_cleanup_function(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1cleanup(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  flint_cleanup();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1cleanup_1master(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  flint_cleanup_master();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1flint_1set_1memory_1functions(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  void *(*arg1)(size_t) = (void *(*)(size_t)) 0 ;
  void *(*arg2)(size_t,size_t) = (void *(*)(size_t,size_t)) 0 ;
  void *(*arg3)(void *,size_t) = (void *(*)(void *,size_t)) 0 ;
  void (*arg4)(void *) = (void (*)(void *)) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void *(**)(size_t))&jarg1; 
  arg2 = *(void *(**)(size_t,size_t))&jarg2; 
  arg3 = *(void *(**)(void *,size_t))&jarg3; 
  arg4 = *(void (**)(void *))&jarg4; 
  __flint_set_memory_functions(arg1,arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1abort(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  flint_abort();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1set_1abort(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  void (*arg1)(void) = (void (*)(void)) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void (**)(void))&jarg1; 
  flint_set_abort(arg1);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_WORD_1FMT_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("%l");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_WORD_1WIDTH_1FMT_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("%*l");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(64);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1D_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(53);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT64_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1get_1num_1threads(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)flint_get_num_threads();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1set_1num_1threads(JNIEnv *jenv, jclass jcls, jint jarg1) {
  int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  flint_set_num_threads(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1flint_1set_1num_1workers(JNIEnv *jenv, jclass jcls, jint jarg1) {
  int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  _flint_set_num_workers(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1set_1num_1workers(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  int arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (int)flint_set_num_workers(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1reset_1num_1workers(JNIEnv *jenv, jclass jcls, jint jarg1) {
  int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  flint_reset_num_workers(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1set_1thread_1affinity(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  int *arg1 = (int *) 0 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(int **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)flint_set_thread_affinity(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1restore_1thread_1affinity(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)flint_restore_thread_affinity();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1test_1multiplier(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)flint_test_multiplier();
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1rand_1s_1gmp_1state_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  flint_rand_s *arg1 = (flint_rand_s *) 0 ;
  __gmp_randstate_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(flint_rand_s **)&jarg1; 
  arg2 = *(__gmp_randstate_struct **)&jarg2; 
  {
    size_t ii;
    __gmp_randstate_struct *b = (__gmp_randstate_struct *) arg1->gmp_state;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((__gmp_randstate_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_flint_1rand_1s_1gmp_1state_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  flint_rand_s *arg1 = (flint_rand_s *) 0 ;
  __gmp_randstate_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  result = (__gmp_randstate_struct *) ((arg1)->gmp_state);
  *(__gmp_randstate_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1rand_1s_1gmp_1init_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  flint_rand_s *arg1 = (flint_rand_s *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->gmp_init = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1rand_1s_1gmp_1init_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  flint_rand_s *arg1 = (flint_rand_s *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  result = (int) ((arg1)->gmp_init);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1rand_1s_1_1_1randval_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  flint_rand_s *arg1 = (flint_rand_s *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->__randval = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_flint_1rand_1s_1_1_1randval_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  flint_rand_s *arg1 = (flint_rand_s *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  result = (mp_limb_t) ((arg1)->__randval);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1rand_1s_1_1_1randval2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  flint_rand_s *arg1 = (flint_rand_s *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->__randval2 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_flint_1rand_1s_1_1_1randval2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  flint_rand_s *arg1 = (flint_rand_s *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  result = (mp_limb_t) ((arg1)->__randval2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1flint_1rand_1s(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  flint_rand_s *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (flint_rand_s *)new flint_rand_s();
  *(flint_rand_s **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1flint_1rand_1s(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  flint_rand_s *arg1 = (flint_rand_s *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(flint_rand_s **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1randinit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  flint_rand_s *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  flint_randinit(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1randseed(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  flint_rand_s *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  flint_randseed(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1get_1randseed(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  flint_rand_s *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(flint_rand_s **)&jarg3; 
  flint_get_randseed(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1flint_1rand_1init_1gmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  flint_rand_s *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  _flint_rand_init_gmp(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1randclear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  flint_rand_s *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  flint_randclear(arg1);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_flint_1rand_1alloc(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  flint_rand_s *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (flint_rand_s *)flint_rand_alloc();
  *(flint_rand_s **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1rand_1free(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  flint_rand_s *arg1 = (flint_rand_s *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  flint_rand_free(arg1);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1flint_1clz_1tab_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned char *)(unsigned char *)__flint_clz_tab;
  *(unsigned char **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_FLINT_1BIT_1COUNT(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t)FLINT_BIT_COUNT(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpn_1tdiv_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_size_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  mpn_tdiv_q(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_parse_1fmt(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
  jint jresult = 0 ;
  int *arg1 = (int *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(int **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)parse_fmt(arg1,(char const *)arg2);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1printf(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)flint_printf((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1vprintf(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  va_list arg2 ;
  va_list *argp2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  argp2 = *(va_list **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null va_list");
    return 0;
  }
  arg2 = *argp2; 
  result = (int)flint_vprintf((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1fprintf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)flint_fprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1sprintf(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)flint_sprintf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1scanf(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  void *arg2 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (int)flint_scanf((char const *)arg1,arg2);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1fscanf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)flint_fscanf(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1sscanf(JNIEnv *jenv, jclass jcls, jstring jarg1, jstring jarg2) {
  jint jresult = 0 ;
  char *arg1 = (char *) 0 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)flint_sscanf((char const *)arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1mul_1sizes(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jint jresult = 0 ;
  mp_limb_signed_t arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_signed_t)flint_mul_sizes(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1throw(JNIEnv *jenv, jclass jcls, jint jarg1, jstring jarg2) {
  flint_err_t arg1 ;
  char *arg2 = (char *) 0 ;
  void *arg3 = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (flint_err_t)jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  flint_throw(arg1,(char const *)arg2,arg3);
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1MATH_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1LIBM_1SIMD_1DECL_1STUBS_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_HUGE_1VAL_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(1e10000);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_HUGE_1VALF_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(1e10000);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_HUGE_1VALL_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(1e10000);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_INFINITY_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(1e10000);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_NAN_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)((0.0/0.0));
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1GLIBC_1FLT_1EVAL_1METHOD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FP_1LOGB0_1IS_1MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1FP_1LOGBNAN_1IS_1MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FP_1ILOGB0_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((-2147483647-1));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FP_1ILOGBNAN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((-2147483647-1));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1MATH_1DECLARING_1DOUBLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1MATH_1DECLARING_1FLOATN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1fpclassify(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (int)__fpclassify(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1signbit(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (int)__signbit(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isinf(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (int)__isinf(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1finite(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (int)__finite(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1isnan(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (int)__isnan(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1iseqsig(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jint jresult = 0 ;
  double arg1 ;
  double arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (int)__iseqsig(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1issignaling(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (int)__issignaling(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_acos(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)acos(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1acos(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__acos(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_asin(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)asin(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1asin(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__asin(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_atan(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)atan(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1atan(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__atan(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_atan2(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)atan2(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1atan2(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__atan2(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_cos(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)cos(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1cos(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__cos(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_sin(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)sin(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1sin(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__sin(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_tan(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)tan(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1tan(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__tan(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_cosh(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)cosh(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1cosh(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__cosh(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_sinh(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)sinh(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1sinh(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__sinh(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_tanh(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)tanh(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1tanh(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__tanh(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_acosh(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)acosh(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1acosh(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__acosh(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_asinh(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)asinh(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1asinh(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__asinh(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_atanh(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)atanh(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1atanh(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__atanh(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_exp(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)exp(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1exp(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__exp(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_frexp(JNIEnv *jenv, jclass jcls, jdouble jarg1, jlong jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  int *arg2 = (int *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (double)frexp(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1frexp(JNIEnv *jenv, jclass jcls, jdouble jarg1, jlong jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  int *arg2 = (int *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (double)__frexp(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_ldexp(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  int arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (int)jarg2; 
  result = (double)ldexp(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1ldexp(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  int arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (int)jarg2; 
  result = (double)__ldexp(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_log(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)log(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1log(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__log(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_log10(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)log10(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1log10(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__log10(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_modf(JNIEnv *jenv, jclass jcls, jdouble jarg1, jlong jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double *arg2 = (double *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = *(double **)&jarg2; 
  result = (double)modf(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1modf(JNIEnv *jenv, jclass jcls, jdouble jarg1, jlong jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double *arg2 = (double *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = *(double **)&jarg2; 
  result = (double)__modf(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_expm1(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)expm1(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1expm1(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__expm1(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_log1p(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)log1p(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1log1p(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__log1p(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_logb(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)logb(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1logb(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__logb(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_exp2(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)exp2(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1exp2(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__exp2(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_log2(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)log2(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1log2(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__log2(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_pow(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)pow(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1pow(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__pow(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_sqrt(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)sqrt(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1sqrt(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__sqrt(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_hypot(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)hypot(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1hypot(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__hypot(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_cbrt(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)cbrt(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1cbrt(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__cbrt(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_ceil(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)ceil(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1ceil(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__ceil(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fabs(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)fabs(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1fabs(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__fabs(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_floor(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)floor(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1floor(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__floor(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fmod(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)fmod(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1fmod(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__fmod(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_isinf(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (int)isinf(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_finite(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (int)finite(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_drem(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)drem(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1drem(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__drem(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_significand(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)significand(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1significand(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__significand(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_copysign(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)copysign(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1copysign(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__copysign(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_nan(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  char *arg1 = (char *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (double)nan((char const *)arg1);
  jresult = (jdouble)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1nan(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  jdouble jresult = 0 ;
  char *arg1 = (char *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  result = (double)__nan((char const *)arg1);
  jresult = (jdouble)result; 
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_isnan(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (int)isnan(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_j0(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)j0(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1j0(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__j0(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_j1(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)j1(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1j1(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__j1(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_jn(JNIEnv *jenv, jclass jcls, jint jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  int arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)jn(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1jn(JNIEnv *jenv, jclass jcls, jint jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  int arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__jn(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_y0(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)y0(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1y0(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__y0(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_y1(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)y1(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1y1(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__y1(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_yn(JNIEnv *jenv, jclass jcls, jint jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  int arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)yn(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1yn(JNIEnv *jenv, jclass jcls, jint jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  int arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__yn(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_erf(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)erf(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1erf(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__erf(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_erfc(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)erfc(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1erfc(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__erfc(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_lgamma(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)lgamma(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1lgamma(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__lgamma(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_tgamma(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)tgamma(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1tgamma(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__tgamma(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_gamma(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)gamma(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1gamma(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__gamma(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_lgamma_1r(JNIEnv *jenv, jclass jcls, jdouble jarg1, jlong jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  int *arg2 = (int *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (double)lgamma_r(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1lgamma_1r(JNIEnv *jenv, jclass jcls, jdouble jarg1, jlong jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  int *arg2 = (int *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (double)__lgamma_r(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_rint(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)rint(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1rint(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__rint(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_nextafter(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)nextafter(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1nextafter(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__nextafter(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_nexttoward(JNIEnv *jenv, jclass jcls, jdouble jarg1, jlong jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  long double arg2 ;
  long double *argp2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  argp2 = *(long double **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null long double");
    return 0;
  }
  arg2 = *argp2; 
  result = (double)nexttoward(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1nexttoward(JNIEnv *jenv, jclass jcls, jdouble jarg1, jlong jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  long double arg2 ;
  long double *argp2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  argp2 = *(long double **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null long double");
    return 0;
  }
  arg2 = *argp2; 
  result = (double)__nexttoward(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_remainder(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)remainder(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1remainder(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__remainder(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_scalbn(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  int arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (int)jarg2; 
  result = (double)scalbn(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1scalbn(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  int arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (int)jarg2; 
  result = (double)__scalbn(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ilogb(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (int)ilogb(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1ilogb(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (int)__ilogb(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_scalbln(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  long arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (long)jarg2; 
  result = (double)scalbln(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1scalbln(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  long arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (long)jarg2; 
  result = (double)__scalbln(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_nearbyint(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)nearbyint(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1nearbyint(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__nearbyint(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_round(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)round(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1round(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__round(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_trunc(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)trunc(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1trunc(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)__trunc(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_remquo(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jlong jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  int *arg3 = (int *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (double)remquo(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1remquo(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jlong jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  int *arg3 = (int *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (double)__remquo(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_lrint(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long)lrint(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1lrint(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long)__lrint(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_llrint(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jlong jresult = 0 ;
  double arg1 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long long)llrint(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1llrint(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jlong jresult = 0 ;
  double arg1 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long long)__llrint(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_lround(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long)lround(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1lround(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long)__lround(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_llround(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jlong jresult = 0 ;
  double arg1 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long long)llround(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1llround(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jlong jresult = 0 ;
  double arg1 ;
  long long result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (long long)__llround(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fdim(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)fdim(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1fdim(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__fdim(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fmax(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)fmax(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1fmax(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__fmax(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fmin(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)fmin(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1fmin(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__fmin(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fma(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)fma(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1fma(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)__fma(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_scalb(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)scalb(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1_1scalb(JNIEnv *jenv, jclass jcls, jdouble jarg1, jdouble jarg2) {
  jdouble jresult = 0 ;
  double arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (double)jarg2; 
  result = (double)__scalb(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1MATH_1DECLARE_1LDOUBLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_signgam_1set(JNIEnv *jenv, jclass jcls, jint jarg1) {
  int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  signgam = arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_signgam_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)signgam;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MATH_1ERRNO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MATH_1ERREXCEPT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_math_1errhandling_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((1|2));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_M_1E_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(2.7182818284590452354);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_M_1LOG2E_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(1.4426950408889634074);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_M_1LOG10E_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(0.43429448190325182765);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_M_1LN2_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(0.69314718055994530942);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_M_1LN10_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(2.30258509299404568402);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_M_1PI_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(3.14159265358979323846);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_M_1PI_12_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(1.57079632679489661923);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_M_1PI_14_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(0.78539816339744830962);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_M_11_1PI_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(0.31830988618379067154);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_M_12_1PI_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(0.63661977236758134308);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_M_12_1SQRTPI_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(1.12837916709551257390);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_M_1SQRT2_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(1.41421356237309504880);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_M_1SQRT1_12_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(0.70710678118654752440);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1pair_1t_1x_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  pair_s *arg1 = (pair_s *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pair_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1pair_1t_1x_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  pair_s *arg1 = (pair_s *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pair_s **)&jarg1; 
  result = (mp_limb_t) ((arg1)->x);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1pair_1t_1y_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  pair_s *arg1 = (pair_s *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pair_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->y = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1pair_1t_1y_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  pair_s *arg1 = (pair_s *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pair_s **)&jarg1; 
  result = (mp_limb_t) ((arg1)->y);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1n_1pair_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  pair_s *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (pair_s *)new pair_s();
  *(pair_s **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1n_1pair_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  pair_s *arg1 = (pair_s *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pair_s **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1MAX_1FACTORS_1IN_1LIMB_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(15);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1factor_1t_1num_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->num = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1factor_1t_1num_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  result = (int) ((arg1)->num);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1factor_1t_1exp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  int *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  {
    size_t ii;
    int *b = (int *) arg1->exp;
    for (ii = 0; ii < (size_t)15; ii++) b[ii] = *((int *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factor_1t_1exp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  result = (int *)(int *) ((arg1)->exp);
  *(int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1factor_1t_1p_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  mp_limb_t *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  {
    size_t ii;
    mp_limb_t *b = (mp_limb_t *) arg1->p;
    for (ii = 0; ii < (size_t)15; ii++) b[ii] = *((mp_limb_t *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factor_1t_1p_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  result = (mp_limb_t *)(mp_limb_t *) ((arg1)->p);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1n_1factor_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  n_factor_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (n_factor_t *)new n_factor_t();
  *(n_factor_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1n_1factor_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(n_factor_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1ODDPRIME_1SMALL_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4096);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1NUM_1PRIMES_1SMALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(172);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1PRIMES_1SMALL_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1030);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1PSEUDOSQUARES_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1FACTOR_1TRIAL_1PRIMES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_FLINT_1FACTOR_1TRIAL_1PRIMES_1PRIME_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long)((27449UL));
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_FLINT_1FACTOR_1TRIAL_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long)(((27449UL) *(27449UL)));
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1PRIMES_1TAB_1DEFAULT_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1FACTOR_1SQUFOF_1ITERS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(50000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_FLINT_1FACTOR_1ONE_1LINE_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long)(((1UL) << 39));
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1FACTOR_1ONE_1LINE_1ITERS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(40000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1PRIME_1PI_1ODD_1LOOKUP_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(311);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1SIEVE_1SIZE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(65536);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_UWORD_1MAX_1PRIME_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long)((18446744073709551557UL));
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1small_1i_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->small_i = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1small_1i_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->small_i);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1small_1num_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->small_num = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1small_1num_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->small_num);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1small_1primes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  unsigned int *arg2 = (unsigned int *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  arg2 = *(unsigned int **)&jarg2; 
  if (arg1) (arg1)->small_primes = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1small_1primes_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  unsigned int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  result = (unsigned int *) ((arg1)->small_primes);
  *(unsigned int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1sieve_1a_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->sieve_a = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1sieve_1a_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->sieve_a);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1sieve_1b_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->sieve_b = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1sieve_1b_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->sieve_b);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1sieve_1i_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->sieve_i = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1sieve_1i_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->sieve_i);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1sieve_1num_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->sieve_num = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1sieve_1num_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->sieve_num);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1sieve_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  char *arg2 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return ;
  }
  {
    delete [] arg1->sieve;
    if (arg2) {
      arg1->sieve = (char *) (new char[strlen((const char *)arg2)+1]);
      strcpy((char *)arg1->sieve, (const char *)arg2);
    } else {
      arg1->sieve = 0;
    }
  }
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_n_1primes_1struct_1sieve_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  result = (char *) ((arg1)->sieve);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1n_1primes_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  n_primes_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (n_primes_struct *)new n_primes_struct();
  *(n_primes_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1n_1primes_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  n_primes_struct *arg1 = (n_primes_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(n_primes_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1primes_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  n_primes_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  n_primes_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1primes_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  n_primes_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  n_primes_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1primes_1extend_1small(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_primes_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  n_primes_extend_small(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1primes_1sieve_1range(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  n_primes_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  n_primes_sieve_range(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1primes_1jump_1after(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_primes_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  n_primes_jump_after(arg1,arg2);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1primes_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_primes_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_primes_struct **)&jarg1; 
  result = (mp_limb_t)n_primes_next(arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_flint_1primes_1small_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned int *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned int *)(unsigned int *)flint_primes_small;
  *(unsigned int **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1flint_1primes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mp_limb_t **arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t ***)&jarg1; 
  {
    size_t ii;
    mp_limb_t * *b = (mp_limb_t * *) _flint_primes;
    for (ii = 0; ii < (size_t)64; ii++) b[ii] = *((mp_limb_t * *) arg1 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1flint_1primes_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mp_limb_t **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mp_limb_t **)(mp_limb_t **)_flint_primes;
  *(mp_limb_t ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1flint_1prime_1inverses_1set(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  double **arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double ***)&jarg1; 
  {
    size_t ii;
    double * *b = (double * *) _flint_prime_inverses;
    for (ii = 0; ii < (size_t)64; ii++) b[ii] = *((double * *) arg1 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1flint_1prime_1inverses_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  double **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (double **)(double **)_flint_prime_inverses;
  *(double ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1flint_1primes_1used_1set(JNIEnv *jenv, jclass jcls, jint jarg1) {
  int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  _flint_primes_used = arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1flint_1primes_1used_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)_flint_primes_used;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1compute_1primes(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mp_limb_t arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  n_compute_primes(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1cleanup_1primes(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  n_cleanup_primes();
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1primes_1arr_1readonly(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t *)n_primes_arr_readonly(arg1);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1prime_1inverses_1arr_1readonly(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  double *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (double *)n_prime_inverses_arr_readonly(arg1);
  *(double **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1randlimb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  flint_rand_s *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  result = (mp_limb_t)n_randlimb(arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1randint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  flint_rand_s *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_randint(arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1urandint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  flint_rand_s *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_urandint(arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1randbits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  flint_rand_s *arg1 ;
  unsigned int arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  arg2 = (unsigned int)jarg2; 
  result = (mp_limb_t)n_randbits(arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1randtest_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  flint_rand_s *arg1 ;
  int arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (mp_limb_t)n_randtest_bits(arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  flint_rand_s *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  result = (mp_limb_t)n_randtest(arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1randtest_1not_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  flint_rand_s *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  result = (mp_limb_t)n_randtest_not_zero(arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1randprime(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  flint_rand_s *arg1 ;
  mp_limb_t arg2 ;
  int arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (int)jarg3; 
  result = (mp_limb_t)n_randprime(arg1,arg2,arg3);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1randtest_1prime(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  flint_rand_s *arg1 ;
  int arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (mp_limb_t)n_randtest_prime(arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_pow(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1flog(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_flog(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1clog(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_clog(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_n_1precompute_1inverse(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jdouble jresult = 0 ;
  mp_limb_t arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (double)n_precompute_inverse(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1preinvert_1limb(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t)n_preinvert_limb(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1mod_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  double arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (double)jarg3; 
  result = (mp_limb_t)n_mod_precomp(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1mod2_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  double arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (double)jarg3; 
  result = (mp_limb_t)n_mod2_precomp(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1divrem2_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  double arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (double)jarg4; 
  result = (mp_limb_t)n_divrem2_precomp(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1divrem2_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)n_divrem2_preinv(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1div2_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_div2_preinv(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1mod2_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_mod2_preinv(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1ll_1mod_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)n_ll_mod_preinv(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1lll_1mod_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (mp_limb_t)n_lll_mod_preinv(arg1,arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1mulmod_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  double arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (double)jarg4; 
  result = (mp_limb_t)n_mulmod_precomp(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1mulmod2_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)n_mulmod2_preinv(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1mulmod2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_mulmod2(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1mulmod_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (mp_limb_t)n_mulmod_preinv(arg1,arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1powmod_1ui_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  double arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (double)jarg4; 
  result = (mp_limb_t)n_powmod_ui_precomp(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1powmod_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jdouble jarg4) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  double arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (double)jarg4; 
  result = (mp_limb_t)n_powmod_precomp(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1powmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_powmod(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1powmod2_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)n_powmod2_preinv(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1powmod2_1ui_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)n_powmod2_ui_preinv(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1powmod_1ui_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (mp_limb_t)n_powmod_ui_preinv(arg1,arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1powmod2(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_powmod2(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1addmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_addmod(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1submod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_submod(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1negmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_negmod(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1sqrtmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_sqrtmod(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1sqrtmod_12pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  mp_limb_t **arg1 = (mp_limb_t **) 0 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t ***)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (mp_limb_signed_t)n_sqrtmod_2pow(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1sqrtmod_1primepow(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mp_limb_t **arg1 = (mp_limb_t **) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t ***)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (mp_limb_signed_t)n_sqrtmod_primepow(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1sqrtmodn(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  mp_limb_t **arg1 = (mp_limb_t **) 0 ;
  mp_limb_t arg2 ;
  n_factor_t *arg3 = (n_factor_t *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(mp_limb_t ***)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(n_factor_t **)&jarg3; 
  result = (mp_limb_signed_t)n_sqrtmodn(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1gcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_gcd(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1xgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)n_xgcd(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1gcdinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_gcdinv(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1invmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_invmod(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1CRT(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)n_CRT(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1revbin(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_revbin(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1jacobi(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2) {
  jint jresult = 0 ;
  mp_limb_signed_t arg1 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)n_jacobi(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1jacobi_1unsigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)n_jacobi_unsigned(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t)n_sqrt(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1sqrtrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_sqrtrem(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1square(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (int)n_is_square(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_n_1cbrt_1estimate(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)n_cbrt_estimate(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1cbrt(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t)n_cbrt(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1cbrt_1binary_1search(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t)n_cbrt_binary_search(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1cbrt_1newton_1iteration(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t)n_cbrt_newton_iteration(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1cbrt_1chebyshev_1approx(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t)n_cbrt_chebyshev_approx(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1cbrtrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_cbrtrem(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1perfect_1power235(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (int)n_is_perfect_power235(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1perfect_1power(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)n_is_perfect_power(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1oddprime_1small(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (int)n_is_oddprime_small(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1oddprime_1binary(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (int)n_is_oddprime_binary(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1probabprime_1fermat(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)n_is_probabprime_fermat(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1probabprime_1fibonacci(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (int)n_is_probabprime_fibonacci(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1probabprime_1lucas(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (int)n_is_probabprime_lucas(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1probabprime_1BPSW(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (int)n_is_probabprime_BPSW(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1strong_1probabprime_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2, jlong jarg3, jlong jarg4) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  double arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (int)n_is_strong_probabprime_precomp(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1strong_1probabprime2_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (int)n_is_strong_probabprime2_preinv(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1probabprime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (int)n_is_probabprime(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1prime_1pseudosquare(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (int)n_is_prime_pseudosquare(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1prime_1pocklington(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)n_is_prime_pocklington(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1prime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (int)n_is_prime(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1nth_1prime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t)n_nth_prime(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1nth_1prime_1bounds(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  n_nth_prime_bounds(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1prime_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t)n_prime_pi(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1prime_1pi_1bounds(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  n_prime_pi_bounds(arg1,arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1remove(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)n_remove(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1remove2_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3) {
  jint jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  double arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (double)jarg3; 
  result = (int)n_remove2_precomp(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1factor_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  n_factor_init(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1factor_1insert(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  n_factor_insert(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factor_1trial_1range(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)n_factor_trial_range(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factor_1trial_1partial(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (mp_limb_t)n_factor_trial_partial(arg1,arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factor_1trial(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_factor_trial(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factor_1partial(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  jlong jresult = 0 ;
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  int arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_t)n_factor_partial(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factor_1power235(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_factor_power235(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factor_1one_1line(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_factor_one_line(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factor_1lehman(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t)n_factor_lehman(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factor_1SQUFOF(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_factor_SQUFOF(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1factor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  mp_limb_t arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (int)jarg3; 
  n_factor(arg1,arg2,arg3);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factor_1pp1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_factor_pp1(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factor_1pp1_1wrapper(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t)n_factor_pp1_wrapper(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1factor_1pp1_1table_1insert(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jint jarg3) {
  mp_limb_signed_t arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  n_factor_pp1_table_insert(arg1,arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1factor_1pollard_1brent_1single(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7) {
  jint jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t arg6 ;
  mp_limb_t arg7 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = (mp_limb_t)jarg7; 
  result = (int)n_factor_pollard_brent_single(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1factor_1pollard_1brent(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jlong jarg5) {
  jint jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (int)n_factor_pollard_brent(arg1,arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1is_1squarefree(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (int)n_is_squarefree(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1moebius_1mu(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (int)n_moebius_mu(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1moebius_1mu_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  int *arg1 = (int *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(int **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  n_moebius_mu_vec(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1euler_1phi(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t)n_euler_phi(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1sizeinbase(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)n_sizeinbase(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1nextprime(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  int arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (int)jarg2; 
  result = (mp_limb_t)n_nextprime(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factorial_1mod2_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_factorial_mod2_preinv(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1factorial_1fast_1mod2_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_factorial_fast_mod2_preinv(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1primitive_1root_1prime_1prefactor(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  n_factor_t *arg2 = (n_factor_t *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = *(n_factor_t **)&jarg2; 
  result = (mp_limb_t)n_primitive_root_prime_prefactor(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1primitive_1root_1prime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_t)n_primitive_root_prime(arg1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1discrete_1log_1bsgs(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_discrete_log_bsgs(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1root_1estimate(JNIEnv *jenv, jclass jcls, jdouble jarg1, jint jarg2) {
  jlong jresult = 0 ;
  double arg1 ;
  int arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  arg2 = (int)jarg2; 
  result = (mp_limb_t)n_root_estimate(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1rootrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)n_rootrem(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_root(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1x_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1x_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  result = (mp_limb_t) ((arg1)->x);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1z_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1z_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  result = (mp_limb_t) ((arg1)->z);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1a24_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->a24 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1a24_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  result = (mp_limb_t) ((arg1)->a24);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1ninv_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->ninv = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1ninv_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  result = (mp_limb_t) ((arg1)->ninv);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1normbits_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->normbits = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1normbits_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  result = (mp_limb_t) ((arg1)->normbits);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1one_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->one = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1one_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  result = (mp_limb_t) ((arg1)->one);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1GCD_1table_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  arg2 = *(unsigned char **)&jarg2; 
  if (arg1) (arg1)->GCD_table = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1GCD_1table_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  unsigned char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  result = (unsigned char *) ((arg1)->GCD_table);
  *(unsigned char **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1prime_1table_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  unsigned char **arg2 = (unsigned char **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  arg2 = *(unsigned char ***)&jarg2; 
  if (arg1) (arg1)->prime_table = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1ecm_1s_1prime_1table_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  unsigned char **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_ecm_s **)&jarg1; 
  result = (unsigned char **) ((arg1)->prime_table);
  *(unsigned char ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1n_1ecm_1s(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  n_ecm_s *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (n_ecm_s *)new n_ecm_s();
  *(n_ecm_s **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1n_1ecm_1s(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  n_ecm_s *arg1 = (n_ecm_s *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(n_ecm_s **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1factor_1ecm_1double(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  n_ecm_s *arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = *(n_ecm_s **)&jarg6; 
  n_factor_ecm_double(arg1,arg2,arg3,arg4,arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1factor_1ecm_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7, jlong jarg8, jlong jarg9, jlong jarg10, jobject jarg10_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t arg6 ;
  mp_limb_t arg7 ;
  mp_limb_t arg8 ;
  mp_limb_t arg9 ;
  n_ecm_s *arg10 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg10_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = (mp_limb_t)jarg7; 
  arg8 = (mp_limb_t)jarg8; 
  arg9 = (mp_limb_t)jarg9; 
  arg10 = *(n_ecm_s **)&jarg10; 
  n_factor_ecm_add(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_n_1factor_1ecm_1mul_1montgomery_1ladder(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t arg6 ;
  n_ecm_s *arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = *(n_ecm_s **)&jarg7; 
  n_factor_ecm_mul_montgomery_ladder(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1factor_1ecm_1select_1curve(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  n_ecm_s *arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(n_ecm_s **)&jarg4; 
  result = (int)n_factor_ecm_select_curve(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1factor_1ecm_1stage_1I(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_) {
  jint jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  n_ecm_s *arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = *(n_ecm_s **)&jarg6; 
  result = (int)n_factor_ecm_stage_I(arg1,(unsigned long const *)arg2,arg3,arg4,arg5,arg6);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1factor_1ecm_1stage_1II(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_) {
  jint jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  n_ecm_s *arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = *(n_ecm_s **)&jarg6; 
  result = (int)n_factor_ecm_stage_II(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1factor_1ecm(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jlong jarg6) {
  jint jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  flint_rand_s *arg5 ;
  mp_limb_t arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = *(flint_rand_s **)&jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  result = (int)n_factor_ecm(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1mulmod_1precomp_1shoup(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)n_mulmod_precomp_shoup(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1mulmod_1shoup(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)n_mulmod_shoup(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1t_1n_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_t *arg1 = (nmod_t *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->n = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1t_1n_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_t *arg1 = (nmod_t *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_t **)&jarg1; 
  result = (mp_limb_t) ((arg1)->n);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1t_1ninv_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_t *arg1 = (nmod_t *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->ninv = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1t_1ninv_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_t *arg1 = (nmod_t *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_t **)&jarg1; 
  result = (mp_limb_t) ((arg1)->ninv);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1t_1norm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_t *arg1 = (nmod_t *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->norm = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1t_1norm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_t *arg1 = (nmod_t *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_t **)&jarg1; 
  result = (mp_limb_t) ((arg1)->norm);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1nmod_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (nmod_t *)new nmod_t();
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1nmod_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  nmod_t *arg1 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(nmod_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  nmod_t arg3 ;
  nmod_t *argp3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg3 = *argp3; 
  result = (mp_limb_t)_nmod_add(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  nmod_t arg3 ;
  nmod_t *argp3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg3 = *argp3; 
  result = (mp_limb_t)_nmod_sub(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  nmod_t arg3 ;
  nmod_t *argp3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg3 = *argp3; 
  result = (mp_limb_t)nmod_add(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  nmod_t arg3 ;
  nmod_t *argp3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg3 = *argp3; 
  result = (mp_limb_t)nmod_sub(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  nmod_t arg2 ;
  nmod_t *argp2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (mp_limb_t)jarg1; 
  argp2 = *(nmod_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg2 = *argp2; 
  result = (mp_limb_t)nmod_neg(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  nmod_t arg3 ;
  nmod_t *argp3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg3 = *argp3; 
  result = (mp_limb_t)nmod_mul(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1inv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  nmod_t arg2 ;
  nmod_t *argp2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (mp_limb_t)jarg1; 
  argp2 = *(nmod_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg2 = *argp2; 
  result = (mp_limb_t)nmod_inv(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  nmod_t arg3 ;
  nmod_t *argp3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg3 = *argp3; 
  result = (mp_limb_t)nmod_div(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  nmod_t arg3 ;
  nmod_t *argp3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg3 = *argp3; 
  result = (mp_limb_t)nmod_pow_ui(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_t *arg1 = (nmod_t *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  nmod_init(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1vec_1init(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  mp_limb_signed_t arg1 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  result = (mp_ptr)_nmod_vec_init(arg1);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1vec_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  _nmod_vec_clear(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1vec_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_vec_randtest(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1vec_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _nmod_vec_zero(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1vec_1max_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_t)_nmod_vec_max_bits((unsigned long const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _nmod_vec_set(arg1,(unsigned long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1vec_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _nmod_vec_swap(arg1,arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1vec_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_nmod_vec_equal((unsigned long const *)arg1,(unsigned long const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1vec_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)_nmod_vec_is_zero((unsigned long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1vec_1reduce(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_vec_reduce(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1vec_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_vec_add(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1vec_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_vec_sub(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1vec_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_vec_neg(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1vec_1scalar_1mul_1nmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_vec_scalar_mul_nmod(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1vec_1scalar_1mul_1nmod_1shoup(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_vec_scalar_mul_nmod_shoup(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1vec_1scalar_1addmul_1nmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_vec_scalar_addmul_nmod(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1vec_1dot_1bound_1limbs(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mp_limb_signed_t arg1 ;
  nmod_t arg2 ;
  nmod_t *argp2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (mp_limb_signed_t)jarg1; 
  argp2 = *(nmod_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg2 = *argp2; 
  result = (int)_nmod_vec_dot_bound_limbs(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1vec_1dot(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  int arg5 ;
  nmod_t *argp4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg4 = *argp4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_t)_nmod_vec_dot((unsigned long const *)arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1vec_1dot_1ptr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_ptr *arg2 = (mp_ptr *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  int arg6 ;
  nmod_t *argp5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = *(mp_ptr **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg5 = *argp5; 
  arg6 = (int)jarg6; 
  result = (mp_limb_t)_nmod_vec_dot_ptr((unsigned long const *)arg1,(unsigned long *const *)arg2,arg3,arg4,arg5,arg6);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1table_1entry_1struct_1gammapow_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_discrete_log_pohlig_hellman_table_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_table_entry_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_table_entry_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->gammapow = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1table_1entry_1struct_1gammapow_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_table_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_table_entry_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_table_entry_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->gammapow);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1table_1entry_1struct_1cm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_discrete_log_pohlig_hellman_table_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_table_entry_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_table_entry_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->cm = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1table_1entry_1struct_1cm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_table_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_table_entry_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_table_entry_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->cm);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1nmod_1discrete_1log_1pohlig_1hellman_1table_1entry_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_table_entry_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (nmod_discrete_log_pohlig_hellman_table_entry_struct *)new nmod_discrete_log_pohlig_hellman_table_entry_struct();
  *(nmod_discrete_log_pohlig_hellman_table_entry_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1nmod_1discrete_1log_1pohlig_1hellman_1table_1entry_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  nmod_discrete_log_pohlig_hellman_table_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_table_entry_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(nmod_discrete_log_pohlig_hellman_table_entry_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1exp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->exp = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1exp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->exp);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1prime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->prime = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1prime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->prime);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1gamma_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->gamma = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1gamma_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->gamma);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1gammainv_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->gammainv = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1gammainv_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->gammainv);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1startingbeta_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->startingbeta = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1startingbeta_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->startingbeta);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1co_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->co = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1co_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->co);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1startinge_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->startinge = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1startinge_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->startinge);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1idem_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->idem = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1idem_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->idem);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1cbound_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->cbound = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1cbound_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->cbound);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1dbound_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->dbound = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1dbound_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->dbound);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1table_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  nmod_discrete_log_pohlig_hellman_table_entry_struct *arg2 = (nmod_discrete_log_pohlig_hellman_table_entry_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  arg2 = *(nmod_discrete_log_pohlig_hellman_table_entry_struct **)&jarg2; 
  if (arg1) (arg1)->table = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct_1table_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  nmod_discrete_log_pohlig_hellman_table_entry_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  result = (nmod_discrete_log_pohlig_hellman_table_entry_struct *) ((arg1)->table);
  *(nmod_discrete_log_pohlig_hellman_table_entry_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (nmod_discrete_log_pohlig_hellman_entry_struct *)new nmod_discrete_log_pohlig_hellman_entry_struct();
  *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1nmod_1discrete_1log_1pohlig_1hellman_1entry_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  nmod_discrete_log_pohlig_hellman_entry_struct *arg1 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1struct_1mod_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_discrete_log_pohlig_hellman_struct *arg1 = (nmod_discrete_log_pohlig_hellman_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->mod = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1struct_1mod_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_struct *arg1 = (nmod_discrete_log_pohlig_hellman_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  result = (nmod_t *)& ((arg1)->mod);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1struct_1alpha_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_discrete_log_pohlig_hellman_struct *arg1 = (nmod_discrete_log_pohlig_hellman_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->alpha = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1struct_1alpha_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_struct *arg1 = (nmod_discrete_log_pohlig_hellman_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->alpha);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1struct_1alphainv_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_discrete_log_pohlig_hellman_struct *arg1 = (nmod_discrete_log_pohlig_hellman_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->alphainv = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1struct_1alphainv_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_struct *arg1 = (nmod_discrete_log_pohlig_hellman_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->alphainv);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1struct_1num_1factors_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_discrete_log_pohlig_hellman_struct *arg1 = (nmod_discrete_log_pohlig_hellman_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->num_factors = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1struct_1num_1factors_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_struct *arg1 = (nmod_discrete_log_pohlig_hellman_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->num_factors);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1struct_1entries_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_discrete_log_pohlig_hellman_struct *arg1 = (nmod_discrete_log_pohlig_hellman_struct *) 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *arg2 = (nmod_discrete_log_pohlig_hellman_entry_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  arg2 = *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jarg2; 
  if (arg1) (arg1)->entries = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1struct_1entries_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_struct *arg1 = (nmod_discrete_log_pohlig_hellman_struct *) 0 ;
  nmod_discrete_log_pohlig_hellman_entry_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  result = (nmod_discrete_log_pohlig_hellman_entry_struct *) ((arg1)->entries);
  *(nmod_discrete_log_pohlig_hellman_entry_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1nmod_1discrete_1log_1pohlig_1hellman_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (nmod_discrete_log_pohlig_hellman_struct *)new nmod_discrete_log_pohlig_hellman_struct();
  *(nmod_discrete_log_pohlig_hellman_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1nmod_1discrete_1log_1pohlig_1hellman_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  nmod_discrete_log_pohlig_hellman_struct *arg1 = (nmod_discrete_log_pohlig_hellman_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_discrete_log_pohlig_hellman_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  nmod_discrete_log_pohlig_hellman_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_discrete_log_pohlig_hellman_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  nmod_discrete_log_pohlig_hellman_clear(arg1);
  
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1precompute_1prime(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jdouble jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_struct *arg1 ;
  mp_limb_t arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (double)nmod_discrete_log_pohlig_hellman_precompute_prime(arg1,arg2);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1run(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)nmod_discrete_log_pohlig_hellman_run((nmod_discrete_log_pohlig_hellman_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1discrete_1log_1pohlig_1hellman_1primitive_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_discrete_log_pohlig_hellman_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_discrete_log_pohlig_hellman_struct **)&jarg1; 
  result = (mp_limb_t)nmod_discrete_log_pohlig_hellman_primitive_root((nmod_discrete_log_pohlig_hellman_struct const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1PTHREAD_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CSIGNAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x000000ff);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1VM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00000100);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1FS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00000200);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1FILES_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00000400);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1SIGHAND_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00000800);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1PIDFD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00001000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1PTRACE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00002000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1VFORK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00004000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1PARENT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00008000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1THREAD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00010000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1NEWNS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00020000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1SYSVSEM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00040000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1SETTLS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00080000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1PARENT_1SETTID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00100000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1CHILD_1CLEARTID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00200000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1DETACHED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00400000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1UNTRACED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00800000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1CHILD_1SETTID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x01000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1NEWCGROUP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x02000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1NEWUTS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x04000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1NEWIPC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x08000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1NEWUSER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x10000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1NEWPID_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x20000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1NEWNET_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x40000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1IO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x80000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_CLONE_1CLEAR_1SIGHAND_1get(JNIEnv *jenv, jclass jcls) {
  jobject jresult = 0 ;
  unsigned long long result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long long)(0x100000000ULL);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_CLONE_1INTO_1CGROUP_1get(JNIEnv *jenv, jclass jcls) {
  jobject jresult = 0 ;
  unsigned long long result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long long)(0x200000000ULL);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1NEWTIME_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x00000080);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_clone_1args_1flags_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (__u64)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (__u64)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->flags = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_clone_1args_1flags_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  result = (__u64) ((arg1)->flags);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_clone_1args_1pidfd_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (__u64)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (__u64)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->pidfd = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_clone_1args_1pidfd_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  result = (__u64) ((arg1)->pidfd);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_clone_1args_1child_1tid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (__u64)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (__u64)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->child_tid = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_clone_1args_1child_1tid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  result = (__u64) ((arg1)->child_tid);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_clone_1args_1parent_1tid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (__u64)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (__u64)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->parent_tid = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_clone_1args_1parent_1tid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  result = (__u64) ((arg1)->parent_tid);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_clone_1args_1exit_1signal_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (__u64)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (__u64)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->exit_signal = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_clone_1args_1exit_1signal_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  result = (__u64) ((arg1)->exit_signal);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_clone_1args_1stack_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (__u64)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (__u64)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->stack = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_clone_1args_1stack_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  result = (__u64) ((arg1)->stack);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_clone_1args_1stack_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (__u64)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (__u64)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->stack_size = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_clone_1args_1stack_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  result = (__u64) ((arg1)->stack_size);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_clone_1args_1tls_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (__u64)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (__u64)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->tls = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_clone_1args_1tls_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  result = (__u64) ((arg1)->tls);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_clone_1args_1set_1tid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (__u64)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (__u64)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->set_tid = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_clone_1args_1set_1tid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  result = (__u64) ((arg1)->set_tid);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_clone_1args_1set_1tid_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (__u64)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (__u64)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->set_tid_size = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_clone_1args_1set_1tid_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  result = (__u64) ((arg1)->set_tid_size);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_clone_1args_1cgroup_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jobject jarg2) {
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  {
    jclass clazz;
    jmethodID mid;
    jbyteArray ba;
    jbyte* bae;
    jsize sz;
    int i;
    
    if (!jarg2) {
      SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "BigInteger null");
      return ;
    }
    clazz = jenv->GetObjectClass(jarg2);
    mid = jenv->GetMethodID(clazz, "toByteArray", "()[B");
    ba = (jbyteArray)jenv->CallObjectMethod(jarg2, mid);
    bae = jenv->GetByteArrayElements(ba, 0);
    sz = jenv->GetArrayLength(ba);
    arg2 = 0;
    if (sz > 0) {
      arg2 = (__u64)(signed char)bae[0];
      for(i=1; i<sz; i++) {
        arg2 = (arg2 << 8) | (__u64)(unsigned char)bae[i];
      }
    }
    jenv->ReleaseByteArrayElements(ba, bae, 0);
  }
  if (arg1) (arg1)->cgroup = arg2;
}


SWIGEXPORT jobject JNICALL Java_arblib_arblibJNI_clone_1args_1cgroup_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jobject jresult = 0 ;
  clone_args *arg1 = (clone_args *) 0 ;
  __u64 result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(clone_args **)&jarg1; 
  result = (__u64) ((arg1)->cgroup);
  {
    jbyteArray ba = jenv->NewByteArray(9);
    jbyte* bae = jenv->GetByteArrayElements(ba, 0);
    jclass clazz = jenv->FindClass("java/math/BigInteger");
    jmethodID mid = jenv->GetMethodID(clazz, "<init>", "([B)V");
    jobject bigint;
    int i;
    
    bae[0] = 0;
    for(i=1; i<9; i++ ) {
      bae[i] = (jbyte)(result>>8*(8-i));
    }
    
    jenv->ReleaseByteArrayElements(ba, bae, 0);
    bigint = jenv->NewObject(clazz, mid, ba);
    jenv->DeleteLocalRef(ba);
    jresult = bigint;
  }
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1clone_1args(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  clone_args *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (clone_args *)new clone_args();
  *(clone_args **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1clone_1args(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  clone_args *arg1 = (clone_args *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(clone_args **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1ARGS_1SIZE_1VER0_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(64);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1ARGS_1SIZE_1VER1_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(80);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_CLONE_1ARGS_1SIZE_1VER2_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(88);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1NORMAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1FIFO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1RR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1BATCH_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1IDLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1DEADLINE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1RESET_1ON_1FORK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x40000000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1FLAG_1RESET_1ON_1FORK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x01);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1FLAG_1RECLAIM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x02);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1FLAG_1DL_1OVERRUN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x04);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1FLAG_1KEEP_1POLICY_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x08);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1FLAG_1KEEP_1PARAMS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x10);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1FLAG_1UTIL_1CLAMP_1MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x20);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1FLAG_1UTIL_1CLAMP_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0x40);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1FLAG_1KEEP_1ALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((0x08|0x10));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1FLAG_1UTIL_1CLAMP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((0x20|0x40));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_SCHED_1FLAG_1ALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((0x01|0x02|0x04|(0x08|0x10)|(0x20|0x40)));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1BITS_1SETJMP_1H_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1CREATE_1JOINABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_CREATE_JOINABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1CREATE_1DETACHED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_CREATE_DETACHED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1MUTEX_1TIMED_1NP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_MUTEX_TIMED_NP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1MUTEX_1RECURSIVE_1NP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_MUTEX_RECURSIVE_NP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1MUTEX_1ERRORCHECK_1NP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_MUTEX_ERRORCHECK_NP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1MUTEX_1ADAPTIVE_1NP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_MUTEX_ADAPTIVE_NP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1MUTEX_1NORMAL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_MUTEX_NORMAL;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1MUTEX_1RECURSIVE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_MUTEX_RECURSIVE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1MUTEX_1ERRORCHECK_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_MUTEX_ERRORCHECK;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1MUTEX_1DEFAULT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_MUTEX_DEFAULT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1MUTEX_1STALLED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_MUTEX_STALLED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1MUTEX_1STALLED_1NP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_MUTEX_STALLED_NP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1MUTEX_1ROBUST_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_MUTEX_ROBUST;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1MUTEX_1ROBUST_1NP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_MUTEX_ROBUST_NP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1PRIO_1NONE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_PRIO_NONE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1PRIO_1INHERIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_PRIO_INHERIT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1PRIO_1PROTECT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_PRIO_PROTECT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1RWLOCK_1PREFER_1READER_1NP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_RWLOCK_PREFER_READER_NP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1RWLOCK_1PREFER_1WRITER_1NP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_RWLOCK_PREFER_WRITER_NP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1RWLOCK_1PREFER_1WRITER_1NONRECURSIVE_1NP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1RWLOCK_1DEFAULT_1NP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_RWLOCK_DEFAULT_NP;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1INHERIT_1SCHED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_INHERIT_SCHED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1EXPLICIT_1SCHED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_EXPLICIT_SCHED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1SCOPE_1SYSTEM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_SCOPE_SYSTEM;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1SCOPE_1PROCESS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_SCOPE_PROCESS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1PROCESS_1PRIVATE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_PROCESS_PRIVATE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1PROCESS_1SHARED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_PROCESS_SHARED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1pthread_1cleanup_1buffer_1_1_1routine_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _pthread_cleanup_buffer *arg1 = (_pthread_cleanup_buffer *) 0 ;
  void (*arg2)(void *) = (void (*)(void *)) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_pthread_cleanup_buffer **)&jarg1; 
  arg2 = *(void (**)(void *))&jarg2; 
  if (arg1) (arg1)->__routine = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1pthread_1cleanup_1buffer_1_1_1routine_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _pthread_cleanup_buffer *arg1 = (_pthread_cleanup_buffer *) 0 ;
  void (*result)(void *) = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_pthread_cleanup_buffer **)&jarg1; 
  result = (void (*)(void *)) ((arg1)->__routine);
  *(void (**)(void *))&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1pthread_1cleanup_1buffer_1_1_1arg_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _pthread_cleanup_buffer *arg1 = (_pthread_cleanup_buffer *) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_pthread_cleanup_buffer **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  if (arg1) (arg1)->__arg = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1pthread_1cleanup_1buffer_1_1_1arg_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _pthread_cleanup_buffer *arg1 = (_pthread_cleanup_buffer *) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_pthread_cleanup_buffer **)&jarg1; 
  result = (void *) ((arg1)->__arg);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1pthread_1cleanup_1buffer_1_1_1canceltype_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _pthread_cleanup_buffer *arg1 = (_pthread_cleanup_buffer *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_pthread_cleanup_buffer **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->__canceltype = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1pthread_1cleanup_1buffer_1_1_1canceltype_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _pthread_cleanup_buffer *arg1 = (_pthread_cleanup_buffer *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_pthread_cleanup_buffer **)&jarg1; 
  result = (int) ((arg1)->__canceltype);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1pthread_1cleanup_1buffer_1_1_1prev_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  _pthread_cleanup_buffer *arg1 = (_pthread_cleanup_buffer *) 0 ;
  _pthread_cleanup_buffer *arg2 = (_pthread_cleanup_buffer *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(_pthread_cleanup_buffer **)&jarg1; 
  arg2 = *(_pthread_cleanup_buffer **)&jarg2; 
  if (arg1) (arg1)->__prev = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1pthread_1cleanup_1buffer_1_1_1prev_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _pthread_cleanup_buffer *arg1 = (_pthread_cleanup_buffer *) 0 ;
  _pthread_cleanup_buffer *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_pthread_cleanup_buffer **)&jarg1; 
  result = (_pthread_cleanup_buffer *) ((arg1)->__prev);
  *(_pthread_cleanup_buffer **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1pthread_1cleanup_1buffer(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  _pthread_cleanup_buffer *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (_pthread_cleanup_buffer *)new _pthread_cleanup_buffer();
  *(_pthread_cleanup_buffer **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1pthread_1cleanup_1buffer(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  _pthread_cleanup_buffer *arg1 = (_pthread_cleanup_buffer *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(_pthread_cleanup_buffer **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1CANCEL_1ENABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_CANCEL_ENABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1CANCEL_1DISABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_CANCEL_DISABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1CANCEL_1DEFERRED_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_CANCEL_DEFERRED;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1CANCEL_1ASYNCHRONOUS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)PTHREAD_CANCEL_ASYNCHRONOUS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1ONCE_1INIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_PTHREAD_1BARRIER_1SERIAL_1THREAD_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(-1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1create(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  jint jresult = 0 ;
  pthread_t *arg1 = (pthread_t *) 0 ;
  pthread_attr_t *arg2 = (pthread_attr_t *) 0 ;
  void *(*arg3)(void *) = (void *(*)(void *)) 0 ;
  void *arg4 = (void *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(pthread_t **)&jarg1; 
  arg2 = *(pthread_attr_t **)&jarg2; 
  arg3 = *(void *(**)(void *))&jarg3; 
  arg4 = *(void **)&jarg4; 
  result = (int)pthread_create(arg1,(pthread_attr_t const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1exit(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  void *arg1 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  pthread_exit(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1join(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  pthread_t arg1 ;
  void **arg2 = (void **) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (pthread_t)jarg1; 
  arg2 = *(void ***)&jarg2; 
  result = (int)pthread_join(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1detach(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  pthread_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (pthread_t)jarg1; 
  result = (int)pthread_detach(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_pthread_1self(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  pthread_t result;
  
  (void)jenv;
  (void)jcls;
  result = (pthread_t)pthread_self();
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  pthread_t arg1 ;
  pthread_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (pthread_t)jarg1; 
  arg2 = (pthread_t)jarg2; 
  result = (int)pthread_equal(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  result = (int)pthread_attr_init(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1destroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  result = (int)pthread_attr_destroy(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1getdetachstate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_attr_getdetachstate((pthread_attr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1setdetachstate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_attr_setdetachstate(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1getguardsize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  size_t *arg2 = (size_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = *(size_t **)&jarg2; 
  result = (int)pthread_attr_getguardsize((pthread_attr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1setguardsize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  size_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = (size_t)jarg2; 
  result = (int)pthread_attr_setguardsize(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1getschedparam(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  sched_param *arg2 = (sched_param *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = *(sched_param **)&jarg2; 
  result = (int)pthread_attr_getschedparam((pthread_attr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1setschedparam(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  sched_param *arg2 = (sched_param *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = *(sched_param **)&jarg2; 
  result = (int)pthread_attr_setschedparam(arg1,(sched_param const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1getschedpolicy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_attr_getschedpolicy((pthread_attr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1setschedpolicy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_attr_setschedpolicy(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1getinheritsched(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_attr_getinheritsched((pthread_attr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1setinheritsched(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_attr_setinheritsched(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1getscope(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_attr_getscope((pthread_attr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1setscope(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_attr_setscope(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1getstackaddr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  void **arg2 = (void **) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = *(void ***)&jarg2; 
  result = (int)pthread_attr_getstackaddr((pthread_attr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1setstackaddr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  void *arg2 = (void *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  result = (int)pthread_attr_setstackaddr(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1getstacksize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  size_t *arg2 = (size_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = *(size_t **)&jarg2; 
  result = (int)pthread_attr_getstacksize((pthread_attr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1setstacksize(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  size_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = (size_t)jarg2; 
  result = (int)pthread_attr_setstacksize(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1getstack(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  void **arg2 = (void **) 0 ;
  size_t *arg3 = (size_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = *(void ***)&jarg2; 
  arg3 = *(size_t **)&jarg3; 
  result = (int)pthread_attr_getstack((pthread_attr_t const *)arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1attr_1setstack(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  pthread_attr_t *arg1 = (pthread_attr_t *) 0 ;
  void *arg2 = (void *) 0 ;
  size_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_attr_t **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  arg3 = (size_t)jarg3; 
  result = (int)pthread_attr_setstack(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1setschedparam(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3) {
  jint jresult = 0 ;
  pthread_t arg1 ;
  int arg2 ;
  sched_param *arg3 = (sched_param *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (pthread_t)jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(sched_param **)&jarg3; 
  result = (int)pthread_setschedparam(arg1,arg2,(sched_param const *)arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1getschedparam(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  pthread_t arg1 ;
  int *arg2 = (int *) 0 ;
  sched_param *arg3 = (sched_param *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (pthread_t)jarg1; 
  arg2 = *(int **)&jarg2; 
  arg3 = *(sched_param **)&jarg3; 
  result = (int)pthread_getschedparam(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1setschedprio(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  pthread_t arg1 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (pthread_t)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_setschedprio(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1once(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  pthread_once_t *arg1 = (pthread_once_t *) 0 ;
  void (*arg2)(void) = (void (*)(void)) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_once_t **)&jarg1; 
  arg2 = *(void (**)(void))&jarg2; 
  result = (int)pthread_once(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1setcancelstate(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2) {
  jint jresult = 0 ;
  int arg1 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_setcancelstate(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1setcanceltype(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2) {
  jint jresult = 0 ;
  int arg1 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_setcanceltype(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1cancel(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  pthread_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (pthread_t)jarg1; 
  result = (int)pthread_cancel(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_pthread_1testcancel(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  pthread_testcancel();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1unwind_1buf_1t_1_1_1pad_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_unwind_buf_t *arg1 = (__pthread_unwind_buf_t *) 0 ;
  void **arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_unwind_buf_t **)&jarg1; 
  arg2 = *(void ***)&jarg2; 
  {
    size_t ii;
    void * *b = (void * *) arg1->__pad;
    for (ii = 0; ii < (size_t)4; ii++) b[ii] = *((void * *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1unwind_1buf_1t_1_1_1pad_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_unwind_buf_t *arg1 = (__pthread_unwind_buf_t *) 0 ;
  void **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_unwind_buf_t **)&jarg1; 
  result = (void **)(void **) ((arg1)->__pad);
  *(void ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1pthread_1unwind_1buf_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __pthread_unwind_buf_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__pthread_unwind_buf_t *)new __pthread_unwind_buf_t();
  *(__pthread_unwind_buf_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1pthread_1unwind_1buf_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __pthread_unwind_buf_t *arg1 = (__pthread_unwind_buf_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__pthread_unwind_buf_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1cleanup_1frame_1_1_1cancel_1routine_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_cleanup_frame *arg1 = (__pthread_cleanup_frame *) 0 ;
  void (*arg2)(void *) = (void (*)(void *)) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cleanup_frame **)&jarg1; 
  arg2 = *(void (**)(void *))&jarg2; 
  if (arg1) (arg1)->__cancel_routine = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1cleanup_1frame_1_1_1cancel_1routine_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_cleanup_frame *arg1 = (__pthread_cleanup_frame *) 0 ;
  void (*result)(void *) = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cleanup_frame **)&jarg1; 
  result = (void (*)(void *)) ((arg1)->__cancel_routine);
  *(void (**)(void *))&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1cleanup_1frame_1_1_1cancel_1arg_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __pthread_cleanup_frame *arg1 = (__pthread_cleanup_frame *) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cleanup_frame **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  if (arg1) (arg1)->__cancel_arg = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1pthread_1cleanup_1frame_1_1_1cancel_1arg_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  __pthread_cleanup_frame *arg1 = (__pthread_cleanup_frame *) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cleanup_frame **)&jarg1; 
  result = (void *) ((arg1)->__cancel_arg);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1cleanup_1frame_1_1_1do_1it_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __pthread_cleanup_frame *arg1 = (__pthread_cleanup_frame *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cleanup_frame **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->__do_it = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1pthread_1cleanup_1frame_1_1_1do_1it_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __pthread_cleanup_frame *arg1 = (__pthread_cleanup_frame *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cleanup_frame **)&jarg1; 
  result = (int) ((arg1)->__do_it);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1cleanup_1frame_1_1_1cancel_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  __pthread_cleanup_frame *arg1 = (__pthread_cleanup_frame *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cleanup_frame **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->__cancel_type = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1pthread_1cleanup_1frame_1_1_1cancel_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  __pthread_cleanup_frame *arg1 = (__pthread_cleanup_frame *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_cleanup_frame **)&jarg1; 
  result = (int) ((arg1)->__cancel_type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1_1pthread_1cleanup_1frame(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __pthread_cleanup_frame *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__pthread_cleanup_frame *)new __pthread_cleanup_frame();
  *(__pthread_cleanup_frame **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1_1pthread_1cleanup_1frame(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  __pthread_cleanup_frame *arg1 = (__pthread_cleanup_frame *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__pthread_cleanup_frame **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1register_1cancel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  __pthread_unwind_buf_t *arg1 = (__pthread_unwind_buf_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_unwind_buf_t **)&jarg1; 
  __pthread_register_cancel(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1unregister_1cancel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  __pthread_unwind_buf_t *arg1 = (__pthread_unwind_buf_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_unwind_buf_t **)&jarg1; 
  __pthread_unregister_cancel(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1pthread_1unwind_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  __pthread_unwind_buf_t *arg1 = (__pthread_unwind_buf_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__pthread_unwind_buf_t **)&jarg1; 
  __pthread_unwind_next(arg1);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1sigsetjmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  __jmp_buf_tag *arg1 = (__jmp_buf_tag *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(__jmp_buf_tag **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)__sigsetjmp(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutex_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  pthread_mutexattr_t *arg2 = (pthread_mutexattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  arg2 = *(pthread_mutexattr_t **)&jarg2; 
  result = (int)pthread_mutex_init(arg1,(pthread_mutexattr_t const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutex_1destroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  result = (int)pthread_mutex_destroy(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutex_1trylock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  result = (int)pthread_mutex_trylock(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutex_1lock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  result = (int)pthread_mutex_lock(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutex_1timedlock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  timespec *arg2 = (timespec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  arg2 = *(timespec **)&jarg2; 
  result = (int)pthread_mutex_timedlock(arg1,(timespec const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutex_1unlock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  result = (int)pthread_mutex_unlock(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutex_1getprioceiling(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_mutex_getprioceiling((pthread_mutex_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutex_1setprioceiling(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  jint jresult = 0 ;
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  int arg2 ;
  int *arg3 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = *(int **)&jarg3; 
  result = (int)pthread_mutex_setprioceiling(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutex_1consistent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_mutex_t *arg1 = (pthread_mutex_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutex_t **)&jarg1; 
  result = (int)pthread_mutex_consistent(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  result = (int)pthread_mutexattr_init(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1destroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  result = (int)pthread_mutexattr_destroy(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1getpshared(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_mutexattr_getpshared((pthread_mutexattr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1setpshared(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_mutexattr_setpshared(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1gettype(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_mutexattr_gettype((pthread_mutexattr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1settype(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_mutexattr_settype(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1getprotocol(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_mutexattr_getprotocol((pthread_mutexattr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1setprotocol(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_mutexattr_setprotocol(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1getprioceiling(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_mutexattr_getprioceiling((pthread_mutexattr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1setprioceiling(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_mutexattr_setprioceiling(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1getrobust(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_mutexattr_getrobust((pthread_mutexattr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1mutexattr_1setrobust(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_mutexattr_t *arg1 = (pthread_mutexattr_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_mutexattr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_mutexattr_setrobust(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  pthread_rwlockattr_t *arg2 = (pthread_rwlockattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  arg2 = *(pthread_rwlockattr_t **)&jarg2; 
  result = (int)pthread_rwlock_init(arg1,(pthread_rwlockattr_t const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1destroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  result = (int)pthread_rwlock_destroy(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1rdlock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  result = (int)pthread_rwlock_rdlock(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1tryrdlock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  result = (int)pthread_rwlock_tryrdlock(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1timedrdlock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  timespec *arg2 = (timespec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  arg2 = *(timespec **)&jarg2; 
  result = (int)pthread_rwlock_timedrdlock(arg1,(timespec const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1wrlock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  result = (int)pthread_rwlock_wrlock(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1trywrlock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  result = (int)pthread_rwlock_trywrlock(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1timedwrlock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  timespec *arg2 = (timespec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  arg2 = *(timespec **)&jarg2; 
  result = (int)pthread_rwlock_timedwrlock(arg1,(timespec const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlock_1unlock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_rwlock_t *arg1 = (pthread_rwlock_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlock_t **)&jarg1; 
  result = (int)pthread_rwlock_unlock(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlockattr_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_rwlockattr_t *arg1 = (pthread_rwlockattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlockattr_t **)&jarg1; 
  result = (int)pthread_rwlockattr_init(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlockattr_1destroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_rwlockattr_t *arg1 = (pthread_rwlockattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlockattr_t **)&jarg1; 
  result = (int)pthread_rwlockattr_destroy(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlockattr_1getpshared(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_rwlockattr_t *arg1 = (pthread_rwlockattr_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlockattr_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_rwlockattr_getpshared((pthread_rwlockattr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlockattr_1setpshared(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_rwlockattr_t *arg1 = (pthread_rwlockattr_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlockattr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_rwlockattr_setpshared(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlockattr_1getkind_1np(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_rwlockattr_t *arg1 = (pthread_rwlockattr_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlockattr_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_rwlockattr_getkind_np((pthread_rwlockattr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1rwlockattr_1setkind_1np(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_rwlockattr_t *arg1 = (pthread_rwlockattr_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_rwlockattr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_rwlockattr_setkind_np(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1cond_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  pthread_cond_t *arg1 = (pthread_cond_t *) 0 ;
  pthread_condattr_t *arg2 = (pthread_condattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(pthread_cond_t **)&jarg1; 
  arg2 = *(pthread_condattr_t **)&jarg2; 
  result = (int)pthread_cond_init(arg1,(pthread_condattr_t const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1cond_1destroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_cond_t *arg1 = (pthread_cond_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_cond_t **)&jarg1; 
  result = (int)pthread_cond_destroy(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1cond_1signal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_cond_t *arg1 = (pthread_cond_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_cond_t **)&jarg1; 
  result = (int)pthread_cond_signal(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1cond_1broadcast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_cond_t *arg1 = (pthread_cond_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_cond_t **)&jarg1; 
  result = (int)pthread_cond_broadcast(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1cond_1wait(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  pthread_cond_t *arg1 = (pthread_cond_t *) 0 ;
  pthread_mutex_t *arg2 = (pthread_mutex_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(pthread_cond_t **)&jarg1; 
  arg2 = *(pthread_mutex_t **)&jarg2; 
  result = (int)pthread_cond_wait(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1cond_1timedwait(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  pthread_cond_t *arg1 = (pthread_cond_t *) 0 ;
  pthread_mutex_t *arg2 = (pthread_mutex_t *) 0 ;
  timespec *arg3 = (timespec *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(pthread_cond_t **)&jarg1; 
  arg2 = *(pthread_mutex_t **)&jarg2; 
  arg3 = *(timespec **)&jarg3; 
  result = (int)pthread_cond_timedwait(arg1,arg2,(timespec const *)arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1condattr_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_condattr_t *arg1 = (pthread_condattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_condattr_t **)&jarg1; 
  result = (int)pthread_condattr_init(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1condattr_1destroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_condattr_t *arg1 = (pthread_condattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_condattr_t **)&jarg1; 
  result = (int)pthread_condattr_destroy(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1condattr_1getpshared(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_condattr_t *arg1 = (pthread_condattr_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_condattr_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_condattr_getpshared((pthread_condattr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1condattr_1setpshared(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_condattr_t *arg1 = (pthread_condattr_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_condattr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_condattr_setpshared(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1condattr_1getclock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_condattr_t *arg1 = (pthread_condattr_t *) 0 ;
  __clockid_t *arg2 = (__clockid_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_condattr_t **)&jarg1; 
  arg2 = *(__clockid_t **)&jarg2; 
  result = (int)pthread_condattr_getclock((pthread_condattr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1condattr_1setclock(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_condattr_t *arg1 = (pthread_condattr_t *) 0 ;
  __clockid_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_condattr_t **)&jarg1; 
  arg2 = (__clockid_t)jarg2; 
  result = (int)pthread_condattr_setclock(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1spin_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  pthread_spinlock_t *arg1 = (pthread_spinlock_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_spinlock_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_spin_init((int volatile *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1spin_1destroy(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  pthread_spinlock_t *arg1 = (pthread_spinlock_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_spinlock_t **)&jarg1; 
  result = (int)pthread_spin_destroy((int volatile *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1spin_1lock(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  pthread_spinlock_t *arg1 = (pthread_spinlock_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_spinlock_t **)&jarg1; 
  result = (int)pthread_spin_lock((int volatile *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1spin_1trylock(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  pthread_spinlock_t *arg1 = (pthread_spinlock_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_spinlock_t **)&jarg1; 
  result = (int)pthread_spin_trylock((int volatile *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1spin_1unlock(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  pthread_spinlock_t *arg1 = (pthread_spinlock_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_spinlock_t **)&jarg1; 
  result = (int)pthread_spin_unlock((int volatile *)arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1barrier_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  pthread_barrier_t *arg1 = (pthread_barrier_t *) 0 ;
  pthread_barrierattr_t *arg2 = (pthread_barrierattr_t *) 0 ;
  unsigned int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(pthread_barrier_t **)&jarg1; 
  arg2 = *(pthread_barrierattr_t **)&jarg2; 
  arg3 = (unsigned int)jarg3; 
  result = (int)pthread_barrier_init(arg1,(pthread_barrierattr_t const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1barrier_1destroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_barrier_t *arg1 = (pthread_barrier_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrier_t **)&jarg1; 
  result = (int)pthread_barrier_destroy(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1barrier_1wait(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_barrier_t *arg1 = (pthread_barrier_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrier_t **)&jarg1; 
  result = (int)pthread_barrier_wait(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1barrierattr_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_barrierattr_t *arg1 = (pthread_barrierattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrierattr_t **)&jarg1; 
  result = (int)pthread_barrierattr_init(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1barrierattr_1destroy(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  pthread_barrierattr_t *arg1 = (pthread_barrierattr_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrierattr_t **)&jarg1; 
  result = (int)pthread_barrierattr_destroy(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1barrierattr_1getpshared(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  pthread_barrierattr_t *arg1 = (pthread_barrierattr_t *) 0 ;
  int *arg2 = (int *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrierattr_t **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  result = (int)pthread_barrierattr_getpshared((pthread_barrierattr_t const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1barrierattr_1setpshared(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  pthread_barrierattr_t *arg1 = (pthread_barrierattr_t *) 0 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(pthread_barrierattr_t **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (int)pthread_barrierattr_setpshared(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1key_1create(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  pthread_key_t *arg1 = (pthread_key_t *) 0 ;
  void (*arg2)(void *) = (void (*)(void *)) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(pthread_key_t **)&jarg1; 
  arg2 = *(void (**)(void *))&jarg2; 
  result = (int)pthread_key_create(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1key_1delete(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  pthread_key_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (pthread_key_t)jarg1; 
  result = (int)pthread_key_delete(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_pthread_1getspecific(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  pthread_key_t arg1 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (pthread_key_t)jarg1; 
  result = (void *)pthread_getspecific(arg1);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1setspecific(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  pthread_key_t arg1 ;
  void *arg2 = (void *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (pthread_key_t)jarg1; 
  arg2 = *(void **)&jarg2; 
  result = (int)pthread_setspecific(arg1,(void const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1getcpuclockid(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  pthread_t arg1 ;
  __clockid_t *arg2 = (__clockid_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (pthread_t)jarg1; 
  arg2 = *(__clockid_t **)&jarg2; 
  result = (int)pthread_getcpuclockid(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_pthread_1atfork(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  void (*arg1)(void) = (void (*)(void)) 0 ;
  void (*arg2)(void) = (void (*)(void)) 0 ;
  void (*arg3)(void) = (void (*)(void)) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void (**)(void))&jarg1; 
  arg2 = *(void (**)(void))&jarg2; 
  arg3 = *(void (**)(void))&jarg3; 
  result = (int)pthread_atfork(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1arr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  __mpz_struct *arg1 = (__mpz_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpz_struct **)&jarg1; 
  fmpz_arr = arg1;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1arr_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __mpz_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__mpz_struct *)fmpz_arr;
  *(__mpz_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1randstate_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  __gmp_randstate_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__gmp_randstate_struct **)&jarg1; 
  {
    size_t ii;
    __gmp_randstate_struct *b = (__gmp_randstate_struct *) fmpz_randstate;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((__gmp_randstate_struct *) arg1 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1randstate_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __gmp_randstate_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__gmp_randstate_struct *)fmpz_randstate;
  *(__gmp_randstate_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1preinvn_1struct_1dinv_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_preinvn_struct *arg1 = (fmpz_preinvn_struct *) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_preinvn_struct **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  if (arg1) (arg1)->dinv = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1preinvn_1struct_1dinv_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_preinvn_struct *arg1 = (fmpz_preinvn_struct *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_preinvn_struct **)&jarg1; 
  result = (mp_ptr) ((arg1)->dinv);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1preinvn_1struct_1n_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_preinvn_struct *arg1 = (fmpz_preinvn_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_preinvn_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->n = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1preinvn_1struct_1n_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_preinvn_struct *arg1 = (fmpz_preinvn_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_preinvn_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->n);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1preinvn_1struct_1norm_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_preinvn_struct *arg1 = (fmpz_preinvn_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_preinvn_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->norm = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1preinvn_1struct_1norm_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_preinvn_struct *arg1 = (fmpz_preinvn_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_preinvn_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->norm);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpz_1preinvn_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpz_preinvn_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpz_preinvn_struct *)new fmpz_preinvn_struct();
  *(fmpz_preinvn_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpz_1preinvn_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz_preinvn_struct *arg1 = (fmpz_preinvn_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz_preinvn_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1block_1header_1s_1count_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_block_header_s *arg1 = (fmpz_block_header_s *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_block_header_s **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->count = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1block_1header_1s_1count_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_block_header_s *arg1 = (fmpz_block_header_s *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_block_header_s **)&jarg1; 
  result = (int) ((arg1)->count);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1block_1header_1s_1thread_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_block_header_s *arg1 = (fmpz_block_header_s *) 0 ;
  pthread_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_block_header_s **)&jarg1; 
  arg2 = (pthread_t)jarg2; 
  if (arg1) (arg1)->thread = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1block_1header_1s_1thread_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_block_header_s *arg1 = (fmpz_block_header_s *) 0 ;
  pthread_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_block_header_s **)&jarg1; 
  result = (pthread_t) ((arg1)->thread);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1block_1header_1s_1address_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_block_header_s *arg1 = (fmpz_block_header_s *) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_block_header_s **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  if (arg1) (arg1)->address = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1block_1header_1s_1address_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_block_header_s *arg1 = (fmpz_block_header_s *) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_block_header_s **)&jarg1; 
  result = (void *) ((arg1)->address);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpz_1block_1header_1s(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpz_block_header_s *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpz_block_header_s *)new fmpz_block_header_s();
  *(fmpz_block_header_s **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpz_1block_1header_1s(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz_block_header_s *arg1 = (fmpz_block_header_s *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz_block_header_s **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_COEFF_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)((((1L) << (64-2)) -(1L)));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_COEFF_1MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)((-(((1L) << (64-2)) -(1L))));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1new_1mpz(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  __mpz_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (__mpz_struct *)_fmpz_new_mpz();
  *(__mpz_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1clear_1mpz(JNIEnv *jenv, jclass jcls, jint jarg1) {
  fmpz arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (fmpz)jarg1; 
  _fmpz_clear_mpz(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1cleanup_1mpz_1content(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  _fmpz_cleanup_mpz_content();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1cleanup(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  _fmpz_cleanup();
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1promote(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  fmpz *arg1 ;
  __mpz_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (__mpz_struct *)_fmpz_promote(arg1);
  *(__mpz_struct **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1promote_1val(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  fmpz *arg1 ;
  __mpz_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (__mpz_struct *)_fmpz_promote_val(arg1);
  *(__mpz_struct **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1demote(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz *arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  _fmpz_demote(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1demote_1val(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz *arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  _fmpz_demote_val(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1init_1readonly_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  __mpz_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(__mpz_struct **)&jarg2; 
  _fmpz_init_readonly_mpz(arg1,(__mpz_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1clear_1readonly_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  __mpz_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpz_struct **)&jarg1; 
  _fmpz_clear_readonly_mpz(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1init(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz *arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  fmpz_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1init2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_init2(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1init_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_init_set(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1init_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_init_set_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1init_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  fmpz *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpz_init_set_si(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz *arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  fmpz_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1randbits(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_randbits(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1randm(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  flint_rand_s *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_randm(arg1,arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_randtest(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1randtest_1unsigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_randtest_unsigned(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1randtest_1not_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_randtest_not_zero(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1randtest_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  flint_rand_s *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_randtest_mod(arg1,arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1randtest_1mod_1signed(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  flint_rand_s *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_randtest_mod_signed(arg1,arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1randprime(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  fmpz *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (int)jarg4; 
  fmpz_randprime(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1get_1si(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (mp_limb_signed_t)fmpz_get_si((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1get_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (mp_limb_t)fmpz_get_ui((long const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1get_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_get_uiui(arg1,arg2,(long const (*))arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  fmpz *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpz_set_si(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_set_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1neg_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_neg_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1set_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_set_uiui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1neg_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_neg_uiui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1set_1signed_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_set_signed_uiui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1set_1signed_1uiuiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_set_signed_uiuiui(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1set_1ui_1array(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_set_ui_array(arg1,(unsigned long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1get_1ui_1array(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_signed_t arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_get_ui_array(arg1,arg2,(long const (*))arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1get_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __mpz_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpz_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_get_mpz(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1set_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  __mpz_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(__mpz_struct **)&jarg2; 
  fmpz_set_mpz(arg1,(__mpz_struct const (*))arg2);
  
  
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fmpz_1get_1d(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jdouble jresult = 0 ;
  fmpz *arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (double)fmpz_get_d((long const (*))arg1);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2) {
  fmpz *arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (double)jarg2; 
  fmpz_set_d(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1get_1mpf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __mpf_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpf_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_get_mpf(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1set_1mpf(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  __mpf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(__mpf_struct **)&jarg2; 
  fmpz_set_mpf(arg1,(__mpf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1get_1mpfr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  __mpfr_struct *arg1 ;
  fmpz *arg2 ;
  mpfr_rnd_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  fmpz_get_mpfr(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1get_1mpn(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  mp_ptr *arg1 = (mp_ptr *) 0 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)fmpz_get_mpn(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  result = (int)fmpz_set_str(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1mpz_1init_1set_1readonly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  __mpz_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpz_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  flint_mpz_init_set_readonly(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1mpz_1clear_1readonly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  __mpz_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpz_struct **)&jarg1; 
  flint_mpz_clear_readonly(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1init_1set_1readonly(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  __mpz_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(__mpz_struct **)&jarg2; 
  fmpz_init_set_readonly(arg1,(__mpz_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1clear_1readonly(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz *arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  fmpz_clear_readonly(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1abs_1fits_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_abs_fits_ui((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1fits_1si(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_fits_si((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz *arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  fmpz_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1one(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz *arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  fmpz_one(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_is_zero((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_is_one((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1pm1(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_is_pm1((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_set(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)fmpz_equal((long const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1equal_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)fmpz_equal_si((long const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1equal_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)fmpz_equal_ui((long const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1read(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_read(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1fread(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)fmpz_fread(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1inp_1raw(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  fmpz *arg1 ;
  FILE *arg2 = (FILE *) 0 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(FILE **)&jarg2; 
  result = fmpz_inp_raw(arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1print(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_print((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)fmpz_fprint(arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1out_1raw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz *arg2 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = fmpz_out_raw(arg1,(long const (*))arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1sizeinbase(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jlong jresult = 0 ;
  fmpz *arg1 ;
  int arg2 ;
  size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (int)jarg2; 
  result = fmpz_sizeinbase((long const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_fmpz_1get_1str(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  fmpz *arg3 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (int)jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (char *)fmpz_get_str(arg1,arg2,(long const (*))arg3);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_swap(arg1,arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)fmpz_cmp((long const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1cmp_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)fmpz_cmp_ui((long const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1cmp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)fmpz_cmp_si((long const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1cmpabs(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)fmpz_cmpabs((long const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1even(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_is_even((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1odd(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_is_odd((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1size(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (mp_size_t)fmpz_size((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1sgn(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_sgn((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (mp_limb_t)fmpz_bits((long const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1val2(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (mp_limb_t)fmpz_val2((long const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_neg(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_abs(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_add(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_sub(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mul_ui(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_mul_si(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_mul(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mul_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mul_2exp(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1add_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_add_ui(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1sub_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_sub_ui(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1add_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_add_si(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1sub_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_sub_si(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1addmul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_addmul_ui(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1submul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_submul_ui(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_addmul(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1submul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_submul(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1fmma(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  fmpz_fmma(arg1,(long const (*))arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1fmms(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  fmpz_fmms(arg1,(long const (*))arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_pow_ui(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1pow_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (int)fmpz_pow_fmpz(arg1,(long const (*))arg2,(long const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1powm_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  fmpz_powm_ui(arg1,(long const (*))arg2,arg3,(long const (*))arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1powm(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  fmpz_powm(arg1,(long const (*))arg2,(long const (*))arg3,(long const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1setbit(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_setbit(arg1,arg2);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1tstbit(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)fmpz_tstbit((long const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1clrbit(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_clrbit(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1complement(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_complement(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1combit(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_combit(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1and(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_and(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1or(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_or(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1xor(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_xor(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1popcnt(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (mp_limb_t)fmpz_popcnt((long const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fmpz_1dlog(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jdouble jresult = 0 ;
  fmpz *arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (double)fmpz_dlog((long const (*))arg1);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1flog(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (mp_limb_signed_t)fmpz_flog((long const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1flog_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_signed_t)fmpz_flog_ui((long const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1clog(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (mp_limb_signed_t)fmpz_clog((long const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1clog_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_signed_t)fmpz_clog_ui((long const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1sqrtmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (int)fmpz_sqrtmod(arg1,(long const (*))arg2,(long const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_sqrt(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1square(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_is_square((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_root(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1perfect_1power(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)fmpz_is_perfect_power(arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1sqrtrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_sqrtrem(arg1,arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1fdiv_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)fmpz_fdiv_ui((long const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1mod_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)fmpz_mod_ui(arg1,(long const (*))arg2,arg3);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_mod(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1smod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_smod(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1negmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_negmod(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1gcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_gcd(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1lcm(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_lcm(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1gcdinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  fmpz_gcdinv(arg1,arg2,(long const (*))arg3,(long const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1xgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  fmpz_xgcd(arg1,arg2,arg3,(long const (*))arg4,(long const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1xgcd_1partial(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  fmpz_xgcd_partial(arg1,arg2,arg3,arg4,(long const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1invmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (int)fmpz_invmod(arg1,(long const (*))arg2,(long const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1jacobi(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)fmpz_jacobi((long const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1divides_1mod_1list(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  fmpz_divides_mod_list(arg1,arg2,arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6);
  
  
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1remove(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jdouble jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  double arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (double)jarg3; 
  result = (mp_limb_signed_t)_fmpz_remove(arg1,(long const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1remove(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (mp_limb_signed_t)fmpz_remove(arg1,(long const (*))arg2,(long const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1divexact(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_divexact(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1divexact_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_divexact_si(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1divexact_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_divexact_ui(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1divisible(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)fmpz_divisible((long const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1divisible_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)fmpz_divisible_si((long const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1cdiv_1qr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  fmpz_cdiv_qr(arg1,arg2,(long const (*))arg3,(long const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1cdiv_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_cdiv_q(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1cdiv_1q_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_cdiv_q_si(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1cdiv_1q_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_cdiv_q_ui(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1cdiv_1q_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_cdiv_q_2exp(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1cdiv_1r_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_cdiv_r_2exp(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1cdiv_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)fmpz_cdiv_ui((long const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1fdiv_1qr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  fmpz_fdiv_qr(arg1,arg2,(long const (*))arg3,(long const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1fdiv_1qr_1preinvn(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz_preinvn_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(fmpz_preinvn_struct **)&jarg5; 
  fmpz_fdiv_qr_preinvn(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(fmpz_preinvn_struct const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1fdiv_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_fdiv_q(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1fdiv_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_fdiv_r(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1fdiv_1q_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_fdiv_q_ui(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1fdiv_1q_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_fdiv_q_si(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1fdiv_1q_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_fdiv_q_2exp(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1fdiv_1r_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_fdiv_r_2exp(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1tdiv_1q(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_tdiv_q(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1tdiv_1qr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  fmpz_tdiv_qr(arg1,arg2,(long const (*))arg3,(long const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1tdiv_1q_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_tdiv_q_ui(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1tdiv_1q_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_tdiv_q_si(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1tdiv_1r_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_tdiv_r_2exp(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1tdiv_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)fmpz_tdiv_ui((long const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1tdiv_1q_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_tdiv_q_2exp(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1preinvn_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_preinvn_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_preinvn_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_preinvn_init(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1preinvn_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_preinvn_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_preinvn_struct **)&jarg1; 
  fmpz_preinvn_clear(arg1);
  
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fmpz_1get_1d_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jdouble jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz *arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (double)fmpz_get_d_2exp(arg1,(long const (*))arg2);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1set_1d_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2, jint jarg3) {
  fmpz *arg1 ;
  double arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_set_d_2exp(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mul2_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_mul2_uiui(arg1,(long const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1divexact2_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_divexact2_uiui(arg1,(long const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mul_1tdiv_1q_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_mul_tdiv_q_2exp(arg1,(long const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mul_1si_1tdiv_1q_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_mul_si_tdiv_q_2exp(arg1,(long const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1fac_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_fac_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1fib_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_fib_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1bin_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_bin_uiui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1rfac_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_rfac_ui(arg1,(long const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1rfac_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_rfac_ui(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1rfac_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_rfac_uiui(arg1,arg2,arg3);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1bit_1pack(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  fmpz *arg4 ;
  int arg5 ;
  int arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  result = (int)fmpz_bit_pack(arg1,arg2,arg3,(long const (*))arg4,arg5,arg6);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1bit_1unpack(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  int arg5 ;
  int arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (int)jarg6; 
  result = (int)fmpz_bit_unpack(arg1,(unsigned long const *)arg2,arg3,arg4,arg5,arg6);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1bit_1unpack_1unsigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_bit_unpack_unsigned(arg1,(unsigned long const *)arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1CRT_1ui_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7, jlong jarg8, jint jarg9) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t arg6 ;
  fmpz *arg7 ;
  mp_limb_t arg8 ;
  int arg9 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_t)jarg8; 
  arg9 = (int)jarg9; 
  _fmpz_CRT_ui_precomp(arg1,(long const (*))arg2,(long const (*))arg3,arg4,arg5,arg6,(long const (*))arg7,arg8,arg9);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1CRT_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jint jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (int)jarg6; 
  fmpz_CRT_ui(arg1,(long const (*))arg2,(long const (*))arg3,arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1FMPZ_1LOG_1MULTI_1MOD_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1struct_1primes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_comb_struct *arg1 = (fmpz_comb_struct *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  if (arg1) (arg1)->primes = (mp_limb_t const *)arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1comb_1struct_1primes_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_comb_struct *arg1 = (fmpz_comb_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  result = (mp_limb_t *) ((arg1)->primes);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1struct_1num_1primes_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_comb_struct *arg1 = (fmpz_comb_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->num_primes = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1comb_1struct_1num_1primes_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_comb_struct *arg1 = (fmpz_comb_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->num_primes);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1struct_1n_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_comb_struct *arg1 = (fmpz_comb_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->n = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1comb_1struct_1n_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_comb_struct *arg1 = (fmpz_comb_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->n);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1struct_1comb_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_comb_struct *arg1 = (fmpz_comb_struct *) 0 ;
  fmpz **arg2 = (fmpz **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  arg2 = *(fmpz ***)&jarg2; 
  if (arg1) (arg1)->comb = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1comb_1struct_1comb_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_comb_struct *arg1 = (fmpz_comb_struct *) 0 ;
  fmpz **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  result = (fmpz **) ((arg1)->comb);
  *(fmpz ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1struct_1res_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_comb_struct *arg1 = (fmpz_comb_struct *) 0 ;
  fmpz **arg2 = (fmpz **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  arg2 = *(fmpz ***)&jarg2; 
  if (arg1) (arg1)->res = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1comb_1struct_1res_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_comb_struct *arg1 = (fmpz_comb_struct *) 0 ;
  fmpz **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  result = (fmpz **) ((arg1)->res);
  *(fmpz ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1struct_1mod_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_comb_struct *arg1 = (fmpz_comb_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->mod = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1comb_1struct_1mod_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_comb_struct *arg1 = (fmpz_comb_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  result = (nmod_t *) ((arg1)->mod);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpz_1comb_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpz_comb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpz_comb_struct *)new fmpz_comb_struct();
  *(fmpz_comb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpz_1comb_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz_comb_struct *arg1 = (fmpz_comb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1temp_1struct_1n_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_comb_temp_struct *arg1 = (fmpz_comb_temp_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_temp_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->n = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1comb_1temp_1struct_1n_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_comb_temp_struct *arg1 = (fmpz_comb_temp_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_temp_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->n);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1temp_1struct_1comb_1temp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_comb_temp_struct *arg1 = (fmpz_comb_temp_struct *) 0 ;
  fmpz **arg2 = (fmpz **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_temp_struct **)&jarg1; 
  arg2 = *(fmpz ***)&jarg2; 
  if (arg1) (arg1)->comb_temp = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1comb_1temp_1struct_1comb_1temp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_comb_temp_struct *arg1 = (fmpz_comb_temp_struct *) 0 ;
  fmpz **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_temp_struct **)&jarg1; 
  result = (fmpz **) ((arg1)->comb_temp);
  *(fmpz ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1temp_1struct_1temp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_comb_temp_struct *arg1 = (fmpz_comb_temp_struct *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_temp_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->temp;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1comb_1temp_1struct_1temp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_comb_temp_struct *arg1 = (fmpz_comb_temp_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_temp_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->temp);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1temp_1struct_1temp2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_comb_temp_struct *arg1 = (fmpz_comb_temp_struct *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_temp_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->temp2;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1comb_1temp_1struct_1temp2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_comb_temp_struct *arg1 = (fmpz_comb_temp_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_temp_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->temp2);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpz_1comb_1temp_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpz_comb_temp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpz_comb_temp_struct *)new fmpz_comb_temp_struct();
  *(fmpz_comb_temp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpz_1comb_1temp_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz_comb_temp_struct *arg1 = (fmpz_comb_temp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz_comb_temp_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1temp_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_comb_temp_struct *arg1 ;
  fmpz_comb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_comb_temp_struct **)&jarg1; 
  arg2 = *(fmpz_comb_struct **)&jarg2; 
  fmpz_comb_temp_init(arg1,(fmpz_comb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1temp_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_comb_temp_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_temp_struct **)&jarg1; 
  fmpz_comb_temp_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  fmpz_comb_struct *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_comb_init(arg1,(unsigned long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1comb_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_comb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_comb_struct **)&jarg1; 
  fmpz_comb_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1multi_1mod_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  fmpz *arg2 ;
  fmpz_comb_struct *arg3 ;
  fmpz_comb_temp_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_comb_struct **)&jarg3; 
  arg4 = *(fmpz_comb_temp_struct **)&jarg4; 
  fmpz_multi_mod_ui(arg1,(long const (*))arg2,(fmpz_comb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1multi_1CRT_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  fmpz *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  fmpz_comb_struct *arg3 ;
  fmpz_comb_temp_struct *arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(fmpz_comb_struct **)&jarg3; 
  arg4 = *(fmpz_comb_temp_struct **)&jarg4; 
  arg5 = (int)jarg5; 
  fmpz_multi_CRT_ui(arg1,(unsigned long const *)arg2,(fmpz_comb_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1CRT(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jint jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = (int)jarg6; 
  fmpz_CRT(arg1,(long const (*))arg2,(long const (*))arg3,arg4,arg5,arg6);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1set_1ui_1smod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_set_ui_smod(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1multi_1crt_1prog_1instr_1a_1idx_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _fmpz_multi_crt_prog_instr *arg1 = (_fmpz_multi_crt_prog_instr *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_multi_crt_prog_instr **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->a_idx = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1multi_1crt_1prog_1instr_1a_1idx_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _fmpz_multi_crt_prog_instr *arg1 = (_fmpz_multi_crt_prog_instr *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_multi_crt_prog_instr **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->a_idx);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1multi_1crt_1prog_1instr_1b_1idx_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _fmpz_multi_crt_prog_instr *arg1 = (_fmpz_multi_crt_prog_instr *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_multi_crt_prog_instr **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->b_idx = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1multi_1crt_1prog_1instr_1b_1idx_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _fmpz_multi_crt_prog_instr *arg1 = (_fmpz_multi_crt_prog_instr *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_multi_crt_prog_instr **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->b_idx);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1multi_1crt_1prog_1instr_1c_1idx_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _fmpz_multi_crt_prog_instr *arg1 = (_fmpz_multi_crt_prog_instr *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_multi_crt_prog_instr **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->c_idx = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1multi_1crt_1prog_1instr_1c_1idx_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _fmpz_multi_crt_prog_instr *arg1 = (_fmpz_multi_crt_prog_instr *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_multi_crt_prog_instr **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->c_idx);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1multi_1crt_1prog_1instr_1idem_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpz_multi_crt_prog_instr *arg1 = (_fmpz_multi_crt_prog_instr *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_multi_crt_prog_instr **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->idem;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1multi_1crt_1prog_1instr_1idem_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _fmpz_multi_crt_prog_instr *arg1 = (_fmpz_multi_crt_prog_instr *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_multi_crt_prog_instr **)&jarg1; 
  result = (fmpz *) ((arg1)->idem);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1multi_1crt_1prog_1instr_1modulus_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpz_multi_crt_prog_instr *arg1 = (_fmpz_multi_crt_prog_instr *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_multi_crt_prog_instr **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->modulus;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1multi_1crt_1prog_1instr_1modulus_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _fmpz_multi_crt_prog_instr *arg1 = (_fmpz_multi_crt_prog_instr *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_multi_crt_prog_instr **)&jarg1; 
  result = (fmpz *) ((arg1)->modulus);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1fmpz_1multi_1crt_1prog_1instr(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  _fmpz_multi_crt_prog_instr *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (_fmpz_multi_crt_prog_instr *)new _fmpz_multi_crt_prog_instr();
  *(_fmpz_multi_crt_prog_instr **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1fmpz_1multi_1crt_1prog_1instr(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  _fmpz_multi_crt_prog_instr *arg1 = (_fmpz_multi_crt_prog_instr *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(_fmpz_multi_crt_prog_instr **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1prog_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  _fmpz_multi_crt_prog_instr *arg2 = (_fmpz_multi_crt_prog_instr *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  arg2 = *(_fmpz_multi_crt_prog_instr **)&jarg2; 
  if (arg1) (arg1)->prog = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1prog_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  _fmpz_multi_crt_prog_instr *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  result = (_fmpz_multi_crt_prog_instr *) ((arg1)->prog);
  *(_fmpz_multi_crt_prog_instr **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->length);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->alloc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->alloc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1localsize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->localsize = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1localsize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->localsize);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1temp1loc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->temp1loc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1temp1loc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->temp1loc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1temp2loc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->temp2loc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1temp2loc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->temp2loc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1good_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->good = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1struct_1good_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  result = (int) ((arg1)->good);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpz_1multi_1crt_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpz_multi_crt_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpz_multi_crt_struct *)new fmpz_multi_crt_struct();
  *(fmpz_multi_crt_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpz_1multi_1crt_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz_multi_crt_struct *arg1 = (fmpz_multi_crt_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_multi_crt_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  fmpz_multi_crt_init(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1precompute(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz_multi_crt_struct *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)fmpz_multi_crt_precompute(arg1,(long const *)arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1precompute_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz_multi_crt_struct *arg1 ;
  fmpz **arg2 = (fmpz **) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  arg2 = *(fmpz ***)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)fmpz_multi_crt_precompute_p(arg1,(long const *const *)arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  fmpz_multi_crt_struct *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_multi_crt_struct **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  fmpz_multi_crt_precomp(arg1,(fmpz_multi_crt_struct const (*))arg2,(long const *)arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1precomp_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  fmpz_multi_crt_struct *arg2 ;
  fmpz **arg3 = (fmpz **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_multi_crt_struct **)&jarg2; 
  arg3 = *(fmpz ***)&jarg3; 
  fmpz_multi_crt_precomp_p(arg1,(fmpz_multi_crt_struct const (*))arg2,(long const *const *)arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)fmpz_multi_crt(arg1,(long const *)arg2,(long const *)arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1multi_1crt_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_multi_crt_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  fmpz_multi_crt_clear(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1multi_1crt_1local_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_multi_crt_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_multi_crt_struct **)&jarg1; 
  result = (mp_limb_signed_t)_fmpz_multi_crt_local_size((fmpz_multi_crt_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1multi_1crt_1run(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz_multi_crt_struct *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz_multi_crt_struct **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  _fmpz_multi_crt_run(arg1,(fmpz_multi_crt_struct const (*))arg2,(long const *)arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1multi_1crt_1run_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz_multi_crt_struct *arg2 ;
  fmpz **arg3 = (fmpz **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz_multi_crt_struct **)&jarg2; 
  arg3 = *(fmpz ***)&jarg3; 
  _fmpz_multi_crt_run_p(arg1,(fmpz_multi_crt_struct const (*))arg2,(long const *const *)arg3);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1abs_1ubound_1ui_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz *arg2 ;
  int arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (mp_limb_t)fmpz_abs_ubound_ui_2exp(arg1,(long const (*))arg2,arg3);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1abs_1lbound_1ui_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz *arg2 ;
  int arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (mp_limb_t)fmpz_abs_lbound_ui_2exp(arg1,(long const (*))arg2,arg3);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1lucas_1chain(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  fmpz_lucas_chain(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1lucas_1chain_1full(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  fmpz_lucas_chain_full(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6);
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1lucas_1chain_1double(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  fmpz *arg7 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  fmpz_lucas_chain_double(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6,(long const (*))arg7);
  
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1lucas_1chain_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7, jlong jarg8, jlong jarg9) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  fmpz *arg7 ;
  fmpz *arg8 ;
  fmpz *arg9 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = *(long **)&jarg8; 
  arg9 = *(long **)&jarg9; 
  fmpz_lucas_chain_add(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6,(long const (*))arg7,(long const (*))arg8,(long const (*))arg9);
  
  
  
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1lucas_1chain_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7, jlong jarg8) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  fmpz *arg7 ;
  fmpz *arg8 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = *(long **)&jarg8; 
  fmpz_lucas_chain_mul(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6,(long const (*))arg7,(long const (*))arg8);
  
  
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1lucas_1chain_1VtoU(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7, jlong jarg8) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  fmpz *arg7 ;
  fmpz *arg8 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = *(long **)&jarg8; 
  fmpz_lucas_chain_VtoU(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6,(long const (*))arg7,(long const (*))arg8);
  
  
  
  
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1probabprime_1lucas(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_is_probabprime_lucas((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1probabprime_1BPSW(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_is_probabprime_BPSW((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1strong_1probabprime(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)fmpz_is_strong_probabprime((long const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1probabprime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_is_probabprime((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1prime_1pseudosquare(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_is_prime_pseudosquare((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1nm1_1trial_1factors(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_limb_signed_t *arg3 = (mp_limb_signed_t *) 0 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_limb_signed_t **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_nm1_trial_factors((long const (*))arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1prime_1pocklington(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_ptr arg4 = (mp_ptr) 0 ;
  mp_limb_signed_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(mp_ptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  result = (int)fmpz_is_prime_pocklington(arg1,arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1np1_1trial_1factors(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_limb_signed_t *arg3 = (mp_limb_signed_t *) 0 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_limb_signed_t **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_np1_trial_factors((long const (*))arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1prime_1morrison(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_ptr arg4 = (mp_ptr) 0 ;
  mp_limb_signed_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(mp_ptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  result = (int)fmpz_is_prime_morrison(arg1,arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1is_1prime(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_is_prime((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1divisor_1in_1residue_1class_1lenstra(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  result = (int)fmpz_divisor_in_residue_class_lenstra(arg1,(long const (*))arg2,(long const (*))arg3,(long const (*))arg4);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1nextprime(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (int)jarg3; 
  fmpz_nextprime(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1primorial(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_primorial(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1euler_1phi(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_euler_phi(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1moebius_1mu(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (int)fmpz_moebius_mu((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1divisor_1sigma(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_divisor_sigma(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_n_1powmod2_1fmpz_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)n_powmod2_fmpz_preinv(arg1,(long const (*))arg2,arg3,arg4);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1pow_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  fmpz *arg2 ;
  nmod_t arg3 ;
  nmod_t *argp3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = *(long **)&jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg3 = *argp3; 
  result = (mp_limb_t)nmod_pow_fmpz(arg1,(long const (*))arg2,arg3);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1new_1fmpz(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpz *)__new_fmpz();
  *(fmpz **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1free_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz *arg1 = (fmpz *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  __free_fmpz(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1fmpz_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  fmpz *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  __fmpz_set_si(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1fmpz_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  __fmpz_set_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1fmpz_1init(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz *arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  __fmpz_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1fmpz_1init_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  __fmpz_init_set_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1fmpz_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz *arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  __fmpz_clear(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1fmpz_1lt(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)__fmpz_lt(arg1,arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1fmpz_1gt(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)__fmpz_gt(arg1,arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1fmpz_1lte(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)__fmpz_lte(arg1,arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1fmpz_1gte(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)__fmpz_gte(arg1,arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1fmpz_1eq(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)__fmpz_eq(arg1,arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1fmpz_1neq(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)__fmpz_neq(arg1,arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1fmpz_1init_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  __fmpz_init_set(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1fmpz_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  __fmpz_neg(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1struct_1sign_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_factor_struct *arg1 = (fmpz_factor_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->sign = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1struct_1sign_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_factor_struct *arg1 = (fmpz_factor_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  result = (int) ((arg1)->sign);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1struct_1p_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_factor_struct *arg1 = (fmpz_factor_struct *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  if (arg1) (arg1)->p = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1factor_1struct_1p_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_factor_struct *arg1 = (fmpz_factor_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->p);
  *(fmpz **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1struct_1exp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_factor_struct *arg1 = (fmpz_factor_struct *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  if (arg1) (arg1)->exp = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1factor_1struct_1exp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_factor_struct *arg1 = (fmpz_factor_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  result = (mp_limb_t *) ((arg1)->exp);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1struct_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_factor_struct *arg1 = (fmpz_factor_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->alloc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1struct_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_factor_struct *arg1 = (fmpz_factor_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->alloc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1struct_1num_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_factor_struct *arg1 = (fmpz_factor_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->num = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1struct_1num_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_factor_struct *arg1 = (fmpz_factor_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->num);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpz_1factor_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpz_factor_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpz_factor_struct *)new fmpz_factor_struct();
  *(fmpz_factor_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpz_1factor_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz_factor_struct *arg1 = (fmpz_factor_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_factor_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  fmpz_factor_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_factor_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  fmpz_factor_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_factor_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  fmpz_factor_print((fmpz_factor_struct const (*))arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1factor_1fit_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_factor_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _fmpz_factor_fit_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1factor_1append_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  fmpz_factor_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  _fmpz_factor_append_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1factor_1append(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  fmpz_factor_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  _fmpz_factor_append(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1factor_1set_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_factor_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _fmpz_factor_set_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1factor_1concat(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_factor_struct *arg1 ;
  fmpz_factor_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = *(fmpz_factor_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  _fmpz_factor_concat(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1factor_1extend_1factor_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_factor_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  _fmpz_factor_extend_factor_ui(arg1,arg2);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1trial_1range(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  jint jresult = 0 ;
  fmpz_factor_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (int)fmpz_factor_trial_range(arg1,(long const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1trial(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz_factor_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)fmpz_factor_trial(arg1,(long const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_factor_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_factor(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1no_1trial(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_factor_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_factor_no_trial(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1smooth(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpz_factor_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)fmpz_factor_smooth(arg1,(long const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_factor_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpz_factor_si(arg1,arg2);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1pp1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (int)fmpz_factor_pp1(arg1,(long const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1refine(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_factor_struct *arg1 ;
  fmpz_factor_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  arg2 = *(fmpz_factor_struct **)&jarg2; 
  fmpz_factor_refine(arg1,(fmpz_factor_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1mpn_1sqr_1and_1add_1a(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_limb_t arg4 ;
  mp_ptr arg5 = (mp_ptr) 0 ;
  mp_limb_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = *(mp_ptr *)&jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  flint_mpn_sqr_and_add_a(arg1,arg2,arg3,arg4,arg5,arg6);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1mpn_1factor_1pollard_1brent_1single(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7, jlong jarg8) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_ptr arg4 = (mp_ptr) 0 ;
  mp_ptr arg5 = (mp_ptr) 0 ;
  mp_limb_t arg6 ;
  mp_limb_t arg7 ;
  mp_limb_t arg8 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_ptr *)&jarg4; 
  arg5 = *(mp_ptr *)&jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = (mp_limb_t)jarg7; 
  arg8 = (mp_limb_t)jarg8; 
  result = (int)flint_mpn_factor_pollard_brent_single(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1pollard_1brent_1single(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  mp_limb_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (int)fmpz_factor_pollard_brent_single(arg1,arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1pollard_1brent(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jlong jarg5) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  flint_rand_s *arg2 ;
  fmpz *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (int)fmpz_factor_pollard_brent(arg1,arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1expand_1iterative(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_factor_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_factor_struct **)&jarg2; 
  fmpz_factor_expand_iterative(arg1,(fmpz_factor_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1expand_1multiexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_factor_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_factor_struct **)&jarg2; 
  fmpz_factor_expand_multiexp(arg1,(fmpz_factor_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1expand(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_factor_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_factor_struct **)&jarg2; 
  fmpz_factor_expand(arg1,(fmpz_factor_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1euler_1phi(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_factor_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_factor_struct **)&jarg2; 
  fmpz_factor_euler_phi(arg1,(fmpz_factor_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1moebius_1mu(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_factor_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_factor_struct **)&jarg1; 
  result = (int)fmpz_factor_moebius_mu((fmpz_factor_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1divisor_1sigma(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  fmpz_factor_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_factor_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_factor_divisor_sigma(arg1,(fmpz_factor_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ecm_1s_1t_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  if (arg1) (arg1)->t = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ecm_1s_1t_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  result = (mp_ptr) ((arg1)->t);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ecm_1s_1u_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  if (arg1) (arg1)->u = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ecm_1s_1u_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  result = (mp_ptr) ((arg1)->u);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ecm_1s_1v_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  if (arg1) (arg1)->v = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ecm_1s_1v_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  result = (mp_ptr) ((arg1)->v);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ecm_1s_1w_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  if (arg1) (arg1)->w = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ecm_1s_1w_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  result = (mp_ptr) ((arg1)->w);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ecm_1s_1x_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  if (arg1) (arg1)->x = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ecm_1s_1x_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  result = (mp_ptr) ((arg1)->x);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ecm_1s_1z_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  if (arg1) (arg1)->z = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ecm_1s_1z_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  result = (mp_ptr) ((arg1)->z);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ecm_1s_1a24_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  if (arg1) (arg1)->a24 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ecm_1s_1a24_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  result = (mp_ptr) ((arg1)->a24);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ecm_1s_1ninv_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  if (arg1) (arg1)->ninv = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ecm_1s_1ninv_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  result = (mp_ptr) ((arg1)->ninv);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ecm_1s_1one_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  if (arg1) (arg1)->one = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ecm_1s_1one_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  result = (mp_ptr) ((arg1)->one);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ecm_1s_1GCD_1table_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  unsigned char *arg2 = (unsigned char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = *(unsigned char **)&jarg2; 
  if (arg1) (arg1)->GCD_table = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ecm_1s_1GCD_1table_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ecm_s *arg1 = (ecm_s *) 0 ;
  unsigned char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  result = (unsigned char *) ((arg1)->GCD_table);
  *(unsigned char **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ecm_1s_1prime_1table_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  unsigned char **arg2 = (unsigned char **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = *(unsigned char ***)&jarg2; 
  if (arg1) (arg1)->prime_table = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ecm_1s_1prime_1table_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ecm_s *arg1 = (ecm_s *) 0 ;
  unsigned char **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  result = (unsigned char **) ((arg1)->prime_table);
  *(unsigned char ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ecm_1s_1n_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->n_size = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ecm_1s_1n_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  result = (mp_limb_t) ((arg1)->n_size);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_ecm_1s_1normbits_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->normbits = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ecm_1s_1normbits_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  ecm_s *arg1 = (ecm_s *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  result = (mp_limb_t) ((arg1)->normbits);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1ecm_1s(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  ecm_s *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (ecm_s *)new ecm_s();
  *(ecm_s **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1ecm_1s(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  ecm_s *arg1 = (ecm_s *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(ecm_s **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1ecm_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  ecm_s *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_factor_ecm_init(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1ecm_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  ecm_s *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(ecm_s **)&jarg1; 
  fmpz_factor_ecm_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1ecm_1addmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_ptr arg4 = (mp_ptr) 0 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_ptr *)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  fmpz_factor_ecm_addmod(arg1,arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1ecm_1submod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_ptr arg4 = (mp_ptr) 0 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_ptr *)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  fmpz_factor_ecm_submod(arg1,arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1ecm_1double(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_ptr arg4 = (mp_ptr) 0 ;
  mp_ptr arg5 = (mp_ptr) 0 ;
  ecm_s *arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_ptr *)&jarg4; 
  arg5 = *(mp_ptr *)&jarg5; 
  arg6 = *(ecm_s **)&jarg6; 
  fmpz_factor_ecm_double(arg1,arg2,arg3,arg4,arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1ecm_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7, jlong jarg8, jlong jarg9, jlong jarg10, jobject jarg10_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_ptr arg4 = (mp_ptr) 0 ;
  mp_ptr arg5 = (mp_ptr) 0 ;
  mp_ptr arg6 = (mp_ptr) 0 ;
  mp_ptr arg7 = (mp_ptr) 0 ;
  mp_ptr arg8 = (mp_ptr) 0 ;
  mp_ptr arg9 = (mp_ptr) 0 ;
  ecm_s *arg10 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg10_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_ptr *)&jarg4; 
  arg5 = *(mp_ptr *)&jarg5; 
  arg6 = *(mp_ptr *)&jarg6; 
  arg7 = *(mp_ptr *)&jarg7; 
  arg8 = *(mp_ptr *)&jarg8; 
  arg9 = *(mp_ptr *)&jarg9; 
  arg10 = *(ecm_s **)&jarg10; 
  fmpz_factor_ecm_add(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1ecm_1mul_1montgomery_1ladder(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_ptr arg4 = (mp_ptr) 0 ;
  mp_limb_t arg5 ;
  mp_ptr arg6 = (mp_ptr) 0 ;
  ecm_s *arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_ptr *)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = *(mp_ptr *)&jarg6; 
  arg7 = *(ecm_s **)&jarg7; 
  fmpz_factor_ecm_mul_montgomery_ladder(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1ecm_1select_1curve(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  ecm_s *arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(ecm_s **)&jarg4; 
  result = (int)fmpz_factor_ecm_select_curve(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1ecm_1stage_1I(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_ptr arg5 = (mp_ptr) 0 ;
  ecm_s *arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = *(mp_ptr *)&jarg5; 
  arg6 = *(ecm_s **)&jarg6; 
  result = (int)fmpz_factor_ecm_stage_I(arg1,(unsigned long const *)arg2,arg3,arg4,arg5,arg6);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1ecm_1stage_1II(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_ptr arg5 = (mp_ptr) 0 ;
  ecm_s *arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = *(mp_ptr *)&jarg5; 
  arg6 = *(ecm_s **)&jarg6; 
  result = (int)fmpz_factor_ecm_stage_II(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1factor_1ecm(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jlong jarg6) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  flint_rand_s *arg5 ;
  fmpz *arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = *(flint_rand_s **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  result = (int)fmpz_factor_ecm(arg1,arg2,arg3,arg4,arg5,(long const (*))arg6);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1factor_1get_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz *arg1 ;
  fmpz_factor_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_factor_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_factor_get_fmpz(arg1,(fmpz_factor_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1mpf_1vec_1init(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_signed_t arg1 ;
  mp_limb_t arg2 ;
  mpf *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mpf *)_mpf_vec_init(arg1,arg2);
  *(mpf **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1mpf_1vec_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpf *arg1 = (mpf *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _mpf_vec_clear(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1mpf_1vec_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  mpf *arg1 = (mpf *) 0 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _mpf_vec_randtest(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1mpf_1vec_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpf *arg1 = (mpf *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _mpf_vec_zero(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1mpf_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  mpf *arg1 = (mpf *) 0 ;
  mpf *arg2 = (mpf *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf **)&jarg1; 
  arg2 = *(mpf **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _mpf_vec_set(arg1,(__mpf_struct const *)arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1mpf_1vec_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mpf *arg1 = (mpf *) 0 ;
  mpf *arg2 = (mpf *) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf **)&jarg1; 
  arg2 = *(mpf **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_mpf_vec_equal((__mpf_struct const *)arg1,(__mpf_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1mpf_1vec_1approx_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  jint jresult = 0 ;
  mpf *arg1 = (mpf *) 0 ;
  mpf *arg2 = (mpf *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf **)&jarg1; 
  arg2 = *(mpf **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (int)_mpf_vec_approx_equal((__mpf_struct const *)arg1,(__mpf_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1mpf_1vec_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mpf *arg1 = (mpf *) 0 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)_mpf_vec_is_zero((__mpf_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1mpf_1vec_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  mpf *arg1 = (mpf *) 0 ;
  mpf *arg2 = (mpf *) 0 ;
  mpf *arg3 = (mpf *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpf **)&jarg1; 
  arg2 = *(mpf **)&jarg2; 
  arg3 = *(mpf **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _mpf_vec_add(arg1,(__mpf_struct const *)arg2,(__mpf_struct const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1mpf_1vec_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  mpf *arg1 = (mpf *) 0 ;
  mpf *arg2 = (mpf *) 0 ;
  mpf *arg3 = (mpf *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpf **)&jarg1; 
  arg2 = *(mpf **)&jarg2; 
  arg3 = *(mpf **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _mpf_vec_sub(arg1,(__mpf_struct const *)arg2,(__mpf_struct const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1mpf_1vec_1scalar_1mul_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  mpf *arg1 = (mpf *) 0 ;
  mpf *arg2 = (mpf *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf **)&jarg1; 
  arg2 = *(mpf **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _mpf_vec_scalar_mul_2exp(arg1,(__mpf_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1mpf_1vec_1scalar_1mul_1mpf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  mpf *arg1 = (mpf *) 0 ;
  mpf *arg2 = (mpf *) 0 ;
  mp_limb_signed_t arg3 ;
  __mpf_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(mpf **)&jarg1; 
  arg2 = *(mpf **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(__mpf_struct **)&jarg4; 
  _mpf_vec_scalar_mul_mpf(arg1,(__mpf_struct const *)arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1mpf_1vec_1dot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  __mpf_struct *arg1 ;
  mpf *arg2 = (mpf *) 0 ;
  mpf *arg3 = (mpf *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(__mpf_struct **)&jarg1; 
  arg2 = *(mpf **)&jarg2; 
  arg3 = *(mpf **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _mpf_vec_dot(arg1,(__mpf_struct const *)arg2,(__mpf_struct const *)arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1mpf_1vec_1norm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  __mpf_struct *arg1 ;
  mpf *arg2 = (mpf *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__mpf_struct **)&jarg1; 
  arg2 = *(mpf **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _mpf_vec_norm(arg1,(__mpf_struct const *)arg2,arg3);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1mpf_1vec_1dot2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5) {
  jint jresult = 0 ;
  __mpf_struct *arg1 ;
  mpf *arg2 = (mpf *) 0 ;
  mpf *arg3 = (mpf *) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(__mpf_struct **)&jarg1; 
  arg2 = *(mpf **)&jarg2; 
  arg3 = *(mpf **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (int)_mpf_vec_dot2(arg1,(__mpf_struct const *)arg2,(__mpf_struct const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1mpf_1vec_1norm2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  __mpf_struct *arg1 ;
  mpf *arg2 = (mpf *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__mpf_struct **)&jarg1; 
  arg2 = *(mpf **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _mpf_vec_norm2(arg1,(__mpf_struct const *)arg2,arg3,arg4);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1init(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  mp_limb_signed_t arg1 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  result = (fmpz *)_fmpz_vec_init(arg1);
  *(fmpz **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _fmpz_vec_clear(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_vec_randtest(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1randtest_1unsigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_vec_randtest_unsigned(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1max_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_signed_t)_fmpz_vec_max_bits((long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1max_1bits_1ref(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_signed_t)_fmpz_vec_max_bits_ref((long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1sum_1max_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_vec_sum_max_bits(arg1,arg2,(long const *)arg3,arg4);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1max_1limbs(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_size_t)_fmpz_vec_max_limbs((long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1height(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_vec_height(arg1,(long const *)arg2,arg3);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1height_1index(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_signed_t)_fmpz_vec_height_index((long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_fmpz_vec_fprint(arg1,(long const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)_fmpz_vec_print((long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1fread(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz **arg2 = (fmpz **) 0 ;
  mp_limb_signed_t *arg3 = (mp_limb_signed_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpz ***)&jarg2; 
  arg3 = *(mp_limb_signed_t **)&jarg3; 
  result = (int)_fmpz_vec_fread(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1read(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz **arg1 = (fmpz **) 0 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz ***)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  result = (int)_fmpz_vec_read(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1set_1nmod_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _fmpz_vec_set_nmod_vec(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1get_1nmod_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _fmpz_vec_get_nmod_vec(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1get_1fft(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mp_limb_t **arg1 = (mp_limb_t **) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t ***)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (mp_limb_signed_t)_fmpz_vec_get_fft(arg1,(long const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1set_1fft(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jint jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_ptr *arg3 = (mp_ptr *) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(mp_ptr **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_vec_set_fft(arg1,arg2,(unsigned long *const *)arg3,arg4,arg5);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1get_1d_1vec_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  double *arg1 = (double *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (mp_limb_signed_t)_fmpz_vec_get_d_vec_2exp(arg1,(long const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1get_1mpf_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  mpf *arg1 = (mpf *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_vec_get_mpf_vec(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_vec_set(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_vec_swap(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _fmpz_vec_zero(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_vec_neg(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_vec_scalar_abs(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_fmpz_vec_equal((long const *)arg1,(long const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)_fmpz_vec_is_zero((long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1max(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_vec_max(arg1,(long const *)arg2,(long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1max_1inplace(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_vec_max_inplace(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1min(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_vec_min(arg1,(long const *)arg2,(long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1min_1inplace(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_vec_min_inplace(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1sort(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _fmpz_vec_sort(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_vec_add(arg1,(long const *)arg2,(long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_vec_sub(arg1,(long const *)arg2,(long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_vec_scalar_mul_si(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_vec_scalar_mul_ui(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpz_vec_scalar_mul_fmpz(arg1,(long const *)arg2,arg3,(long const (*))arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1mul_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_vec_scalar_mul_2exp(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1divexact_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpz_vec_scalar_divexact_fmpz(arg1,(long const *)arg2,arg3,(long const (*))arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1divexact_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_vec_scalar_divexact_si(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1divexact_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_vec_scalar_divexact_ui(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1fdiv_1q_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpz_vec_scalar_fdiv_q_fmpz(arg1,(long const *)arg2,arg3,(long const (*))arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1fdiv_1q_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_vec_scalar_fdiv_q_si(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1fdiv_1q_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_vec_scalar_fdiv_q_ui(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1fdiv_1q_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_vec_scalar_fdiv_q_2exp(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1fdiv_1r_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_vec_scalar_fdiv_r_2exp(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1tdiv_1q_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpz_vec_scalar_tdiv_q_fmpz(arg1,(long const *)arg2,arg3,(long const (*))arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1tdiv_1q_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_vec_scalar_tdiv_q_si(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1tdiv_1q_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_vec_scalar_tdiv_q_ui(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1tdiv_1q_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_vec_scalar_tdiv_q_2exp(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1addmul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_vec_scalar_addmul_si(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1addmul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpz_vec_scalar_addmul_fmpz(arg1,(long const *)arg2,arg3,(long const (*))arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1addmul_1si_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  _fmpz_vec_scalar_addmul_si_2exp(arg1,(long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1submul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_vec_scalar_submul_si(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1submul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpz_vec_scalar_submul_fmpz(arg1,(long const *)arg2,arg3,(long const (*))arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1submul_1si_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  _fmpz_vec_scalar_submul_si_2exp(arg1,(long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1sum(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_vec_sum(arg1,(long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1prod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_vec_prod(arg1,(long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1mod_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpz_vec_scalar_mod_fmpz(arg1,(long const *)arg2,arg3,(long const (*))arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1scalar_1smod_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpz_vec_scalar_smod_fmpz(arg1,(long const *)arg2,arg3,(long const (*))arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1content(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_vec_content(arg1,(long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1lcm(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_vec_lcm(arg1,(long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1dot(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_vec_dot(arg1,(long const *)arg2,(long const *)arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1vec_1dot_1ptr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz **arg3 = (fmpz **) (fmpz **)0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz ***)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_vec_dot_ptr(arg1,(long const *)arg2,arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1num_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpq *arg1 = (fmpq *) 0 ;
  fmpz arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = (fmpz)jarg2; 
  if (arg1) (arg1)->num = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1num_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq *arg1 = (fmpq *) 0 ;
  fmpz result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  result = (fmpz) ((arg1)->num);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1den_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpq *arg1 = (fmpq *) 0 ;
  fmpz arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = (fmpz)jarg2; 
  if (arg1) (arg1)->den = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1den_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq *arg1 = (fmpq *) 0 ;
  fmpz result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  result = (fmpz) ((arg1)->den);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpq(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpq *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpq *)new fmpq();
  *(fmpq **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpq *arg1 = (fmpq *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpq **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpq *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  fmpq_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpq *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  fmpq_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpq *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  fmpq_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpq *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  fmpq_one(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  fmpq *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  result = (int)fmpq_equal((fmpq const (*))arg1,(fmpq const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1sgn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  result = (int)fmpq_sgn((fmpq const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  result = (int)fmpq_is_zero((fmpq const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  result = (int)fmpq_is_one((fmpq const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1is_1pm1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  result = (int)fmpq_is_pm1((fmpq const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_set(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_neg(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_abs(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  result = (int)_fmpq_cmp((long const (*))arg1,(long const (*))arg2,(long const (*))arg3,(long const (*))arg4);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  fmpq *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  result = (int)fmpq_cmp((fmpq const (*))arg1,(fmpq const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1cmp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (int)_fmpq_cmp_fmpz((long const (*))arg1,(long const (*))arg2,(long const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1cmp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)fmpq_cmp_fmpz((fmpq const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1cmp_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (int)_fmpq_cmp_ui((long const (*))arg1,(long const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1cmp_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)fmpq_cmp_ui((fmpq const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1cmp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_fmpq_cmp_si((long const (*))arg1,(long const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1cmp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)fmpq_cmp_si((fmpq const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1canonicalise(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  _fmpq_canonicalise(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1canonicalise(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpq *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  fmpq_canonicalise(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1is_1canonical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)_fmpq_is_canonical((long const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1is_1canonical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  result = (int)fmpq_is_canonical((fmpq const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpq_set_ui(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  fmpq *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_set_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpq_set_si(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  fmpq *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_set_si(arg1,arg2,arg3);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1equal_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)fmpq_equal_ui(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1equal_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)fmpq_equal_si(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1set_1fmpz_1frac(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  fmpq *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpq_set_fmpz_frac(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  char *arg2 = (char *) 0 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (int)jarg3; 
  result = (int)fmpq_set_str(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1set_1mpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  __mpq_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(__mpq_struct **)&jarg2; 
  fmpq_set_mpq(arg1,(__mpq_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1get_1mpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __mpq_struct *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__mpq_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_get_mpq(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fmpq_1get_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  fmpq *arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  result = (double)fmpq_get_d((fmpq const (*))arg1);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1get_1mpfr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  __mpfr_struct *arg1 ;
  fmpq *arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)fmpq_get_mpfr(arg1,(fmpq const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1get_1mpz_1frac(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  __mpz_struct *arg1 ;
  __mpz_struct *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(__mpz_struct **)&jarg1; 
  arg2 = *(__mpz_struct **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_get_mpz_frac(arg1,arg2,arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1mpq_1init_1set_1readonly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  __mpq_struct *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__mpq_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  flint_mpq_init_set_readonly(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1mpq_1clear_1readonly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  __mpq_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(__mpq_struct **)&jarg1; 
  flint_mpq_clear_readonly(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1init_1set_1readonly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  __mpq_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(__mpq_struct **)&jarg2; 
  fmpq_init_set_readonly(arg1,(__mpq_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1clear_1readonly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpq *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  fmpq_clear_readonly(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1init_1set_1mpz_1frac_1readonly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  __mpz_struct *arg2 ;
  __mpz_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(__mpz_struct **)&jarg2; 
  arg3 = *(__mpz_struct **)&jarg3; 
  fmpq_init_set_mpz_frac_readonly(arg1,(__mpz_struct const (*))arg2,(__mpz_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1fmpq_1get_1str(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (int)jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  result = (char *)_fmpq_get_str(arg1,arg2,(long const (*))arg3,(long const (*))arg4);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_fmpq_1get_1str(JNIEnv *jenv, jclass jcls, jstring jarg1, jint jarg2, jlong jarg3, jobject jarg3_) {
  jstring jresult = 0 ;
  char *arg1 = (char *) 0 ;
  int arg2 ;
  fmpq *arg3 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return 0;
  }
  arg2 = (int)jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  result = (char *)fmpq_get_str(arg1,arg2,(fmpq const (*))arg3);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (int)_fmpq_fprint(arg1,(long const (*))arg2,(long const (*))arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpq *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  result = (int)fmpq_fprint(arg1,(fmpq const (*))arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)_fmpq_print((long const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  result = (int)fmpq_print((fmpq const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  flint_rand_s *arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(flint_rand_s **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpq_randtest(arg1,arg2,arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_randtest(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1randtest_1not_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_randtest_not_zero(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1randbits(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  flint_rand_s *arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(flint_rand_s **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpq_randbits(arg1,arg2,arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1randbits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_randbits(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1add_1small(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  _fmpq_add_small(arg1,arg2,arg3,arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1mul_1small(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  _fmpq_mul_small(arg1,arg2,arg3,arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpq_add(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6);
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_add(arg1,(fmpq const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1add_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpq_add_si(arg1,arg2,(long const (*))arg3,(long const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1add_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_add_si(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1add_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  _fmpq_add_ui(arg1,arg2,(long const (*))arg3,(long const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1add_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_add_ui(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1add_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  _fmpq_add_fmpz(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1add_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpq_add_fmpz(arg1,(fmpq const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpq_sub(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6);
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_sub(arg1,(fmpq const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1sub_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpq_sub_si(arg1,arg2,(long const (*))arg3,(long const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1sub_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_sub_si(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1sub_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  _fmpq_sub_ui(arg1,arg2,(long const (*))arg3,(long const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1sub_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_sub_ui(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1sub_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  _fmpq_sub_fmpz(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1sub_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpq_sub_fmpz(arg1,(fmpq const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpq_mul_si(arg1,arg2,(long const (*))arg3,(long const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_mul_si(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  _fmpq_mul_ui(arg1,arg2,(long const (*))arg3,(long const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_mul_ui(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpq_mul(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6);
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_mul(arg1,(fmpq const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpq_mul_fmpz(arg1,(fmpq const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1pow_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpq_pow_si(arg1,arg2,(long const (*))arg3,(long const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1pow_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_pow_si(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1pow_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpz *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (int)fmpq_pow_fmpz(arg1,(fmpq const (*))arg2,(long const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpq_addmul(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6);
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_addmul(arg1,(fmpq const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1submul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpq_submul(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6);
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1submul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_submul(arg1,(fmpq const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1inv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_inv(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpq_div(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6);
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_div(arg1,(fmpq const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1div_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpq_div_fmpz(arg1,(fmpq const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1mul_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_mul_2exp(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1div_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_div_2exp(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1mod_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  result = (int)_fmpq_mod_fmpz(arg1,(long const (*))arg2,(long const (*))arg3,(long const (*))arg4);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1mod_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpq *arg2 ;
  fmpz *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (int)fmpq_mod_fmpz(arg1,(fmpq const (*))arg2,(long const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1gcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpq_gcd(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6);
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1gcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_gcd(arg1,(fmpq const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1reconstruct_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  result = (int)_fmpq_reconstruct_fmpz(arg1,arg2,(long const (*))arg3,(long const (*))arg4);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1reconstruct_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (int)fmpq_reconstruct_fmpz(arg1,(long const (*))arg2,(long const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1reconstruct_1fmpz_12_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  result = (int)_fmpq_reconstruct_fmpz_2_naive(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6);
  jresult = (jint)result; 
  
  
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1reconstruct_1fmpz_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  result = (int)_fmpq_reconstruct_fmpz_2(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6);
  jresult = (jint)result; 
  
  
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1reconstruct_1fmpz_12(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  result = (int)fmpq_reconstruct_fmpz_2(arg1,(long const (*))arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5);
  jresult = (jint)result; 
  
  
  
  
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpq_1height_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpq *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  result = (mp_limb_t)fmpq_height_bits((fmpq const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1height(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_height(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1next_1calkin_1wilf(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpq_next_calkin_wilf(arg1,arg2,(long const (*))arg3,(long const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1next_1calkin_1wilf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_next_calkin_wilf(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1next_1signed_1calkin_1wilf(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpq_next_signed_calkin_wilf(arg1,arg2,(long const (*))arg3,(long const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1next_1signed_1calkin_1wilf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_next_signed_calkin_wilf(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1next_1minimal(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpq_next_minimal(arg1,arg2,(long const (*))arg3,(long const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1next_1minimal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_next_minimal(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1next_1signed_1minimal(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpq_next_signed_minimal(arg1,arg2,(long const (*))arg3,(long const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1next_1signed_1minimal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_next_signed_minimal(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1farey_1neighbors(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpq *arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  fmpq_farey_neighbors(arg1,arg2,(fmpq const (*))arg3,(long const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1simplest_1between(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  fmpq *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_simplest_between(arg1,(fmpq const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1simplest_1between(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpq_simplest_between(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,(long const (*))arg6);
  
  
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1get_1cfrac_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpq *arg2 ;
  fmpq *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (mp_limb_signed_t)fmpq_get_cfrac_naive(arg1,arg2,(fmpq const (*))arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1get_1cfrac(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpq *arg2 ;
  fmpq *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (mp_limb_signed_t)fmpq_get_cfrac(arg1,arg2,(fmpq const (*))arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1set_1cfrac(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  fmpq *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_set_cfrac(arg1,(long const *)arg2,arg3);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1cfrac_1bound(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  result = (mp_limb_signed_t)fmpq_cfrac_bound((fmpq const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1dedekind_1sum_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  fmpq *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpq_dedekind_sum_naive(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1dedekind_1sum(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  fmpq *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpq_dedekind_sum(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1harmonic_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  _fmpq_harmonic_ui(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1harmonic_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpq *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpq_harmonic_ui(arg1,arg2);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpq_1vec_1init(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  mp_limb_signed_t arg1 ;
  fmpq *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  result = (fmpq *)_fmpq_vec_init(arg1);
  *(fmpq **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1vec_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpq *arg1 = (fmpq *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _fmpq_vec_clear(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1struct_1_111_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpz_mat22_struct *arg1 = (_fmpz_mat22_struct *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->_11;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1struct_1_111_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _fmpz_mat22_struct *arg1 = (_fmpz_mat22_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->_11);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1struct_1_112_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpz_mat22_struct *arg1 = (_fmpz_mat22_struct *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->_12;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1struct_1_112_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _fmpz_mat22_struct *arg1 = (_fmpz_mat22_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->_12);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1struct_1_121_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpz_mat22_struct *arg1 = (_fmpz_mat22_struct *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->_21;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1struct_1_121_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _fmpz_mat22_struct *arg1 = (_fmpz_mat22_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->_21);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1struct_1_122_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpz_mat22_struct *arg1 = (_fmpz_mat22_struct *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->_22;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1struct_1_122_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _fmpz_mat22_struct *arg1 = (_fmpz_mat22_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->_22);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1struct_1det_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _fmpz_mat22_struct *arg1 = (_fmpz_mat22_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->det = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1struct_1det_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _fmpz_mat22_struct *arg1 = (_fmpz_mat22_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  result = (int) ((arg1)->det);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1fmpz_1mat22_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  _fmpz_mat22_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (_fmpz_mat22_struct *)new _fmpz_mat22_struct();
  *(_fmpz_mat22_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1fmpz_1mat22_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  _fmpz_mat22_struct *arg1 = (_fmpz_mat22_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1ui_1mat22_1struct_1_111_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _ui_mat22_struct *arg1 = (_ui_mat22_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_ui_mat22_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->_11 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1ui_1mat22_1struct_1_111_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _ui_mat22_struct *arg1 = (_ui_mat22_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_ui_mat22_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->_11);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1ui_1mat22_1struct_1_112_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _ui_mat22_struct *arg1 = (_ui_mat22_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_ui_mat22_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->_12 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1ui_1mat22_1struct_1_112_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _ui_mat22_struct *arg1 = (_ui_mat22_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_ui_mat22_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->_12);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1ui_1mat22_1struct_1_121_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _ui_mat22_struct *arg1 = (_ui_mat22_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_ui_mat22_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->_21 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1ui_1mat22_1struct_1_121_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _ui_mat22_struct *arg1 = (_ui_mat22_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_ui_mat22_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->_21);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1ui_1mat22_1struct_1_122_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _ui_mat22_struct *arg1 = (_ui_mat22_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_ui_mat22_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->_22 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1ui_1mat22_1struct_1_122_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _ui_mat22_struct *arg1 = (_ui_mat22_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_ui_mat22_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->_22);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1ui_1mat22_1struct_1det_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _ui_mat22_struct *arg1 = (_ui_mat22_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_ui_mat22_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->det = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1ui_1mat22_1struct_1det_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _ui_mat22_struct *arg1 = (_ui_mat22_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_ui_mat22_struct **)&jarg1; 
  result = (int) ((arg1)->det);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1ui_1mat22_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  _ui_mat22_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (_ui_mat22_struct *)new _ui_mat22_struct();
  *(_ui_mat22_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1ui_1mat22_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  _ui_mat22_struct *arg1 = (_ui_mat22_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(_ui_mat22_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  _fmpz_mat22_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  _fmpz_mat22_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  _fmpz_mat22_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  _fmpz_mat22_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  _fmpz_mat22_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  _fmpz_mat22_one(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _fmpz_mat22_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  result = (int)_fmpz_mat22_is_one(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _fmpz_mat22_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  result = (mp_limb_t)_fmpz_mat22_bits((_fmpz_mat22_struct const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1rmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  _fmpz_mat22_struct *arg1 ;
  _fmpz_mat22_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  arg2 = *(_fmpz_mat22_struct **)&jarg2; 
  _fmpz_mat22_rmul(arg1,(_fmpz_mat22_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1rmul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  _fmpz_mat22_struct *arg1 ;
  _ui_mat22_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  arg2 = *(_ui_mat22_struct **)&jarg2; 
  _fmpz_mat22_rmul_ui(arg1,(_ui_mat22_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1rmul_1inv_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  _fmpz_mat22_struct *arg1 ;
  _ui_mat22_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  arg2 = *(_ui_mat22_struct **)&jarg2; 
  _fmpz_mat22_rmul_inv_ui(arg1,(_ui_mat22_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1rmul_1elem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpz_mat22_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  _fmpz_mat22_rmul_elem(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1rmul_1inv_1elem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpz_mat22_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  _fmpz_mat22_rmul_inv_elem(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat22_1lmul_1elem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpz_mat22_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpz_mat22_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  _fmpz_mat22_lmul_elem(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1struct_1array_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpq_cfrac_list_struct *arg1 = (_fmpq_cfrac_list_struct *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  if (arg1) (arg1)->array = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1struct_1array_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _fmpq_cfrac_list_struct *arg1 = (_fmpq_cfrac_list_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->array);
  *(fmpz **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1struct_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _fmpq_cfrac_list_struct *arg1 = (_fmpq_cfrac_list_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1struct_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _fmpq_cfrac_list_struct *arg1 = (_fmpq_cfrac_list_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->length);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1struct_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _fmpq_cfrac_list_struct *arg1 = (_fmpq_cfrac_list_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->alloc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1struct_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _fmpq_cfrac_list_struct *arg1 = (_fmpq_cfrac_list_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->alloc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1struct_1limit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _fmpq_cfrac_list_struct *arg1 = (_fmpq_cfrac_list_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->limit = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1struct_1limit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _fmpq_cfrac_list_struct *arg1 = (_fmpq_cfrac_list_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->limit);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1struct_1alt_1sum_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpq_cfrac_list_struct *arg1 = (_fmpq_cfrac_list_struct *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->alt_sum;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1struct_1alt_1sum_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _fmpq_cfrac_list_struct *arg1 = (_fmpq_cfrac_list_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->alt_sum);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1struct_1want_1alt_1sum_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _fmpq_cfrac_list_struct *arg1 = (_fmpq_cfrac_list_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->want_alt_sum = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1struct_1want_1alt_1sum_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _fmpq_cfrac_list_struct *arg1 = (_fmpq_cfrac_list_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  result = (int) ((arg1)->want_alt_sum);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1fmpq_1cfrac_1list_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  _fmpq_cfrac_list_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (_fmpq_cfrac_list_struct *)new _fmpq_cfrac_list_struct();
  *(_fmpq_cfrac_list_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1fmpq_1cfrac_1list_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  _fmpq_cfrac_list_struct *arg1 = (_fmpq_cfrac_list_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  _fmpq_cfrac_list_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  _fmpq_cfrac_list_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  _fmpq_cfrac_list_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  _fmpq_cfrac_list_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1fit_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _fmpq_cfrac_list_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _fmpq_cfrac_list_fit_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1push_1back(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpq_cfrac_list_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  _fmpq_cfrac_list_push_back(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1push_1back_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  _fmpq_cfrac_list_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  _fmpq_cfrac_list_push_back_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1append_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  _fmpq_cfrac_list_struct *arg1 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpq_cfrac_list_append_ui(arg1,(unsigned long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1cfrac_1list_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  _fmpq_cfrac_list_struct *arg1 ;
  _fmpq_cfrac_list_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  arg2 = *(_fmpq_cfrac_list_struct **)&jarg2; 
  _fmpq_cfrac_list_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1struct_1left_1num_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpq_ball_struct *arg1 = (_fmpq_ball_struct *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->left_num;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1struct_1left_1num_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _fmpq_ball_struct *arg1 = (_fmpq_ball_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->left_num);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1struct_1left_1den_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpq_ball_struct *arg1 = (_fmpq_ball_struct *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->left_den;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1struct_1left_1den_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _fmpq_ball_struct *arg1 = (_fmpq_ball_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->left_den);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1struct_1right_1num_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpq_ball_struct *arg1 = (_fmpq_ball_struct *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->right_num;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1struct_1right_1num_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _fmpq_ball_struct *arg1 = (_fmpq_ball_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->right_num);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1struct_1right_1den_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  _fmpq_ball_struct *arg1 = (_fmpq_ball_struct *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->right_den;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1struct_1right_1den_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _fmpq_ball_struct *arg1 = (_fmpq_ball_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->right_den);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1struct_1exact_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _fmpq_ball_struct *arg1 = (_fmpq_ball_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->exact = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1struct_1exact_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _fmpq_ball_struct *arg1 = (_fmpq_ball_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  result = (int) ((arg1)->exact);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1fmpq_1ball_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  _fmpq_ball_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (_fmpq_ball_struct *)new _fmpq_ball_struct();
  *(_fmpq_ball_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1fmpq_1ball_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  _fmpq_ball_struct *arg1 = (_fmpq_ball_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  _fmpq_ball_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  _fmpq_ball_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  _fmpq_ball_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  _fmpq_ball_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  _fmpq_ball_struct *arg1 ;
  _fmpq_ball_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  arg2 = *(_fmpq_ball_struct **)&jarg2; 
  _fmpq_ball_swap(arg1,arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1gt_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _fmpq_ball_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_fmpq_ball_struct **)&jarg1; 
  result = (int)_fmpq_ball_gt_one((_fmpq_ball_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1hgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  _fmpq_cfrac_list_struct *arg1 ;
  _fmpz_mat22_struct *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  arg2 = *(_fmpz_mat22_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpq_hgcd(arg1,arg2,arg3,arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1ball_1get_1cfrac(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  _fmpq_cfrac_list_struct *arg1 ;
  _fmpz_mat22_struct *arg2 ;
  int arg3 ;
  _fmpq_ball_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(_fmpq_cfrac_list_struct **)&jarg1; 
  arg2 = *(_fmpz_mat22_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(_fmpq_ball_struct **)&jarg4; 
  _fmpq_ball_get_cfrac(arg1,arg2,arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1numerator(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_numerator(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1denominator(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_denominator(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpq_1numerator_1ptr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpq *arg1 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  result = (fmpz *)fmpq_numerator_ptr(arg1);
  *(fmpz **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpq_1denominator_1ptr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpq *arg1 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  result = (fmpz *)fmpq_denominator_ptr(arg1);
  *(fmpz **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1equal_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  fmpq *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)fmpq_equal_fmpz(arg1,arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_arb_1test_1multiplier(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)arb_test_multiplier();
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1add_1inline(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_add_inline(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1add_1si_1inline(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_add_si_inline(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1sub_1si_1inline(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_sub_si_inline(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1add_1ui_1inline(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_add_ui_inline(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1add2_1fmpz_1si_1inline(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_add2_fmpz_si_inline(arg1,(long const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1set_1mpn_1large(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (int)jarg4; 
  fmpz_set_mpn_large(arg1,(unsigned long const *)arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1adiv_1q_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_adiv_q_2exp(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1set_1si_1small(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  fmpz *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _fmpz_set_si_small(arg1,arg2);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1sub_1small_1large(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (mp_limb_signed_t)_fmpz_sub_small_large((long const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1sub_1small(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (mp_limb_signed_t)_fmpz_sub_small((long const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1size(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (mp_size_t)_fmpz_size((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1ui_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_ui_mul_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1ui_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_ui_pow_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1max(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_max(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1min(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_min(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1lshift_1mpn(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5) {
  fmpz *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  int arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  fmpz_lshift_mpn(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1allocated_1bytes(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (mp_limb_signed_t)fmpz_allocated_bytes((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FMPR_1RND_1DOWN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FMPR_1RND_1UP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FMPR_1RND_1FLOOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FMPR_1RND_1CEIL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FMPR_1RND_1NEAR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_rounds_1up(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jint jresult = 0 ;
  int arg1 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)rounds_up(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_rnd_1to_1mpfr(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  int arg1 ;
  mpfr_rnd_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (mpfr_rnd_t)rnd_to_mpfr(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1struct_1man_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpr_struct *arg1 = (fmpr_struct *) 0 ;
  fmpz arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (fmpz)jarg2; 
  if (arg1) (arg1)->man = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1struct_1man_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 = (fmpr_struct *) 0 ;
  fmpz result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (fmpz) ((arg1)->man);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1struct_1exp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpr_struct *arg1 = (fmpr_struct *) 0 ;
  fmpz arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (fmpz)jarg2; 
  if (arg1) (arg1)->exp = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1struct_1exp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 = (fmpr_struct *) 0 ;
  fmpz result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (fmpz) ((arg1)->exp);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpr_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpr_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpr_struct *)new fmpr_struct();
  *(fmpr_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpr_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpr_struct *arg1 = (fmpr_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpr_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpr_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  fmpr_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpr_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  fmpr_clear(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FMPR_1EXP_1POS_1INF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)((1L));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FMPR_1EXP_1NEG_1INF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)((2L));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FMPR_1EXP_1NAN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)((3L));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpr_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  fmpr_zero(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (int)fmpr_is_zero((fmpr_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1is_1special(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (int)fmpr_is_special((fmpr_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1is_1normal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (int)fmpr_is_normal((fmpr_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1is_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (int)fmpr_is_inf((fmpr_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1is_1pos_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (int)fmpr_is_pos_inf((fmpr_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1is_1neg_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (int)fmpr_is_neg_inf((fmpr_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1is_1nan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (int)fmpr_is_nan((fmpr_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1is_1finite(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (int)fmpr_is_finite((fmpr_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1pos_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpr_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  fmpr_pos_inf(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1neg_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpr_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  fmpr_neg_inf(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1nan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpr_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  fmpr_nan(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (int)fmpr_is_one((fmpr_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpr_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  fmpr_one(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpr_1normalise_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)_fmpr_normalise_naive(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  fmpr_set(arg1,(fmpr_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  fmpr_swap(arg1,arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpr_1set_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  int arg6 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (int)jarg6; 
  result = (mp_limb_signed_t)_fmpr_set_round(arg1,arg2,(long const (*))arg3,(long const (*))arg4,arg5,arg6);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpr_1normalise(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)_fmpr_normalise(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1set_1round_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)fmpr_set_round_naive(arg1,(fmpr_struct const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1set_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)fmpr_set_round(arg1,(fmpr_struct const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1set_1round_1fmpz_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_set_round_fmpz_2exp(arg1,(long const (*))arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1set_1round_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)fmpr_set_round_fmpz(arg1,(long const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpr_1set_1round_1mpn(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5, jint jarg6, jint jarg7) {
  jint jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz *arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  int arg5 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  result = (mp_limb_signed_t)_fmpr_set_round_mpn(arg1,arg2,(unsigned long const *)arg3,arg4,arg5,arg6,arg7);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1set_1round_1ui_12exp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5, jint jarg6) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_limb_t arg2 ;
  fmpz *arg3 ;
  int arg4 ;
  mp_limb_signed_t arg5 ;
  int arg6 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (int)jarg6; 
  result = (mp_limb_signed_t)fmpr_set_round_ui_2exp_fmpz(arg1,arg2,(long const (*))arg3,arg4,arg5,arg6);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1set_1round_1uiui_12exp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6, jint jarg7) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  fmpz *arg4 ;
  int arg5 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  result = (mp_limb_signed_t)fmpr_set_round_uiui_2exp_fmpz(arg1,arg2,arg3,(long const (*))arg4,arg5,arg6,arg7);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1ulp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpr_ulp(arg1,(fmpr_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1check_1ulp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)fmpr_check_ulp((fmpr_struct const (*))arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  result = (int)fmpr_equal((fmpr_struct const (*))arg1,(fmpr_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1sgn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (int)fmpr_sgn((fmpr_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  result = (int)fmpr_cmp((fmpr_struct const (*))arg1,(fmpr_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1cmpabs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  result = (int)fmpr_cmpabs((fmpr_struct const (*))arg1,(fmpr_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1cmpabs_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)fmpr_cmpabs_ui((fmpr_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  fmpr_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpr_randtest(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1randtest_1not_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  fmpr_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpr_randtest_not_zero(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1randtest_1special(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  fmpr_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpr_randtest_special(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1get_1mpfr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  __mpfr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)fmpr_get_mpfr(arg1,(fmpr_struct const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1set_1mpfr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpr_struct *arg1 ;
  __mpfr_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(__mpfr_struct **)&jarg2; 
  fmpr_set_mpfr(arg1,(__mpfr_struct const (*))arg2);
  
  
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fmpr_1get_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jdouble jresult = 0 ;
  fmpr_struct *arg1 ;
  int arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (double)fmpr_get_d((fmpr_struct const (*))arg1,arg2);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  fmpr_struct *arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  fmpr_set_d(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpr_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpr_set_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpr_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpr_set_si(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1set_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpr_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpr_set_fmpz(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpr_1add_1eps(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)_fmpr_add_eps(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpr_1add_1mpn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jlong jarg6, jint jarg7, jint jarg8, jlong jarg9, jint jarg10, jint jarg11, jint jarg12) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  int arg4 ;
  fmpz *arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_size_t arg7 ;
  int arg8 ;
  fmpz *arg9 ;
  mp_limb_signed_t arg10 ;
  mp_limb_signed_t arg11 ;
  int arg12 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_size_t)jarg7; 
  arg8 = (int)jarg8; 
  arg9 = *(long **)&jarg9; 
  arg10 = (mp_limb_signed_t)jarg10; 
  arg11 = (mp_limb_signed_t)jarg11; 
  arg12 = (int)jarg12; 
  result = (mp_limb_signed_t)_fmpr_add_mpn(arg1,(unsigned long const *)arg2,arg3,arg4,(long const (*))arg5,(unsigned long const *)arg6,arg7,arg8,(long const (*))arg9,arg10,arg11,arg12);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpr_1add_11x1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jint jarg9, jint jarg10) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_limb_t arg2 ;
  int arg3 ;
  fmpz *arg4 ;
  mp_limb_t arg5 ;
  int arg6 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  mp_limb_signed_t arg10 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  arg10 = (mp_limb_signed_t)jarg10; 
  result = (mp_limb_signed_t)_fmpr_add_1x1(arg1,arg2,arg3,(long const (*))arg4,arg5,arg6,(long const (*))arg7,arg8,arg9,arg10);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1add_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpr_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_add_naive(arg1,(fmpr_struct const (*))arg2,(fmpr_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpr_1mul_1mpn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jint jarg9, jint jarg10) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  fmpz *arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_size_t arg6 ;
  fmpz *arg7 ;
  int arg8 ;
  mp_limb_signed_t arg9 ;
  int arg10 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_size_t)jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (int)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  arg10 = (int)jarg10; 
  result = (mp_limb_signed_t)_fmpr_mul_mpn(arg1,(unsigned long const *)arg2,arg3,(long const (*))arg4,(unsigned long const *)arg5,arg6,(long const (*))arg7,arg8,arg9,arg10);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpr_1mul_11x1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jint jarg6, jint jarg7, jint jarg8) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_limb_t arg2 ;
  fmpz *arg3 ;
  mp_limb_t arg4 ;
  fmpz *arg5 ;
  int arg6 ;
  mp_limb_signed_t arg7 ;
  int arg8 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (int)jarg8; 
  result = (mp_limb_signed_t)_fmpr_mul_1x1(arg1,arg2,(long const (*))arg3,arg4,(long const (*))arg5,arg6,arg7,arg8);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1mul_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpr_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_mul_naive(arg1,(fmpr_struct const (*))arg2,(fmpr_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpr_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_mul(arg1,(fmpr_struct const (*))arg2,(fmpr_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_mul_ui(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_mul_si(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_mul_fmpz(arg1,(fmpr_struct const (*))arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpr_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_add(arg1,(fmpr_struct const (*))arg2,(fmpr_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1add_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_add_ui(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1add_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_add_si(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1add_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_add_fmpz(arg1,(fmpr_struct const (*))arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpr_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_sub(arg1,(fmpr_struct const (*))arg2,(fmpr_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1sub_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_sub_ui(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1sub_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_sub_si(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1sub_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_sub_fmpz(arg1,(fmpr_struct const (*))arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpr_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_div(arg1,(fmpr_struct const (*))arg2,(fmpr_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1div_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_div_ui(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1ui_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_limb_t arg2 ;
  fmpr_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_ui_div(arg1,arg2,(fmpr_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1div_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_div_si(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1si_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  fmpr_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_si_div(arg1,arg2,(fmpr_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1div_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_div_fmpz(arg1,(fmpr_struct const (*))arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1fmpz_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpz *arg2 ;
  fmpr_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_fmpz_div(arg1,(long const (*))arg2,(fmpr_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1fmpz_1div_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_fmpz_div_fmpz(arg1,(long const (*))arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpr_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_addmul(arg1,(fmpr_struct const (*))arg2,(fmpr_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1addmul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_addmul_ui(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1addmul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_addmul_si(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1addmul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_addmul_fmpz(arg1,(fmpr_struct const (*))arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1submul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpr_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_submul(arg1,(fmpr_struct const (*))arg2,(fmpr_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1submul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_submul_ui(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1submul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_submul_si(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1submul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_submul_fmpz(arg1,(fmpr_struct const (*))arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)fmpr_sqrt(arg1,(fmpr_struct const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1sqrt_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)fmpr_sqrt_ui(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1sqrt_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)fmpr_sqrt_fmpz(arg1,(long const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1rsqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)fmpr_rsqrt(arg1,(fmpr_struct const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpr_root(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1log(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)fmpr_log(arg1,(fmpr_struct const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1log1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)fmpr_log1p(arg1,(fmpr_struct const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)fmpr_exp(arg1,(fmpr_struct const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1expm1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)fmpr_expm1(arg1,(fmpr_struct const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  fmpr_neg(arg1,(fmpr_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1neg_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)fmpr_neg_round(arg1,(fmpr_struct const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  fmpr_abs(arg1,(fmpr_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1set_1error_1result(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpr_set_error_result(arg1,(fmpr_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1add_1error_1result(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpr_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (int)jarg6; 
  fmpr_add_error_result(arg1,(fmpr_struct const (*))arg2,(fmpr_struct const (*))arg3,arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpr_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  fmpr_print((fmpr_struct const (*))arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1printd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpr_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpr_printd((fmpr_struct const (*))arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1mul_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpr_mul_2exp_si(arg1,(fmpr_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1mul_12exp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpr_mul_2exp_fmpz(arg1,(fmpr_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1get_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  fmpr_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  fmpr_get_fmpq(arg1,(fmpr_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1set_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  fmpq *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (mp_limb_signed_t)fmpr_set_fmpq(arg1,(fmpq const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1get_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz *arg1 ;
  fmpr_struct *arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  fmpr_get_fmpz(arg1,(fmpr_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1get_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  int arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (mp_limb_signed_t)fmpr_get_si((fmpr_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1set_1fmpz_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  fmpr_struct *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpr_set_fmpz_2exp(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1get_1fmpz_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpr_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  fmpr_get_fmpz_2exp(arg1,arg2,(fmpr_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1get_1fmpz_1fixed_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpr_struct *arg2 ;
  fmpz *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (int)fmpr_get_fmpz_fixed_fmpz(arg1,(fmpr_struct const (*))arg2,(long const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1get_1fmpz_1fixed_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)fmpr_get_fmpz_fixed_si(arg1,(fmpr_struct const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1set_1si_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  fmpr_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpr_set_si_2exp_si(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1set_1ui_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  fmpr_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpr_set_ui_2exp_si(arg1,arg2,arg3);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1cmp_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)fmpr_cmp_2exp_si((fmpr_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1cmpabs_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)fmpr_cmpabs_2exp_si((fmpr_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1min(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpr_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  fmpr_min(arg1,(fmpr_struct const (*))arg2,(fmpr_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1max(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpr_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(fmpr_struct **)&jarg3; 
  fmpr_max(arg1,(fmpr_struct const (*))arg2,(fmpr_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (mp_limb_signed_t)fmpr_bits((fmpr_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1is_1int(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  result = (int)fmpr_is_int((fmpr_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpr_1is_1int_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  fmpr_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)fmpr_is_int_2exp_si((fmpr_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1pow_1sloppy_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  fmpr_pow_sloppy_fmpz(arg1,(fmpr_struct const (*))arg2,(long const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1pow_1sloppy_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  fmpr_pow_sloppy_ui(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpr_1pow_1sloppy_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  fmpr_struct *arg1 ;
  fmpr_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  fmpr_pow_sloppy_si(arg1,(fmpr_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpr_1vec_1init(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  mp_limb_signed_t arg1 ;
  fmpr_ptr result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  result = (fmpr_ptr)_fmpr_vec_init(arg1);
  *(fmpr_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpr_1vec_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpr_ptr arg1 = (fmpr_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpr_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _fmpr_vec_clear(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MAG_1MAX_1LAGOM_1EXP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)(((((1L) << (64-2)) -(1L))/4));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MAG_1MIN_1LAGOM_1EXP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)((-((((1L) << (64-2)) -(1L))/4)));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ADD2_1FAST_1MAX_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)(((((1L) << (64-2)) -(1L))/4));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ADD2_1FAST_1MIN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)((-((((1L) << (64-2)) -(1L))/4)));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1set_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  _fmpz_set_fast(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1add_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_add_fast(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1add2_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_add2_fast(arg1,(long const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1sub2_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_sub2_fast(arg1,(long const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MAG_1EXP_1POS_1INF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)(((-(((1L) << (64-2)) -(1L))) +1));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MAG_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(30);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_MAG_1ONE_1HALF_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long)(((1UL) << (30-1)));
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1mag_1fixmul32(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)__mag_fixmul32(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1struct_1exp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mag_struct *arg1 = (mag_struct *) 0 ;
  fmpz arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (fmpz)jarg2; 
  if (arg1) (arg1)->exp = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mag_1struct_1exp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mag_struct *arg1 = (mag_struct *) 0 ;
  fmpz result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  result = (fmpz) ((arg1)->exp);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1struct_1man_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mag_struct *arg1 = (mag_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->man = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mag_1struct_1man_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mag_struct *arg1 = (mag_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->man);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1mag_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mag_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mag_struct *)new mag_struct();
  *(mag_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1mag_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mag_struct *arg1 = (mag_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mag_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mag_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  mag_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1init_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_init_set(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mag_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  mag_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_set(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mag_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  mag_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mag_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  mag_one(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mag_1is_1special(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mag_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  result = (int)mag_is_special((mag_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mag_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mag_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  result = (int)mag_is_zero((mag_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mag_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  mag_inf(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mag_1is_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mag_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  result = (int)mag_is_inf((mag_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mag_1is_1finite(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mag_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  result = (int)mag_is_finite((mag_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mag_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  result = (int)mag_equal((mag_struct const (*))arg1,(mag_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_mul(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1mul_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_mul_lower(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_addmul(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1add_12exp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  mag_add_2exp_fmpz(arg1,(mag_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_add(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1add_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_add_lower(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1add_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_add_ui(arg1,(mag_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1add_1ui_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_add_ui_lower(arg1,(mag_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1add_1ui_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  mag_add_ui_2exp_si(arg1,(mag_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_div(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1div_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_div_lower(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1inv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_inv(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1inv_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_inv_lower(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1mul_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  mag_mul_2exp_si(arg1,(mag_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1mul_12exp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  mag_mul_2exp_fmpz(arg1,(mag_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_sub(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1sub_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_sub_lower(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1fast_1init_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_fast_init_set(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1fast_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mag_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  mag_fast_zero(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mag_1fast_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mag_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  result = (int)mag_fast_is_zero((mag_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1fast_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_fast_mul(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1fast_1mul_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  mag_fast_mul_2exp_si(arg1,(mag_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1fast_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_fast_addmul(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1fast_1add_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  mag_fast_add_2exp_si(arg1,(mag_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  mag_struct *arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  mag_set_d(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1set_1d_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  mag_struct *arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  mag_set_d_lower(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1set_1d_12exp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jlong jarg3) {
  mag_struct *arg1 ;
  double arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  arg3 = *(long **)&jarg3; 
  mag_set_d_2exp_fmpz(arg1,arg2,(long const (*))arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1set_1d_12exp_1fmpz_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jlong jarg3) {
  mag_struct *arg1 ;
  double arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  arg3 = *(long **)&jarg3; 
  mag_set_d_2exp_fmpz_lower(arg1,arg2,(long const (*))arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1set_1fmpz_12exp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  mag_struct *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  mag_set_fmpz_2exp_fmpz(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1set_1fmpr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  fmpr_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  mag_set_fmpr(arg1,(fmpr_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1get_1fmpr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpr_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_get_fmpr(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1randtest_1special(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  mag_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  mag_randtest_special(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  mag_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  mag_randtest(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  FILE *arg1 = (FILE *) 0 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_fprint(arg1,(mag_struct const (*))arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1fprintd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  FILE *arg1 = (FILE *) 0 ;
  mag_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  mag_fprintd(arg1,(mag_struct const (*))arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mag_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  mag_print((mag_struct const (*))arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1printd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mag_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  mag_printd((mag_struct const (*))arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1get_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_get_fmpq(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1get_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_get_fmpz(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1get_1fmpz_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_get_fmpz_lower(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mag_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  result = (int)mag_cmp((mag_struct const (*))arg1,(mag_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mag_1cmp_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  mag_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)mag_cmp_2exp_si((mag_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1min(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_min(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1max(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_max(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1mag_1vec_1init(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  mp_limb_signed_t arg1 ;
  mag_ptr result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  result = (mag_ptr)_mag_vec_init(arg1);
  *(mag_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1mag_1vec_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mag_ptr arg1 = (mag_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _mag_vec_clear(arg1,arg2);
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_mag_1get_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  mag_struct *arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  result = (double)mag_get_d((mag_struct const (*))arg1);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_mag_1get_1d_1log2_1approx(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  mag_struct *arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  result = (double)mag_get_d_log2_approx((mag_struct const (*))arg1);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_mag_1d_1log_1upper_1bound(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)mag_d_log_upper_bound(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_mag_1d_1log_1lower_1bound(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)mag_d_log_lower_bound(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1log1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_log1p(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1log_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mag_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  mag_log_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1log(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_log(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1log_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_log_lower(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1neg_1log(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_neg_log(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1neg_1log_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_neg_log_lower(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_exp(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1exp_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_exp_lower(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1expinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_expinv(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1expinv_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_expinv_lower(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1expm1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_expm1(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1exp_1tail(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_exp_tail(arg1,(mag_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1sinh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_sinh(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1sinh_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_sinh_lower(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1cosh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_cosh(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1cosh_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_cosh_lower(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_pow_ui(arg1,(mag_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1pow_1ui_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_pow_ui_lower(arg1,(mag_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1pow_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  mag_pow_fmpz(arg1,(mag_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1pow_1fmpz_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  mag_pow_fmpz_lower(arg1,(mag_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1const_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mag_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  mag_const_pi(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1const_1pi_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mag_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  mag_const_pi_lower(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1atan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_atan(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1atan_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_atan_lower(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1fac_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mag_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  mag_fac_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1rfac_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mag_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  mag_rfac_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1bin_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  mag_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_bin_uiui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1bernoulli_1div_1fac_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mag_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  mag_bernoulli_div_fac_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1set_1fmpz_12exp_1fmpz_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  mag_struct *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  mag_set_fmpz_2exp_fmpz_lower(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_sqrt(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1sqrt_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_sqrt_lower(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1rsqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_rsqrt(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1rsqrt_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  mag_rsqrt_lower(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_root(arg1,(mag_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1hypot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  mag_hypot(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1binpow_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  mag_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_binpow_uiui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1polylog_1tail(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jlong jarg5) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  mag_polylog_tail(arg1,(mag_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1geom_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_geom_series(arg1,(mag_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1hurwitz_1zeta_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  mag_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_hurwitz_zeta_uiui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mag_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  mag_set_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1set_1ui_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mag_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  mag_set_ui_lower(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1set_1ui_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  mag_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  mag_set_ui_2exp_si(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1set_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mag_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  mag_set_fmpz(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1set_1fmpz_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mag_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  mag_set_fmpz_lower(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_mul_ui(arg1,(mag_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1mul_1ui_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_mul_ui_lower(arg1,(mag_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  mag_mul_fmpz(arg1,(mag_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1mul_1fmpz_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  mag_mul_fmpz_lower(arg1,(mag_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1div_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_div_ui(arg1,(mag_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1div_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  mag_div_fmpz(arg1,(mag_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mag_1allocated_1bytes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mag_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  result = (mp_limb_signed_t)mag_allocated_bytes((mag_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mag_1load_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  mag_struct *arg1 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)mag_load_str(arg1,(char const *)arg2);
  jresult = (jint)result; 
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_mag_1dump_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  mag_struct *arg1 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mag_struct **)&jarg1; 
  result = (char *)mag_dump_str((mag_struct const (*))arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mag_1load_1file(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mag_struct *arg1 ;
  FILE *arg2 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(FILE **)&jarg2; 
  result = (int)mag_load_file(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mag_1dump_1file(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  mag_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  result = (int)mag_dump_file(arg1,(mag_struct const (*))arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1RND_1DOWN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1RND_1UP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1RND_1FLOOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1RND_1CEIL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1RND_1NEAR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1rounds_1down(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jint jresult = 0 ;
  int arg1 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)arf_rounds_down(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1rounds_1up(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jint jresult = 0 ;
  int arg1 ;
  int arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  arg2 = (int)jarg2; 
  result = (int)arf_rounds_up(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1rnd_1to_1mpfr(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jint jresult = 0 ;
  int arg1 ;
  mpfr_rnd_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  result = (mpfr_rnd_t)arf_rnd_to_mpfr(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1RESULT_1EXACT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1RESULT_1INEXACT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1MAX_1LAGOM_1EXP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)(((((1L) << (64-2)) -(1L))/4));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1MIN_1LAGOM_1EXP_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)((-((((1L) << (64-2)) -(1L))/4)));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1EXP_1ZERO_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1EXP_1NAN_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)((-(((1L) << (64-2)) -(1L))));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1EXP_1POS_1INF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)(((-(((1L) << (64-2)) -(1L))) +1));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1EXP_1NEG_1INF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  result = (long)(((-(((1L) << (64-2)) -(1L))) +2));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1NOPTR_1LIMBS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mantissa_1noptr_1struct_1d_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mantissa_noptr_struct *arg1 = (mantissa_noptr_struct *) 0 ;
  mp_limb_t *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_noptr_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  {
    size_t ii;
    mp_limb_t *b = (mp_limb_t *) arg1->d;
    for (ii = 0; ii < (size_t)2; ii++) b[ii] = *((mp_limb_t *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mantissa_1noptr_1struct_1d_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mantissa_noptr_struct *arg1 = (mantissa_noptr_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_noptr_struct **)&jarg1; 
  result = (mp_limb_t *)(mp_limb_t *) ((arg1)->d);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1mantissa_1noptr_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mantissa_noptr_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mantissa_noptr_struct *)new mantissa_noptr_struct();
  *(mantissa_noptr_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1mantissa_1noptr_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mantissa_noptr_struct *arg1 = (mantissa_noptr_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mantissa_noptr_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mantissa_1ptr_1struct_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mantissa_ptr_struct *arg1 = (mantissa_ptr_struct *) 0 ;
  mp_size_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_ptr_struct **)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  if (arg1) (arg1)->alloc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mantissa_1ptr_1struct_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mantissa_ptr_struct *arg1 = (mantissa_ptr_struct *) 0 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_ptr_struct **)&jarg1; 
  result = (mp_size_t) ((arg1)->alloc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mantissa_1ptr_1struct_1d_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mantissa_ptr_struct *arg1 = (mantissa_ptr_struct *) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_ptr_struct **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  if (arg1) (arg1)->d = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mantissa_1ptr_1struct_1d_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mantissa_ptr_struct *arg1 = (mantissa_ptr_struct *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_ptr_struct **)&jarg1; 
  result = (mp_ptr) ((arg1)->d);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1mantissa_1ptr_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mantissa_ptr_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mantissa_ptr_struct *)new mantissa_ptr_struct();
  *(mantissa_ptr_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1mantissa_1ptr_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mantissa_ptr_struct *arg1 = (mantissa_ptr_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mantissa_ptr_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mantissa_1struct_1noptr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mantissa_struct *arg1 = (mantissa_struct *) 0 ;
  mantissa_noptr_struct *arg2 = (mantissa_noptr_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mantissa_struct **)&jarg1; 
  arg2 = *(mantissa_noptr_struct **)&jarg2; 
  if (arg1) (arg1)->noptr = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mantissa_1struct_1noptr_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mantissa_struct *arg1 = (mantissa_struct *) 0 ;
  mantissa_noptr_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_struct **)&jarg1; 
  result = (mantissa_noptr_struct *)& ((arg1)->noptr);
  *(mantissa_noptr_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mantissa_1struct_1ptr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mantissa_struct *arg1 = (mantissa_struct *) 0 ;
  mantissa_ptr_struct *arg2 = (mantissa_ptr_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mantissa_struct **)&jarg1; 
  arg2 = *(mantissa_ptr_struct **)&jarg2; 
  if (arg1) (arg1)->ptr = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mantissa_1struct_1ptr_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mantissa_struct *arg1 = (mantissa_struct *) 0 ;
  mantissa_ptr_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_struct **)&jarg1; 
  result = (mantissa_ptr_struct *)& ((arg1)->ptr);
  *(mantissa_ptr_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1mantissa_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mantissa_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mantissa_struct *)new mantissa_struct();
  *(mantissa_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1mantissa_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mantissa_struct *arg1 = (mantissa_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mantissa_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1struct_1exp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arf_struct *arg1 = (arf_struct *) 0 ;
  fmpz arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (fmpz)jarg2; 
  if (arg1) (arg1)->exp = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1struct_1exp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 = (arf_struct *) 0 ;
  fmpz result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (fmpz) ((arg1)->exp);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1struct_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arf_struct *arg1 = (arf_struct *) 0 ;
  mp_size_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  if (arg1) (arg1)->size = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1struct_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 = (arf_struct *) 0 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (mp_size_t) ((arg1)->size);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1struct_1d_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 = (arf_struct *) 0 ;
  mantissa_struct *arg2 = (mantissa_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(mantissa_struct **)&jarg2; 
  if (arg1) (arg1)->d = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arf_1struct_1d_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  arf_struct *arg1 = (arf_struct *) 0 ;
  mantissa_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (mantissa_struct *)& ((arg1)->d);
  *(mantissa_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1arf_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  arf_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (arf_struct *)new arf_struct();
  *(arf_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1arf_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  arf_struct *arg1 = (arf_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(arf_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arf_1promote(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arf_struct *arg1 ;
  mp_size_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  _arf_promote(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arf_1demote(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arf_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  _arf_demote(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arf_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arf_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arf_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arf_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arf_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arf_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1pos_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arf_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arf_pos_inf(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1neg_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arf_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arf_neg_inf(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1nan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arf_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arf_nan(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1is_1special(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (int)arf_is_special((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (int)arf_is_zero((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1is_1pos_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (int)arf_is_pos_inf((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1is_1neg_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (int)arf_is_neg_inf((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1is_1nan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (int)arf_is_nan((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1is_1normal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (int)arf_is_normal((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1is_1finite(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (int)arf_is_finite((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1is_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (int)arf_is_inf((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arf_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arf_one(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (int)arf_is_one((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1sgn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (int)arf_sgn((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  result = (int)arf_cmp((arf_struct const (*))arg1,(arf_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1cmpabs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  result = (int)arf_cmpabs((arf_struct const (*))arg1,(arf_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1cmpabs_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)arf_cmpabs_ui((arf_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1cmpabs_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  double arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  result = (int)arf_cmpabs_d((arf_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1cmp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)arf_cmp_si((arf_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1cmp_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)arf_cmp_ui((arf_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1cmp_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  double arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  result = (int)arf_cmp_d((arf_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_set(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_neg(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1init_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  arf_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arf_init_set_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1init_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arf_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arf_init_set_si(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  arf_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arf_set_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arf_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arf_set_si(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1init_1set_1shallow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_init_set_shallow(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1init_1neg_1shallow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_init_neg_shallow(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1init_1set_1mag_1shallow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arf_init_set_mag_shallow(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1init_1neg_1mag_1shallow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arf_init_neg_mag_shallow(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1cmpabs_1mag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mag_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  result = (int)arf_cmpabs_mag((arf_struct const (*))arg1,(mag_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1mag_1cmpabs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mag_struct *arg1 ;
  arf_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  result = (int)arf_mag_cmpabs((mag_struct const (*))arg1,(arf_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set_1mpn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  arf_struct *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (int)jarg4; 
  arf_set_mpn(arg1,(unsigned long const *)arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  __mpz_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(__mpz_struct **)&jarg2; 
  arf_set_mpz(arg1,(__mpz_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  arf_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arf_set_fmpz(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arf_1set_1round_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_t arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)_arf_set_round_ui(arg1,arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arf_1set_1round_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6, jint jarg7) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  int arg5 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  result = (int)_arf_set_round_uiui(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arf_1set_1round_1mpn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5, jint jarg6, jint jarg7) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  int arg5 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  result = (int)_arf_set_round_mpn(arg1,arg2,(unsigned long const *)arg3,arg4,arg5,arg6,arg7);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1set_1round_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)arf_set_round_ui(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1set_1round_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)arf_set_round_si(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1set_1round_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  __mpz_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(__mpz_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)arf_set_round_mpz(arg1,(__mpz_struct const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1set_1round_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)arf_set_round_fmpz(arg1,(long const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1set_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)arf_set_round(arg1,(arf_struct const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1neg_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)arf_neg_round(arg1,(arf_struct const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1get_1fmpr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpr_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpr_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_get_fmpr(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set_1fmpr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  fmpr_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(fmpr_struct **)&jarg2; 
  arf_set_fmpr(arg1,(fmpr_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1get_1mpfr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  __mpfr_struct *arg1 ;
  arf_struct *arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)arf_get_mpfr(arg1,(arf_struct const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set_1mpfr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  __mpfr_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(__mpfr_struct **)&jarg2; 
  arf_set_mpfr(arg1,(__mpfr_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  result = (int)arf_equal((arf_struct const (*))arg1,(arf_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1equal_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)arf_equal_si((arf_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1min(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  arf_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arf_min(arg1,(arf_struct const (*))arg2,(arf_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1max(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  arf_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arf_max(arg1,(arf_struct const (*))arg2,(arf_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_abs(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (mp_limb_signed_t)arf_bits((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1bot(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_bot(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1is_1int(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (int)arf_is_int((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1is_1int_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)arf_is_int_2exp_si((arf_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1cmp_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)arf_cmp_2exp_si((arf_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1cmpabs_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)arf_cmpabs_2exp_si((arf_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set_1si_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  arf_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arf_set_si_2exp_si(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set_1ui_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arf_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arf_set_ui_2exp_si(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1mul_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arf_mul_2exp_si(arg1,(arf_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1mul_12exp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arf_mul_2exp_fmpz(arg1,(arf_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1set_1round_1fmpz_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_set_round_fmpz_2exp(arg1,(long const (*))arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1abs_1bound_1lt_12exp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_abs_bound_lt_2exp_fmpz(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1abs_1bound_1le_12exp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_abs_bound_le_2exp_fmpz(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1abs_1bound_1lt_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (mp_limb_signed_t)arf_abs_bound_lt_2exp_si((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1frexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  arf_struct *arg1 ;
  fmpz *arg2 ;
  arf_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arf_frexp(arg1,arg2,(arf_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1get_1fmpz_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  arf_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arf_get_fmpz_2exp(arg1,arg2,(arf_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arf_1get_1integer_1mpn(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)_arf_get_integer_mpn(arg1,(unsigned long const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arf_1set_1mpn_1fixed(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4, jint jarg5, jint jarg6, jint jarg7) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  mp_size_t arg4 ;
  int arg5 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  result = (int)_arf_set_mpn_fixed(arg1,(unsigned long const *)arg2,arg3,arg4,arg5,arg6,arg7);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1get_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  arf_struct *arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (int)arf_get_fmpz(arg1,(arf_struct const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1get_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  int arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (mp_limb_signed_t)arf_get_si((arf_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1get_1fmpz_1fixed_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  arf_struct *arg2 ;
  fmpz *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (int)arf_get_fmpz_fixed_fmpz(arg1,(arf_struct const (*))arg2,(long const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1get_1fmpz_1fixed_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  arf_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)arf_get_fmpz_fixed_si(arg1,(arf_struct const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set_1fmpz_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  arf_struct *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arf_set_fmpz_2exp(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1floor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_floor(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1ceil(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_ceil(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1debug(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arf_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arf_debug((arf_struct const (*))arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  FILE *arg1 = (FILE *) 0 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_fprint(arg1,(arf_struct const (*))arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1fprintd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  FILE *arg1 = (FILE *) 0 ;
  arf_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arf_fprintd(arg1,(arf_struct const (*))arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arf_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arf_print((arf_struct const (*))arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1printd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arf_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arf_printd((arf_struct const (*))arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arf_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arf_randtest(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1randtest_1not_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arf_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arf_randtest_not_zero(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1randtest_1special(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arf_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arf_randtest_special(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MUL_1MPFR_1MIN_1LIMBS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(25);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MUL_1MPFR_1MAX_1LIMBS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(10000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1MUL_1STACK_1ALLOC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(40);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1MUL_1TLS_1ALLOC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1arf_1mul_1tmp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  __arf_mul_tmp = arg1;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1arf_1mul_1tmp_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  result = (mp_ptr)__arf_mul_tmp;
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1arf_1mul_1alloc_1set(JNIEnv *jenv, jclass jcls, jint jarg1) {
  mp_limb_signed_t arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  __arf_mul_alloc = arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1arf_1mul_1alloc_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mp_limb_signed_t)__arf_mul_alloc;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arf_1mul_1tmp_1cleanup(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  _arf_mul_tmp_cleanup();
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1mul_1special(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  arf_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arf_mul_special(arg1,(arf_struct const (*))arg2,(arf_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1mul_1via_1mpfr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_mul_via_mpfr(arg1,(arf_struct const (*))arg2,(arf_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1mul_1rnd_1any(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  arf_srcptr arg3 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(arf_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_mul_rnd_any(arg1,(arf_struct const *)arg2,(arf_struct const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1mul_1rnd_1down(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  arf_srcptr arg3 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(arf_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)arf_mul_rnd_down(arg1,(arf_struct const *)arg2,(arf_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1neg_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_neg_mul(arg1,(arf_struct const (*))arg2,(arf_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_mul_ui(arg1,(arf_struct const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_mul_si(arg1,(arf_struct const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1mul_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  __mpz_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(__mpz_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_mul_mpz(arg1,(arf_struct const *)arg2,(__mpz_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_mul_fmpz(arg1,(arf_struct const *)arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1ADD_1STACK_1ALLOC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(40);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARF_1ADD_1TLS_1ALLOC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1000);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1arf_1add_1tmp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  __arf_add_tmp = arg1;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1_1arf_1add_1tmp_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  result = (mp_ptr)__arf_add_tmp;
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1_1arf_1add_1alloc_1set(JNIEnv *jenv, jclass jcls, jint jarg1) {
  mp_limb_signed_t arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  __arf_add_alloc = arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1arf_1add_1alloc_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  result = (mp_limb_signed_t)__arf_add_alloc;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arf_1add_1tmp_1cleanup(JNIEnv *jenv, jclass jcls) {
  (void)jenv;
  (void)jcls;
  _arf_add_tmp_cleanup();
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arf_1add_1mpn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jlong jarg6, jint jarg7, jint jarg8, jlong jarg9, jint jarg10, jint jarg11) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_size_t arg3 ;
  int arg4 ;
  fmpz *arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_size_t arg7 ;
  int arg8 ;
  mp_limb_t arg9 ;
  mp_limb_signed_t arg10 ;
  int arg11 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_size_t)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_size_t)jarg7; 
  arg8 = (int)jarg8; 
  arg9 = (mp_limb_t)jarg9; 
  arg10 = (mp_limb_signed_t)jarg10; 
  arg11 = (int)jarg11; 
  result = (int)_arf_add_mpn(arg1,(unsigned long const *)arg2,arg3,arg4,(long const (*))arg5,(unsigned long const *)arg6,arg7,arg8,arg9,arg10,arg11);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  arf_srcptr arg3 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(arf_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_add(arg1,(arf_struct const *)arg2,(arf_struct const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1add_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_add_si(arg1,(arf_struct const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1add_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_add_ui(arg1,(arf_struct const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1add_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_add_fmpz(arg1,(arf_struct const *)arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1add_1fmpz_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  int arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (int)jarg6; 
  result = (int)arf_add_fmpz_2exp(arg1,(arf_struct const *)arg2,(long const (*))arg3,(long const (*))arg4,arg5,arg6);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  arf_srcptr arg3 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(arf_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_sub(arg1,(arf_struct const *)arg2,(arf_struct const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1sub_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_sub_si(arg1,(arf_struct const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1sub_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_sub_ui(arg1,(arf_struct const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1sub_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_sub_fmpz(arg1,(arf_struct const *)arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  arf_srcptr arg3 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(arf_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_addmul(arg1,(arf_struct const *)arg2,(arf_struct const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1addmul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_addmul_ui(arg1,(arf_struct const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1addmul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_addmul_si(arg1,(arf_struct const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1addmul_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  __mpz_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(__mpz_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_addmul_mpz(arg1,(arf_struct const *)arg2,(__mpz_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1addmul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_addmul_fmpz(arg1,(arf_struct const *)arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1submul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  arf_srcptr arg3 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(arf_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_submul(arg1,(arf_struct const *)arg2,(arf_struct const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1submul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_submul_ui(arg1,(arf_struct const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1submul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_submul_si(arg1,(arf_struct const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1submul_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  __mpz_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(__mpz_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_submul_mpz(arg1,(arf_struct const *)arg2,(__mpz_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1submul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_submul_fmpz(arg1,(arf_struct const *)arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1sosq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_sosq(arg1,(arf_struct const (*))arg2,(arf_struct const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  arf_srcptr arg3 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(arf_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_div(arg1,(arf_struct const *)arg2,(arf_struct const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1div_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_div_ui(arg1,(arf_struct const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1ui_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  mp_limb_t arg2 ;
  arf_srcptr arg3 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(arf_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_ui_div(arg1,arg2,(arf_struct const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1div_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_div_si(arg1,(arf_struct const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1si_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  arf_srcptr arg3 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arf_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_si_div(arg1,arg2,(arf_struct const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1div_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_div_fmpz(arg1,(arf_struct const *)arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1fmpz_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  fmpz *arg2 ;
  arf_srcptr arg3 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(arf_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_fmpz_div(arg1,(long const (*))arg2,(arf_struct const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1fmpz_1div_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_fmpz_div_fmpz(arg1,(long const (*))arg2,(long const (*))arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)arf_sqrt(arg1,(arf_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1sqrt_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)arf_sqrt_ui(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1sqrt_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)arf_sqrt_fmpz(arg1,(long const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1rsqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  arf_ptr arg1 = (arf_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)arf_rsqrt(arg1,(arf_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_root(arg1,(arf_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1get_1mag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_get_mag(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1get_1mag_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_get_mag_lower(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set_1mag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arf_set_mag(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1init_1set_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  mag_init_set_arf(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1fast_1init_1set_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  mag_fast_init_set_arf(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1mag_1fast_1add_1ulp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arf_mag_fast_add_ulp(arg1,(mag_struct const (*))arg2,(arf_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1mag_1add_1ulp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arf_mag_add_ulp(arg1,(mag_struct const (*))arg2,(arf_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1mag_1set_1ulp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  mag_struct *arg1 ;
  arf_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arf_mag_set_ulp(arg1,(arf_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1get_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arf_get_fmpq(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1set_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  fmpq *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)arf_set_fmpq(arg1,(fmpq const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1complex_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  arf_struct *arg3 ;
  arf_struct *arg4 ;
  arf_struct *arg5 ;
  arf_struct *arg6 ;
  mp_limb_signed_t arg7 ;
  int arg8 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  (void)jarg6_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = *(arf_struct **)&jarg4; 
  arg5 = *(arf_struct **)&jarg5; 
  arg6 = *(arf_struct **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (int)jarg8; 
  result = (int)arf_complex_mul(arg1,arg2,(arf_struct const (*))arg3,(arf_struct const (*))arg4,(arf_struct const (*))arg5,(arf_struct const (*))arg6,arg7,arg8);
  jresult = (jint)result; 
  
  
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1complex_1mul_1fallback(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  arf_struct *arg3 ;
  arf_struct *arg4 ;
  arf_struct *arg5 ;
  arf_struct *arg6 ;
  mp_limb_signed_t arg7 ;
  int arg8 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  (void)jarg6_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = *(arf_struct **)&jarg4; 
  arg5 = *(arf_struct **)&jarg5; 
  arg6 = *(arf_struct **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (int)jarg8; 
  result = (int)arf_complex_mul_fallback(arg1,arg2,(arf_struct const (*))arg3,(arf_struct const (*))arg4,(arf_struct const (*))arg5,(arf_struct const (*))arg6,arg7,arg8);
  jresult = (jint)result; 
  
  
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1complex_1sqr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  arf_struct *arg3 ;
  arf_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  int arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = *(arf_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (int)jarg6; 
  result = (int)arf_complex_sqr(arg1,arg2,(arf_struct const (*))arg3,(arf_struct const (*))arg4,arg5,arg6);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1sum(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)arf_sum(arg1,(arf_struct const *)arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_arf_1get_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jdouble jresult = 0 ;
  arf_struct *arg1 ;
  int arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  result = (double)arf_get_d((arf_struct const (*))arg1,arg2);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  arf_struct *arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  arf_set_d(arg1,arg2);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1allocated_1bytes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (mp_limb_signed_t)arf_allocated_bytes((arf_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1load_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)arf_load_str(arg1,(char const *)arg2);
  jresult = (jint)result; 
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_arf_1dump_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  arf_struct *arg1 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (char *)arf_dump_str((arf_struct const (*))arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1load_1file(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arf_struct *arg1 ;
  FILE *arg2 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(FILE **)&jarg2; 
  result = (int)arf_load_file(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arf_1dump_1file(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  arf_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  result = (int)arf_dump_file(arg1,(arf_struct const (*))arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1ARB_1VERSION_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1ARB_1VERSION_1MINOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(18);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1ARB_1VERSION_1PATCHLEVEL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_ARB_1VERSION_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)("2.18.1");
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1_1ARB_1RELEASE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((2*10000+18*100+1));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1version_1set(JNIEnv *jenv, jclass jcls, jstring jarg1) {
  char *arg1 = (char *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return ;
  }
  {
    if (arg1) {
      arb_version = (char const *) (new char[strlen((const char *)arg1)+1]);
      strcpy((char *)arb_version, (const char *)arg1);
    } else {
      arb_version = 0;
    }
  }
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_arb_1version_1get(JNIEnv *jenv, jclass jcls) {
  jstring jresult = 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (char *)arb_version;
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1struct_1mid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 = (arb_struct *) 0 ;
  arf_struct *arg2 = (arf_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  if (arg1) (arg1)->mid = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1struct_1mid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  arb_struct *arg1 = (arb_struct *) 0 ;
  arf_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (arf_struct *)& ((arg1)->mid);
  *(arf_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1struct_1rad_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 = (arb_struct *) 0 ;
  mag_struct *arg2 = (mag_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  if (arg1) (arg1)->rad = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1struct_1rad_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  arb_struct *arg1 = (arb_struct *) 0 ;
  mag_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (mag_struct *)& ((arg1)->rad);
  *(mag_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1arb_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  arb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (arb_struct *)new arb_struct();
  *(arb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1arb_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  arb_struct *arg1 = (arb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(arb_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1RND_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arb_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arb_clear(arg1);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1arb_1vec_1init(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  mp_limb_signed_t arg1 ;
  arb_ptr result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  result = (arb_ptr)_arb_vec_init(arg1);
  *(arb_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _arb_vec_clear(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1mid_1ptr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  arb_struct *arg1 ;
  arf_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (arf_ptr)arb_mid_ptr(arg1);
  *(arf_ptr *)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1rad_1ptr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  arb_struct *arg1 ;
  mag_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (mag_ptr)arb_rad_ptr(arg1);
  *(mag_ptr *)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1is_1exact(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_is_exact((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  result = (int)arb_equal((arb_struct const (*))arg1,(arb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1equal_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)arb_equal_si((arb_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1eq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  result = (int)arb_eq((arb_struct const (*))arg1,(arb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1ne(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  result = (int)arb_ne((arb_struct const (*))arg1,(arb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1lt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  result = (int)arb_lt((arb_struct const (*))arg1,(arb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1le(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  result = (int)arb_le((arb_struct const (*))arg1,(arb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1gt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  result = (int)arb_gt((arb_struct const (*))arg1,(arb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1ge(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  result = (int)arb_ge((arb_struct const (*))arg1,(arb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arb_zero(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_is_zero((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1pos_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arb_pos_inf(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1neg_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arb_neg_inf(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1zero_1pm_1inf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arb_zero_pm_inf(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1zero_1pm_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arb_zero_pm_one(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1unit_1interval(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arb_unit_interval(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1indeterminate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arb_indeterminate(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1is_1finite(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_is_finite((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_set(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_set_round(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1trim(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_trim(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_neg(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1neg_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_neg_round(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_abs(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sgn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_sgn(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1sgn_1nonzero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_sgn_nonzero((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1digits_1round_1inplace(JNIEnv *jenv, jclass jcls, jstring jarg1, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5) {
  char *arg1 = (char *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = 0;
  if (jarg1) {
    arg1 = (char *)jenv->GetStringUTFChars(jarg1, 0);
    if (!arg1) return ;
  }
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  _arb_digits_round_inplace(arg1,arg2,arg3,arg4,arg5);
  if (arg1) jenv->ReleaseStringUTFChars(jarg1, (const char *)arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2, jint jarg3) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  char *arg2 = (char *) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)arb_set_str(arg1,(char const *)arg2,arg3);
  jresult = (jint)result; 
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ARB_1STR_1MORE_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long)((1UL));
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ARB_1STR_1NO_1RADIUS_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long)((2UL));
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_ARB_1STR_1CONDENSE_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long)((16UL));
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_arb_1get_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  jstring jresult = 0 ;
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (char *)arb_get_str((arb_struct const (*))arg1,arg2,arg3);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arb_set_arf(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_set_si(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arb_set_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  arb_struct *arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  arb_set_d(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arb_set_fmpz(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1fmpz_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arb_set_fmpz_2exp(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1round_1fmpz_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_set_round_fmpz_2exp(arg1,(long const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1round_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_set_round_fmpz(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_is_one((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arb_one(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  FILE *arg1 = (FILE *) 0 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_fprint(arg1,(arb_struct const (*))arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1fprintd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  FILE *arg1 = (FILE *) 0 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_fprintd(arg1,(arb_struct const (*))arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1fprintn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  FILE *arg1 = (FILE *) 0 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arb_fprintn(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arb_print((arb_struct const (*))arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1printd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_printd((arb_struct const (*))arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1printn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arb_printn((arb_struct const (*))arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1mul_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_mul_2exp_si(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1mul_12exp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arb_mul_2exp_fmpz(arg1,(arb_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1is_1int(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_is_int((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1is_1int_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)arb_is_int_2exp_si((arb_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1contains_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_contains_zero((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1is_1nonzero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_is_nonzero((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1is_1positive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_is_positive((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1is_1nonnegative(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_is_nonnegative((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1is_1negative(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_is_negative((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1is_1nonpositive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_is_nonpositive((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1contains_1negative(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_contains_negative((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1contains_1nonpositive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_contains_nonpositive((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1contains_1positive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_contains_positive((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1contains_1nonnegative(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_contains_nonnegative((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1mag_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_get_mag_lower(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1mag_1lower_1nonnegative(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_get_mag_lower_nonnegative(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1mag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_get_mag(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1mid_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_get_mid_arb(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1rad_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_get_rad_arb(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1abs_1ubound_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arf_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_get_abs_ubound_arf(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1abs_1lbound_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arf_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_get_abs_lbound_arf(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1ubound_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arf_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_get_ubound_arf(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1lbound_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arf_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_get_lbound_arf(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1nonnegative_1part(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_nonnegative_part(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1rel_1error_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (mp_limb_signed_t)arb_rel_error_bits((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1rel_1accuracy_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (mp_limb_signed_t)arb_rel_accuracy_bits((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1rel_1one_1accuracy_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (mp_limb_signed_t)arb_rel_one_accuracy_bits((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (mp_limb_signed_t)arb_bits((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1randtest_1exact(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_randtest_exact(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1randtest_1wide(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_randtest_wide(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1randtest_1precise(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_randtest_precise(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_randtest(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1randtest_1special(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_randtest_special(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1add_1error_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arb_add_error_arf(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1add_1error_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_add_error_2exp_si(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1add_1error_12exp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arb_add_error_2exp_fmpz(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1add_1error(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_add_error(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1add_1error_1mag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arb_add_error_mag(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1contains_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  result = (int)arb_contains_arf((arb_struct const (*))arg1,(arf_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1contains_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  fmpq *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  result = (int)arb_contains_fmpq((arb_struct const (*))arg1,(fmpq const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1contains_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)arb_contains_fmpz((arb_struct const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1contains_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)arb_contains_si((arb_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1contains_1mpfr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  __mpfr_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(__mpfr_struct **)&jarg2; 
  result = (int)arb_contains_mpfr((arb_struct const (*))arg1,(__mpfr_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1overlaps(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  result = (int)arb_overlaps((arb_struct const (*))arg1,(arb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  result = (int)arb_contains((arb_struct const (*))arg1,(arb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1contains_1interior(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  result = (int)arb_contains_interior((arb_struct const (*))arg1,(arb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1contains_1int(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (int)arb_contains_int((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1interval_1fmpz_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  arb_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arb_get_interval_fmpz_2exp(arg1,arg2,arg3,(arb_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1get_1unique_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  arb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  result = (int)arb_get_unique_fmpz(arg1,(arb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1fmpz_1mid_1rad_110exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_get_fmpz_mid_rad_10exp(arg1,arg2,arg3,(arb_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1floor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_floor(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1ceil(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_ceil(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1interval_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_set_interval_arf(arg1,(arf_struct const (*))arg2,(arf_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1interval_1mpfr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  __mpfr_struct *arg2 ;
  __mpfr_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(__mpfr_struct **)&jarg2; 
  arg3 = *(__mpfr_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_set_interval_mpfr(arg1,(__mpfr_struct const (*))arg2,(__mpfr_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1interval_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_get_interval_arf(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1interval_1mpfr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  __mpfr_struct *arg1 ;
  __mpfr_struct *arg2 ;
  arb_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(__mpfr_struct **)&jarg1; 
  arg2 = *(__mpfr_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arb_get_interval_mpfr(arg1,arg2,(arb_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1interval_1mag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_set_interval_mag(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1interval_1neg_1pos_1mag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  mag_struct *arg2 ;
  mag_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(mag_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_set_interval_neg_pos_mag(arg1,(mag_struct const (*))arg2,(mag_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1union(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_union(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1intersection(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)arb_intersection(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1get_1rand_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpq *arg1 ;
  flint_rand_s *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_get_rand_fmpq(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1min(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_min(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1max(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_max(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1can_1round_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (int)jarg3; 
  result = (int)arb_can_round_arf((arb_struct const (*))arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1can_1round_1mpfr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mpfr_rnd_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mpfr_rnd_t)jarg3; 
  result = (int)arb_can_round_mpfr((arb_struct const (*))arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_add(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1add_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_add_arf(arg1,(arb_struct const (*))arg2,(arf_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1add_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_add_ui(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1add_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_add_si(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1add_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_add_fmpz(arg1,(arb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1add_1fmpz_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_add_fmpz_2exp(arg1,(arb_struct const (*))arg2,(long const (*))arg3,(long const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sub(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sub_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sub_arf(arg1,(arb_struct const (*))arg2,(arf_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sub_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sub_ui(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sub_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sub_si(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sub_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sub_fmpz(arg1,(arb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_mul(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1mul_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_mul_arf(arg1,(arb_struct const (*))arg2,(arf_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_mul_si(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_mul_ui(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_mul_fmpz(arg1,(arb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_addmul(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1addmul_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_addmul_arf(arg1,(arb_struct const (*))arg2,(arf_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1addmul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_addmul_si(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1addmul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_addmul_ui(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1addmul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_addmul_fmpz(arg1,(arb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1submul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_submul(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1submul_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_submul_arf(arg1,(arb_struct const (*))arg2,(arf_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1submul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_submul_si(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1submul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_submul_ui(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1submul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_submul_fmpz(arg1,(arb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1dot_1simple(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8, jint jarg9) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  arb_srcptr arg6 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg6_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(arb_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  arb_dot_simple(arg1,(arb_struct const (*))arg2,arg3,(arb_struct const *)arg4,arg5,(arb_struct const *)arg6,arg7,arg8,arg9);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1dot_1precise(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8, jint jarg9) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  arb_srcptr arg6 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg6_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(arb_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  arb_dot_precise(arg1,(arb_struct const (*))arg2,arg3,(arb_struct const *)arg4,arg5,(arb_struct const *)arg6,arg7,arg8,arg9);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1dot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8, jint jarg9) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  arb_srcptr arg6 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg6_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(arb_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  arb_dot(arg1,(arb_struct const (*))arg2,arg3,(arb_struct const *)arg4,arg5,(arb_struct const *)arg6,arg7,arg8,arg9);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1approx_1dot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8, jint jarg9) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  arb_srcptr arg6 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg6_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(arb_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  arb_approx_dot(arg1,(arb_struct const (*))arg2,arg3,(arb_struct const *)arg4,arg5,(arb_struct const *)arg6,arg7,arg8,arg9);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_div(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1div_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_div_arf(arg1,(arb_struct const (*))arg2,(arf_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1div_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_div_si(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1div_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_div_ui(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1div_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_div_fmpz(arg1,(arb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1fmpz_1div_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_fmpz_div_fmpz(arg1,(long const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1ui_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_ui_div(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1inv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_inv(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1set_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  fmpq *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_set_fmpq(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sqrt(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sqrt_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sqrt_arf(arg1,(arf_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sqrt_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sqrt_fmpz(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sqrt_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sqrt_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sqrtpos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sqrtpos(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1hypot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_hypot(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1rsqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_rsqrt(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1rsqrt_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_rsqrt_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sqrt1pm1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sqrt1pm1(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1pow_1fmpz_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_pow_fmpz_binexp(arg1,(arb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1pow_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_pow_fmpz(arg1,(arb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_pow_ui(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1ui_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_ui_pow_ui(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1si_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_si_pow_ui(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1pow_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  fmpq *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_pow_fmpq(arg1,(arb_struct const (*))arg2,(fmpq const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1div_12expm1_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_div_2expm1_ui(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_pow(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1root_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_root_ui(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_root(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1log(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_log(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1log_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_log_arf(arg1,(arf_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1log_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_log_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1log_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_log_fmpz(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1log1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_log1p(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1log_1base_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_log_base_ui(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1log_1hypot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_log_hypot(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_exp(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1expm1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_expm1(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1exp_1invexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_exp_invexp(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sin(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1cos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_cos(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sin_1cos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sin_cos(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sin_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sin_pi(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1cos_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_cos_pi(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sin_1cos_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sin_cos_pi(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1tan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_tan(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1cot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_cot(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1tan_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_tan_pi(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1cot_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_cot_pi(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1sin_1pi_1fmpq_1algebraic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_sin_pi_fmpq_algebraic(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1cos_1pi_1fmpq_1algebraic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_cos_pi_fmpq_algebraic(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1sin_1cos_1pi_1fmpq_1algebraic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_sin_cos_pi_fmpq_algebraic(arg1,arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sin_1cos_1pi_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  fmpq *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sin_cos_pi_fmpq(arg1,arg2,(fmpq const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sin_1pi_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  fmpq *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sin_pi_fmpq(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1cos_1pi_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  fmpq *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_cos_pi_fmpq(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sinc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sinc(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sinc_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sinc_pi(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sinh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sinh(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1cosh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_cosh(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sinh_1cosh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sinh_cosh(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1tanh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_tanh(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1coth(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_coth(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1atan_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_atan_arf(arg1,(arf_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1atan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_atan(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1atan2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_atan2(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1asin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_asin(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1acos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_acos(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1atanh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_atanh(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1asinh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_asinh(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1acosh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_acosh(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sec(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1csc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_csc(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sech(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sech(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1csch(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_csch(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1fac_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_fac_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1doublefac_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_doublefac_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1bin_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_bin_ui(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1bin_1uiui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_bin_uiui(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1fib_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_fib_fmpz(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1fib_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_fib_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1const_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_const_pi(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1const_1sqrt_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_const_sqrt_pi(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1const_1log_1sqrt2pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_const_log_sqrt2pi(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1const_1log2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_const_log2(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1const_1log10(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_const_log10(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1const_1euler(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_const_euler(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1const_1catalan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_const_catalan(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1const_1e(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_const_e(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1const_1khinchin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_const_khinchin(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1const_1glaisher(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_const_glaisher(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1agm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_agm(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1lgamma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_lgamma(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1rgamma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_rgamma(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1gamma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_gamma(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1gamma_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  fmpq *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_gamma_fmpq(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1gamma_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_gamma_fmpz(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1digamma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_digamma(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1zeta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_zeta(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1hurwitz_1zeta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_hurwitz_zeta(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1rising_1ui_1bs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_rising_ui_bs(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1rising_1ui_1rs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_rising_ui_rs(arg1,(arb_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1rising_1ui_1rec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_rising_ui_rec(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1rising_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_rising_ui(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1rising_1fmpq_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_struct *arg1 ;
  fmpq *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_rising_fmpq_ui(arg1,(fmpq const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1rising(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_rising(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1rising2_1ui_1rs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5, jint jarg6) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arb_rising2_ui_rs(arg1,arg2,(arb_struct const (*))arg3,arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1rising2_1ui_1bs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_rising2_ui_bs(arg1,arg2,(arb_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1rising2_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_rising2_ui(arg1,arg2,(arb_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1log_1ui_1from_1prev(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  arb_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_log_ui_from_prev(arg1,arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1const_1apery(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_const_apery(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1zeta_1ui_1asymp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_zeta_ui_asymp(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1zeta_1ui_1borwein_1bsplit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_zeta_ui_borwein_bsplit(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1zeta_1ui_1euler_1product(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_zeta_ui_euler_product(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1zeta_1ui_1bernoulli(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_zeta_ui_bernoulli(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1zeta_1ui_1vec_1borwein(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_zeta_ui_vec_borwein(arg1,arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1zeta_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_zeta_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1zeta_1ui_1vec_1even(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_zeta_ui_vec_even(arg1,arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1zeta_1ui_1vec_1odd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_zeta_ui_vec_odd(arg1,arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1zeta_1ui_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_zeta_ui_vec(arg1,arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1bernoulli_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_bernoulli_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1bernoulli_1ui_1zeta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_bernoulli_ui_zeta(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1bernoulli_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_bernoulli_fmpz(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1bernoulli_1poly_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_bernoulli_poly_ui(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1polylog(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_polylog(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1polylog_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_polylog_si(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1chebyshev_1t_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_chebyshev_t_ui(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1chebyshev_1t2_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_chebyshev_t2_ui(arg1,arg2,arg3,(arb_struct const (*))arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1chebyshev_1u_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_chebyshev_u_ui(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1chebyshev_1u2_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_chebyshev_u2_ui(arg1,arg2,arg3,(arb_struct const (*))arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1power_1sum_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_power_sum_vec(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1bell_1sum_1taylor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jint jarg6) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arb_bell_sum_taylor(arg1,(long const (*))arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,arg6);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1bell_1sum_1bsplit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jint jarg6) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arb_bell_sum_bsplit(arg1,(long const (*))arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,arg6);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1bell_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_bell_fmpz(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1bell_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_bell_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1euler_1number_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_euler_number_fmpz(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1euler_1number_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_euler_number_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1partitions_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_partitions_fmpz(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1partitions_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_partitions_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1lambertw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_lambertw(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sqr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_sqr(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1arb_1vec_1entry_1ptr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  arb_ptr arg1 = (arb_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  arb_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (arb_ptr)_arb_vec_entry_ptr(arg1,arg2);
  *(arb_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _arb_vec_zero(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arb_1vec_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  arb_srcptr arg1 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)_arb_vec_is_zero((arb_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arb_1vec_1is_1finite(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  arb_srcptr arg1 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)_arb_vec_is_finite((arb_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _arb_vec_set(arg1,(arb_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1set_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_vec_set_round(arg1,(arb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_ptr arg2 = (arb_ptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_ptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _arb_vec_swap(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _arb_vec_neg(arg1,(arb_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_vec_sub(arg1,(arb_struct const *)arg2,(arb_struct const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_vec_add(arg1,(arb_struct const *)arg2,(arb_struct const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1scalar_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_vec_scalar_mul(arg1,(arb_struct const *)arg2,arg3,(arb_struct const (*))arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1scalar_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_vec_scalar_div(arg1,(arb_struct const *)arg2,arg3,(arb_struct const (*))arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1scalar_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_vec_scalar_mul_fmpz(arg1,(arb_struct const *)arg2,arg3,(long const (*))arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1scalar_1mul_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_vec_scalar_mul_2exp_si(arg1,(arb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1scalar_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_vec_scalar_addmul(arg1,(arb_struct const *)arg2,arg3,(arb_struct const (*))arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1get_1mag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  mag_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _arb_vec_get_mag(arg1,(arb_struct const *)arg2,arg3);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arb_1vec_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  arb_srcptr arg1 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_signed_t)_arb_vec_bits((arb_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1set_1powers(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_vec_set_powers(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1add_1error_1arf_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _arb_vec_add_error_arf_vec(arg1,(arf_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1add_1error_1mag_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  mag_srcptr arg2 = (mag_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(mag_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _arb_vec_add_error_mag_vec(arg1,(mag_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1indeterminate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _arb_vec_indeterminate(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1vec_1trim(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _arb_vec_trim(arg1,(arb_struct const *)arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arb_1vec_1get_1unique_1fmpz_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_arb_vec_get_unique_fmpz_vec(arg1,(arb_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1ATAN_1TAB1_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1ATAN_1TAB1_1PREC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(512);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1ATAN_1TAB1_1LIMBS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((512/64));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1ATAN_1TAB21_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1ATAN_1TAB22_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1ATAN_1TAB2_1PREC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4608);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1ATAN_1TAB2_1LIMBS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((4608/64));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1atan_1tab1_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long (*result)[(512/64)] = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long (*)[(512/64)])(unsigned long (*)[(512/64)])arb_atan_tab1;
  *(unsigned long (**)[(512/64)])&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1atan_1tab21_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long (*result)[(4608/64)] = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long (*)[(4608/64)])(unsigned long (*)[(4608/64)])arb_atan_tab21;
  *(unsigned long (**)[(4608/64)])&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1atan_1tab22_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long (*result)[(4608/64)] = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long (*)[(4608/64)])(unsigned long (*)[(4608/64)])arb_atan_tab22;
  *(unsigned long (**)[(4608/64)])&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1atan_1pi2_1minus_1one_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mp_limb_t *)(mp_limb_t *)arb_atan_pi2_minus_one;
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1atan_1taylor_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  mp_limb_t arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (int)jarg6; 
  _arb_atan_taylor_naive(arg1,arg2,(unsigned long const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1atan_1taylor_1rs(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  mp_limb_t arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (int)jarg6; 
  _arb_atan_taylor_rs(arg1,arg2,(unsigned long const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1LOG_1TAB11_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1LOG_1TAB12_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1LOG_1TAB1_1PREC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(512);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1LOG_1TAB1_1LIMBS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((512/64));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1LOG_1TAB21_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1LOG_1TAB22_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1LOG_1TAB2_1PREC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4608);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1LOG_1TAB2_1LIMBS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((4608/64));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1log_1tab11_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long (*result)[(512/64)] = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long (*)[(512/64)])(unsigned long (*)[(512/64)])arb_log_tab11;
  *(unsigned long (**)[(512/64)])&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1log_1tab12_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long (*result)[(512/64)] = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long (*)[(512/64)])(unsigned long (*)[(512/64)])arb_log_tab12;
  *(unsigned long (**)[(512/64)])&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1log_1tab21_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long (*result)[(4608/64)] = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long (*)[(4608/64)])(unsigned long (*)[(4608/64)])arb_log_tab21;
  *(unsigned long (**)[(4608/64)])&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1log_1tab22_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long (*result)[(4608/64)] = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long (*)[(4608/64)])(unsigned long (*)[(4608/64)])arb_log_tab22;
  *(unsigned long (**)[(4608/64)])&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1log_1log2_1tab_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mp_limb_t *)(mp_limb_t *)arb_log_log2_tab;
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1EXP_1TAB1_1NUM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(178);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1EXP_1TAB1_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1EXP_1TAB1_1PREC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(512);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1EXP_1TAB1_1LIMBS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((512/64));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1EXP_1TAB21_1NUM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(23);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1EXP_1TAB21_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1EXP_1TAB22_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1EXP_1TAB2_1PREC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4608);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1EXP_1TAB2_1LIMBS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((4608/64));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1exp_1tab1_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mp_limb_t (*result)[(512/64)] = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mp_limb_t (*)[(512/64)])(mp_limb_t (*)[(512/64)])arb_exp_tab1;
  *(mp_limb_t (**)[(512/64)])&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1exp_1tab21_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mp_limb_t (*result)[(4608/64)] = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mp_limb_t (*)[(4608/64)])(mp_limb_t (*)[(4608/64)])arb_exp_tab21;
  *(mp_limb_t (**)[(4608/64)])&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1exp_1tab22_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long (*result)[(4608/64)] = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long (*)[(4608/64)])(unsigned long (*)[(4608/64)])arb_exp_tab22;
  *(unsigned long (**)[(4608/64)])&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1exp_1taylor_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  _arb_exp_taylor_naive(arg1,arg2,(unsigned long const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1exp_1taylor_1rs(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_size_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_size_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  _arb_exp_taylor_rs(arg1,arg2,(unsigned long const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1exp_1arf_1bb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  arb_exp_arf_bb(arg1,(arf_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1exp_1arf_1rs_1generic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  arb_exp_arf_rs_generic(arg1,(arf_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arb_1get_1mpn_1fixed_1mod_1log2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  fmpz *arg2 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  arf_struct *arg4 ;
  mp_size_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(arf_struct **)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  result = (int)_arb_get_mpn_fixed_mod_log2(arg1,arg2,arg3,(arf_struct const (*))arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arb_1exp_1taylor_1bound(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jint jresult = 0 ;
  mp_limb_signed_t arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_signed_t)_arb_exp_taylor_bound(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1exp_1sum_1bs_1powtab(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jint jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  fmpz *arg4 ;
  mp_limb_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_exp_sum_bs_powtab(arg1,arg2,arg3,(long const (*))arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1exp_1sum_1bs_1simple(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jint jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  fmpz *arg4 ;
  mp_limb_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_exp_sum_bs_simple(arg1,arg2,arg3,(long const (*))arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1SIN_1COS_1TAB1_1NUM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(203);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1SIN_1COS_1TAB1_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1SIN_1COS_1TAB1_1PREC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(512);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1SIN_1COS_1TAB1_1LIMBS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((512/64));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1SIN_1COS_1TAB21_1NUM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(26);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1SIN_1COS_1TAB21_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1SIN_1COS_1TAB22_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1SIN_1COS_1TAB2_1PREC_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4608);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1SIN_1COS_1TAB2_1LIMBS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((4608/64));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1sin_1cos_1tab1_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mp_limb_t (*result)[(512/64)] = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mp_limb_t (*)[(512/64)])(mp_limb_t (*)[(512/64)])arb_sin_cos_tab1;
  *(mp_limb_t (**)[(512/64)])&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1sin_1cos_1tab21_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mp_limb_t (*result)[(4608/64)] = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mp_limb_t (*)[(4608/64)])(mp_limb_t (*)[(4608/64)])arb_sin_cos_tab21;
  *(mp_limb_t (**)[(4608/64)])&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1sin_1cos_1tab22_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  unsigned long (*result)[(4608/64)] = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (unsigned long (*)[(4608/64)])(unsigned long (*)[(4608/64)])arb_sin_cos_tab22;
  *(unsigned long (**)[(4608/64)])&jresult = result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ARB_1PI4_1TAB_1LIMBS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((4608/64));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1pi4_1tab_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mp_limb_t *)(mp_limb_t *)arb_pi4_tab;
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1sin_1cos_1taylor_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_size_t arg5 ;
  mp_limb_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  _arb_sin_cos_taylor_naive(arg1,arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1sin_1cos_1taylor_1rs(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jint jarg8) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_size_t arg5 ;
  mp_limb_t arg6 ;
  int arg7 ;
  int arg8 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_size_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (int)jarg8; 
  _arb_sin_cos_taylor_rs(arg1,arg2,arg3,(unsigned long const *)arg4,arg5,arg6,arg7,arg8);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arb_1get_1mpn_1fixed_1mod_1pi4(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  fmpz *arg2 ;
  int *arg3 = (int *) 0 ;
  mp_limb_t *arg4 = (mp_limb_t *) 0 ;
  arf_struct *arg5 ;
  mp_size_t arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(int **)&jarg3; 
  arg4 = *(mp_limb_t **)&jarg4; 
  arg5 = *(arf_struct **)&jarg5; 
  arg6 = (mp_size_t)jarg6; 
  result = (int)_arb_get_mpn_fixed_mod_pi4(arg1,arg2,arg3,arg4,(arf_struct const (*))arg5,arg6);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sin_1cos_1arf_1bb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sin_cos_arf_bb(arg1,arg2,(arf_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sin_1cos_1arf_1rs_1generic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sin_cos_arf_rs_generic(arg1,arg2,(arf_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sin_1cos_1arf_1generic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sin_cos_arf_generic(arg1,arg2,(arf_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1sin_1cos_1wide(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arf_struct *arg3 ;
  mag_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = *(mag_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_sin_cos_wide(arg1,arg2,(arf_struct const (*))arg3,(mag_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sin_1cos_1wide(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sin_cos_wide(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1sin_1cos_1generic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arf_struct *arg3 ;
  mag_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = *(mag_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_sin_cos_generic(arg1,arg2,(arf_struct const (*))arg3,(mag_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1sin_1cos_1generic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_sin_cos_generic(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1arb_1mpn_1leading_1zeros(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_size_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_size_t)jarg2; 
  result = (mp_limb_t)_arb_mpn_leading_zeros((unsigned long const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1atan_1sum_1bs_1simple(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jint jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  fmpz *arg4 ;
  mp_limb_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_atan_sum_bs_simple(arg1,arg2,arg3,(long const (*))arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1atan_1sum_1bs_1powtab(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jint jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  fmpz *arg4 ;
  mp_limb_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_atan_sum_bs_powtab(arg1,arg2,arg3,(long const (*))arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1atan_1arf_1bb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_atan_arf_bb(arg1,(arf_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1allocated_1bytes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (mp_limb_signed_t)arb_allocated_bytes((arb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arb_1vec_1allocated_1bytes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  arb_srcptr arg1 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_signed_t)_arb_vec_allocated_bytes((arb_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1arb_1vec_1estimate_1allocated_1bytes(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jdouble jresult = 0 ;
  mp_limb_signed_t arg1 ;
  mp_limb_signed_t arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (double)_arb_vec_estimate_allocated_bytes(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1load_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)arb_load_str(arg1,(char const *)arg2);
  jresult = (jint)result; 
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_arb_1dump_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  arb_struct *arg1 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (char *)arb_dump_str((arb_struct const (*))arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1load_1file(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  FILE *arg2 = (FILE *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(FILE **)&jarg2; 
  result = (int)arb_load_file(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1dump_1file(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  arb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  result = (int)arb_dump_file(arg1,(arb_struct const (*))arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1struct_1real_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 = (acb_struct *) 0 ;
  arb_struct *arg2 = (arb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  if (arg1) (arg1)->real = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1struct_1real_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_struct *arg1 = (acb_struct *) 0 ;
  arb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (arb_struct *)& ((arg1)->real);
  *(arb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1struct_1imag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 = (acb_struct *) 0 ;
  arb_struct *arg2 = (arb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  if (arg1) (arg1)->imag = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1struct_1imag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_struct *arg1 = (acb_struct *) 0 ;
  arb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (arb_struct *)& ((arg1)->imag);
  *(arb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1acb_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  acb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (acb_struct *)new acb_struct();
  *(acb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1acb_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  acb_struct *arg1 = (acb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(acb_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  acb_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  acb_clear(arg1);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1acb_1vec_1init(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  mp_limb_signed_t arg1 ;
  acb_ptr result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  result = (acb_ptr)_acb_vec_init(arg1);
  *(acb_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _acb_vec_clear(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1real_1ptr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_struct *arg1 ;
  arb_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (arb_ptr)acb_real_ptr(arg1);
  *(arb_ptr *)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1imag_1ptr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_struct *arg1 ;
  arb_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (arb_ptr)acb_imag_ptr(arg1);
  *(arb_ptr *)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1get_1real(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_get_real(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1get_1imag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_get_imag(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1get_1mid(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_get_mid(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (int)acb_is_zero((acb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (int)acb_is_one((acb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1is_1exact(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (int)acb_is_exact((acb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1is_1int(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (int)acb_is_int((acb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1is_1int_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)acb_is_int_2exp_si((acb_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  acb_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  acb_one(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1onei(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  acb_onei(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_set(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_set_round(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1neg_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_neg_round(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_swap(arg1,arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  result = (int)acb_equal((acb_struct const (*))arg1,(acb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1equal_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)acb_equal_si((acb_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1eq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  result = (int)acb_eq((acb_struct const (*))arg1,(acb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1ne(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  result = (int)acb_ne((acb_struct const (*))arg1,(acb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1overlaps(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  result = (int)acb_overlaps((acb_struct const (*))arg1,(acb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1contains_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (int)acb_contains_zero((acb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1contains_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  fmpq *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  result = (int)acb_contains_fmpq((acb_struct const (*))arg1,(fmpq const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1contains_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)acb_contains_fmpz((acb_struct const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  result = (int)acb_contains((acb_struct const (*))arg1,(acb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1contains_1interior(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  result = (int)acb_contains_interior((acb_struct const (*))arg1,(acb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  acb_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  acb_set_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  acb_struct *arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  acb_set_d(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  acb_set_si(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1si_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  acb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_set_si_si(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1d_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jdouble jarg3) {
  acb_struct *arg1 ;
  double arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  acb_set_d_d(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  acb_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  acb_set_fmpz(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1fmpz_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  acb_struct *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  acb_set_fmpz_fmpz(arg1,(long const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1round_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  acb_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_set_round_fmpz(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1contains_1int(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (int)acb_contains_int((acb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1get_1unique_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  acb_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  result = (int)acb_get_unique_fmpz(arg1,(acb_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  fmpq *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_set_fmpq(arg1,(fmpq const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  acb_set_arb(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1arb_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  acb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  acb_set_arb_arb(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1round_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_set_round_arb(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1trim(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_trim(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1add_1error_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  acb_add_error_arf(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1add_1error_1mag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 ;
  mag_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  acb_add_error_mag(arg1,(mag_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1get_1mag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_get_mag(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1get_1mag_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_get_mag_lower(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1get_1abs_1ubound_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arf_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_get_abs_ubound_arf(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1get_1abs_1lbound_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arf_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_get_abs_lbound_arf(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1get_1rad_1ubound_1arf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arf_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_get_rad_ubound_arf(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1union(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_union(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1arg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_arg(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sgn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_sgn(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1csgn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_csgn(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1real_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_real_abs(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1real_1sgn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_real_sgn(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1real_1heaviside(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_real_heaviside(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1real_1floor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_real_floor(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1real_1ceil(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_real_ceil(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1real_1max(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  int arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_real_max(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1real_1min(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  int arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_real_min(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1real_1sqrtpos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_real_sqrtpos(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sqrt_1analytic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_sqrt_analytic(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1rsqrt_1analytic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_rsqrt_analytic(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1log_1analytic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_log_analytic(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1pow_1analytic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  int arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_pow_analytic(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_add(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_sub(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1add_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_add_si(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1add_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_add_ui(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sub_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_sub_si(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sub_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_sub_ui(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1add_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_add_fmpz(arg1,(acb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1add_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_add_arb(arg1,(acb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sub_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_sub_fmpz(arg1,(acb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sub_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_sub_arb(arg1,(acb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_neg(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1conj(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_conj(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_abs(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_mul_ui(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_mul_si(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_mul_fmpz(arg1,(acb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1mul_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_mul_arb(arg1,(acb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1mul_1onei(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_mul_onei(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1div_1onei(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_div_onei(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_mul(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1mul_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_mul_naive(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1mul_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_mul_2exp_si(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1mul_12exp_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  acb_mul_2exp_fmpz(arg1,(acb_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_addmul(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1submul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_submul(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1addmul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_addmul_ui(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1addmul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_addmul_si(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1submul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_submul_ui(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1submul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_submul_si(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1addmul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_addmul_fmpz(arg1,(acb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1submul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_submul_fmpz(arg1,(acb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1addmul_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_addmul_arb(arg1,(acb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1submul_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_submul_arb(arg1,(acb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dot_1simple(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8, jint jarg9) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  acb_srcptr arg6 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg6_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(acb_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  acb_dot_simple(arg1,(acb_struct const (*))arg2,arg3,(acb_struct const *)arg4,arg5,(acb_struct const *)arg6,arg7,arg8,arg9);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dot_1precise(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8, jint jarg9) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  acb_srcptr arg6 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg6_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(acb_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  acb_dot_precise(arg1,(acb_struct const (*))arg2,arg3,(acb_struct const *)arg4,arg5,(acb_struct const *)arg6,arg7,arg8,arg9);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8, jint jarg9) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  acb_srcptr arg6 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg6_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(acb_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  acb_dot(arg1,(acb_struct const (*))arg2,arg3,(acb_struct const *)arg4,arg5,(acb_struct const *)arg6,arg7,arg8,arg9);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1approx_1dot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8, jint jarg9) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  acb_srcptr arg6 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg6_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(acb_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  acb_approx_dot(arg1,(acb_struct const (*))arg2,arg3,(acb_struct const *)arg4,arg5,(acb_struct const *)arg6,arg7,arg8,arg9);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1inv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_inv(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_div(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1div_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_div_ui(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1div_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_div_si(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1div_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_div_arb(arg1,(acb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1div_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_div_fmpz(arg1,(acb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1cube(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_cube(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1pow_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_pow_fmpz(arg1,(acb_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_pow_ui(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1pow_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_pow_si(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1const_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  acb_const_pi(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1log(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_log(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1log1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_log1p(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_exp(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1exp_1pi_1i(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_exp_pi_i(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1exp_1invexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_exp_invexp(arg1,arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1expm1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_expm1(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_sin(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1cos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_cos(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sin_1cos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_sin_cos(arg1,arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1tan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_tan(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1cot(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_cot(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1asin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_asin(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1acos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_acos(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1atan(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_atan(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1asinh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_asinh(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1acosh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_acosh(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1atanh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_atanh(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sinh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_sinh(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1cosh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_cosh(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sinh_1cosh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_sinh_cosh(arg1,arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1tanh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_tanh(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1coth(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_coth(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sech(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_sech(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1csch(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_csch(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_sec(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1csc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_csc(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sin_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_sin_pi(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1cos_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_cos_pi(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sin_1cos_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_sin_cos_pi(arg1,arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1tan_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_tan_pi(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1cot_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_cot_pi(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sinc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_sinc(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sinc_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_sinc_pi(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1pow_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_pow_arb(arg1,(acb_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_pow(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_sqrt(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1rsqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_rsqrt(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1root_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_root_ui(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1quadratic_1roots_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jlong jarg5, jint jarg6) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  fmpz *arg3 ;
  fmpz *arg4 ;
  fmpz *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_quadratic_roots_fmpz(arg1,arg2,(long const (*))arg3,(long const (*))arg4,(long const (*))arg5,arg6);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1chebyshev_1t_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  mp_limb_t arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_chebyshev_t_ui(arg1,arg2,(acb_struct const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1chebyshev_1t2_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_chebyshev_t2_ui(arg1,arg2,arg3,(acb_struct const (*))arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1chebyshev_1u_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  mp_limb_t arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_chebyshev_u_ui(arg1,arg2,(acb_struct const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1chebyshev_1u2_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_chebyshev_u2_ui(arg1,arg2,arg3,(acb_struct const (*))arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1rising_1ui_1bs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_rising_ui_bs(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1rising_1ui_1rs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_rising_ui_rs(arg1,(acb_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1rising_1ui_1rec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_rising_ui_rec(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1rising_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_rising_ui(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1rising(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_rising(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1rising2_1ui_1bs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_rising2_ui_bs(arg1,arg2,(acb_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1rising2_1ui_1rs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5, jint jarg6) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_rising2_ui_rs(arg1,arg2,(acb_struct const (*))arg3,arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1rising2_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_rising2_ui(arg1,arg2,(acb_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1rising_1ui_1get_1mag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  acb_rising_ui_get_mag(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1gamma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_gamma(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1rgamma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_rgamma(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1lgamma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_lgamma(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1log_1sin_1pi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_log_sin_pi(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1digamma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_digamma(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1zeta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_zeta(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1hurwitz_1zeta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_hurwitz_zeta(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1polygamma(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_polygamma(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1bernoulli_1poly_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  mp_limb_t arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_bernoulli_poly_ui(arg1,arg2,(acb_struct const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1log_1barnes_1g(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_log_barnes_g(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1barnes_1g(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_barnes_g(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1polylog(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_polylog(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1polylog_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_polylog_si(arg1,arg2,(acb_struct const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1agm1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_agm1(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1agm1_1cpx(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_agm1_cpx(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1agm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_agm(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ACB_1LAMBERTW_1LEFT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_ACB_1LAMBERTW_1MIDDLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1lambertw_1asymp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5, jint jarg6) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_lambertw_asymp(arg1,(acb_struct const (*))arg2,(long const (*))arg3,arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1lambertw_1check_1branch(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)acb_lambertw_check_branch((acb_struct const (*))arg1,(long const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1lambertw_1bound_1deriv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4) {
  mag_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  acb_lambertw_bound_deriv(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,(long const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1lambertw(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  fmpz *arg3 ;
  int arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_lambertw(arg1,(acb_struct const (*))arg2,(long const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1sqr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_sqr(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1is_1finite(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (int)acb_is_finite((acb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1indeterminate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  acb_indeterminate(arg1);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1acb_1vec_1entry_1ptr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  acb_ptr arg1 = (acb_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  acb_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (acb_ptr)_acb_vec_entry_ptr(arg1,arg2);
  *(acb_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _acb_vec_zero(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1acb_1vec_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  acb_srcptr arg1 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)_acb_vec_is_zero((acb_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _acb_vec_set(arg1,(acb_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1set_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_vec_set_round(arg1,(acb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _acb_vec_neg(arg1,(acb_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_vec_add(arg1,(acb_struct const *)arg2,(acb_struct const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_vec_sub(arg1,(acb_struct const *)arg2,(acb_struct const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1scalar_1submul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_vec_scalar_submul(arg1,(acb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1scalar_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_vec_scalar_addmul(arg1,(acb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1scalar_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_vec_scalar_mul(arg1,(acb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1scalar_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_vec_scalar_mul_ui(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1scalar_1mul_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_vec_scalar_mul_2exp_si(arg1,(acb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1scalar_1mul_1onei(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _acb_vec_scalar_mul_onei(arg1,(acb_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1scalar_1div_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_vec_scalar_div_ui(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1scalar_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_vec_scalar_div(arg1,(acb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1scalar_1mul_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_vec_scalar_mul_arb(arg1,(acb_struct const *)arg2,arg3,(arb_struct const (*))arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1scalar_1div_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_vec_scalar_div_arb(arg1,(acb_struct const *)arg2,arg3,(arb_struct const (*))arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1scalar_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_vec_scalar_mul_fmpz(arg1,(acb_struct const *)arg2,arg3,(long const (*))arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1scalar_1div_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_vec_scalar_div_fmpz(arg1,(acb_struct const *)arg2,arg3,(long const (*))arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  FILE *arg1 = (FILE *) 0 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_fprint(arg1,(acb_struct const (*))arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  acb_print((acb_struct const (*))arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1fprintd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  FILE *arg1 = (FILE *) 0 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_fprintd(arg1,(acb_struct const (*))arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1printd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  acb_printd((acb_struct const (*))arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1fprintn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  FILE *arg1 = (FILE *) 0 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  acb_fprintn(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1printn(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  acb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  acb_printn((acb_struct const (*))arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_randtest(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1randtest_1special(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_randtest_special(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1randtest_1precise(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_randtest_precise(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1randtest_1param(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_randtest_param(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1rel_1error_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (mp_limb_signed_t)acb_rel_error_bits((acb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1rel_1accuracy_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (mp_limb_signed_t)acb_rel_accuracy_bits((acb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1rel_1one_1accuracy_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (mp_limb_signed_t)acb_rel_one_accuracy_bits((acb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (mp_limb_signed_t)acb_bits((acb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1is_1real(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (int)acb_is_real((acb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1acb_1vec_1is_1real(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  acb_srcptr arg1 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)_acb_vec_is_real((acb_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1acb_1vec_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  acb_srcptr arg1 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_signed_t)_acb_vec_bits((acb_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1set_1powers(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_vec_set_powers(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1add_1error_1arf_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  arf_srcptr arg2 = (arf_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(arf_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _acb_vec_add_error_arf_vec(arg1,(arf_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1add_1error_1mag_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  mag_srcptr arg2 = (mag_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(mag_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _acb_vec_add_error_mag_vec(arg1,(mag_struct const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1indeterminate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _acb_vec_indeterminate(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1trim(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _acb_vec_trim(arg1,(acb_struct const *)arg2,arg3);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1acb_1vec_1get_1unique_1fmpz_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_acb_vec_get_unique_fmpz_vec(arg1,(acb_struct const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1sort_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _acb_vec_sort_pretty(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1unit_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  acb_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_unit_root(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1vec_1unit_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_vec_unit_roots(arg1,arg2,arg3,arg4);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1allocated_1bytes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (mp_limb_signed_t)acb_allocated_bytes((acb_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1acb_1vec_1allocated_1bytes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  acb_srcptr arg1 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_signed_t)_acb_vec_allocated_bytes((acb_struct const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1acb_1vec_1estimate_1allocated_1bytes(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2) {
  jdouble jresult = 0 ;
  mp_limb_signed_t arg1 ;
  mp_limb_signed_t arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (double)_acb_vec_estimate_allocated_bytes(arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1pth_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  pthread_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  arg2 = (pthread_t)jarg2; 
  if (arg1) (arg1)->pth = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1pth_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  pthread_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  result = (pthread_t) ((arg1)->pth);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1mutex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  pthread_mutex_t *arg2 = (pthread_mutex_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  arg2 = *(pthread_mutex_t **)&jarg2; 
  if (arg1) (arg1)->mutex = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1mutex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  pthread_mutex_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  result = (pthread_mutex_t *)& ((arg1)->mutex);
  *(pthread_mutex_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1sleep1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  pthread_cond_t *arg2 = (pthread_cond_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  arg2 = *(pthread_cond_t **)&jarg2; 
  if (arg1) (arg1)->sleep1 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1sleep1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  pthread_cond_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  result = (pthread_cond_t *)& ((arg1)->sleep1);
  *(pthread_cond_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1sleep2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  pthread_cond_t *arg2 = (pthread_cond_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  arg2 = *(pthread_cond_t **)&jarg2; 
  if (arg1) (arg1)->sleep2 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1sleep2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  pthread_cond_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  result = (pthread_cond_t *)& ((arg1)->sleep2);
  *(pthread_cond_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1idx_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->idx = (int volatile )arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1idx_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  result = (int)(int) ((arg1)->idx);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1available_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->available = (int volatile )arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1available_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  result = (int)(int) ((arg1)->available);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1max_1workers_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->max_workers = (int volatile )arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1max_1workers_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  result = (int)(int) ((arg1)->max_workers);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1fxn_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  void (*arg2)(void *) = (void (*)(void *)) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  arg2 = *(void (**)(void *))&jarg2; 
  if (arg1) (arg1)->fxn = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1fxn_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  void (*result)(void *) = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  result = (void (*)(void *)) ((arg1)->fxn);
  *(void (**)(void *))&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1fxnarg_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  void *arg2 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  arg2 = *(void **)&jarg2; 
  if (arg1) (arg1)->fxnarg = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1fxnarg_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  result = (void *) ((arg1)->fxnarg);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1working_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->working = (int volatile )arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1working_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  result = (int)(int) ((arg1)->working);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1exit_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->exit = (int volatile )arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_thread_1pool_1entry_1struct_1exit_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  result = (int)(int) ((arg1)->exit);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1thread_1pool_1entry_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  thread_pool_entry_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (thread_pool_entry_struct *)new thread_pool_entry_struct();
  *(thread_pool_entry_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1thread_1pool_1entry_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  thread_pool_entry_struct *arg1 = (thread_pool_entry_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(thread_pool_entry_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1struct_1original_1affinity_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  thread_pool_struct *arg1 = (thread_pool_struct *) 0 ;
  cpu_set_t arg2 ;
  cpu_set_t *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  argp2 = *(cpu_set_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null cpu_set_t");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->original_affinity = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_thread_1pool_1struct_1original_1affinity_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  thread_pool_struct *arg1 = (thread_pool_struct *) 0 ;
  cpu_set_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  result =  ((arg1)->original_affinity);
  *(cpu_set_t **)&jresult = new cpu_set_t((const cpu_set_t &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1struct_1mutex_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  thread_pool_struct *arg1 = (thread_pool_struct *) 0 ;
  pthread_mutex_t *arg2 = (pthread_mutex_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  arg2 = *(pthread_mutex_t **)&jarg2; 
  if (arg1) (arg1)->mutex = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_thread_1pool_1struct_1mutex_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  thread_pool_struct *arg1 = (thread_pool_struct *) 0 ;
  pthread_mutex_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  result = (pthread_mutex_t *)& ((arg1)->mutex);
  *(pthread_mutex_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1struct_1tdata_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  thread_pool_struct *arg1 = (thread_pool_struct *) 0 ;
  thread_pool_entry_struct *arg2 = (thread_pool_entry_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  arg2 = *(thread_pool_entry_struct **)&jarg2; 
  if (arg1) (arg1)->tdata = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_thread_1pool_1struct_1tdata_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  thread_pool_struct *arg1 = (thread_pool_struct *) 0 ;
  thread_pool_entry_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  result = (thread_pool_entry_struct *) ((arg1)->tdata);
  *(thread_pool_entry_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1struct_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  thread_pool_struct *arg1 = (thread_pool_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_thread_1pool_1struct_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  thread_pool_struct *arg1 = (thread_pool_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->length);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1thread_1pool_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  thread_pool_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (thread_pool_struct *)new thread_pool_struct();
  *(thread_pool_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1thread_1pool_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  thread_pool_struct *arg1 = (thread_pool_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(thread_pool_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_global_1thread_1pool_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  thread_pool_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  {
    size_t ii;
    thread_pool_struct *b = (thread_pool_struct *) global_thread_pool;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((thread_pool_struct *) arg1 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_global_1thread_1pool_1get(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  thread_pool_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (thread_pool_struct *)global_thread_pool;
  *(thread_pool_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_global_1thread_1pool_1initialized_1set(JNIEnv *jenv, jclass jcls, jint jarg1) {
  int arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (int)jarg1; 
  global_thread_pool_initialized = arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_global_1thread_1pool_1initialized_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)global_thread_pool_initialized;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_thread_1pool_1idle_1loop(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  void *arg1 = (void *) 0 ;
  void *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  result = (void *)thread_pool_idle_loop(arg1);
  *(void **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  thread_pool_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  thread_pool_init(arg1,arg2);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_thread_1pool_1set_1affinity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  thread_pool_struct *arg1 ;
  int *arg2 = (int *) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  arg2 = *(int **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)thread_pool_set_affinity(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_thread_1pool_1restore_1affinity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  thread_pool_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  result = (int)thread_pool_restore_affinity(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_thread_1pool_1get_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  thread_pool_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  result = (mp_limb_signed_t)thread_pool_get_size(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_thread_1pool_1set_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  thread_pool_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)thread_pool_set_size(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_thread_1pool_1request(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  thread_pool_struct *arg1 ;
  thread_pool_handle *arg2 = (thread_pool_handle *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  arg2 = *(thread_pool_handle **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (mp_limb_signed_t)thread_pool_request(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1wake(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  thread_pool_struct *arg1 ;
  thread_pool_handle arg2 ;
  int arg3 ;
  void (*arg4)(void *) = (void (*)(void *)) 0 ;
  void *arg5 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  arg2 = (thread_pool_handle)jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(void (**)(void *))&jarg4; 
  arg5 = *(void **)&jarg5; 
  thread_pool_wake(arg1,arg2,arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1wait(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  thread_pool_struct *arg1 ;
  thread_pool_handle arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  arg2 = (thread_pool_handle)jarg2; 
  thread_pool_wait(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1give_1back(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  thread_pool_struct *arg1 ;
  thread_pool_handle arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  arg2 = (thread_pool_handle)jarg2; 
  thread_pool_give_back(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_thread_1pool_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  thread_pool_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(thread_pool_struct **)&jarg1; 
  thread_pool_clear(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLINT_1DEFAULT_1THREAD_1LIMIT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(99999);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_flint_1request_1threads(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  thread_pool_handle **arg1 = (thread_pool_handle **) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(thread_pool_handle ***)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_signed_t)flint_request_threads(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_flint_1give_1back_1threads(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  thread_pool_handle *arg1 = (thread_pool_handle *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(thread_pool_handle **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  flint_give_back_threads(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1struct_1entries_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_mat_struct *arg1 = (nmod_mat_struct *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  if (arg1) (arg1)->entries = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1mat_1struct_1entries_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_mat_struct *arg1 = (nmod_mat_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_t *) ((arg1)->entries);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1struct_1r_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_mat_struct *arg1 = (nmod_mat_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1struct_1r_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 = (nmod_mat_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->r);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1struct_1c_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_mat_struct *arg1 = (nmod_mat_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->c = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1struct_1c_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 = (nmod_mat_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->c);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1struct_1rows_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_mat_struct *arg1 = (nmod_mat_struct *) 0 ;
  mp_limb_t **arg2 = (mp_limb_t **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_t ***)&jarg2; 
  if (arg1) (arg1)->rows = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1mat_1struct_1rows_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_mat_struct *arg1 = (nmod_mat_struct *) 0 ;
  mp_limb_t **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_t **) ((arg1)->rows);
  *(mp_limb_t ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1struct_1mod_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_mat_struct *arg1 = (nmod_mat_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->mod = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1mat_1struct_1mod_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_mat_struct *arg1 = (nmod_mat_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (nmod_t *)& ((arg1)->mod);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1nmod_1mat_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  nmod_mat_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (nmod_mat_struct *)new nmod_mat_struct();
  *(nmod_mat_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1nmod_1mat_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  nmod_mat_struct *arg1 = (nmod_mat_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1mat_1get_1entry(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (mp_limb_t)nmod_mat_get_entry((nmod_mat_struct const (*))arg1,arg2,arg3);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1mat_1entry_1ptr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (mp_limb_t *)nmod_mat_entry_ptr((nmod_mat_struct const (*))arg1,arg2,arg3);
  *(mp_limb_t **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1set_1entry(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4) {
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  nmod_mat_set_entry(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1nrows(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t)nmod_mat_nrows((nmod_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1ncols(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t)nmod_mat_ncols((nmod_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1mat_1set_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_mat_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  _nmod_mat_set_mod(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4) {
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  nmod_mat_init(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1init_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  nmod_mat_init_set(arg1,(nmod_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  nmod_mat_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  nmod_mat_one(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  nmod_mat_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1window_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5, jint jarg6) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  nmod_mat_window_init(arg1,(nmod_mat_struct const (*))arg2,arg3,arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1window_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  nmod_mat_window_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1concat_1horizontal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  nmod_mat_concat_horizontal(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1concat_1vertical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  nmod_mat_concat_vertical(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  nmod_mat_randtest(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1randfull(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  nmod_mat_randfull(arg1,arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1randpermdiag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)nmod_mat_randpermdiag(arg1,arg2,(unsigned long const *)arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1randrank(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_mat_randrank(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1randops(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  flint_rand_s *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(flint_rand_s **)&jarg3; 
  nmod_mat_randops(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1randtril(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (int)jarg3; 
  nmod_mat_randtril(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1randtriu(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (int)jarg3; 
  nmod_mat_randtriu(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1print_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  nmod_mat_print_pretty((nmod_mat_struct const (*))arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  result = (int)nmod_mat_equal((nmod_mat_struct const (*))arg1,(nmod_mat_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  nmod_mat_zero(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (int)nmod_mat_is_zero((nmod_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1is_1zero_1row(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)nmod_mat_is_zero_row((nmod_mat_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1is_1empty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (int)nmod_mat_is_empty((nmod_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1is_1square(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (int)nmod_mat_is_square((nmod_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  nmod_mat_set(arg1,(nmod_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1transpose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  nmod_mat_transpose(arg1,(nmod_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  nmod_mat_add(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  nmod_mat_sub(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  nmod_mat_neg(arg1,(nmod_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1scalar_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_mat_scalar_mul(arg1,(nmod_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1scalar_1mul_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  nmod_mat_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(nmod_mat_struct **)&jarg4; 
  nmod_mat_scalar_mul_add(arg1,(nmod_mat_struct const (*))arg2,arg3,(nmod_mat_struct const (*))arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1scalar_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  nmod_mat_scalar_mul_fmpz(arg1,(nmod_mat_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  nmod_mat_mul(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1mul_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  nmod_mat_mul_classical(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1mat_1mul_1classical_1threaded_1pool_1op(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jlong jarg6, jint jarg7) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  nmod_mat_struct *arg4 ;
  int arg5 ;
  thread_pool_handle *arg6 = (thread_pool_handle *) 0 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  arg4 = *(nmod_mat_struct **)&jarg4; 
  arg5 = (int)jarg5; 
  arg6 = *(thread_pool_handle **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _nmod_mat_mul_classical_threaded_pool_op(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3,(nmod_mat_struct const (*))arg4,arg5,arg6,arg7);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1mul_1classical_1threaded(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  nmod_mat_mul_classical_threaded(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1mul_1strassen(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  nmod_mat_mul_strassen(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1mat_1mul_1classical_1op(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  nmod_mat_struct *arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  arg4 = *(nmod_mat_struct **)&jarg4; 
  arg5 = (int)jarg5; 
  _nmod_mat_mul_classical_op(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3,(nmod_mat_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  nmod_mat_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  arg4 = *(nmod_mat_struct **)&jarg4; 
  nmod_mat_addmul(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3,(nmod_mat_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1submul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  nmod_mat_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  arg4 = *(nmod_mat_struct **)&jarg4; 
  nmod_mat_submul(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3,(nmod_mat_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1mat_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  _nmod_mat_pow(arg1,(nmod_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_mat_pow(arg1,(nmod_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1mat_1trace(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_t)nmod_mat_trace((nmod_mat_struct const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1mat_1det(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_t)_nmod_mat_det(arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1mat_1det(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_t)nmod_mat_det((nmod_mat_struct const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1rank(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t)nmod_mat_rank((nmod_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1inv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  result = (int)nmod_mat_inv(arg1,(nmod_mat_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1swap_1rows(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_mat_swap_rows(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1invert_1rows(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  nmod_mat_invert_rows(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1swap_1cols(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_mat_swap_cols(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1invert_1cols(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  nmod_mat_invert_cols(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1apply_1permutation(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_mat_apply_permutation(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1solve_1tril(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  nmod_mat_solve_tril(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1solve_1tril_1recursive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  nmod_mat_solve_tril_recursive(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1solve_1tril_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  nmod_mat_solve_tril_classical(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1solve_1triu(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  nmod_mat_solve_triu(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1solve_1triu_1recursive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  nmod_mat_solve_triu_recursive(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1solve_1triu_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  nmod_mat_solve_triu_classical(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1lu(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  nmod_mat_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (mp_limb_signed_t)nmod_mat_lu(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1lu_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  nmod_mat_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (mp_limb_signed_t)nmod_mat_lu_classical(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1lu_1recursive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  nmod_mat_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (mp_limb_signed_t)nmod_mat_lu_recursive(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1solve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  result = (int)nmod_mat_solve(arg1,(nmod_mat_struct const (*))arg2,(nmod_mat_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1solve_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  nmod_mat_struct *arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  result = (int)nmod_mat_solve_vec(arg1,(nmod_mat_struct const (*))arg2,(unsigned long const *)arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1rref(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t)nmod_mat_rref(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1mat_1rref(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t *arg3 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = *(mp_limb_signed_t **)&jarg3; 
  result = (mp_limb_signed_t)_nmod_mat_rref(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1rref_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t)nmod_mat_rref_classical(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1mat_1rref_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  result = (mp_limb_signed_t)_nmod_mat_rref_classical(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1rref_1storjohann(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t)nmod_mat_rref_storjohann(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1mat_1rref_1storjohann(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  result = (mp_limb_signed_t)_nmod_mat_rref_storjohann(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1reduce_1row(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t *arg3 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = *(mp_limb_signed_t **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (mp_limb_signed_t)nmod_mat_reduce_row(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1nullspace(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  result = (mp_limb_signed_t)nmod_mat_nullspace(arg1,(nmod_mat_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1strong_1echelon_1form(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  nmod_mat_strong_echelon_form(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1mat_1howell_1form(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t)nmod_mat_howell_form(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1similarity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  nmod_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_mat_similarity(arg1,arg2,arg3);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NMOD_1MAT_1MUL_1TRANSPOSE_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(20);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NMOD_1MAT_1SOLVE_1TRI_1ROWS_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(64);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NMOD_1MAT_1SOLVE_1TRI_1COLS_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(64);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NMOD_1MAT_1LU_1RECURSIVE_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NMOD_1MAT_1OPTIMAL_1MODULUS_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)((64-5));
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NMOD_1DIVREM_1DIVCONQUER_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(300);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NMOD_1DIV_1DIVCONQUER_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(300);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NMOD_1POLY_1HGCD_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(100);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NMOD_1POLY_1GCD_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(340);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NMOD_1POLY_1SMALL_1GCD_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(200);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NMOD_1DIVREM_1BC_1ITCH(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  mp_limb_signed_t arg1 ;
  mp_limb_signed_t arg2 ;
  nmod_t arg3 ;
  nmod_t *argp3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (mp_limb_signed_t)jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg3 = *argp3; 
  result = (mp_limb_signed_t)NMOD_DIVREM_BC_ITCH(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NMOD_1DIV_1BC_1ITCH(JNIEnv *jenv, jclass jcls, jint jarg1, jint jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  mp_limb_signed_t arg1 ;
  mp_limb_signed_t arg2 ;
  nmod_t arg3 ;
  nmod_t *argp3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (mp_limb_signed_t)jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg3 = *argp3; 
  result = (mp_limb_signed_t)NMOD_DIV_BC_ITCH(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_NMOD_1DIVREM_1DC_1ITCH(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mp_limb_signed_t arg1 ;
  nmod_t arg2 ;
  nmod_t *argp2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (mp_limb_signed_t)jarg1; 
  argp2 = *(nmod_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg2 = *argp2; 
  result = (mp_limb_signed_t)NMOD_DIVREM_DC_ITCH(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1struct_1coeffs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  if (arg1) (arg1)->coeffs = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1struct_1coeffs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (mp_ptr) ((arg1)->coeffs);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1struct_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->alloc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1struct_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->alloc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1struct_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1struct_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->length);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1struct_1mod_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->mod = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1struct_1mod_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (nmod_t *)& ((arg1)->mod);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1nmod_1poly_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (nmod_poly_struct *)new nmod_poly_struct();
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1nmod_1poly_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1res_1struct_1res_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_poly_res_struct *arg1 = (nmod_poly_res_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_res_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->res = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1res_1struct_1res_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_res_struct *arg1 = (nmod_poly_res_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_res_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->res);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1res_1struct_1lc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_poly_res_struct *arg1 = (nmod_poly_res_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_res_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->lc = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1res_1struct_1lc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_res_struct *arg1 = (nmod_poly_res_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_res_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->lc);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1res_1struct_1len0_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_res_struct *arg1 = (nmod_poly_res_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_res_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->len0 = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1res_1struct_1len0_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_res_struct *arg1 = (nmod_poly_res_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_res_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->len0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1res_1struct_1len1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_res_struct *arg1 = (nmod_poly_res_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_res_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->len1 = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1res_1struct_1len1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_res_struct *arg1 = (nmod_poly_res_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_res_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->len1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1res_1struct_1off_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_res_struct *arg1 = (nmod_poly_res_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_res_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->off = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1res_1struct_1off_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_res_struct *arg1 = (nmod_poly_res_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_res_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->off);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1nmod_1poly_1res_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  nmod_poly_res_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (nmod_poly_res_struct *)new nmod_poly_res_struct();
  *(nmod_poly_res_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1nmod_1poly_1res_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  nmod_poly_res_struct *arg1 = (nmod_poly_res_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(nmod_poly_res_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1matrix_1precompute_1arg_1t_1A_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_matrix_precompute_arg_t *arg1 = (nmod_poly_matrix_precompute_arg_t *) 0 ;
  nmod_mat_struct *arg2 = (nmod_mat_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_matrix_precompute_arg_t **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  if (arg1) (arg1)->A = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1matrix_1precompute_1arg_1t_1A_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_matrix_precompute_arg_t *arg1 = (nmod_poly_matrix_precompute_arg_t *) 0 ;
  nmod_mat_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_matrix_precompute_arg_t **)&jarg1; 
  result = (nmod_mat_struct *) ((arg1)->A);
  *(nmod_mat_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1matrix_1precompute_1arg_1t_1poly1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_matrix_precompute_arg_t *arg1 = (nmod_poly_matrix_precompute_arg_t *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_matrix_precompute_arg_t **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  if (arg1) (arg1)->poly1 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1matrix_1precompute_1arg_1t_1poly1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_matrix_precompute_arg_t *arg1 = (nmod_poly_matrix_precompute_arg_t *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_matrix_precompute_arg_t **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->poly1);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1matrix_1precompute_1arg_1t_1poly2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_matrix_precompute_arg_t *arg1 = (nmod_poly_matrix_precompute_arg_t *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_matrix_precompute_arg_t **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  if (arg1) (arg1)->poly2 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1matrix_1precompute_1arg_1t_1poly2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_matrix_precompute_arg_t *arg1 = (nmod_poly_matrix_precompute_arg_t *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_matrix_precompute_arg_t **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->poly2);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1matrix_1precompute_1arg_1t_1poly2inv_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_matrix_precompute_arg_t *arg1 = (nmod_poly_matrix_precompute_arg_t *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_matrix_precompute_arg_t **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  if (arg1) (arg1)->poly2inv = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1matrix_1precompute_1arg_1t_1poly2inv_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_matrix_precompute_arg_t *arg1 = (nmod_poly_matrix_precompute_arg_t *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_matrix_precompute_arg_t **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->poly2inv);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1nmod_1poly_1matrix_1precompute_1arg_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  nmod_poly_matrix_precompute_arg_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (nmod_poly_matrix_precompute_arg_t *)new nmod_poly_matrix_precompute_arg_t();
  *(nmod_poly_matrix_precompute_arg_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1nmod_1poly_1matrix_1precompute_1arg_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  nmod_poly_matrix_precompute_arg_t *arg1 = (nmod_poly_matrix_precompute_arg_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(nmod_poly_matrix_precompute_arg_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1precomp_1preinv_1arg_1t_1A_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_compose_mod_precomp_preinv_arg_t *arg1 = (nmod_poly_compose_mod_precomp_preinv_arg_t *) 0 ;
  nmod_mat_struct *arg2 = (nmod_mat_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_compose_mod_precomp_preinv_arg_t **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  if (arg1) (arg1)->A = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1precomp_1preinv_1arg_1t_1A_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_compose_mod_precomp_preinv_arg_t *arg1 = (nmod_poly_compose_mod_precomp_preinv_arg_t *) 0 ;
  nmod_mat_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_compose_mod_precomp_preinv_arg_t **)&jarg1; 
  result = (nmod_mat_struct *) ((arg1)->A);
  *(nmod_mat_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1precomp_1preinv_1arg_1t_1res_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_compose_mod_precomp_preinv_arg_t *arg1 = (nmod_poly_compose_mod_precomp_preinv_arg_t *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_compose_mod_precomp_preinv_arg_t **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  if (arg1) (arg1)->res = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1precomp_1preinv_1arg_1t_1res_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_compose_mod_precomp_preinv_arg_t *arg1 = (nmod_poly_compose_mod_precomp_preinv_arg_t *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_compose_mod_precomp_preinv_arg_t **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->res);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1precomp_1preinv_1arg_1t_1poly1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_compose_mod_precomp_preinv_arg_t *arg1 = (nmod_poly_compose_mod_precomp_preinv_arg_t *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_compose_mod_precomp_preinv_arg_t **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  if (arg1) (arg1)->poly1 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1precomp_1preinv_1arg_1t_1poly1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_compose_mod_precomp_preinv_arg_t *arg1 = (nmod_poly_compose_mod_precomp_preinv_arg_t *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_compose_mod_precomp_preinv_arg_t **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->poly1);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1precomp_1preinv_1arg_1t_1poly3_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_compose_mod_precomp_preinv_arg_t *arg1 = (nmod_poly_compose_mod_precomp_preinv_arg_t *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_compose_mod_precomp_preinv_arg_t **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  if (arg1) (arg1)->poly3 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1precomp_1preinv_1arg_1t_1poly3_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_compose_mod_precomp_preinv_arg_t *arg1 = (nmod_poly_compose_mod_precomp_preinv_arg_t *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_compose_mod_precomp_preinv_arg_t **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->poly3);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1precomp_1preinv_1arg_1t_1poly3inv_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_compose_mod_precomp_preinv_arg_t *arg1 = (nmod_poly_compose_mod_precomp_preinv_arg_t *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_compose_mod_precomp_preinv_arg_t **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  if (arg1) (arg1)->poly3inv = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1precomp_1preinv_1arg_1t_1poly3inv_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_compose_mod_precomp_preinv_arg_t *arg1 = (nmod_poly_compose_mod_precomp_preinv_arg_t *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_compose_mod_precomp_preinv_arg_t **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->poly3inv);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1nmod_1poly_1compose_1mod_1precomp_1preinv_1arg_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  nmod_poly_compose_mod_precomp_preinv_arg_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (nmod_poly_compose_mod_precomp_preinv_arg_t *)new nmod_poly_compose_mod_precomp_preinv_arg_t();
  *(nmod_poly_compose_mod_precomp_preinv_arg_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1nmod_1poly_1compose_1mod_1precomp_1preinv_1arg_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  nmod_poly_compose_mod_precomp_preinv_arg_t *arg1 = (nmod_poly_compose_mod_precomp_preinv_arg_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(nmod_poly_compose_mod_precomp_preinv_arg_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_signed_1mpn_1sub_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)signed_mpn_sub_n(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  nmod_poly_init(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1init_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_init_preinv(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1init2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  nmod_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_init2(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1init2_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  nmod_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_init2_preinv(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1realloc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  nmod_poly_realloc(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  nmod_poly_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1fit_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  nmod_poly_fit_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1init_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_t arg2 ;
  nmod_t const *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  argp2 = *(nmod_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t const");
    return ;
  }
  arg2 = *argp2; 
  nmod_poly_init_mod(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1set_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_t arg2 ;
  nmod_t const *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  argp2 = *(nmod_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t const");
    return ;
  }
  arg2 = *argp2; 
  nmod_poly_set_mod(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1set_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _nmod_poly_set_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1normalise(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  _nmod_poly_normalise(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)nmod_poly_length((nmod_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1degree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)nmod_poly_degree((nmod_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1modulus(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (mp_limb_t)nmod_poly_modulus((nmod_poly_struct const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1max_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (mp_limb_t)nmod_poly_max_bits((nmod_poly_struct const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1lead(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (mp_ptr)nmod_poly_lead((nmod_poly_struct const (*))arg1);
  *(mp_ptr *)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  nmod_poly_set(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  nmod_poly_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  nmod_poly_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  nmod_poly_one(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1truncate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  nmod_poly_truncate(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1set_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_set_trunc(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1reverse(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _nmod_poly_reverse(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1reverse(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_reverse(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  result = (int)nmod_poly_equal((nmod_poly_struct const (*))arg1,(nmod_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1equal_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)nmod_poly_equal_trunc((nmod_poly_struct const (*))arg1,(nmod_poly_struct const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (int)nmod_poly_is_zero((nmod_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (int)nmod_poly_is_one((nmod_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_randtest(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1randtest_1not_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_randtest_not_zero(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1randtest_1irreducible(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_randtest_irreducible(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1randtest_1monic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_randtest_monic(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1randtest_1monic_1irreducible(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_randtest_monic_irreducible(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1randtest_1monic_1primitive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_randtest_monic_primitive(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1randtest_1trinomial(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_randtest_trinomial(arg1,arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1randtest_1trinomial_1irreducible(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)nmod_poly_randtest_trinomial_irreducible(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1randtest_1pentomial(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_randtest_pentomial(arg1,arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1randtest_1pentomial_1irreducible(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)nmod_poly_randtest_pentomial_irreducible(arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1randtest_1sparse_1irreducible(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_randtest_sparse_irreducible(arg1,arg2,arg3);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1get_1coeff_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_t)nmod_poly_get_coeff_ui((nmod_poly_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1set_1coeff_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_set_coeff_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_nmod_1poly_1get_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  nmod_poly_struct *arg1 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (char *)nmod_poly_get_str((nmod_poly_struct const (*))arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_nmod_1poly_1get_1str_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jstring jresult = 0 ;
  nmod_poly_struct *arg1 ;
  char *arg2 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (char *)nmod_poly_get_str_pretty((nmod_poly_struct const (*))arg1,(char const *)arg2);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)nmod_poly_set_str(arg1,(char const *)arg2);
  jresult = (jint)result; 
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1fread(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  nmod_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  result = (int)nmod_poly_fread(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  nmod_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  result = (int)nmod_poly_fprint(arg1,(nmod_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1fprint_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jstring jarg3) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  nmod_poly_struct *arg2 ;
  char *arg3 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (int)nmod_poly_fprint_pretty(arg1,(nmod_poly_struct const (*))arg2,(char const *)arg3);
  jresult = (jint)result; 
  
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (int)nmod_poly_print((nmod_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1print_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)nmod_poly_print_pretty((nmod_poly_struct const (*))arg1,(char const *)arg2);
  jresult = (jint)result; 
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1read(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (int)nmod_poly_read(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1shift_1left(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _nmod_poly_shift_left(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1shift_1left(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_shift_left(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1shift_1right(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _nmod_poly_shift_right(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1shift_1right(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_shift_right(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_add(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_add(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1add_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_add_ui(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1add_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_add_series(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_sub(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_sub(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1sub_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_sub_series(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1sub_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_sub_ui(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  nmod_poly_neg(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1scalar_1mul_1nmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_scalar_mul_nmod(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1make_1monic(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_make_monic(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1make_1monic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  nmod_poly_make_monic(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1KS2_1pack1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jlong jarg6, jint jarg7) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _nmod_poly_KS2_pack1(arg1,(unsigned long const *)arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1KS2_1pack(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jlong jarg6, jint jarg7) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _nmod_poly_KS2_pack(arg1,(unsigned long const *)arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1KS2_1unpack1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  _nmod_poly_KS2_unpack1(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1KS2_1unpack2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  _nmod_poly_KS2_unpack2(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1KS2_1unpack3(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  _nmod_poly_KS2_unpack3(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1KS2_1unpack(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  _nmod_poly_KS2_unpack(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1KS2_1reduce(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jint jarg4, jlong jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_KS2_reduce(arg1,arg2,(unsigned long const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1KS2_1recover_1reduce1(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_KS2_recover_reduce1(arg1,arg2,(unsigned long const *)arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1KS2_1recover_1reduce2(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_KS2_recover_reduce2(arg1,arg2,(unsigned long const *)arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1KS2_1recover_1reduce2b(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_KS2_recover_reduce2b(arg1,arg2,(unsigned long const *)arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1KS2_1recover_1reduce3(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_KS2_recover_reduce3(arg1,arg2,(unsigned long const *)arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1KS2_1recover_1reduce(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_KS2_recover_reduce(arg1,arg2,(unsigned long const *)arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1bit_1pack(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _nmod_poly_bit_pack(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1bit_1unpack(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_bit_unpack(arg1,arg2,(unsigned long const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1bit_1pack(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_bit_pack(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1bit_1unpack(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_bit_unpack(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1mul_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_mul_classical(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1mul_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_mul_classical(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1mullow_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_mullow_classical(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1mullow_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_mullow_classical(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1mulhigh_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_mulhigh_classical(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1mulhigh_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_mulhigh_classical(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1mul_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_mul_KS(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1mul_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  nmod_poly_mul_KS(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1mul_1KS2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_mul_KS2(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1mul_1KS2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_mul_KS2(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1mul_1KS4(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_mul_KS4(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1mul_1KS4(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_mul_KS4(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1mullow_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  mp_limb_signed_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg8_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg8 = *argp8; 
  _nmod_poly_mullow_KS(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6,arg7,arg8);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1mullow_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  nmod_poly_mullow_KS(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_mul(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_mul(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1mullow(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_mullow(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1mullow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_mullow(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1mulhigh(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_mulhigh(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1mulhigh(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_mulhigh(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1mulmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg8_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg8 = *argp8; 
  _nmod_poly_mulmod(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,(unsigned long const *)arg6,arg7,arg8);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1mulmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_mulmod(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1mulmod_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jint jarg9, jlong jarg10, jobject jarg10_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  mp_srcptr arg8 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg9 ;
  nmod_t arg10 ;
  nmod_t *argp10 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg10_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = *(mp_srcptr *)&jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  argp10 = *(nmod_t **)&jarg10; 
  if (!argp10) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg10 = *argp10; 
  _nmod_poly_mulmod_preinv(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,(unsigned long const *)arg6,arg7,(unsigned long const *)arg8,arg9,arg10);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1mulmod_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  nmod_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  nmod_poly_mulmod_preinv(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4,(nmod_poly_struct const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1invmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  jint jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t *arg4 = (mp_limb_t *) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t const *argp6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_limb_t **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t const");
    return 0;
  }
  arg6 = *argp6; 
  result = (int)_nmod_poly_invmod(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1invmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  result = (int)nmod_poly_invmod(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1pow_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_pow_binexp(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1pow_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_pow_binexp(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_pow(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_pow(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1pow_1trunc_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_pow_trunc_binexp(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1pow_1trunc_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_pow_trunc_binexp(arg1,(nmod_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1pow_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_pow_trunc(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1pow_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_pow_trunc(arg1,(nmod_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1powmod_1ui_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_powmod_ui_binexp(arg1,(nmod_poly_struct const (*))arg2,arg3,(nmod_poly_struct const (*))arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1powmod_1ui_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_powmod_ui_binexp(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1powmod_1fmpz_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  fmpz *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_powmod_fmpz_binexp(arg1,(nmod_poly_struct const (*))arg2,arg3,(nmod_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1powmod_1fmpz_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  fmpz *arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_powmod_fmpz_binexp(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1powmod_1mpz_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_powmod_mpz_binexp(arg1,(unsigned long const *)arg2,(__mpz_struct const *)arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1powmod_1mpz_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_powmod_mpz_binexp(arg1,(nmod_poly_struct const (*))arg2,(__mpz_struct const *)arg3,(nmod_poly_struct const (*))arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1powmod_1ui_1binexp_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg8_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg8 = *argp8; 
  _nmod_poly_powmod_ui_binexp_preinv(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,(unsigned long const *)arg6,arg7,arg8);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1powmod_1ui_1binexp_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  nmod_poly_struct *arg4 ;
  nmod_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  nmod_poly_powmod_ui_binexp_preinv(arg1,(nmod_poly_struct const (*))arg2,arg3,(nmod_poly_struct const (*))arg4,(nmod_poly_struct const (*))arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1powmod_1fmpz_1binexp_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  fmpz *arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg8_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg8 = *argp8; 
  _nmod_poly_powmod_fmpz_binexp_preinv(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,(unsigned long const *)arg6,arg7,arg8);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1powmod_1fmpz_1binexp_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  fmpz *arg3 ;
  nmod_poly_struct *arg4 ;
  nmod_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  nmod_poly_powmod_fmpz_binexp_preinv(arg1,(nmod_poly_struct const (*))arg2,arg3,(nmod_poly_struct const (*))arg4,(nmod_poly_struct const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1powmod_1x_1ui_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_powmod_x_ui_preinv(arg1,arg2,(unsigned long const *)arg3,arg4,(unsigned long const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1powmod_1x_1ui_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_powmod_x_ui_preinv(arg1,arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1powmod_1mpz_1binexp_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  (void)jarg8_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg8 = *argp8; 
  _nmod_poly_powmod_mpz_binexp_preinv(arg1,(unsigned long const *)arg2,(__mpz_struct const *)arg3,(unsigned long const *)arg4,arg5,(unsigned long const *)arg6,arg7,arg8);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1powmod_1mpz_1binexp_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mpz_srcptr arg3 = (mpz_srcptr) 0 ;
  nmod_poly_struct *arg4 ;
  nmod_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(mpz_srcptr *)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  nmod_poly_powmod_mpz_binexp_preinv(arg1,(nmod_poly_struct const (*))arg2,(__mpz_struct const *)arg3,(nmod_poly_struct const (*))arg4,(nmod_poly_struct const (*))arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1powmod_1x_1fmpz_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  fmpz *arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_powmod_x_fmpz_preinv(arg1,arg2,(unsigned long const *)arg3,arg4,(unsigned long const *)arg5,arg6,arg7);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1powmod_1x_1fmpz_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  fmpz *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_powmod_x_fmpz_preinv(arg1,arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1powers_1mod_1preinv_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jlong jarg9, jobject jarg9_) {
  mp_ptr *arg1 = (mp_ptr *) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  mp_srcptr arg7 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg8 ;
  nmod_t arg9 ;
  nmod_t const *argp9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg9_;
  arg1 = *(mp_ptr **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(mp_srcptr *)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  argp9 = *(nmod_t **)&jarg9; 
  if (!argp9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t const");
    return ;
  }
  arg9 = *argp9; 
  _nmod_poly_powers_mod_preinv_naive(arg1,(unsigned long const *)arg2,arg3,arg4,(unsigned long const *)arg5,arg6,(unsigned long const *)arg7,arg8,arg9);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1powers_1mod_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_powers_mod_naive(arg1,(nmod_poly_struct const (*))arg2,arg3,(nmod_poly_struct const (*))arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1powers_1mod_1preinv_1threaded_1pool(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jlong jarg9, jobject jarg9_, jlong jarg10, jint jarg11) {
  mp_ptr *arg1 = (mp_ptr *) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  mp_srcptr arg7 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg8 ;
  nmod_t arg9 ;
  thread_pool_handle *arg10 = (thread_pool_handle *) 0 ;
  mp_limb_signed_t arg11 ;
  nmod_t const *argp9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg9_;
  arg1 = *(mp_ptr **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(mp_srcptr *)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  argp9 = *(nmod_t **)&jarg9; 
  if (!argp9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t const");
    return ;
  }
  arg9 = *argp9; 
  arg10 = *(thread_pool_handle **)&jarg10; 
  arg11 = (mp_limb_signed_t)jarg11; 
  _nmod_poly_powers_mod_preinv_threaded_pool(arg1,(unsigned long const *)arg2,arg3,arg4,(unsigned long const *)arg5,arg6,(unsigned long const *)arg7,arg8,arg9,arg10,arg11);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1powers_1mod_1preinv_1threaded(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jlong jarg9, jobject jarg9_) {
  mp_ptr *arg1 = (mp_ptr *) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  mp_srcptr arg7 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg8 ;
  nmod_t arg9 ;
  nmod_t const *argp9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg9_;
  arg1 = *(mp_ptr **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(mp_srcptr *)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  argp9 = *(nmod_t **)&jarg9; 
  if (!argp9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t const");
    return ;
  }
  arg9 = *argp9; 
  _nmod_poly_powers_mod_preinv_threaded(arg1,(unsigned long const *)arg2,arg3,arg4,(unsigned long const *)arg5,arg6,(unsigned long const *)arg7,arg8,arg9);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1powers_1mod_1bsgs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_powers_mod_bsgs(arg1,(nmod_poly_struct const (*))arg2,arg3,(nmod_poly_struct const (*))arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1divrem_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg8_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg8 = *argp8; 
  _nmod_poly_divrem_basecase(arg1,arg2,arg3,(unsigned long const *)arg4,arg5,(unsigned long const *)arg6,arg7,arg8);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1divrem_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_divrem_basecase(arg1,arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1divrem_1divconquer_1recursive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_ptr arg4 = (mp_ptr) 0 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg8_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_ptr *)&jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg8 = *argp8; 
  _nmod_poly_divrem_divconquer_recursive(arg1,arg2,arg3,arg4,(unsigned long const *)arg5,(unsigned long const *)arg6,arg7,arg8);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1divrem_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_divrem_divconquer(arg1,arg2,(unsigned long const *)arg3,arg4,(unsigned long const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1divrem_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_divrem_divconquer(arg1,arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1divrem_1q0(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_divrem_q0(arg1,arg2,(unsigned long const *)arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1divrem_1q1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_divrem_q1(arg1,arg2,(unsigned long const *)arg3,arg4,(unsigned long const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1divrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_divrem(arg1,arg2,(unsigned long const *)arg3,arg4,(unsigned long const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1divrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_divrem(arg1,arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1div_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_div_basecase(arg1,arg2,(unsigned long const *)arg3,arg4,(unsigned long const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1div_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_div_basecase(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1div_1divconquer_1recursive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_div_divconquer_recursive(arg1,arg2,arg3,(unsigned long const *)arg4,(unsigned long const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1div_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_div_divconquer(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1div_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_div_divconquer(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_div(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_div(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1rem_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_rem_basecase(arg1,arg2,(unsigned long const *)arg3,arg4,(unsigned long const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1rem_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_rem_basecase(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1rem_1q1(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_rem_q1(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1rem(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_rem(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1rem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_rem(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1inv_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_inv_series_basecase(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1inv_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_inv_series_basecase(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1inv_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_inv_series_newton(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1inv_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_inv_series_newton(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1inv_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_inv_series(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1inv_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_inv_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1div_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_div_series_basecase(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1div_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_div_series_basecase(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1div_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_div_series(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1div_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_div_series(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1div_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_div_newton(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1div_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_div_newton(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1divrem_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_divrem_newton(arg1,arg2,(unsigned long const *)arg3,arg4,(unsigned long const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1divrem_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_divrem_newton(arg1,arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1div_1newton_1n_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg8_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg8 = *argp8; 
  _nmod_poly_div_newton_n_preinv(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,(unsigned long const *)arg6,arg7,arg8);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1div_1newton_1n_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_div_newton_n_preinv(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1divrem_1newton_1n_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jlong jarg9, jobject jarg9_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  mp_srcptr arg7 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg8 ;
  nmod_t arg9 ;
  nmod_t *argp9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg9_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(mp_srcptr *)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  argp9 = *(nmod_t **)&jarg9; 
  if (!argp9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg9 = *argp9; 
  _nmod_poly_divrem_newton_n_preinv(arg1,arg2,(unsigned long const *)arg3,arg4,(unsigned long const *)arg5,arg6,(unsigned long const *)arg7,arg8,arg9);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1divrem_1newton_1n_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  nmod_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  nmod_poly_divrem_newton_n_preinv(arg1,arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4,(nmod_poly_struct const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1poly_1div_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg5 = *argp5; 
  result = (mp_limb_t)_nmod_poly_div_root(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1div_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)nmod_poly_div_root(arg1,(nmod_poly_struct const (*))arg2,arg3);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1derivative(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_derivative(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1derivative(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  nmod_poly_derivative(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1integral(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_integral(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1integral(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  nmod_poly_integral(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1evaluate_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  _nmod_poly_evaluate_fmpz(arg1,(unsigned long const *)arg2,arg3,(long const (*))arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1evaluate_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  nmod_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  nmod_poly_evaluate_fmpz(arg1,(nmod_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1poly_1evaluate_1nmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg4 = *argp4; 
  result = (mp_limb_t)_nmod_poly_evaluate_nmod((unsigned long const *)arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1evaluate_1nmod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)nmod_poly_evaluate_nmod((nmod_poly_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1evaluate_1nmod_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_evaluate_nmod_vec(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1evaluate_1nmod_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  nmod_poly_struct *arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_evaluate_nmod_vec(arg1,(nmod_poly_struct const (*))arg2,(unsigned long const *)arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1evaluate_1nmod_1vec_1iter(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_evaluate_nmod_vec_iter(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1evaluate_1nmod_1vec_1iter(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  nmod_poly_struct *arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_evaluate_nmod_vec_iter(arg1,(nmod_poly_struct const (*))arg2,(unsigned long const *)arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1evaluate_1nmod_1vec_1fast_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_ptr *arg4 = (mp_ptr *) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_ptr **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_evaluate_nmod_vec_fast_precomp(arg1,(unsigned long const *)arg2,arg3,(unsigned long *const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1evaluate_1nmod_1vec_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_evaluate_nmod_vec_fast(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1evaluate_1nmod_1vec_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  nmod_poly_struct *arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_evaluate_nmod_vec_fast(arg1,(nmod_poly_struct const (*))arg2,(unsigned long const *)arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1one_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_mat_one_addmul(arg1,(nmod_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1evaluate_1mat_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_mat_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  nmod_poly_evaluate_mat_horner(arg1,(nmod_poly_struct const (*))arg2,(nmod_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1evaluate_1mat_1paterson_1stockmeyer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_mat_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  nmod_poly_evaluate_mat_paterson_stockmeyer(arg1,(nmod_poly_struct const (*))arg2,(nmod_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1evaluate_1mat(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_mat_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  nmod_poly_evaluate_mat(arg1,(nmod_poly_struct const (*))arg2,(nmod_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1poly_1tree_1alloc(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  mp_limb_signed_t arg1 ;
  mp_ptr *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  result = (mp_ptr *)_nmod_poly_tree_alloc(arg1);
  *(mp_ptr **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1tree_1free(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  mp_ptr *arg1 = (mp_ptr *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _nmod_poly_tree_free(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1tree_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr *arg1 = (mp_ptr *) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_tree_build(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1interpolate_1nmod_1vec_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_interpolate_nmod_vec_newton(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1interpolate_1nmod_1vec_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  nmod_poly_struct *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_interpolate_nmod_vec_newton(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1interpolate_1nmod_1vec_1barycentric(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_interpolate_nmod_vec_barycentric(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1interpolate_1nmod_1vec_1barycentric(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  nmod_poly_struct *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_interpolate_nmod_vec_barycentric(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1interpolate_1nmod_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_interpolate_nmod_vec(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1interpolate_1nmod_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  nmod_poly_struct *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_interpolate_nmod_vec(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1interpolate_1nmod_1vec_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  nmod_poly_struct *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_interpolate_nmod_vec_fast(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1interpolate_1nmod_1vec_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_interpolate_nmod_vec_fast(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1interpolate_1nmod_1vec_1fast_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_ptr *arg3 = (mp_ptr *) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_ptr **)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_interpolate_nmod_vec_fast_precomp(arg1,(unsigned long const *)arg2,(unsigned long *const *)arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1interpolation_1weights(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr *arg2 = (mp_ptr *) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_interpolation_weights(arg1,(unsigned long *const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_compose_horner(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_compose_horner(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_compose_divconquer(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_compose_divconquer(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  _nmod_poly_compose(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_compose(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1taylor_1shift_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_taylor_shift_horner(arg1,arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1taylor_1shift_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_taylor_shift_horner(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1taylor_1shift_1convolution(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_taylor_shift_convolution(arg1,arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1taylor_1shift_1convolution(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_taylor_shift_convolution(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1taylor_1shift(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_taylor_shift(arg1,arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1taylor_1shift(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_taylor_shift(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1mod_1brent_1kung(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_compose_mod_brent_kung(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,(unsigned long const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1brent_1kung(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_compose_mod_brent_kung(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1reduce_1matrix_1mod_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  _nmod_poly_reduce_matrix_mod_poly(arg1,(nmod_mat_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1precompute_1matrix(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  nmod_mat_struct *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg7_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_precompute_matrix(arg1,(unsigned long const *)arg2,(unsigned long const *)arg3,arg4,(unsigned long const *)arg5,arg6,arg7);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1precompute_1matrix_1worker(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  void *arg1 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  _nmod_poly_precompute_matrix_worker(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1precompute_1matrix(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_mat_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_precompute_matrix(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1mod_1brent_1kung_1precomp_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jlong jarg9, jobject jarg9_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_mat_struct *arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  mp_srcptr arg7 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg8 ;
  nmod_t arg9 ;
  nmod_t *argp9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg9_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(nmod_mat_struct **)&jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(mp_srcptr *)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  argp9 = *(nmod_t **)&jarg9; 
  if (!argp9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg9 = *argp9; 
  _nmod_poly_compose_mod_brent_kung_precomp_preinv(arg1,(unsigned long const *)arg2,arg3,(nmod_mat_struct const (*))arg4,(unsigned long const *)arg5,arg6,(unsigned long const *)arg7,arg8,arg9);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1mod_1brent_1kung_1precomp_1preinv_1worker(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  void *arg1 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  _nmod_poly_compose_mod_brent_kung_precomp_preinv_worker(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1brent_1kung_1precomp_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_mat_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  nmod_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_mat_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  nmod_poly_compose_mod_brent_kung_precomp_preinv(arg1,(nmod_poly_struct const (*))arg2,(nmod_mat_struct const (*))arg3,(nmod_poly_struct const (*))arg4,(nmod_poly_struct const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1mod_1brent_1kung_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jlong jarg9, jobject jarg9_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  mp_srcptr arg7 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg8 ;
  nmod_t arg9 ;
  nmod_t *argp9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg9_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(mp_srcptr *)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  argp9 = *(nmod_t **)&jarg9; 
  if (!argp9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg9 = *argp9; 
  _nmod_poly_compose_mod_brent_kung_preinv(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,(unsigned long const *)arg5,arg6,(unsigned long const *)arg7,arg8,arg9);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1brent_1kung_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  nmod_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  nmod_poly_compose_mod_brent_kung_preinv(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4,(nmod_poly_struct const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1mod_1brent_1kung_1vec_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jlong jarg9, jint jarg10, jlong jarg11, jobject jarg11_) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  mp_srcptr arg7 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg8 ;
  mp_srcptr arg9 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg10 ;
  nmod_t arg11 ;
  nmod_t *argp11 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg11_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(mp_srcptr *)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = *(mp_srcptr *)&jarg9; 
  arg10 = (mp_limb_signed_t)jarg10; 
  argp11 = *(nmod_t **)&jarg11; 
  if (!argp11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg11 = *argp11; 
  _nmod_poly_compose_mod_brent_kung_vec_preinv(arg1,(nmod_poly_struct const *)arg2,arg3,arg4,(unsigned long const *)arg5,arg6,(unsigned long const *)arg7,arg8,(unsigned long const *)arg9,arg10,arg11);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1brent_1kung_1vec_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_, jlong jarg7, jobject jarg7_) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_poly_struct *arg5 ;
  nmod_poly_struct *arg6 ;
  nmod_poly_struct *arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg5_;
  (void)jarg6_;
  (void)jarg7_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  arg6 = *(nmod_poly_struct **)&jarg6; 
  arg7 = *(nmod_poly_struct **)&jarg7; 
  nmod_poly_compose_mod_brent_kung_vec_preinv(arg1,(nmod_poly_struct const *)arg2,arg3,arg4,(nmod_poly_struct const (*))arg5,(nmod_poly_struct const (*))arg6,(nmod_poly_struct const (*))arg7);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1mod_1brent_1kung_1vec_1preinv_1worker(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  void *arg1 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  _nmod_poly_compose_mod_brent_kung_vec_preinv_worker(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1brent_1kung_1vec_1preinv_1threaded_1pool(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_, jlong jarg7, jobject jarg7_, jlong jarg8, jint jarg9) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_poly_struct *arg5 ;
  nmod_poly_struct *arg6 ;
  nmod_poly_struct *arg7 ;
  thread_pool_handle *arg8 = (thread_pool_handle *) 0 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg5_;
  (void)jarg6_;
  (void)jarg7_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  arg6 = *(nmod_poly_struct **)&jarg6; 
  arg7 = *(nmod_poly_struct **)&jarg7; 
  arg8 = *(thread_pool_handle **)&jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool(arg1,(nmod_poly_struct const *)arg2,arg3,arg4,(nmod_poly_struct const (*))arg5,(nmod_poly_struct const (*))arg6,(nmod_poly_struct const (*))arg7,arg8,arg9);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1mod_1brent_1kung_1vec_1preinv_1threaded_1pool(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jlong jarg9, jint jarg10, jlong jarg11, jobject jarg11_, jlong jarg12, jint jarg13) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  mp_srcptr arg7 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg8 ;
  mp_srcptr arg9 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg10 ;
  nmod_t arg11 ;
  thread_pool_handle *arg12 = (thread_pool_handle *) 0 ;
  mp_limb_signed_t arg13 ;
  nmod_t *argp11 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg11_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(mp_srcptr *)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = *(mp_srcptr *)&jarg9; 
  arg10 = (mp_limb_signed_t)jarg10; 
  argp11 = *(nmod_t **)&jarg11; 
  if (!argp11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg11 = *argp11; 
  arg12 = *(thread_pool_handle **)&jarg12; 
  arg13 = (mp_limb_signed_t)jarg13; 
  _nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool(arg1,(nmod_poly_struct const *)arg2,arg3,arg4,(unsigned long const *)arg5,arg6,(unsigned long const *)arg7,arg8,(unsigned long const *)arg9,arg10,arg11,arg12,arg13);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1brent_1kung_1vec_1preinv_1threaded(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_, jlong jarg7, jobject jarg7_) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_poly_struct *arg5 ;
  nmod_poly_struct *arg6 ;
  nmod_poly_struct *arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg5_;
  (void)jarg6_;
  (void)jarg7_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  arg6 = *(nmod_poly_struct **)&jarg6; 
  arg7 = *(nmod_poly_struct **)&jarg7; 
  nmod_poly_compose_mod_brent_kung_vec_preinv_threaded(arg1,(nmod_poly_struct const *)arg2,arg3,arg4,(nmod_poly_struct const (*))arg5,(nmod_poly_struct const (*))arg6,(nmod_poly_struct const (*))arg7);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1mod_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_compose_mod_horner(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,(unsigned long const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_compose_mod_horner(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_compose_mod(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,(unsigned long const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_compose_mod(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1series_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_compose_series_horner(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1series_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_compose_series_horner(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1series_1brent_1kung(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_compose_series_brent_kung(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1series_1brent_1kung(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_compose_series_brent_kung(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_compose_series(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_compose_series(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1revert_1series_1lagrange(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_revert_series_lagrange(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1revert_1series_1lagrange(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_revert_series_lagrange(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1revert_1series_1lagrange_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_revert_series_lagrange_fast(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1revert_1series_1lagrange_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_revert_series_lagrange_fast(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1revert_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_revert_series_newton(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1revert_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_revert_series_newton(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1revert_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_revert_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1revert_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_revert_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1compose_1series_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  _nmod_poly_compose_series_divconquer(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1compose_1series_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_compose_series_divconquer(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1gcd_1euclidean(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg6 = *argp6; 
  result = (mp_limb_signed_t)_nmod_poly_gcd_euclidean(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1gcd_1euclidean(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_gcd_euclidean(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1hgcd_1recursive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7, jint jarg8, jlong jarg9, jint jarg10, jlong jarg11, jlong jarg12, jobject jarg12_, jint jarg13, jlong jarg14, jobject jarg14_) {
  jint jresult = 0 ;
  mp_ptr *arg1 = (mp_ptr *) 0 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_limb_signed_t *arg4 = (mp_limb_signed_t *) 0 ;
  mp_ptr arg5 = (mp_ptr) 0 ;
  mp_limb_signed_t *arg6 = (mp_limb_signed_t *) 0 ;
  mp_srcptr arg7 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg8 ;
  mp_srcptr arg9 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg10 ;
  mp_ptr arg11 = (mp_ptr) 0 ;
  nmod_t arg12 ;
  int arg13 ;
  nmod_poly_res_struct *arg14 ;
  nmod_t *argp12 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg12_;
  (void)jarg14_;
  arg1 = *(mp_ptr **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_limb_signed_t **)&jarg4; 
  arg5 = *(mp_ptr *)&jarg5; 
  arg6 = *(mp_limb_signed_t **)&jarg6; 
  arg7 = *(mp_srcptr *)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = *(mp_srcptr *)&jarg9; 
  arg10 = (mp_limb_signed_t)jarg10; 
  arg11 = *(mp_ptr *)&jarg11; 
  argp12 = *(nmod_t **)&jarg12; 
  if (!argp12) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg12 = *argp12; 
  arg13 = (int)jarg13; 
  arg14 = *(nmod_poly_res_struct **)&jarg14; 
  result = (mp_limb_signed_t)_nmod_poly_hgcd_recursive(arg1,arg2,arg3,arg4,arg5,arg6,(unsigned long const *)arg7,arg8,(unsigned long const *)arg9,arg10,arg11,arg12,arg13,arg14);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1hgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7, jint jarg8, jlong jarg9, jint jarg10, jlong jarg11, jobject jarg11_) {
  jint jresult = 0 ;
  mp_ptr *arg1 = (mp_ptr *) 0 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_limb_signed_t *arg4 = (mp_limb_signed_t *) 0 ;
  mp_ptr arg5 = (mp_ptr) 0 ;
  mp_limb_signed_t *arg6 = (mp_limb_signed_t *) 0 ;
  mp_srcptr arg7 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg8 ;
  mp_srcptr arg9 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg10 ;
  nmod_t arg11 ;
  nmod_t *argp11 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg11_;
  arg1 = *(mp_ptr **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_limb_signed_t **)&jarg4; 
  arg5 = *(mp_ptr *)&jarg5; 
  arg6 = *(mp_limb_signed_t **)&jarg6; 
  arg7 = *(mp_srcptr *)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = *(mp_srcptr *)&jarg9; 
  arg10 = (mp_limb_signed_t)jarg10; 
  argp11 = *(nmod_t **)&jarg11; 
  if (!argp11) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg11 = *argp11; 
  result = (mp_limb_signed_t)_nmod_poly_hgcd(arg1,arg2,arg3,arg4,arg5,arg6,(unsigned long const *)arg7,arg8,(unsigned long const *)arg9,arg10,arg11);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1hgcd_1ref(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_, jlong jarg7, jobject jarg7_, jlong jarg8, jobject jarg8_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  nmod_poly_struct *arg5 ;
  nmod_poly_struct *arg6 ;
  nmod_poly_struct *arg7 ;
  nmod_poly_struct *arg8 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  (void)jarg6_;
  (void)jarg7_;
  (void)jarg8_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  arg6 = *(nmod_poly_struct **)&jarg6; 
  arg7 = *(nmod_poly_struct **)&jarg7; 
  arg8 = *(nmod_poly_struct **)&jarg8; 
  result = (mp_limb_signed_t)nmod_poly_hgcd_ref(arg1,arg2,arg3,arg4,arg5,arg6,(nmod_poly_struct const (*))arg7,(nmod_poly_struct const (*))arg8);
  jresult = (jint)result; 
  
  
  
  
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1hgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_, jlong jarg7, jobject jarg7_, jlong jarg8, jobject jarg8_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  nmod_poly_struct *arg5 ;
  nmod_poly_struct *arg6 ;
  nmod_poly_struct *arg7 ;
  nmod_poly_struct *arg8 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  (void)jarg6_;
  (void)jarg7_;
  (void)jarg8_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  arg6 = *(nmod_poly_struct **)&jarg6; 
  arg7 = *(nmod_poly_struct **)&jarg7; 
  arg8 = *(nmod_poly_struct **)&jarg8; 
  result = (mp_limb_signed_t)nmod_poly_hgcd(arg1,arg2,arg3,arg4,arg5,arg6,(nmod_poly_struct const (*))arg7,(nmod_poly_struct const (*))arg8);
  jresult = (jint)result; 
  
  
  
  
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1gcd_1hgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg6 = *argp6; 
  result = (mp_limb_signed_t)_nmod_poly_gcd_hgcd(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1gcd_1hgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_gcd_hgcd(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1gcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jobject jarg6_) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  nmod_t arg6 ;
  nmod_t *argp6 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg6_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg6 = *argp6; 
  result = (mp_limb_signed_t)_nmod_poly_gcd(arg1,(unsigned long const *)arg2,arg3,(unsigned long const *)arg4,arg5,arg6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1gcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_gcd(arg1,(nmod_poly_struct const (*))arg2,(nmod_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1xgcd_1euclidean(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp8 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg8_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg8 = *argp8; 
  result = (mp_limb_signed_t)_nmod_poly_xgcd_euclidean(arg1,arg2,arg3,(unsigned long const *)arg4,arg5,(unsigned long const *)arg6,arg7,arg8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1xgcd_1euclidean(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  nmod_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  nmod_poly_xgcd_euclidean(arg1,arg2,arg3,(nmod_poly_struct const (*))arg4,(nmod_poly_struct const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1xgcd_1hgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp8 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg8_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg8 = *argp8; 
  result = (mp_limb_signed_t)_nmod_poly_xgcd_hgcd(arg1,arg2,arg3,(unsigned long const *)arg4,arg5,(unsigned long const *)arg6,arg7,arg8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1xgcd_1hgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  nmod_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  nmod_poly_xgcd_hgcd(arg1,arg2,arg3,(nmod_poly_struct const (*))arg4,(nmod_poly_struct const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1xgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_srcptr arg4 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_srcptr arg6 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp8 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg8_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = *(mp_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(mp_srcptr *)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg8 = *argp8; 
  result = (mp_limb_signed_t)_nmod_poly_xgcd(arg1,arg2,arg3,(unsigned long const *)arg4,arg5,(unsigned long const *)arg6,arg7,arg8);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1xgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  nmod_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  nmod_poly_xgcd(arg1,arg2,arg3,(nmod_poly_struct const (*))arg4,(nmod_poly_struct const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1poly_1resultant_1euclidean(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg5 = *argp5; 
  result = (mp_limb_t)_nmod_poly_resultant_euclidean((unsigned long const *)arg1,arg2,(unsigned long const *)arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1resultant_1euclidean(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  result = (mp_limb_t)nmod_poly_resultant_euclidean((nmod_poly_struct const (*))arg1,(nmod_poly_struct const (*))arg2);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1poly_1resultant_1hgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg5 = *argp5; 
  result = (mp_limb_t)_nmod_poly_resultant_hgcd((unsigned long const *)arg1,arg2,(unsigned long const *)arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1resultant_1hgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  result = (mp_limb_t)nmod_poly_resultant_hgcd((nmod_poly_struct const (*))arg1,(nmod_poly_struct const (*))arg2);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1poly_1resultant(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg5 = *argp5; 
  result = (mp_limb_t)_nmod_poly_resultant((unsigned long const *)arg1,arg2,(unsigned long const *)arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1resultant(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  result = (mp_limb_t)nmod_poly_resultant((nmod_poly_struct const (*))arg1,(nmod_poly_struct const (*))arg2);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1gcdinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  jint jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_t *arg5 = (mp_limb_t *) 0 ;
  mp_limb_signed_t arg6 ;
  nmod_t arg7 ;
  nmod_t const *argp7 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(mp_limb_t **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t const");
    return 0;
  }
  arg7 = *argp7; 
  result = (mp_limb_signed_t)_nmod_poly_gcdinv(arg1,arg2,(unsigned long const *)arg3,arg4,(unsigned long const *)arg5,arg6,arg7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1gcdinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  nmod_poly_gcdinv(arg1,arg2,(nmod_poly_struct const (*))arg3,(nmod_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1poly_1discriminant(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  nmod_t arg3 ;
  nmod_t *argp3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg3 = *argp3; 
  result = (mp_limb_t)_nmod_poly_discriminant((unsigned long const *)arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1discriminant(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (mp_limb_t)nmod_poly_discriminant((nmod_poly_struct const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1invsqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_invsqrt_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1invsqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_invsqrt_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1sqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_sqrt_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1sqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_sqrt_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg4 = *argp4; 
  result = (int)_nmod_poly_sqrt(arg1,(unsigned long const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  result = (int)nmod_poly_sqrt(arg1,(nmod_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1power_1sums_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_power_sums_naive(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1power_1sums_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_power_sums_naive(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1power_1sums_1schoenhage(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_power_sums_schoenhage(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1power_1sums_1schoenhage(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_power_sums_schoenhage(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1power_1sums(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_power_sums(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1power_1sums(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_power_sums(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1power_1sums_1to_1poly_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_power_sums_to_poly_naive(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1power_1sums_1to_1poly_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  nmod_poly_power_sums_to_poly_naive(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1power_1sums_1to_1poly_1schoenhage(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_power_sums_to_poly_schoenhage(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1power_1sums_1to_1poly_1schoenhage(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  nmod_poly_power_sums_to_poly_schoenhage(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1power_1sums_1to_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_power_sums_to_poly(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1power_1sums_1to_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  nmod_poly_power_sums_to_poly(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1atan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_atan_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1atan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_atan_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1tan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_tan_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1tan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_tan_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1asin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_asin_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1asin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_asin_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1sin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_sin_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1sin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_sin_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_cos_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_cos_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1asinh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_asinh_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1asinh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_asinh_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1atanh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_atanh_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1atanh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_atanh_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1sinh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_sinh_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1sinh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_sinh_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1cosh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_cosh_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1cosh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_cosh_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1tanh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_tanh_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1tanh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_tanh_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1log_1series_1monomial_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_log_series_monomial_ui(arg1,arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1log_1series_1monomial_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  nmod_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_log_series_monomial_ui(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1log_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_log_series(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1log_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_log_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1exp_1series_1monomial_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_exp_series_monomial_ui(arg1,arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1exp_1series_1monomial_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  nmod_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  nmod_poly_exp_series_monomial_ui(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1exp_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_exp_series_basecase(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1exp_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_exp_series_basecase(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1exp_1expinv_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_exp_expinv_series(arg1,arg2,(unsigned long const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1exp_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_exp_series(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1exp_1series2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  _nmod_poly_exp_series2(arg1,(unsigned long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1exp_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_exp_series(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1product_1roots_1nmod_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  nmod_poly_struct *arg1 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_product_roots_nmod_vec(arg1,(unsigned long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1product_1roots_1nmod_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  mp_srcptr arg2 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(mp_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg4 = *argp4; 
  _nmod_poly_product_roots_nmod_vec(arg1,(unsigned long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1split_1rabin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  nmod_poly_struct *arg3 ;
  nmod_poly_struct *arg4 ;
  nmod_poly_struct *arg5 ;
  flint_rand_s *arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  (void)jarg6_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = *(nmod_poly_struct **)&jarg5; 
  arg6 = *(flint_rand_s **)&jarg6; 
  _nmod_poly_split_rabin(arg1,arg2,(nmod_poly_struct const (*))arg3,arg4,arg5,arg6);
  
  
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1find_1distinct_1nonzero_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  nmod_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  result = (int)nmod_poly_find_distinct_nonzero_roots(arg1,(nmod_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1multi_1crt_1prog_1instr_1a_1idx_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _nmod_poly_multi_crt_prog_instr *arg1 = (_nmod_poly_multi_crt_prog_instr *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_nmod_poly_multi_crt_prog_instr **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->a_idx = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1multi_1crt_1prog_1instr_1a_1idx_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _nmod_poly_multi_crt_prog_instr *arg1 = (_nmod_poly_multi_crt_prog_instr *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_nmod_poly_multi_crt_prog_instr **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->a_idx);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1multi_1crt_1prog_1instr_1b_1idx_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _nmod_poly_multi_crt_prog_instr *arg1 = (_nmod_poly_multi_crt_prog_instr *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_nmod_poly_multi_crt_prog_instr **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->b_idx = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1multi_1crt_1prog_1instr_1b_1idx_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _nmod_poly_multi_crt_prog_instr *arg1 = (_nmod_poly_multi_crt_prog_instr *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_nmod_poly_multi_crt_prog_instr **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->b_idx);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1multi_1crt_1prog_1instr_1c_1idx_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  _nmod_poly_multi_crt_prog_instr *arg1 = (_nmod_poly_multi_crt_prog_instr *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_nmod_poly_multi_crt_prog_instr **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->c_idx = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1multi_1crt_1prog_1instr_1c_1idx_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  _nmod_poly_multi_crt_prog_instr *arg1 = (_nmod_poly_multi_crt_prog_instr *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_nmod_poly_multi_crt_prog_instr **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->c_idx);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1multi_1crt_1prog_1instr_1idem_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  _nmod_poly_multi_crt_prog_instr *arg1 = (_nmod_poly_multi_crt_prog_instr *) 0 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(_nmod_poly_multi_crt_prog_instr **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  {
    size_t ii;
    nmod_poly_struct *b = (nmod_poly_struct *) arg1->idem;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((nmod_poly_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1poly_1multi_1crt_1prog_1instr_1idem_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _nmod_poly_multi_crt_prog_instr *arg1 = (_nmod_poly_multi_crt_prog_instr *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_nmod_poly_multi_crt_prog_instr **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->idem);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1multi_1crt_1prog_1instr_1modulus_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  _nmod_poly_multi_crt_prog_instr *arg1 = (_nmod_poly_multi_crt_prog_instr *) 0 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(_nmod_poly_multi_crt_prog_instr **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  {
    size_t ii;
    nmod_poly_struct *b = (nmod_poly_struct *) arg1->modulus;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((nmod_poly_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1nmod_1poly_1multi_1crt_1prog_1instr_1modulus_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  _nmod_poly_multi_crt_prog_instr *arg1 = (_nmod_poly_multi_crt_prog_instr *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(_nmod_poly_multi_crt_prog_instr **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->modulus);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1_1nmod_1poly_1multi_1crt_1prog_1instr(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  _nmod_poly_multi_crt_prog_instr *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (_nmod_poly_multi_crt_prog_instr *)new _nmod_poly_multi_crt_prog_instr();
  *(_nmod_poly_multi_crt_prog_instr **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1_1nmod_1poly_1multi_1crt_1prog_1instr(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  _nmod_poly_multi_crt_prog_instr *arg1 = (_nmod_poly_multi_crt_prog_instr *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(_nmod_poly_multi_crt_prog_instr **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1prog_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  _nmod_poly_multi_crt_prog_instr *arg2 = (_nmod_poly_multi_crt_prog_instr *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  arg2 = *(_nmod_poly_multi_crt_prog_instr **)&jarg2; 
  if (arg1) (arg1)->prog = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1prog_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  _nmod_poly_multi_crt_prog_instr *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  result = (_nmod_poly_multi_crt_prog_instr *) ((arg1)->prog);
  *(_nmod_poly_multi_crt_prog_instr **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->length);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->alloc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->alloc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1localsize_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->localsize = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1localsize_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->localsize);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1temp1loc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->temp1loc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1temp1loc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->temp1loc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1temp2loc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->temp2loc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1temp2loc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->temp2loc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1good_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->good = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1struct_1good_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  result = (int) ((arg1)->good);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1nmod_1poly_1multi_1crt_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  nmod_poly_multi_crt_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (nmod_poly_multi_crt_struct *)new nmod_poly_multi_crt_struct();
  *(nmod_poly_multi_crt_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1nmod_1poly_1multi_1crt_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  nmod_poly_multi_crt_struct *arg1 = (nmod_poly_multi_crt_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_poly_multi_crt_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  nmod_poly_multi_crt_init(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1precompute(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  nmod_poly_multi_crt_struct *arg1 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)nmod_poly_multi_crt_precompute(arg1,(nmod_poly_struct const *)arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1precompute_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  nmod_poly_multi_crt_struct *arg1 ;
  nmod_poly_struct **arg2 = (nmod_poly_struct **) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct ***)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)nmod_poly_multi_crt_precompute_p(arg1,(nmod_poly_struct const *const *)arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 ;
  nmod_poly_multi_crt_struct *arg2 ;
  nmod_poly_struct *arg3 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_multi_crt_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  nmod_poly_multi_crt_precomp(arg1,(nmod_poly_multi_crt_struct const (*))arg2,(nmod_poly_struct const *)arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1precomp_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_multi_crt_struct *arg2 ;
  nmod_poly_struct **arg3 = (nmod_poly_struct **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_multi_crt_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct ***)&jarg3; 
  nmod_poly_multi_crt_precomp_p(arg1,(nmod_poly_multi_crt_struct const (*))arg2,(nmod_poly_struct const *const *)arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  nmod_poly_struct *arg3 = (nmod_poly_struct *) 0 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)nmod_poly_multi_crt(arg1,(nmod_poly_struct const *)arg2,(nmod_poly_struct const *)arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1multi_1crt_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_poly_multi_crt_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  nmod_poly_multi_crt_clear(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1multi_1crt_1local_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_multi_crt_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_multi_crt_struct **)&jarg1; 
  result = (mp_limb_signed_t)_nmod_poly_multi_crt_local_size((nmod_poly_multi_crt_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1multi_1crt_1run(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  nmod_poly_multi_crt_struct *arg2 ;
  nmod_poly_struct *arg3 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_multi_crt_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  _nmod_poly_multi_crt_run(arg1,(nmod_poly_multi_crt_struct const (*))arg2,(nmod_poly_struct const *)arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1multi_1crt_1run_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_struct *arg1 = (nmod_poly_struct *) 0 ;
  nmod_poly_multi_crt_struct *arg2 ;
  nmod_poly_struct **arg3 = (nmod_poly_struct **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_multi_crt_struct **)&jarg2; 
  arg3 = *(nmod_poly_struct ***)&jarg3; 
  _nmod_poly_multi_crt_run_p(arg1,(nmod_poly_multi_crt_struct const (*))arg2,(nmod_poly_struct const *const *)arg3);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1deflation(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (mp_limb_t)nmod_poly_deflation((nmod_poly_struct const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1deflate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_deflate(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1inflate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  nmod_poly_inflate(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1charpoly_1danilevsky(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  nmod_mat_charpoly_danilevsky(arg1,(nmod_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1charpoly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  nmod_mat_charpoly(arg1,(nmod_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1minpoly_1with_1gens(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  nmod_mat_minpoly_with_gens(arg1,(nmod_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1mat_1minpoly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  nmod_mat_minpoly(arg1,(nmod_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1npoints_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->npoints = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1npoints_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->npoints);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1R0_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  {
    size_t ii;
    nmod_poly_struct *b = (nmod_poly_struct *) arg1->R0;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((nmod_poly_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1R0_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->R0);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1R1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  {
    size_t ii;
    nmod_poly_struct *b = (nmod_poly_struct *) arg1->R1;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((nmod_poly_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1R1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->R1);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1V0_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  {
    size_t ii;
    nmod_poly_struct *b = (nmod_poly_struct *) arg1->V0;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((nmod_poly_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1V0_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->V0);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1V1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  {
    size_t ii;
    nmod_poly_struct *b = (nmod_poly_struct *) arg1->V1;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((nmod_poly_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1V1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->V1);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1qt_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  {
    size_t ii;
    nmod_poly_struct *b = (nmod_poly_struct *) arg1->qt;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((nmod_poly_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1qt_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->qt);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1rt_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  {
    size_t ii;
    nmod_poly_struct *b = (nmod_poly_struct *) arg1->rt;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((nmod_poly_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1rt_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->rt);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1points_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  {
    size_t ii;
    nmod_poly_struct *b = (nmod_poly_struct *) arg1->points;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((nmod_poly_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1struct_1points_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->points);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1nmod_1berlekamp_1massey_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  nmod_berlekamp_massey_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (nmod_berlekamp_massey_struct *)new nmod_berlekamp_massey_struct();
  *(nmod_berlekamp_massey_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1nmod_1berlekamp_1massey_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  nmod_berlekamp_massey_struct *arg1 = (nmod_berlekamp_massey_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_berlekamp_massey_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  nmod_berlekamp_massey_init(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1start_1over(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_berlekamp_massey_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  nmod_berlekamp_massey_start_over(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_berlekamp_massey_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  nmod_berlekamp_massey_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1set_1prime(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_berlekamp_massey_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  nmod_berlekamp_massey_set_prime(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_berlekamp_massey_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  nmod_berlekamp_massey_print((nmod_berlekamp_massey_struct const (*))arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1add_1points(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  nmod_berlekamp_massey_struct *arg1 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_berlekamp_massey_add_points(arg1,(unsigned long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1add_1zeros(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_berlekamp_massey_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  nmod_berlekamp_massey_add_zeros(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1add_1point(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_berlekamp_massey_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  nmod_berlekamp_massey_add_point(arg1,arg2);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1reduce(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_berlekamp_massey_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  result = (int)nmod_berlekamp_massey_reduce(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1points(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_berlekamp_massey_struct *arg1 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  result = (mp_limb_t *)nmod_berlekamp_massey_points((nmod_berlekamp_massey_struct const (*))arg1);
  *(mp_limb_t **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1point_1count(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_berlekamp_massey_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  result = (mp_limb_signed_t)nmod_berlekamp_massey_point_count((nmod_berlekamp_massey_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1V_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_berlekamp_massey_struct *arg1 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  result = (nmod_poly_struct *)nmod_berlekamp_massey_V_poly((nmod_berlekamp_massey_struct const (*))arg1);
  *(nmod_poly_struct **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1berlekamp_1massey_1R_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_berlekamp_massey_struct *arg1 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_berlekamp_massey_struct **)&jarg1; 
  result = (nmod_poly_struct *)nmod_berlekamp_massey_R_poly((nmod_berlekamp_massey_struct const (*))arg1);
  *(nmod_poly_struct **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1struct_1p_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_factor_struct *arg1 = (nmod_poly_factor_struct *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  if (arg1) (arg1)->p = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1struct_1p_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_factor_struct *arg1 = (nmod_poly_factor_struct *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->p);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1struct_1exp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_poly_factor_struct *arg1 = (nmod_poly_factor_struct *) 0 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  if (arg1) (arg1)->exp = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1struct_1exp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_factor_struct *arg1 = (nmod_poly_factor_struct *) 0 ;
  mp_limb_signed_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  result = (mp_limb_signed_t *) ((arg1)->exp);
  *(mp_limb_signed_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1struct_1num_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_factor_struct *arg1 = (nmod_poly_factor_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->num = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1struct_1num_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_factor_struct *arg1 = (nmod_poly_factor_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->num);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1struct_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_factor_struct *arg1 = (nmod_poly_factor_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->alloc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1struct_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_factor_struct *arg1 = (nmod_poly_factor_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->alloc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1nmod_1poly_1factor_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  nmod_poly_factor_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (nmod_poly_factor_struct *)new nmod_poly_factor_struct();
  *(nmod_poly_factor_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1nmod_1poly_1factor_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  nmod_poly_factor_struct *arg1 = (nmod_poly_factor_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1baby_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  if (arg1) (arg1)->baby = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1baby_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->baby);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1res_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  if (arg1) (arg1)->res = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1res_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->res);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1H_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  if (arg1) (arg1)->H = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1H_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->H);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1v_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  if (arg1) (arg1)->v = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1v_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->v);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1vinv_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  nmod_poly_struct *arg2 = (nmod_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  if (arg1) (arg1)->vinv = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1vinv_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  nmod_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  result = (nmod_poly_struct *) ((arg1)->vinv);
  *(nmod_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1tmp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  mp_ptr arg2 = (mp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  arg2 = *(mp_ptr *)&jarg2; 
  if (arg1) (arg1)->tmp = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1tmp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  result = (mp_ptr) ((arg1)->tmp);
  *(mp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1m_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->m = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1interval_1poly_1arg_1t_1m_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->m);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1nmod_1poly_1interval_1poly_1arg_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  nmod_poly_interval_poly_arg_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (nmod_poly_interval_poly_arg_t *)new nmod_poly_interval_poly_arg_t();
  *(nmod_poly_interval_poly_arg_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1nmod_1poly_1interval_1poly_1arg_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  nmod_poly_interval_poly_arg_t *arg1 = (nmod_poly_interval_poly_arg_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(nmod_poly_interval_poly_arg_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_poly_factor_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  nmod_poly_factor_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_poly_factor_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  nmod_poly_factor_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1realloc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_factor_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  nmod_poly_factor_realloc(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1fit_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_factor_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  nmod_poly_factor_fit_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_factor_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_factor_struct **)&jarg2; 
  nmod_poly_factor_set(arg1,(nmod_poly_factor_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_factor_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_factor_struct **)&jarg2; 
  nmod_poly_factor_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1insert(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_factor_insert(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  nmod_poly_factor_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  nmod_poly_factor_print((nmod_poly_factor_struct const (*))arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1concat(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_factor_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_factor_struct **)&jarg2; 
  nmod_poly_factor_concat(arg1,(nmod_poly_factor_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  nmod_poly_factor_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  nmod_poly_factor_pow(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1equal_1deg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_factor_equal_deg(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1equal_1deg_1prob(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  nmod_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = *(nmod_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)nmod_poly_factor_equal_deg_prob(arg1,arg2,(nmod_poly_struct const (*))arg3,arg4);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1distinct_1deg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t **arg3 = (mp_limb_signed_t **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(mp_limb_signed_t ***)&jarg3; 
  nmod_poly_factor_distinct_deg(arg1,(nmod_poly_struct const (*))arg2,(long *const *)arg3);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1remove(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  nmod_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  result = (mp_limb_t)nmod_poly_remove(arg1,(nmod_poly_struct const (*))arg2);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1distinct_1deg_1threaded(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_signed_t **arg3 = (mp_limb_signed_t **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = *(mp_limb_signed_t ***)&jarg3; 
  nmod_poly_factor_distinct_deg_threaded(arg1,(nmod_poly_struct const (*))arg2,(long *const *)arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1is_1irreducible(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (int)nmod_poly_is_irreducible((nmod_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1is_1irreducible_1rabin(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (int)nmod_poly_is_irreducible_rabin((nmod_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1is_1irreducible_1ddf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (int)nmod_poly_is_irreducible_ddf((nmod_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1nmod_1poly_1is_1squarefree(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  mp_srcptr arg1 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  nmod_t arg3 ;
  nmod_t *argp3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(mp_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg3 = *argp3; 
  result = (int)_nmod_poly_is_squarefree((unsigned long const *)arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1is_1squarefree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  nmod_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  result = (int)nmod_poly_is_squarefree((nmod_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1cantor_1zassenhaus(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  nmod_poly_factor_cantor_zassenhaus(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1berlekamp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  nmod_poly_factor_berlekamp(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1kaltofen_1shoup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  nmod_poly_factor_kaltofen_shoup(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1squarefree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  nmod_poly_factor_squarefree(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1with_1berlekamp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  result = (mp_limb_t)nmod_poly_factor_with_berlekamp(arg1,(nmod_poly_struct const (*))arg2);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1with_1cantor_1zassenhaus(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  result = (mp_limb_t)nmod_poly_factor_with_cantor_zassenhaus(arg1,(nmod_poly_struct const (*))arg2);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1with_1kaltofen_1shoup(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  result = (mp_limb_t)nmod_poly_factor_with_kaltofen_shoup(arg1,(nmod_poly_struct const (*))arg2);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  result = (mp_limb_t)nmod_poly_factor(arg1,(nmod_poly_struct const (*))arg2);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1nmod_1poly_1interval_1poly_1worker(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  void *arg1 = (void *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(void **)&jarg1; 
  _nmod_poly_interval_poly_worker(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  nmod_poly_roots(arg1,(nmod_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_nmod_1poly_1roots_1factored(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  nmod_poly_factor_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  int arg3 ;
  n_factor_t *arg4 = (n_factor_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(nmod_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(n_factor_t **)&jarg4; 
  result = (int)nmod_poly_roots_factored(arg1,(nmod_poly_struct const (*))arg2,arg3,(n_factor_t const *)arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_nmod_1poly_1factor_1get_1nmod_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  nmod_poly_factor_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_factor_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  nmod_poly_factor_get_nmod_poly(arg1,arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FMPZ_1POLY_1INV_1NEWTON_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(32);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FMPZ_1POLY_1SQRT_1DIVCONQUER_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(16);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FMPZ_1POLY_1SQRTREM_1DIVCONQUER_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(16);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1struct_1coeffs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_struct *arg1 = (fmpz_poly_struct *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  if (arg1) (arg1)->coeffs = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1poly_1struct_1coeffs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_poly_struct *arg1 = (fmpz_poly_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->coeffs);
  *(fmpz **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1struct_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_struct *arg1 = (fmpz_poly_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->alloc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1struct_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 = (fmpz_poly_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->alloc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1struct_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_struct *arg1 = (fmpz_poly_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1struct_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 = (fmpz_poly_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->length);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpz_1poly_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpz_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpz_poly_struct *)new fmpz_poly_struct();
  *(fmpz_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpz_1poly_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz_poly_struct *arg1 = (fmpz_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1powers_1precomp_1struct_1powers_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_powers_precomp_struct *arg1 = (fmpz_poly_powers_precomp_struct *) 0 ;
  fmpz **arg2 = (fmpz **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_powers_precomp_struct **)&jarg1; 
  arg2 = *(fmpz ***)&jarg2; 
  if (arg1) (arg1)->powers = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1poly_1powers_1precomp_1struct_1powers_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_poly_powers_precomp_struct *arg1 = (fmpz_poly_powers_precomp_struct *) 0 ;
  fmpz **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_powers_precomp_struct **)&jarg1; 
  result = (fmpz **) ((arg1)->powers);
  *(fmpz ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1powers_1precomp_1struct_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_powers_precomp_struct *arg1 = (fmpz_poly_powers_precomp_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_powers_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->len = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1powers_1precomp_1struct_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_powers_precomp_struct *arg1 = (fmpz_poly_powers_precomp_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_powers_precomp_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpz_1poly_1powers_1precomp_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpz_poly_powers_precomp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpz_poly_powers_precomp_struct *)new fmpz_poly_powers_precomp_struct();
  *(fmpz_poly_powers_precomp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpz_1poly_1powers_1precomp_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz_poly_powers_precomp_struct *arg1 = (fmpz_poly_powers_precomp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz_poly_powers_precomp_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1struct_1c_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_factor_struct *arg1 = (fmpz_poly_factor_struct *) 0 ;
  fmpz arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = (fmpz)jarg2; 
  if (arg1) (arg1)->c = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1struct_1c_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_factor_struct *arg1 = (fmpz_poly_factor_struct *) 0 ;
  fmpz result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  result = (fmpz) ((arg1)->c);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1struct_1p_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_factor_struct *arg1 = (fmpz_poly_factor_struct *) 0 ;
  fmpz_poly_struct *arg2 = (fmpz_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  if (arg1) (arg1)->p = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1struct_1p_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_poly_factor_struct *arg1 = (fmpz_poly_factor_struct *) 0 ;
  fmpz_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  result = (fmpz_poly_struct *) ((arg1)->p);
  *(fmpz_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1struct_1exp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_factor_struct *arg1 = (fmpz_poly_factor_struct *) 0 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  if (arg1) (arg1)->exp = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1struct_1exp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_poly_factor_struct *arg1 = (fmpz_poly_factor_struct *) 0 ;
  mp_limb_signed_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  result = (mp_limb_signed_t *) ((arg1)->exp);
  *(mp_limb_signed_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1struct_1num_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_factor_struct *arg1 = (fmpz_poly_factor_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->num = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1struct_1num_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_factor_struct *arg1 = (fmpz_poly_factor_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->num);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1struct_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_factor_struct *arg1 = (fmpz_poly_factor_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->alloc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1struct_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_factor_struct *arg1 = (fmpz_poly_factor_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->alloc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpz_1poly_1factor_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpz_poly_factor_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpz_poly_factor_struct *)new fmpz_poly_factor_struct();
  *(fmpz_poly_factor_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpz_1poly_1factor_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz_poly_factor_struct *arg1 = (fmpz_poly_factor_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1jj_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  mp_limb_t **arg2 = (mp_limb_t **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  arg2 = *(mp_limb_t ***)&jarg2; 
  if (arg1) (arg1)->jj = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1jj_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  mp_limb_t **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  result = (mp_limb_t **) ((arg1)->jj);
  *(mp_limb_t ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1n_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->n = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1n_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->n);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1len2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->len2 = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1len2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->len2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1loglen_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->loglen = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1loglen_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->loglen);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1bits2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->bits2 = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1bits2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->bits2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1limbs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->limbs = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1limbs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->limbs);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1poly2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  {
    size_t ii;
    fmpz_poly_struct *b = (fmpz_poly_struct *) arg1->poly2;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((fmpz_poly_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1struct_1poly2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  fmpz_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  result = (fmpz_poly_struct *) ((arg1)->poly2);
  *(fmpz_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpz_1poly_1mul_1precache_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpz_poly_mul_precache_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpz_poly_mul_precache_struct *)new fmpz_poly_mul_precache_struct();
  *(fmpz_poly_mul_precache_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpz_1poly_1mul_1precache_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz_poly_mul_precache_struct *arg1 = (fmpz_poly_mul_precache_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  fmpz_poly_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1init2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpz_poly_init2(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1realloc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpz_poly_realloc(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1fit_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpz_poly_fit_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  fmpz_poly_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1normalise(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  _fmpz_poly_normalise(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1set_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _fmpz_poly_set_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1attach_1truncate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_attach_truncate(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1attach_1shift(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_attach_shift(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)fmpz_poly_length((fmpz_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1degree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)fmpz_poly_degree((fmpz_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_set(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_poly_set_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpz_poly_set_si(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1set_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_poly_set_fmpz(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1set_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  __mpz_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(__mpz_struct **)&jarg2; 
  fmpz_poly_set_mpz(arg1,(__mpz_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jstring jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)_fmpz_poly_set_str(arg1,(char const *)arg2);
  jresult = (jint)result; 
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)fmpz_poly_set_str(arg1,(char const *)arg2);
  jresult = (jint)result; 
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1get_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jstring jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (char *)_fmpz_poly_get_str((long const *)arg1,arg2);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_fmpz_1poly_1get_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (char *)fmpz_poly_get_str((fmpz_poly_struct const (*))arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1get_1str_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3) {
  jstring jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  char *arg3 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (char *)_fmpz_poly_get_str_pretty((long const *)arg1,arg2,(char const *)arg3);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_fmpz_1poly_1get_1str_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jstring jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  char *arg2 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (char *)fmpz_poly_get_str_pretty((fmpz_poly_struct const (*))arg1,(char const *)arg2);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  fmpz_poly_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  fmpz_poly_one(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1zero_1coeffs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_zero_coeffs(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1reverse(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_reverse(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1reverse(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_reverse(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1poly_1deflation(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (mp_limb_t)fmpz_poly_deflation((fmpz_poly_struct const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1deflate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_deflate(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1inflate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_inflate(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1truncate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpz_poly_truncate(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1set_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_set_trunc(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  fmpz_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_poly_randtest(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1randtest_1unsigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  fmpz_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_poly_randtest_unsigned(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1randtest_1not_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  fmpz_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_poly_randtest_not_zero(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1randtest_1no_1real_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  fmpz_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_poly_randtest_no_real_root(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1get_1coeff_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_signed_t)fmpz_poly_get_coeff_si((fmpz_poly_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1set_1coeff_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_set_coeff_si(arg1,arg2,arg3);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1poly_1get_1coeff_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jlong jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_t)fmpz_poly_get_coeff_ui((fmpz_poly_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1set_1coeff_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_set_coeff_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1set_1coeff_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_set_coeff_fmpz(arg1,arg2,(long const (*))arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1get_1coeff_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_get_coeff_fmpz(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  result = (int)fmpz_poly_equal((fmpz_poly_struct const (*))arg1,(fmpz_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1equal_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)fmpz_poly_equal_trunc((fmpz_poly_struct const (*))arg1,(fmpz_poly_struct const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)_fmpz_poly_is_one((long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (int)fmpz_poly_is_one((fmpz_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1is_1unit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (int)fmpz_poly_is_unit((fmpz_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1is_1gen(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (int)fmpz_poly_is_gen((fmpz_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1equal_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  fmpz *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (int)fmpz_poly_equal_fmpz((fmpz_poly_struct const (*))arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_add(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_add(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1add_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_add_series(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_sub(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_sub(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sub_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_sub_series(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_neg(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1abs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_scalar_abs(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_scalar_mul_ui(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_scalar_mul_si(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_scalar_mul_fmpz(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1addmul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_scalar_addmul_fmpz(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1submul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_scalar_submul_fmpz(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1fdiv_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_scalar_fdiv_ui(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1fdiv_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_scalar_fdiv_si(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1fdiv_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_scalar_fdiv_fmpz(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1tdiv_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_scalar_tdiv_ui(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1tdiv_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_scalar_tdiv_si(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1tdiv_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_scalar_tdiv_fmpz(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1divexact_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_scalar_divexact_ui(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1divexact_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_scalar_divexact_si(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1divexact_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_scalar_divexact_fmpz(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1fdiv_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_scalar_fdiv_2exp(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1tdiv_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_scalar_tdiv_2exp(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1mul_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_scalar_mul_2exp(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1mod_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_scalar_mod_fmpz(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1smod_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_scalar_smod_fmpz(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1remove_1content_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_signed_t)_fmpz_poly_remove_content_2exp(arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1scale_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_scale_2exp(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1bit_1pack(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  mp_ptr arg1 = (mp_ptr) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_ptr *)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (int)jarg5; 
  _fmpz_poly_bit_pack(arg1,(long const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1bit_1unpack(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_t arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (int)jarg5; 
  result = (int)_fmpz_poly_bit_unpack(arg1,arg2,(unsigned long const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1bit_1unpack_1unsigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_srcptr arg3 = (mp_srcptr) 0 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(mp_srcptr *)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_poly_bit_unpack_unsigned(arg1,arg2,(unsigned long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1bit_1pack(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_bit_pack(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1bit_1unpack(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_bit_unpack(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1bit_1unpack_1unsigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_bit_unpack_unsigned(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mul_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_mul_classical(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_mul_classical(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mullow_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_mullow_classical(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mullow_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_mullow_classical(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mulhigh_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_mulhigh_classical(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mulhigh_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_mulhigh_classical(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mulmid_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_mulmid_classical(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mulmid_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_mulmid_classical(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1karatsuba(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_mul_karatsuba(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mul_1karatsuba(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_mul_karatsuba(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mullow_1karatsuba_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_mullow_karatsuba_n(arg1,(long const *)arg2,(long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mullow_1karatsuba_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_mullow_karatsuba_n(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mulhigh_1karatsuba_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_mulhigh_karatsuba_n(arg1,(long const *)arg2,(long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mulhigh_1karatsuba_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_mulhigh_karatsuba_n(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mul_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_mul_KS(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_mul_KS(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mullow_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_mullow_KS(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mullow_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_mullow_KS(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mul_1SS(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_mul_SS(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1SS(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_mul_SS(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mullow_1SS(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_mullow_SS(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mullow_1SS(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_mullow_SS(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_mul(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_mul(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mullow(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_mullow(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mullow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_mullow(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mulhigh_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_mulhigh_n(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1SS_1precache_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4, jobject jarg4_) {
  fmpz_poly_mul_precache_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  fmpz_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  fmpz_poly_mul_SS_precache_init(arg1,arg2,arg3,(fmpz_poly_struct const (*))arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1precache_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_poly_mul_precache_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_mul_precache_struct **)&jarg1; 
  fmpz_poly_mul_precache_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1mullow_1SS_1precache(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz_poly_mul_precache_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz_poly_mul_precache_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_mullow_SS_precache(arg1,(long const *)arg2,arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mullow_1SS_1precache(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_mul_precache_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_mul_precache_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_mullow_SS_precache(arg1,(fmpz_poly_struct const (*))arg2,arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1mul_1SS_1precache(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_mul_precache_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_mul_precache_struct **)&jarg3; 
  fmpz_poly_mul_SS_precache(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqr_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_sqr_KS(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqr_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_sqr_KS(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqr_1karatsuba(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_sqr_karatsuba(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqr_1karatsuba(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_sqr_karatsuba(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqr_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_sqr_classical(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqr_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_sqr_classical(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqr(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_sqr(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_sqr(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqrlow_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_sqrlow_KS(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqrlow_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_sqrlow_KS(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqrlow_1karatsuba_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_sqrlow_karatsuba_n(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqrlow_1karatsuba_1n(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_sqrlow_karatsuba_n(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqrlow_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_sqrlow_classical(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqrlow_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_sqrlow_classical(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqrlow(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_sqrlow(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqrlow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_sqrlow(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pow_1multinomial(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_poly_pow_multinomial(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1pow_1multinomial(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_pow_multinomial(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pow_1binomial(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  _fmpz_poly_pow_binomial(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1pow_1binomial(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_pow_binomial(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pow_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_poly_pow_binexp(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1pow_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_pow_binexp(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pow_1addchains(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  int *arg4 = (int *) 0 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(int **)&jarg4; 
  arg5 = (int)jarg5; 
  _fmpz_poly_pow_addchains(arg1,(long const *)arg2,arg3,(int const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1pow_1addchains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_pow_addchains(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pow_1small(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_poly_pow_small(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_poly_pow(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_poly_pow(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pow_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_pow_trunc(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1pow_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_pow_trunc(arg1,(fmpz_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1shift_1left(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_shift_left(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1shift_1right(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_shift_right(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1shift_1left(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_shift_left(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1shift_1right(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_shift_right(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_12norm(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_2norm(arg1,(long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_12norm(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_2norm(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1poly_12norm_1normalised_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jlong jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_t)_fmpz_poly_2norm_normalised_bits((long const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1poly_1max_1limbs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (mp_limb_t)fmpz_poly_max_limbs((fmpz_poly_struct const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1max_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)fmpz_poly_max_bits((fmpz_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1height(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_height(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1gcd_1subresultant(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_gcd_subresultant(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1gcd_1subresultant(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_gcd_subresultant(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1gcd_1heuristic(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  result = (int)_fmpz_poly_gcd_heuristic(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1gcd_1heuristic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  result = (int)fmpz_poly_gcd_heuristic(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1gcd_1modular(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_gcd_modular(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1gcd_1modular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_gcd_modular(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1gcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_gcd(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1gcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_gcd(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1lcm(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_lcm(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1lcm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_lcm(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1resultant_1euclidean(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_resultant_euclidean(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1resultant_1euclidean(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_resultant_euclidean(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1resultant_1modular(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_resultant_modular(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1resultant_1modular(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_resultant_modular(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1resultant(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_resultant(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1resultant(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_resultant(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1resultant_1modular_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _fmpz_poly_resultant_modular_div(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,(long const (*))arg6,arg7);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1resultant_1modular_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  fmpz_poly_resultant_modular_div(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,(long const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1xgcd_1modular(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _fmpz_poly_xgcd_modular(arg1,arg2,arg3,(long const *)arg4,arg5,(long const *)arg6,arg7);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1xgcd_1modular(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  fmpz_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  arg5 = *(fmpz_poly_struct **)&jarg5; 
  fmpz_poly_xgcd_modular(arg1,arg2,arg3,(fmpz_poly_struct const (*))arg4,(fmpz_poly_struct const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1xgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _fmpz_poly_xgcd(arg1,arg2,arg3,(long const *)arg4,arg5,(long const *)arg6,arg7);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1xgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  fmpz_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  arg5 = *(fmpz_poly_struct **)&jarg5; 
  fmpz_poly_xgcd(arg1,arg2,arg3,(fmpz_poly_struct const (*))arg4,(fmpz_poly_struct const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1discriminant(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_discriminant(arg1,(long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1discriminant(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_discriminant(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1content(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_content(arg1,(long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1content(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_content(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1primitive_1part(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_primitive_part(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1primitive_1part(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_primitive_part(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1is_1squarefree(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)_fmpz_poly_is_squarefree((long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1is_1squarefree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (int)fmpz_poly_is_squarefree((fmpz_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1divrem_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jint jarg7) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  result = (int)_fmpz_poly_divrem_basecase(arg1,arg2,(long const *)arg3,arg4,(long const *)arg5,arg6,arg7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1divrem_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  fmpz_poly_divrem_basecase(arg1,arg2,(fmpz_poly_struct const (*))arg3,(fmpz_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1divrem_1divconquer_1recursive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jint jarg6, jint jarg7) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 = (fmpz *) 0 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  result = (int)_fmpz_poly_divrem_divconquer_recursive(arg1,arg2,arg3,(long const *)arg4,(long const *)arg5,arg6,arg7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1divrem_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jint jarg7) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  result = (int)_fmpz_poly_divrem_divconquer(arg1,arg2,(long const *)arg3,arg4,(long const *)arg5,arg6,arg7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1divrem_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  fmpz_poly_divrem_divconquer(arg1,arg2,(fmpz_poly_struct const (*))arg3,(fmpz_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1divrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jint jarg7) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  result = (int)_fmpz_poly_divrem(arg1,arg2,(long const *)arg3,arg4,(long const *)arg5,arg6,arg7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1divrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  fmpz_poly_divrem(arg1,arg2,(fmpz_poly_struct const (*))arg3,(fmpz_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1div_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jint jarg7) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  result = (int)_fmpz_poly_div_basecase(arg1,arg2,(long const *)arg3,arg4,(long const *)arg5,arg6,arg7);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1div_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_div_basecase(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1divremlow_1divconquer_1recursive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  int arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (int)jarg6; 
  result = (int)_fmpz_poly_divremlow_divconquer_recursive(arg1,arg2,(long const *)arg3,(long const *)arg4,arg5,arg6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1div_1divconquer_1recursive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  int arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (int)jarg6; 
  result = (int)_fmpz_poly_div_divconquer_recursive(arg1,arg2,(long const *)arg3,(long const *)arg4,arg5,arg6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1div_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  int arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (int)jarg6; 
  result = (int)_fmpz_poly_div_divconquer(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,arg6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1div_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_div_divconquer(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  int arg6 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (int)jarg6; 
  result = (int)_fmpz_poly_div(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,arg6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_div(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1preinvert(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_preinvert(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1preinvert(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_preinvert(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1div_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_div_preinv(arg1,(long const *)arg2,arg3,(long const *)arg4,(long const *)arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1div_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  fmpz_poly_div_preinv(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,(fmpz_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1divrem_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_divrem_preinv(arg1,arg2,arg3,(long const *)arg4,(long const *)arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1divrem_1preinv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  fmpz_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  arg5 = *(fmpz_poly_struct **)&jarg5; 
  fmpz_poly_divrem_preinv(arg1,arg2,(fmpz_poly_struct const (*))arg3,(fmpz_poly_struct const (*))arg4,(fmpz_poly_struct const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1powers_1precompute(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jlong jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  fmpz **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (fmpz **)_fmpz_poly_powers_precompute((long const *)arg1,arg2);
  *(fmpz ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1powers_1precompute(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_powers_precomp_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_powers_precomp_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_powers_precompute(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1powers_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  fmpz **arg1 = (fmpz **) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz ***)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _fmpz_poly_powers_clear(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1powers_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_poly_powers_precomp_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_powers_precomp_struct **)&jarg1; 
  fmpz_poly_powers_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1rem_1powers_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jint jarg4, jlong jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz **arg5 = (fmpz **) (fmpz **)0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(fmpz ***)&jarg5; 
  _fmpz_poly_rem_powers_precomp(arg1,arg2,(long const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1rem_1powers_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_powers_precomp_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_powers_precomp_struct **)&jarg4; 
  fmpz_poly_rem_powers_precomp(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,(fmpz_poly_powers_precomp_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1rem_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_rem_basecase(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1rem_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_rem_basecase(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1rem(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_rem(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1rem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_rem(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1div_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_div_root(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1div_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpz_poly_div_root(arg1,(long const *)arg2,arg3,(long const (*))arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1inv_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_inv_series_basecase(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1inv_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_inv_series_basecase(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1inv_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_inv_series_newton(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1inv_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_inv_series_newton(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1inv_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_inv_series(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1inv_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_inv_series(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1div_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_div_series_basecase(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1div_1series_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_div_series_divconquer(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1div_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_div_series(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1div_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_div_series_basecase(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1div_1series_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_div_series_divconquer(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1div_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_div_series(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1divides(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  result = (int)_fmpz_poly_divides(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1divides(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  result = (int)fmpz_poly_divides(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1remove(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  result = (mp_limb_signed_t)fmpz_poly_remove(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pseudo_1divrem_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  mp_limb_signed_t arg7 ;
  fmpz_preinvn_struct *arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg8_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = *(fmpz_preinvn_struct **)&jarg8; 
  _fmpz_poly_pseudo_divrem_basecase(arg1,arg2,arg3,(long const *)arg4,arg5,(long const *)arg6,arg7,(fmpz_preinvn_struct const (*))arg8);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1pseudo_1divrem_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  fmpz_poly_struct *arg4 ;
  fmpz_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  arg5 = *(fmpz_poly_struct **)&jarg5; 
  fmpz_poly_pseudo_divrem_basecase(arg1,arg2,arg3,(fmpz_poly_struct const (*))arg4,(fmpz_poly_struct const (*))arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pseudo_1divrem_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  mp_limb_signed_t arg7 ;
  fmpz_preinvn_struct *arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg8_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = *(fmpz_preinvn_struct **)&jarg8; 
  _fmpz_poly_pseudo_divrem_divconquer(arg1,arg2,arg3,(long const *)arg4,arg5,(long const *)arg6,arg7,(fmpz_preinvn_struct const (*))arg8);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1pseudo_1divrem_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  fmpz_poly_struct *arg4 ;
  fmpz_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  arg5 = *(fmpz_poly_struct **)&jarg5; 
  fmpz_poly_pseudo_divrem_divconquer(arg1,arg2,arg3,(fmpz_poly_struct const (*))arg4,(fmpz_poly_struct const (*))arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pseudo_1divrem_1cohen(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_pseudo_divrem_cohen(arg1,arg2,(long const *)arg3,arg4,(long const *)arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1pseudo_1divrem_1cohen(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  fmpz_poly_pseudo_divrem_cohen(arg1,arg2,(fmpz_poly_struct const (*))arg3,(fmpz_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pseudo_1rem_1cohen(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_pseudo_rem_cohen(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1pseudo_1rem_1cohen(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_pseudo_rem_cohen(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pseudo_1divrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7, jlong jarg8, jobject jarg8_) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  mp_limb_signed_t arg7 ;
  fmpz_preinvn_struct *arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg8_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = *(fmpz_preinvn_struct **)&jarg8; 
  _fmpz_poly_pseudo_divrem(arg1,arg2,arg3,(long const *)arg4,arg5,(long const *)arg6,arg7,(fmpz_preinvn_struct const (*))arg8);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1pseudo_1divrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  fmpz_poly_struct *arg4 ;
  fmpz_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  arg5 = *(fmpz_poly_struct **)&jarg5; 
  fmpz_poly_pseudo_divrem(arg1,arg2,arg3,(fmpz_poly_struct const (*))arg4,(fmpz_poly_struct const (*))arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pseudo_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  fmpz_preinvn_struct *arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(fmpz_preinvn_struct **)&jarg7; 
  _fmpz_poly_pseudo_div(arg1,arg2,(long const *)arg3,arg4,(long const *)arg5,arg6,(fmpz_preinvn_struct const (*))arg7);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1pseudo_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  fmpz_poly_struct *arg1 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  fmpz_poly_pseudo_div(arg1,arg2,(fmpz_poly_struct const (*))arg3,(fmpz_poly_struct const (*))arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1pseudo_1rem(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  fmpz_preinvn_struct *arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(fmpz_preinvn_struct **)&jarg7; 
  _fmpz_poly_pseudo_rem(arg1,arg2,(long const *)arg3,arg4,(long const *)arg5,arg6,(fmpz_preinvn_struct const (*))arg7);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1pseudo_1rem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  fmpz_poly_struct *arg1 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  fmpz_poly_pseudo_rem(arg1,arg2,(fmpz_poly_struct const (*))arg3,(fmpz_poly_struct const (*))arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1divlow_1smodp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  fmpz_poly_divlow_smodp(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,(long const (*))arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1divhigh_1smodp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  fmpz_poly_divhigh_smodp(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,(long const (*))arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1derivative(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_derivative(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1derivative(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_derivative(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1evaluate_1divconquer_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpz_poly_evaluate_divconquer_fmpz(arg1,(long const *)arg2,arg3,(long const (*))arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1evaluate_1divconquer_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_evaluate_divconquer_fmpz(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1evaluate_1horner_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpz_poly_evaluate_horner_fmpz(arg1,(long const *)arg2,arg3,(long const (*))arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1evaluate_1horner_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_evaluate_horner_fmpz(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1evaluate_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  _fmpz_poly_evaluate_fmpz(arg1,(long const *)arg2,arg3,(long const (*))arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1evaluate_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_evaluate_fmpz(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1evaluate_1horner_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpz_poly_evaluate_horner_fmpq(arg1,arg2,(long const *)arg3,arg4,(long const (*))arg5,(long const (*))arg6);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1evaluate_1horner_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpz_poly_evaluate_horner_fmpq(arg1,(fmpz_poly_struct const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1evaluate_1divconquer_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpz_poly_evaluate_divconquer_fmpq(arg1,arg2,(long const *)arg3,arg4,(long const (*))arg5,(long const (*))arg6);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1evaluate_1divconquer_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpz_poly_evaluate_divconquer_fmpq(arg1,(fmpz_poly_struct const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1evaluate_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpz_poly_evaluate_fmpq(arg1,arg2,(long const *)arg3,arg4,(long const (*))arg5,(long const (*))arg6);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1evaluate_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpz_poly_evaluate_fmpq(arg1,(fmpz_poly_struct const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1evaluate_1mpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  __mpq_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  __mpq_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(__mpq_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(__mpq_struct **)&jarg3; 
  fmpz_poly_evaluate_mpq(arg1,(fmpz_poly_struct const (*))arg2,(__mpq_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1evaluate_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (mp_limb_t)_fmpz_poly_evaluate_mod((long const *)arg1,arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1poly_1evaluate_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)fmpz_poly_evaluate_mod((fmpz_poly_struct const (*))arg1,arg2,arg3);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1evaluate_1horner_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)_fmpz_poly_evaluate_horner_d((long const *)arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fmpz_1poly_1evaluate_1horner_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jdouble jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  double arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  result = (double)fmpz_poly_evaluate_horner_d((fmpz_poly_struct const (*))arg1,arg2);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1evaluate_1horner_1d_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jdouble jarg4) {
  jdouble jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  double arg4 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (double)jarg4; 
  result = (double)_fmpz_poly_evaluate_horner_d_2exp(arg1,(long const *)arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fmpz_1poly_1evaluate_1horner_1d_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jdouble jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz_poly_struct *arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (double)jarg3; 
  result = (double)fmpz_poly_evaluate_horner_d_2exp(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1evaluate_1horner_1d_12exp2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jdouble jarg4, jint jarg5, jlong jarg6) {
  jdouble jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  double arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  result = (double)_fmpz_poly_evaluate_horner_d_2exp2(arg1,(long const *)arg2,arg3,arg4,arg5,arg6);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_fmpz_1poly_1evaluate_1horner_1d_12exp2(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jdouble jarg3, jint jarg4, jlong jarg5) {
  jdouble jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz_poly_struct *arg2 ;
  double arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_t arg5 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (double)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (double)fmpz_poly_evaluate_horner_d_2exp2(arg1,(fmpz_poly_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1compose_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_compose_horner(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1compose_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_compose_horner(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1compose_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_compose_divconquer(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1compose_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_compose_divconquer(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1compose(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpz_poly_compose(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1compose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_compose(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1taylor_1shift_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_taylor_shift_horner(arg1,(long const (*))arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1taylor_1shift_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_taylor_shift_horner(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1taylor_1shift_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_taylor_shift_divconquer(arg1,(long const (*))arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1taylor_1shift_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_taylor_shift_divconquer(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1taylor_1shift_1multi_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_taylor_shift_multi_mod(arg1,(long const (*))arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1taylor_1shift_1multi_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_taylor_shift_multi_mod(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1taylor_1shift(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_taylor_shift(arg1,(long const (*))arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1taylor_1shift(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_taylor_shift(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1compose_1series_1brent_1kung(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_compose_series_brent_kung(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1compose_1series_1brent_1kung(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_compose_series_brent_kung(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1compose_1series_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_compose_series_horner(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1compose_1series_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_compose_series_horner(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1compose_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpz_poly_compose_series(arg1,(long const *)arg2,arg3,(long const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1compose_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_compose_series(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1revert_1series_1lagrange(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_revert_series_lagrange(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1revert_1series_1lagrange(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_revert_series_lagrange(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1revert_1series_1lagrange_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_revert_series_lagrange_fast(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1revert_1series_1lagrange_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_revert_series_lagrange_fast(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1revert_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_revert_series_newton(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1revert_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_revert_series_newton(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1revert_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_revert_series(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1revert_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_revert_series(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqrtrem_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)_fmpz_poly_sqrtrem_classical(arg1,arg2,(long const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqrtrem_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  result = (int)fmpz_poly_sqrtrem_classical(arg1,arg2,(fmpz_poly_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqrtrem_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  result = (int)_fmpz_poly_sqrtrem_divconquer(arg1,arg2,(long const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqrtrem_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  result = (int)fmpz_poly_sqrtrem_divconquer(arg1,arg2,(fmpz_poly_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqrt_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)_fmpz_poly_sqrt_classical(arg1,(long const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqrt_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  result = (int)fmpz_poly_sqrt_classical(arg1,(fmpz_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqrt_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  result = (int)_fmpz_poly_sqrt_divconquer(arg1,(long const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqrt_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  result = (int)fmpz_poly_sqrt_divconquer(arg1,(fmpz_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqrt_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_fmpz_poly_sqrt_KS(arg1,(long const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqrt_1KS(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  result = (int)fmpz_poly_sqrt_KS(arg1,(fmpz_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_fmpz_poly_sqrt(arg1,(long const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqrt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  result = (int)fmpz_poly_sqrt(arg1,(fmpz_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1sqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)_fmpz_poly_sqrt_series(arg1,(long const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)fmpz_poly_sqrt_series(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1power_1sums_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_power_sums_naive(arg1,(long const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1power_1sums_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_power_sums_naive(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1power_1sums(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_power_sums(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1power_1sums_1to_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_power_sums_to_poly(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1power_1sums_1to_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_power_sums_to_poly(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1signature(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_signature(arg1,arg2,(long const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1signature(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_signature(arg1,arg2,(fmpz_poly_struct const (*))arg3);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_fmpz_poly_fprint(arg1,(long const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  result = (int)fmpz_poly_fprint(arg1,(fmpz_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1fprint_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jstring jarg4) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  char *arg4 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return 0;
  }
  result = (int)_fmpz_poly_fprint_pretty(arg1,(long const *)arg2,arg3,(char const *)arg4);
  jresult = (jint)result; 
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1fprint_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jstring jarg3) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz_poly_struct *arg2 ;
  char *arg3 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (int)fmpz_poly_fprint_pretty(arg1,(fmpz_poly_struct const (*))arg2,(char const *)arg3);
  jresult = (jint)result; 
  
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1print_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jstring jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  char *arg3 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (int)_fmpz_poly_print_pretty((long const *)arg1,arg2,(char const *)arg3);
  jresult = (jint)result; 
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)_fmpz_poly_print((long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (int)fmpz_poly_print((fmpz_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1print_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)fmpz_poly_print_pretty((fmpz_poly_struct const (*))arg1,(char const *)arg2);
  jresult = (jint)result; 
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1fread(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  result = (int)fmpz_poly_fread(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1fread_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz_poly_struct *arg2 ;
  char **arg3 = (char **) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(char ***)&jarg3; 
  result = (int)fmpz_poly_fread_pretty(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1read(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (int)fmpz_poly_read(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1read_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  char **arg2 = (char **) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(char ***)&jarg2; 
  result = (int)fmpz_poly_read_pretty(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1debug(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  fmpz_poly_debug((fmpz_poly_struct const (*))arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1get_1nmod_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_get_nmod_poly(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1set_1nmod_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  fmpz_poly_set_nmod_poly(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1set_1nmod_1poly_1unsigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  fmpz_poly_set_nmod_poly_unsigned(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1CRT_1ui_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jlong jarg8, jlong jarg9, jlong jarg10, jint jarg11) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  mp_limb_t arg7 ;
  mp_limb_t arg8 ;
  fmpz *arg9 ;
  mp_limb_t arg10 ;
  int arg11 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_t)jarg7; 
  arg8 = (mp_limb_t)jarg8; 
  arg9 = *(long **)&jarg9; 
  arg10 = (mp_limb_t)jarg10; 
  arg11 = (int)jarg11; 
  _fmpz_poly_CRT_ui_precomp(arg1,(long const *)arg2,arg3,(long const (*))arg4,(unsigned long const *)arg5,arg6,arg7,arg8,arg9,arg10,arg11);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1CRT_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jlong jarg8, jint jarg9) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  mp_srcptr arg5 = (mp_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  mp_limb_t arg7 ;
  mp_limb_t arg8 ;
  int arg9 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(mp_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_t)jarg7; 
  arg8 = (mp_limb_t)jarg8; 
  arg9 = (int)jarg9; 
  _fmpz_poly_CRT_ui(arg1,(long const *)arg2,arg3,(long const (*))arg4,(unsigned long const *)arg5,arg6,arg7,arg8,arg9);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1CRT_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  nmod_poly_struct *arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(nmod_poly_struct **)&jarg4; 
  arg5 = (int)jarg5; 
  fmpz_poly_CRT_ui(arg1,(fmpz_poly_struct const (*))arg2,(long const (*))arg3,(nmod_poly_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1product_1roots_1fmpz_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_product_roots_fmpz_vec(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1product_1roots_1fmpz_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_product_roots_fmpz_vec(arg1,(long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1product_1roots_1fmpq_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpq *arg2 = (fmpq *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_product_roots_fmpq_vec(arg1,(fmpq const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1product_1roots_1fmpq_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpq *arg2 = (fmpq *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_product_roots_fmpq_vec(arg1,(fmpq const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1monomial_1to_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_monomial_to_newton(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1newton_1to_1monomial(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_newton_to_monomial(arg1,(long const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1evaluate_1fmpz_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_evaluate_fmpz_vec(arg1,(fmpz_poly_struct const (*))arg2,(long const *)arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1interpolate_1fmpz_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz_poly_struct *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_interpolate_fmpz_vec(arg1,(long const *)arg2,(long const *)arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1hensel_1build_1tree(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz_poly_t *arg2 = (fmpz_poly_t *) 0 ;
  fmpz_poly_t *arg3 = (fmpz_poly_t *) 0 ;
  nmod_poly_factor_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(fmpz_poly_t **)&jarg2; 
  arg3 = *(fmpz_poly_t **)&jarg3; 
  arg4 = *(nmod_poly_factor_struct **)&jarg4; 
  fmpz_poly_hensel_build_tree(arg1,(fmpz_poly_struct (*)[1])arg2,(fmpz_poly_struct (*)[1])arg3,(nmod_poly_factor_struct const (*))arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1hensel_1lift(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_, jlong jarg7, jobject jarg7_, jlong jarg8, jobject jarg8_, jlong jarg9, jobject jarg9_, jlong jarg10, jlong jarg11) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  fmpz_poly_struct *arg5 ;
  fmpz_poly_struct *arg6 ;
  fmpz_poly_struct *arg7 ;
  fmpz_poly_struct *arg8 ;
  fmpz_poly_struct *arg9 ;
  fmpz *arg10 ;
  fmpz *arg11 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  (void)jarg6_;
  (void)jarg7_;
  (void)jarg8_;
  (void)jarg9_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  arg5 = *(fmpz_poly_struct **)&jarg5; 
  arg6 = *(fmpz_poly_struct **)&jarg6; 
  arg7 = *(fmpz_poly_struct **)&jarg7; 
  arg8 = *(fmpz_poly_struct **)&jarg8; 
  arg9 = *(fmpz_poly_struct **)&jarg9; 
  arg10 = *(long **)&jarg10; 
  arg11 = *(long **)&jarg11; 
  fmpz_poly_hensel_lift(arg1,arg2,arg3,arg4,(fmpz_poly_struct const (*))arg5,(fmpz_poly_struct const (*))arg6,(fmpz_poly_struct const (*))arg7,(fmpz_poly_struct const (*))arg8,(fmpz_poly_struct const (*))arg9,(long const (*))arg10,(long const (*))arg11);
  
  
  
  
  
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1hensel_1lift_1without_1inverse(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jlong jarg9, jint jarg10, jlong jarg11, jint jarg12, jlong jarg13, jlong jarg14) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  fmpz *arg7 = (fmpz *) 0 ;
  mp_limb_signed_t arg8 ;
  fmpz *arg9 = (fmpz *) 0 ;
  mp_limb_signed_t arg10 ;
  fmpz *arg11 = (fmpz *) 0 ;
  mp_limb_signed_t arg12 ;
  fmpz *arg13 ;
  fmpz *arg14 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(fmpz **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = *(fmpz **)&jarg9; 
  arg10 = (mp_limb_signed_t)jarg10; 
  arg11 = *(fmpz **)&jarg11; 
  arg12 = (mp_limb_signed_t)jarg12; 
  arg13 = *(long **)&jarg13; 
  arg14 = *(long **)&jarg14; 
  _fmpz_poly_hensel_lift_without_inverse(arg1,arg2,(long const *)arg3,arg4,(long const *)arg5,arg6,(long const *)arg7,arg8,(long const *)arg9,arg10,(long const *)arg11,arg12,(long const (*))arg13,(long const (*))arg14);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1hensel_1lift_1without_1inverse(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_, jlong jarg7, jobject jarg7_, jlong jarg8, jlong jarg9) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  fmpz_poly_struct *arg5 ;
  fmpz_poly_struct *arg6 ;
  fmpz_poly_struct *arg7 ;
  fmpz *arg8 ;
  fmpz *arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  (void)jarg6_;
  (void)jarg7_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  arg5 = *(fmpz_poly_struct **)&jarg5; 
  arg6 = *(fmpz_poly_struct **)&jarg6; 
  arg7 = *(fmpz_poly_struct **)&jarg7; 
  arg8 = *(long **)&jarg8; 
  arg9 = *(long **)&jarg9; 
  fmpz_poly_hensel_lift_without_inverse(arg1,arg2,(fmpz_poly_struct const (*))arg3,(fmpz_poly_struct const (*))arg4,(fmpz_poly_struct const (*))arg5,(fmpz_poly_struct const (*))arg6,(fmpz_poly_struct const (*))arg7,(long const (*))arg8,(long const (*))arg9);
  
  
  
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1hensel_1lift_1only_1inverse(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6, jlong jarg7, jint jarg8, jlong jarg9, jint jarg10, jlong jarg11, jlong jarg12) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  fmpz *arg7 = (fmpz *) 0 ;
  mp_limb_signed_t arg8 ;
  fmpz *arg9 = (fmpz *) 0 ;
  mp_limb_signed_t arg10 ;
  fmpz *arg11 ;
  fmpz *arg12 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(fmpz **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = *(fmpz **)&jarg9; 
  arg10 = (mp_limb_signed_t)jarg10; 
  arg11 = *(long **)&jarg11; 
  arg12 = *(long **)&jarg12; 
  _fmpz_poly_hensel_lift_only_inverse(arg1,arg2,(long const *)arg3,arg4,(long const *)arg5,arg6,(long const *)arg7,arg8,(long const *)arg9,arg10,(long const (*))arg11,(long const (*))arg12);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1hensel_1lift_1only_1inverse(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_, jlong jarg7, jlong jarg8) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  fmpz_poly_struct *arg5 ;
  fmpz_poly_struct *arg6 ;
  fmpz *arg7 ;
  fmpz *arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  (void)jarg6_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  arg5 = *(fmpz_poly_struct **)&jarg5; 
  arg6 = *(fmpz_poly_struct **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = *(long **)&jarg8; 
  fmpz_poly_hensel_lift_only_inverse(arg1,arg2,(fmpz_poly_struct const (*))arg3,(fmpz_poly_struct const (*))arg4,(fmpz_poly_struct const (*))arg5,(fmpz_poly_struct const (*))arg6,(long const (*))arg7,(long const (*))arg8);
  
  
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1hensel_1lift_1tree_1recursive(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jlong jarg7, jlong jarg8) {
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz_poly_t *arg2 = (fmpz_poly_t *) 0 ;
  fmpz_poly_t *arg3 = (fmpz_poly_t *) 0 ;
  fmpz_poly_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  fmpz *arg7 ;
  fmpz *arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(fmpz_poly_t **)&jarg2; 
  arg3 = *(fmpz_poly_t **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = *(long **)&jarg8; 
  fmpz_poly_hensel_lift_tree_recursive(arg1,(fmpz_poly_struct (*)[1])arg2,(fmpz_poly_struct (*)[1])arg3,arg4,arg5,arg6,(long const (*))arg7,(long const (*))arg8);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1hensel_1lift_1tree(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jlong jarg6, jint jarg7, jint jarg8, jint jarg9) {
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz_poly_t *arg2 = (fmpz_poly_t *) 0 ;
  fmpz_poly_t *arg3 = (fmpz_poly_t *) 0 ;
  fmpz_poly_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(fmpz_poly_t **)&jarg2; 
  arg3 = *(fmpz_poly_t **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  fmpz_poly_hensel_lift_tree(arg1,(fmpz_poly_struct (*)[1])arg2,(fmpz_poly_struct (*)[1])arg3,arg4,arg5,(long const (*))arg6,arg7,arg8,arg9);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1hensel_1start_1lift(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_, jint jarg7) {
  jint jresult = 0 ;
  fmpz_poly_factor_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  fmpz_poly_t *arg3 = (fmpz_poly_t *) 0 ;
  fmpz_poly_t *arg4 = (fmpz_poly_t *) 0 ;
  fmpz_poly_struct *arg5 ;
  nmod_poly_factor_struct *arg6 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  (void)jarg6_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = *(fmpz_poly_t **)&jarg3; 
  arg4 = *(fmpz_poly_t **)&jarg4; 
  arg5 = *(fmpz_poly_struct **)&jarg5; 
  arg6 = *(nmod_poly_factor_struct **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  result = (mp_limb_signed_t)_fmpz_poly_hensel_start_lift(arg1,arg2,(fmpz_poly_struct (*)[1])arg3,(fmpz_poly_struct (*)[1])arg4,(fmpz_poly_struct const (*))arg5,(nmod_poly_factor_struct const (*))arg6,arg7);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1hensel_1continue_1lift(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jint jarg6, jint jarg7, jint jarg8, jlong jarg9) {
  jint jresult = 0 ;
  fmpz_poly_factor_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  fmpz_poly_t *arg3 = (fmpz_poly_t *) 0 ;
  fmpz_poly_t *arg4 = (fmpz_poly_t *) 0 ;
  fmpz_poly_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  fmpz *arg9 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = *(fmpz_poly_t **)&jarg3; 
  arg4 = *(fmpz_poly_t **)&jarg4; 
  arg5 = *(fmpz_poly_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = *(long **)&jarg9; 
  result = (mp_limb_signed_t)_fmpz_poly_hensel_continue_lift(arg1,arg2,(fmpz_poly_struct (*)[1])arg3,(fmpz_poly_struct (*)[1])arg4,(fmpz_poly_struct const (*))arg5,arg6,arg7,arg8,(long const (*))arg9);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1hensel_1lift_1once(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpz_poly_factor_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  nmod_poly_factor_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(nmod_poly_factor_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_poly_hensel_lift_once(arg1,(fmpz_poly_struct const (*))arg2,(nmod_poly_factor_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1mul_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  __mpz_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(__mpz_struct **)&jarg3; 
  fmpz_poly_scalar_mul_mpz(arg1,(fmpz_poly_struct const (*))arg2,(__mpz_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1divexact_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  __mpz_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(__mpz_struct **)&jarg3; 
  fmpz_poly_scalar_divexact_mpz(arg1,(fmpz_poly_struct const (*))arg2,(__mpz_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1scalar_1fdiv_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  __mpz_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(__mpz_struct **)&jarg3; 
  fmpz_poly_scalar_fdiv_mpz(arg1,(fmpz_poly_struct const (*))arg2,(__mpz_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1set_1coeff_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  __mpz_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(__mpz_struct **)&jarg3; 
  fmpz_poly_set_coeff_mpz(arg1,arg2,(__mpz_struct const (*))arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1get_1coeff_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  __mpz_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__mpz_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_get_coeff_mpz(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1bound_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_bound_roots(arg1,(long const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1bound_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_bound_roots(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1num_1real_1roots_1sturm(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpz_poly_num_real_roots_sturm(arg1,arg2,(long const *)arg3,arg4);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1num_1real_1roots_1sturm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)fmpz_poly_num_real_roots_sturm((fmpz_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1num_1real_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_signed_t)_fmpz_poly_num_real_roots((long const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1num_1real_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)fmpz_poly_num_real_roots((fmpz_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1CLD_1bound(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_CLD_bound(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1cyclotomic(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_t arg2 ;
  mp_ptr arg3 = (mp_ptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(mp_ptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  _fmpz_poly_cyclotomic(arg1,arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1cyclotomic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_poly_cyclotomic(arg1,arg2);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1is_1cyclotomic(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jlong jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (mp_limb_t)_fmpz_poly_is_cyclotomic((long const *)arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1poly_1is_1cyclotomic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  result = (mp_limb_t)fmpz_poly_is_cyclotomic((fmpz_poly_struct const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1cos_1minpoly(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  _fmpz_poly_cos_minpoly(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1cos_1minpoly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_poly_cos_minpoly(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1swinnerton_1dyer(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  _fmpz_poly_swinnerton_dyer(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1swinnerton_1dyer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_poly_swinnerton_dyer(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1chebyshev_1t(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  _fmpz_poly_chebyshev_t(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1chebyshev_1t(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_poly_chebyshev_t(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1chebyshev_1u(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  _fmpz_poly_chebyshev_u(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1chebyshev_1u(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_poly_chebyshev_u(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1legendre_1pt(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  _fmpz_poly_legendre_pt(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1legendre_1pt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_poly_legendre_pt(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1hermite_1h(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  _fmpz_poly_hermite_h(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1hermite_1h(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_poly_hermite_h(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1hermite_1he(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  _fmpz_poly_hermite_he(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1hermite_1he(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_poly_hermite_he(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1fibonacci(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  _fmpz_poly_fibonacci(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1fibonacci(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpz_poly_fibonacci(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1eta_1qexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_eta_qexp(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1eta_1qexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_eta_qexp(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1theta_1qexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_theta_qexp(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1theta_1qexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_theta_qexp(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1add_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_add_si(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sub_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_sub_si(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1si_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_si_sub(arg1,arg2,(fmpz_poly_struct const (*))arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1add_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_add_fmpz(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1sub_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_poly_sub_fmpz(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1fmpz_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  fmpz_poly_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  fmpz_poly_fmpz_sub(arg1,arg2,(fmpz_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_FLT_1ROUNDS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_D_1BITS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(53);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_D_1EPS_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(2.2204460492503130808e-16);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_D_1INF_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)(1e10000);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_D_1NAN_1get(JNIEnv *jenv, jclass jcls) {
  jdouble jresult = 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  result = (double)((1e10000-1e10000));
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_d_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jdouble jresult = 0 ;
  flint_rand_s *arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  result = (double)d_randtest(arg1);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_d_1randtest_1signed(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jdouble jresult = 0 ;
  flint_rand_s *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (double)d_randtest_signed(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_d_1randtest_1special(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jdouble jresult = 0 ;
  flint_rand_s *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(flint_rand_s **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (double)d_randtest_special(arg1,arg2,arg3);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_d_1polyval(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jdouble jarg3) {
  jdouble jresult = 0 ;
  double *arg1 = (double *) 0 ;
  int arg2 ;
  double arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = (int)jarg2; 
  arg3 = (double)jarg3; 
  result = (double)d_polyval((double const *)arg1,arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_d_1lambertw(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)d_lambertw(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_d_1is_1nan(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jint jresult = 0 ;
  double arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (int)d_is_nan(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_d_1log2(JNIEnv *jenv, jclass jcls, jdouble jarg1) {
  jdouble jresult = 0 ;
  double arg1 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (double)jarg1; 
  result = (double)d_log2(arg1);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1d_1vec_1init(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  mp_limb_signed_t arg1 ;
  double *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  result = (double *)_d_vec_init(arg1);
  *(double **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1d_1vec_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  double *arg1 = (double *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  _d_vec_clear(arg1);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1d_1vec_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  double *arg1 = (double *) 0 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(double **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _d_vec_randtest(arg1,arg2,arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1d_1vec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  double *arg1 = (double *) 0 ;
  double *arg2 = (double *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = *(double **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _d_vec_set(arg1,(double const *)arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1d_1vec_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  double *arg1 = (double *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _d_vec_zero(arg1,arg2);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1d_1vec_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  double *arg1 = (double *) 0 ;
  double *arg2 = (double *) 0 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = *(double **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_d_vec_equal((double const *)arg1,(double const *)arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1d_1vec_1approx_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jdouble jarg4) {
  jint jresult = 0 ;
  double *arg1 = (double *) 0 ;
  double *arg2 = (double *) 0 ;
  mp_limb_signed_t arg3 ;
  double arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = *(double **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (double)jarg4; 
  result = (int)_d_vec_approx_equal((double const *)arg1,(double const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1d_1vec_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jint jresult = 0 ;
  double *arg1 = (double *) 0 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)_d_vec_is_zero((double const *)arg1,arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1d_1vec_1is_1approx_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jdouble jarg3) {
  jint jresult = 0 ;
  double *arg1 = (double *) 0 ;
  mp_limb_signed_t arg2 ;
  double arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (double)jarg3; 
  result = (int)_d_vec_is_approx_zero((double const *)arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1d_1vec_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  double *arg1 = (double *) 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = *(double **)&jarg2; 
  arg3 = *(double **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _d_vec_add(arg1,(double const *)arg2,(double const *)arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1d_1vec_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  double *arg1 = (double *) 0 ;
  double *arg2 = (double *) 0 ;
  double *arg3 = (double *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = *(double **)&jarg2; 
  arg3 = *(double **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _d_vec_sub(arg1,(double const *)arg2,(double const *)arg3,arg4);
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1d_1vec_1dot(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jdouble jresult = 0 ;
  double *arg1 = (double *) 0 ;
  double *arg2 = (double *) 0 ;
  mp_limb_signed_t arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = *(double **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (double)_d_vec_dot((double const *)arg1,(double const *)arg2,arg3);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1d_1vec_1norm(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  jdouble jresult = 0 ;
  double *arg1 = (double *) 0 ;
  mp_limb_signed_t arg2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (double)_d_vec_norm((double const *)arg1,arg2);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1d_1vec_1dot_1heuristic(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  jdouble jresult = 0 ;
  double *arg1 = (double *) 0 ;
  double *arg2 = (double *) 0 ;
  mp_limb_signed_t arg3 ;
  double *arg4 = (double *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = *(double **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(double **)&jarg4; 
  result = (double)_d_vec_dot_heuristic((double const *)arg1,(double const *)arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI__1d_1vec_1dot_1thrice(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4) {
  jdouble jresult = 0 ;
  double *arg1 = (double *) 0 ;
  double *arg2 = (double *) 0 ;
  mp_limb_signed_t arg3 ;
  double *arg4 = (double *) 0 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(double **)&jarg1; 
  arg2 = *(double **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(double **)&jarg4; 
  result = (double)_d_vec_dot_thrice((double const *)arg1,(double const *)arg2,arg3,arg4);
  jresult = (jdouble)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1struct_1entries_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  d_mat_struct *arg1 = (d_mat_struct *) 0 ;
  double *arg2 = (double *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(double **)&jarg2; 
  if (arg1) (arg1)->entries = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_d_1mat_1struct_1entries_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  d_mat_struct *arg1 = (d_mat_struct *) 0 ;
  double *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  result = (double *) ((arg1)->entries);
  *(double **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1struct_1r_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  d_mat_struct *arg1 = (d_mat_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_d_1mat_1struct_1r_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  d_mat_struct *arg1 = (d_mat_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->r);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1struct_1c_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  d_mat_struct *arg1 = (d_mat_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->c = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_d_1mat_1struct_1c_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  d_mat_struct *arg1 = (d_mat_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->c);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1struct_1rows_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  d_mat_struct *arg1 = (d_mat_struct *) 0 ;
  double **arg2 = (double **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(double ***)&jarg2; 
  if (arg1) (arg1)->rows = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_d_1mat_1struct_1rows_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  d_mat_struct *arg1 = (d_mat_struct *) 0 ;
  double **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  result = (double **) ((arg1)->rows);
  *(double ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1d_1mat_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  d_mat_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (d_mat_struct *)new d_mat_struct();
  *(d_mat_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1d_1mat_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  d_mat_struct *arg1 = (d_mat_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(d_mat_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_d_1mat_1entry_1ptr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  d_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  double *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (double *)d_mat_entry_ptr((d_mat_struct const (*))arg1,arg2,arg3);
  *(double **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_d_1mat_1get_1entry(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jdouble jresult = 0 ;
  d_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (double)d_mat_get_entry((d_mat_struct const (*))arg1,arg2,arg3);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  d_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  d_mat_init(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  d_mat_struct *arg1 ;
  d_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(d_mat_struct **)&jarg2; 
  d_mat_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  d_mat_struct *arg1 ;
  d_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(d_mat_struct **)&jarg2; 
  d_mat_set(arg1,(d_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  d_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  d_mat_clear(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_d_1mat_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  d_mat_struct *arg1 ;
  d_mat_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(d_mat_struct **)&jarg2; 
  result = (int)d_mat_equal((d_mat_struct const (*))arg1,(d_mat_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_d_1mat_1approx_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  jint jresult = 0 ;
  d_mat_struct *arg1 ;
  d_mat_struct *arg2 ;
  double arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(d_mat_struct **)&jarg2; 
  arg3 = (double)jarg3; 
  result = (int)d_mat_approx_equal((d_mat_struct const (*))arg1,(d_mat_struct const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_d_1mat_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  d_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  result = (int)d_mat_is_zero((d_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_d_1mat_1is_1approx_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  jint jresult = 0 ;
  d_mat_struct *arg1 ;
  double arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  result = (int)d_mat_is_approx_zero((d_mat_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_d_1mat_1is_1empty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  d_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  result = (int)d_mat_is_empty((d_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_d_1mat_1is_1square(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  d_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  result = (int)d_mat_is_square((d_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  d_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  d_mat_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  d_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  d_mat_one(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  d_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  d_mat_print((d_mat_struct const (*))arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  d_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  d_mat_randtest(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1transpose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  d_mat_struct *arg1 ;
  d_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(d_mat_struct **)&jarg2; 
  d_mat_transpose(arg1,(d_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1mul_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  d_mat_struct *arg1 ;
  d_mat_struct *arg2 ;
  d_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(d_mat_struct **)&jarg2; 
  arg3 = *(d_mat_struct **)&jarg3; 
  d_mat_mul_classical(arg1,(d_mat_struct const (*))arg2,(d_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1swap_1rows(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  d_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  d_mat_swap_rows(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1gso(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  d_mat_struct *arg1 ;
  d_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(d_mat_struct **)&jarg2; 
  d_mat_gso(arg1,(d_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_d_1mat_1qr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  d_mat_struct *arg1 ;
  d_mat_struct *arg2 ;
  d_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(d_mat_struct **)&jarg2; 
  arg3 = *(d_mat_struct **)&jarg3; 
  d_mat_qr(arg1,arg2,(d_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1struct_1entries_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_mat_struct *arg1 = (mpf_mat_struct *) 0 ;
  mpf *arg2 = (mpf *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = *(mpf **)&jarg2; 
  if (arg1) (arg1)->entries = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mpf_1mat_1struct_1entries_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mpf_mat_struct *arg1 = (mpf_mat_struct *) 0 ;
  mpf *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  result = (mpf *) ((arg1)->entries);
  *(mpf **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1struct_1r_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpf_mat_struct *arg1 = (mpf_mat_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpf_1mat_1struct_1r_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpf_mat_struct *arg1 = (mpf_mat_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->r);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1struct_1c_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  mpf_mat_struct *arg1 = (mpf_mat_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->c = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpf_1mat_1struct_1c_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpf_mat_struct *arg1 = (mpf_mat_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->c);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1struct_1prec_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpf_mat_struct *arg1 = (mpf_mat_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->prec = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mpf_1mat_1struct_1prec_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mpf_mat_struct *arg1 = (mpf_mat_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->prec);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1struct_1rows_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mpf_mat_struct *arg1 = (mpf_mat_struct *) 0 ;
  mpf **arg2 = (mpf **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = *(mpf ***)&jarg2; 
  if (arg1) (arg1)->rows = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mpf_1mat_1struct_1rows_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mpf_mat_struct *arg1 = (mpf_mat_struct *) 0 ;
  mpf **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  result = (mpf **) ((arg1)->rows);
  *(mpf ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1mpf_1mat_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mpf_mat_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mpf_mat_struct *)new mpf_mat_struct();
  *(mpf_mat_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1mpf_1mat_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mpf_mat_struct *arg1 = (mpf_mat_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mpf_1mat_1entry(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  mpf_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  mpf *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (mpf *)mpf_mat_entry((mpf_mat_struct const (*))arg1,arg2,arg3);
  *(mpf **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jlong jarg4) {
  mpf_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  mpf_mat_init(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_mat_struct *arg1 ;
  mpf_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = *(mpf_mat_struct **)&jarg2; 
  mpf_mat_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_mat_struct *arg1 ;
  mpf_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = *(mpf_mat_struct **)&jarg2; 
  mpf_mat_set(arg1,(mpf_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpf_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  mpf_mat_clear(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpf_1mat_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  mpf_mat_struct *arg1 ;
  mpf_mat_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = *(mpf_mat_struct **)&jarg2; 
  result = (int)mpf_mat_equal((mpf_mat_struct const (*))arg1,(mpf_mat_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpf_1mat_1approx_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  mpf_mat_struct *arg1 ;
  mpf_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = *(mpf_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (int)mpf_mat_approx_equal((mpf_mat_struct const (*))arg1,(mpf_mat_struct const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpf_1mat_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpf_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  result = (int)mpf_mat_is_zero((mpf_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpf_1mat_1is_1empty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpf_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  result = (int)mpf_mat_is_empty((mpf_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_mpf_1mat_1is_1square(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  mpf_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  result = (int)mpf_mat_is_square((mpf_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpf_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  mpf_mat_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpf_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  mpf_mat_one(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  mpf_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  mpf_mat_print((mpf_mat_struct const (*))arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mpf_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mpf_mat_randtest(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpf_mat_struct *arg1 ;
  mpf_mat_struct *arg2 ;
  mpf_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = *(mpf_mat_struct **)&jarg2; 
  arg3 = *(mpf_mat_struct **)&jarg3; 
  mpf_mat_mul(arg1,(mpf_mat_struct const (*))arg2,(mpf_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1swap_1rows(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  mpf_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  mpf_mat_swap_rows(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1gso(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_mat_struct *arg1 ;
  mpf_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = *(mpf_mat_struct **)&jarg2; 
  mpf_mat_gso(arg1,(mpf_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mpf_1mat_1qr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mpf_mat_struct *arg1 ;
  mpf_mat_struct *arg2 ;
  mpf_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = *(mpf_mat_struct **)&jarg2; 
  arg3 = *(mpf_mat_struct **)&jarg3; 
  mpf_mat_qr(arg1,arg2,(mpf_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1struct_1entries_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_mat_struct *arg1 = (fmpz_mat_struct *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  if (arg1) (arg1)->entries = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1mat_1struct_1entries_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_mat_struct *arg1 = (fmpz_mat_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->entries);
  *(fmpz **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1struct_1r_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_mat_struct *arg1 = (fmpz_mat_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->r = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1struct_1r_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 = (fmpz_mat_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->r);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1struct_1c_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_mat_struct *arg1 = (fmpz_mat_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->c = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1struct_1c_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 = (fmpz_mat_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->c);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1struct_1rows_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_mat_struct *arg1 = (fmpz_mat_struct *) 0 ;
  fmpz **arg2 = (fmpz **) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz ***)&jarg2; 
  if (arg1) (arg1)->rows = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1mat_1struct_1rows_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpz_mat_struct *arg1 = (fmpz_mat_struct *) 0 ;
  fmpz **result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (fmpz **) ((arg1)->rows);
  *(fmpz ***)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpz_1mat_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpz_mat_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpz_mat_struct *)new fmpz_mat_struct();
  *(fmpz_mat_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpz_1mat_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpz_mat_struct *arg1 = (fmpz_mat_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_col_1hash_1t_1col_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  col_hash_t *arg1 = (col_hash_t *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(col_hash_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->col = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_col_1hash_1t_1col_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  col_hash_t *arg1 = (col_hash_t *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(col_hash_t **)&jarg1; 
  result = (mp_limb_t) ((arg1)->col);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_col_1hash_1t_1hash_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  col_hash_t *arg1 = (col_hash_t *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(col_hash_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->hash = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_col_1hash_1t_1hash_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  col_hash_t *arg1 = (col_hash_t *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(col_hash_t **)&jarg1; 
  result = (mp_limb_t) ((arg1)->hash);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1col_1hash_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  col_hash_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (col_hash_t *)new col_hash_t();
  *(col_hash_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1col_1hash_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  col_hash_t *arg1 = (col_hash_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(col_hash_t **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1mat_1entry(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jlong jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (fmpz *)fmpz_mat_entry((fmpz_mat_struct const (*))arg1,arg2,arg3);
  *(fmpz **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1nrows(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t)fmpz_mat_nrows((fmpz_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1ncols(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t)fmpz_mat_ncols((fmpz_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_mat_init(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1init_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_init_set(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_set(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  fmpz_mat_clear(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  result = (int)fmpz_mat_equal((fmpz_mat_struct const (*))arg1,(fmpz_mat_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (int)fmpz_mat_is_zero((fmpz_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (int)fmpz_mat_is_one((fmpz_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1is_1zero_1row(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  result = (int)fmpz_mat_is_zero_row((fmpz_mat_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1col_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)fmpz_mat_col_equal(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1row_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)fmpz_mat_row_equal(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1is_1empty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (int)fmpz_mat_is_empty((fmpz_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1is_1square(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (int)fmpz_mat_is_square((fmpz_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  fmpz_mat_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  fmpz_mat_one(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1window_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5, jint jarg6) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  fmpz_mat_window_init(arg1,(fmpz_mat_struct const (*))arg2,arg3,arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1window_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_mat_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  fmpz_mat_window_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1concat_1horizontal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  fmpz_mat_concat_horizontal(arg1,(fmpz_mat_struct const (*))arg2,(fmpz_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1concat_1vertical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  fmpz_mat_concat_vertical(arg1,(fmpz_mat_struct const (*))arg2,(fmpz_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz_mat_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  result = (int)fmpz_mat_fprint(arg1,(fmpz_mat_struct const (*))arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1fprint_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz_mat_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  result = (int)fmpz_mat_fprint_pretty(arg1,(fmpz_mat_struct const (*))arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (int)fmpz_mat_print((fmpz_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1print_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (int)fmpz_mat_print_pretty((fmpz_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1fread(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz_mat_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  result = (int)fmpz_mat_fread(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1read(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (int)fmpz_mat_read(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1randbits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mat_randbits(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mat_randtest(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1randtest_1unsigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mat_randtest_unsigned(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1randintrel(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mat_randintrel(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1randsimdioph(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  fmpz_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_mat_randsimdioph(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1randntrulike(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  fmpz_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_mat_randntrulike(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1randntrulike2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4) {
  fmpz_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_mat_randntrulike2(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1randajtai(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jdouble jarg3) {
  fmpz_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  double arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (double)jarg3; 
  fmpz_mat_randajtai(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1randrank(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  fmpz_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpz_mat_randrank(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1randdet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_mat_randdet(arg1,arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1randops(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_mat_randops(arg1,arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1randpermdiag(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  flint_rand_s *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)fmpz_mat_randpermdiag(arg1,arg2,(long const *)arg3,arg4);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1max_1bits(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t)fmpz_mat_max_bits((fmpz_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1transpose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_transpose(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  fmpz_mat_add(arg1,(fmpz_mat_struct const (*))arg2,(fmpz_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  fmpz_mat_sub(arg1,(fmpz_mat_struct const (*))arg2,(fmpz_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_neg(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_mat_scalar_mul_fmpz(arg1,(fmpz_mat_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_mat_scalar_mul_si(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mat_scalar_mul_ui(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1addmul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_mat_scalar_addmul_fmpz(arg1,(fmpz_mat_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1addmul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_mat_scalar_addmul_si(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1addmul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mat_scalar_addmul_ui(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1submul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_mat_scalar_submul_fmpz(arg1,(fmpz_mat_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1submul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_mat_scalar_submul_si(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1submul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mat_scalar_submul_ui(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1addmul_1nmod_1mat_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_mat_scalar_addmul_nmod_mat_fmpz(arg1,(nmod_mat_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1addmul_1nmod_1mat_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mat_scalar_addmul_nmod_mat_ui(arg1,(nmod_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1divexact_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_mat_scalar_divexact_fmpz(arg1,(fmpz_mat_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1divexact_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_mat_scalar_divexact_si(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1divexact_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mat_scalar_divexact_ui(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1mul_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mat_scalar_mul_2exp(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1tdiv_1q_12exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mat_scalar_tdiv_q_2exp(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1smod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_mat_scalar_smod(arg1,(fmpz_mat_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1scalar_1mod_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_mat_scalar_mod_fmpz(arg1,(fmpz_mat_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  fmpz_mat_mul(arg1,(fmpz_mat_struct const (*))arg2,(fmpz_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1mul_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  fmpz_mat_mul_classical(arg1,(fmpz_mat_struct const (*))arg2,(fmpz_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1mul_1strassen(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  fmpz_mat_mul_strassen(arg1,(fmpz_mat_struct const (*))arg2,(fmpz_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1mul_1classical_1inline(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  fmpz_mat_mul_classical_inline(arg1,(fmpz_mat_struct const (*))arg2,(fmpz_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat_1mul_1multi_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz_mat_struct *arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  _fmpz_mat_mul_multi_mod(arg1,(fmpz_mat_struct const (*))arg2,(fmpz_mat_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1mul_1multi_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  fmpz_mat_mul_multi_mod(arg1,(fmpz_mat_struct const (*))arg2,(fmpz_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1sqr_1bodrato(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_sqr_bodrato(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1sqr(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_sqr(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpz_mat_pow(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1kronecker_1product(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  fmpz_mat_kronecker_product(arg1,(fmpz_mat_struct const (*))arg2,(fmpz_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1content(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_content(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1swap_1rows(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_mat_swap_rows(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1invert_1rows(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  fmpz_mat_invert_rows(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1swap_1cols(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpz_mat_swap_cols(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1invert_1cols(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  fmpz_mat_invert_cols(arg1,arg2);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1find_1pivot_1any(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (mp_limb_signed_t)fmpz_mat_find_pivot_any((fmpz_mat_struct const (*))arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1find_1pivot_1smallest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (mp_limb_signed_t)fmpz_mat_find_pivot_smallest((fmpz_mat_struct const (*))arg1,arg2,arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1fflu(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t *arg3 = (mp_limb_signed_t *) 0 ;
  fmpz_mat_struct *arg4 ;
  int arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(mp_limb_signed_t **)&jarg3; 
  arg4 = *(fmpz_mat_struct **)&jarg4; 
  arg5 = (int)jarg5; 
  result = (mp_limb_signed_t)fmpz_mat_fflu(arg1,arg2,arg3,(fmpz_mat_struct const (*))arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1rank_1small_1inplace(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t)fmpz_mat_rank_small_inplace(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1rref(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  result = (mp_limb_signed_t)fmpz_mat_rref(arg1,arg2,(fmpz_mat_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1rref_1fflu(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  result = (mp_limb_signed_t)fmpz_mat_rref_fflu(arg1,arg2,(fmpz_mat_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1rref_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  result = (mp_limb_signed_t)fmpz_mat_rref_mul(arg1,arg2,(fmpz_mat_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1is_1in_1rref_1with_1rank(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)fmpz_mat_is_in_rref_with_rank((fmpz_mat_struct const (*))arg1,(long const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1rref_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz_mat_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (mp_limb_signed_t)fmpz_mat_rref_mod(arg1,arg2,(long const (*))arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1howell_1form_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  result = (mp_limb_signed_t)fmpz_mat_howell_form_mod(arg1,(long const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1strong_1echelon_1form_1mod(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_mat_strong_echelon_form_mod(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1trace(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_trace(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1det(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_det(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1det_1cofactor(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_det_cofactor(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1det_1bareiss(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_det_bareiss(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1det_1modular(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz *arg1 ;
  fmpz_mat_struct *arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  fmpz_mat_det_modular(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1det_1modular_1accelerated(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz *arg1 ;
  fmpz_mat_struct *arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  fmpz_mat_det_modular_accelerated(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1det_1modular_1given_1divisor(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  fmpz *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz *arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (int)jarg4; 
  fmpz_mat_det_modular_given_divisor(arg1,(fmpz_mat_struct const (*))arg2,(long const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1det_1bound(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_det_bound(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1det_1divisor(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_det_divisor(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1similarity(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_mat_similarity(arg1,arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat_1charpoly_1berkowitz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  _fmpz_mat_charpoly_berkowitz(arg1,(fmpz_mat_struct const (*))arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1charpoly_1berkowitz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_charpoly_berkowitz(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat_1charpoly_1modular(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  _fmpz_mat_charpoly_modular(arg1,(fmpz_mat_struct const (*))arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1charpoly_1modular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_charpoly_modular(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat_1charpoly(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  _fmpz_mat_charpoly(arg1,(fmpz_mat_struct const (*))arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1charpoly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_charpoly(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1mat_1minpoly_1modular(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  result = (mp_limb_signed_t)_fmpz_mat_minpoly_modular(arg1,(fmpz_mat_struct const (*))arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1minpoly_1modular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_minpoly_modular(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1mat_1minpoly(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  result = (mp_limb_signed_t)_fmpz_mat_minpoly(arg1,(fmpz_mat_struct const (*))arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1minpoly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_minpoly(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1rank(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (mp_limb_signed_t)fmpz_mat_rank((fmpz_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1solve_1bound(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  fmpz_mat_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  arg4 = *(fmpz_mat_struct **)&jarg4; 
  fmpz_mat_solve_bound(arg1,arg2,(fmpz_mat_struct const (*))arg3,(fmpz_mat_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1solve(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  fmpz_mat_struct *arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  arg4 = *(fmpz_mat_struct **)&jarg4; 
  result = (int)fmpz_mat_solve(arg1,arg2,(fmpz_mat_struct const (*))arg3,(fmpz_mat_struct const (*))arg4);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1solve_1cramer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  fmpz_mat_struct *arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  arg4 = *(fmpz_mat_struct **)&jarg4; 
  result = (int)fmpz_mat_solve_cramer(arg1,arg2,(fmpz_mat_struct const (*))arg3,(fmpz_mat_struct const (*))arg4);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1solve_1fflu(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  fmpz_mat_struct *arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  arg4 = *(fmpz_mat_struct **)&jarg4; 
  result = (int)fmpz_mat_solve_fflu(arg1,arg2,(fmpz_mat_struct const (*))arg3,(fmpz_mat_struct const (*))arg4);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1solve_1fflu_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  fmpz_mat_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  fmpz_mat_struct *arg3 ;
  fmpz_mat_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  arg4 = *(fmpz_mat_struct **)&jarg4; 
  fmpz_mat_solve_fflu_precomp(arg1,(long const *)arg2,(fmpz_mat_struct const (*))arg3,(fmpz_mat_struct const (*))arg4);
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1mat_1find_1good_1prime_1and_1invert(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jlong jresult = 0 ;
  nmod_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz *arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  result = (mp_limb_t)fmpz_mat_find_good_prime_and_invert(arg1,(fmpz_mat_struct const (*))arg2,(long const (*))arg3);
  jresult = (jlong)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpz_1mat_1dixon_1get_1crt_1primes(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jlong jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t *)fmpz_mat_dixon_get_crt_primes(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  *(mp_limb_t **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat_1solve_1dixon(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jlong jarg7, jlong jarg8) {
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  fmpz_mat_struct *arg4 ;
  nmod_mat_struct *arg5 ;
  mp_limb_t arg6 ;
  fmpz *arg7 ;
  fmpz *arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  arg4 = *(fmpz_mat_struct **)&jarg4; 
  arg5 = *(nmod_mat_struct **)&jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = *(long **)&jarg8; 
  _fmpz_mat_solve_dixon(arg1,arg2,(fmpz_mat_struct const (*))arg3,(fmpz_mat_struct const (*))arg4,(nmod_mat_struct const (*))arg5,arg6,(long const (*))arg7,(long const (*))arg8);
  
  
  
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1solve_1dixon(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  fmpz_mat_struct *arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  arg4 = *(fmpz_mat_struct **)&jarg4; 
  result = (int)fmpz_mat_solve_dixon(arg1,arg2,(fmpz_mat_struct const (*))arg3,(fmpz_mat_struct const (*))arg4);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1mat_1solve_1dixon_1den(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jlong jarg7, jlong jarg8) {
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  fmpz_mat_struct *arg4 ;
  nmod_mat_struct *arg5 ;
  mp_limb_t arg6 ;
  fmpz *arg7 ;
  fmpz *arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  arg4 = *(fmpz_mat_struct **)&jarg4; 
  arg5 = *(nmod_mat_struct **)&jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = *(long **)&jarg8; 
  _fmpz_mat_solve_dixon_den(arg1,arg2,(fmpz_mat_struct const (*))arg3,(fmpz_mat_struct const (*))arg4,(nmod_mat_struct const (*))arg5,arg6,(long const (*))arg7,(long const (*))arg8);
  
  
  
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1solve_1dixon_1den(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  fmpz_mat_struct *arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  arg4 = *(fmpz_mat_struct **)&jarg4; 
  result = (int)fmpz_mat_solve_dixon_den(arg1,arg2,(fmpz_mat_struct const (*))arg3,(fmpz_mat_struct const (*))arg4);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1solve_1multi_1mod_1den(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  fmpz_mat_struct *arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  arg4 = *(fmpz_mat_struct **)&jarg4; 
  result = (int)fmpz_mat_solve_multi_mod_den(arg1,arg2,(fmpz_mat_struct const (*))arg3,(fmpz_mat_struct const (*))arg4);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1nullspace(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  result = (mp_limb_signed_t)fmpz_mat_nullspace(arg1,(fmpz_mat_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1inv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  result = (int)fmpz_mat_inv(arg1,arg2,(fmpz_mat_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1set_1nmod_1mat(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  fmpz_mat_set_nmod_mat(arg1,(nmod_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1set_1nmod_1mat_1unsigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  nmod_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_struct **)&jarg2; 
  fmpz_mat_set_nmod_mat_unsigned(arg1,(nmod_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1get_1nmod_1mat(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_get_nmod_mat(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1CRT_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz *arg3 ;
  nmod_mat_struct *arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = *(nmod_mat_struct **)&jarg4; 
  arg5 = (int)jarg5; 
  fmpz_mat_CRT_ui(arg1,(fmpz_mat_struct const (*))arg2,(long const (*))arg3,(nmod_mat_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1multi_1mod_1ui_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  nmod_mat_t *arg1 = (nmod_mat_t *) 0 ;
  mp_limb_signed_t arg2 ;
  fmpz_mat_struct *arg3 ;
  fmpz_comb_struct *arg4 ;
  fmpz_comb_temp_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(nmod_mat_t **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  arg4 = *(fmpz_comb_struct **)&jarg4; 
  arg5 = *(fmpz_comb_temp_struct **)&jarg5; 
  fmpz_mat_multi_mod_ui_precomp((nmod_mat_struct (*)[1])arg1,arg2,(fmpz_mat_struct const (*))arg3,(fmpz_comb_struct const (*))arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1multi_1mod_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2, jlong jarg3, jobject jarg3_) {
  nmod_mat_t *arg1 = (nmod_mat_t *) 0 ;
  mp_limb_signed_t arg2 ;
  fmpz_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(nmod_mat_t **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  fmpz_mat_multi_mod_ui((nmod_mat_struct (*)[1])arg1,arg2,(fmpz_mat_struct const (*))arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1multi_1CRT_1ui_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jint jarg6) {
  fmpz_mat_struct *arg1 ;
  nmod_mat_t *arg2 = (nmod_mat_t *) (nmod_mat_t *)0 ;
  mp_limb_signed_t arg3 ;
  fmpz_comb_struct *arg4 ;
  fmpz_comb_temp_struct *arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_t **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz_comb_struct **)&jarg4; 
  arg5 = *(fmpz_comb_temp_struct **)&jarg5; 
  arg6 = (int)jarg6; 
  fmpz_mat_multi_CRT_ui_precomp(arg1,(nmod_mat_struct (*)[1])arg2,arg3,(fmpz_comb_struct const (*))arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1multi_1CRT_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  fmpz_mat_struct *arg1 ;
  nmod_mat_t *arg2 = (nmod_mat_t *) (nmod_mat_t *)0 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(nmod_mat_t **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  fmpz_mat_multi_CRT_ui(arg1,(nmod_mat_struct (*)[1])arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1hnf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_hnf(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1hnf_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  fmpz_mat_hnf_transform(arg1,arg2,(fmpz_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1hnf_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_hnf_classical(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1hnf_1xgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_hnf_xgcd(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1hnf_1minors(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_hnf_minors(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1hnf_1minors_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz_mat_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  fmpz_mat_hnf_minors_transform(arg1,arg2,(fmpz_mat_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1hnf_1modular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_mat_hnf_modular(arg1,(fmpz_mat_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1hnf_1modular_1eldiv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpz_mat_hnf_modular_eldiv(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1hnf_1pernet_1stein(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  flint_rand_s *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(flint_rand_s **)&jarg3; 
  fmpz_mat_hnf_pernet_stein(arg1,(fmpz_mat_struct const (*))arg2,arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1is_1in_1hnf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (int)fmpz_mat_is_in_hnf((fmpz_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1snf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_snf(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1snf_1diagonal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_snf_diagonal(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1snf_1kannan_1bachem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_snf_kannan_bachem(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1snf_1iliopoulos(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpz_mat_snf_iliopoulos(arg1,(fmpz_mat_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1is_1in_1snf(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (int)fmpz_mat_is_in_snf((fmpz_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1is_1hadamard(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (int)fmpz_mat_is_hadamard((fmpz_mat_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1hadamard(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  result = (int)fmpz_mat_hadamard(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1gram(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_gram(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1get_1d_1mat(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  d_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  result = (int)fmpz_mat_get_d_mat(arg1,(fmpz_mat_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1get_1d_1mat_1transpose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  d_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  result = (int)fmpz_mat_get_d_mat_transpose(arg1,(fmpz_mat_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1get_1mpf_1mat(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mpf_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mpf_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_get_mpf_mat(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1chol_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  d_mat_struct *arg1 ;
  fmpz_mat_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(d_mat_struct **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  fmpz_mat_chol_d(arg1,(fmpz_mat_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1is_1reduced(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jdouble jarg3) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  double arg2 ;
  double arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (int)fmpz_mat_is_reduced((fmpz_mat_struct const (*))arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1is_1reduced_1gram(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jdouble jarg3) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  double arg2 ;
  double arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  result = (int)fmpz_mat_is_reduced_gram((fmpz_mat_struct const (*))arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1is_1reduced_1with_1removal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jdouble jarg3, jlong jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  double arg2 ;
  double arg3 ;
  fmpz *arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (int)jarg5; 
  result = (int)fmpz_mat_is_reduced_with_removal((fmpz_mat_struct const (*))arg1,arg2,arg3,(long const (*))arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1is_1reduced_1gram_1with_1removal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2, jdouble jarg3, jlong jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  double arg2 ;
  double arg3 ;
  fmpz *arg4 ;
  int arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (double)jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (int)jarg5; 
  result = (int)fmpz_mat_is_reduced_gram_with_removal((fmpz_mat_struct const (*))arg1,arg2,arg3,(long const (*))arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1lll_1original(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpq *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpz_mat_lll_original(arg1,(fmpq const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1mat_1lll_1storjohann(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpz_mat_struct *arg1 ;
  fmpq *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpz_mat_lll_storjohann(arg1,(fmpq const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1col_1partition(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  mp_limb_signed_t *arg1 = (mp_limb_signed_t *) 0 ;
  fmpz_mat_struct *arg2 ;
  int arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_limb_signed_t **)&jarg1; 
  arg2 = *(fmpz_mat_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  result = (int)fmpz_mat_col_partition(arg1,arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1mat_1next_1col_1van_1hoeij(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz *arg2 ;
  fmpz_mat_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz_mat_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  result = (int)fmpz_mat_next_col_van_hoeij(arg1,arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_poly_factor_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  fmpz_poly_factor_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1init2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_factor_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpz_poly_factor_init2(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1realloc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_factor_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpz_poly_factor_realloc(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1fit_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpz_poly_factor_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpz_poly_factor_fit_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_poly_factor_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  fmpz_poly_factor_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_factor_struct *arg1 ;
  fmpz_poly_factor_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(fmpz_poly_factor_struct **)&jarg2; 
  fmpz_poly_factor_set(arg1,(fmpz_poly_factor_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1insert(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_factor_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_factor_insert(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1concat(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_factor_struct *arg1 ;
  fmpz_poly_factor_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(fmpz_poly_factor_struct **)&jarg2; 
  fmpz_poly_factor_concat(arg1,(fmpz_poly_factor_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpz_poly_factor_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  fmpz_poly_factor_print((fmpz_poly_factor_struct const (*))arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1zassenhaus_1recombination(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  fmpz_poly_factor_struct *arg1 ;
  fmpz_poly_factor_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(fmpz_poly_factor_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  fmpz_poly_factor_zassenhaus_recombination(arg1,(fmpz_poly_factor_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,(long const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1squarefree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_factor_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_factor_squarefree(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1mignotte(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_factor_mignotte(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1factor_1zassenhaus(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  fmpz_poly_factor_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  _fmpz_poly_factor_zassenhaus(arg1,arg2,(fmpz_poly_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1zassenhaus(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_factor_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_factor_zassenhaus(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1factor_1quadratic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_factor_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpz_poly_factor_quadratic(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpz_1poly_1factor_1CLD_1mat(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_factor_struct *arg3 ;
  fmpz *arg4 ;
  mp_limb_t arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_factor_struct **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (mp_limb_signed_t)_fmpz_poly_factor_CLD_mat(arg1,(fmpz_poly_struct const (*))arg2,arg3,arg4,arg5);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1van_1hoeij_1check_1if_1solved(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jint jarg6, jlong jarg7) {
  jint jresult = 0 ;
  fmpz_mat_struct *arg1 ;
  fmpz_poly_factor_struct *arg2 ;
  fmpz_poly_factor_struct *arg3 ;
  fmpz_poly_struct *arg4 ;
  fmpz *arg5 ;
  mp_limb_signed_t arg6 ;
  fmpz *arg7 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpz_mat_struct **)&jarg1; 
  arg2 = *(fmpz_poly_factor_struct **)&jarg2; 
  arg3 = *(fmpz_poly_factor_struct **)&jarg3; 
  arg4 = *(fmpz_poly_struct **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(long **)&jarg7; 
  result = (int)fmpz_poly_factor_van_hoeij_check_if_solved(arg1,arg2,arg3,(fmpz_poly_struct const (*))arg4,arg5,arg6,arg7);
  jresult = (jint)result; 
  
  
  
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1van_1hoeij(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5) {
  fmpz_poly_factor_struct *arg1 ;
  nmod_poly_factor_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(nmod_poly_factor_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  fmpz_poly_factor_van_hoeij(arg1,(nmod_poly_factor_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_factor_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_factor_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpz_poly_factor(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1get_1fmpz_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz_poly_struct *arg1 ;
  fmpz_poly_factor_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_factor_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpz_poly_factor_get_fmpz_poly(arg1,(fmpz_poly_factor_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpz_1poly_1factor_1get_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpz_poly_factor_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpz_poly_factor_struct **)&jarg2; 
  fmpz_poly_factor_get_fmpz(arg1,(fmpz_poly_factor_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1struct_1coeffs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpq_poly_struct *arg1 = (fmpq_poly_struct *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  if (arg1) (arg1)->coeffs = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpq_1poly_1struct_1coeffs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpq_poly_struct *arg1 = (fmpq_poly_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->coeffs);
  *(fmpz **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1struct_1den_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpq_poly_struct *arg1 = (fmpq_poly_struct *) 0 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  {
    size_t ii;
    long *b = (long *) arg1->den;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((long *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpq_1poly_1struct_1den_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpq_poly_struct *arg1 = (fmpq_poly_struct *) 0 ;
  fmpz *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (fmpz *) ((arg1)->den);
  *(long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1struct_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpq_poly_struct *arg1 = (fmpq_poly_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->alloc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1struct_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 = (fmpq_poly_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->alloc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1struct_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpq_poly_struct *arg1 = (fmpq_poly_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1struct_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 = (fmpq_poly_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->length);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpq_1poly_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpq_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpq_poly_struct *)new fmpq_poly_struct();
  *(fmpq_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpq_1poly_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpq_poly_struct *arg1 = (fmpq_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1powers_1precomp_1struct_1powers_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_powers_precomp_struct *arg1 = (fmpq_poly_powers_precomp_struct *) 0 ;
  fmpq_poly_struct *arg2 = (fmpq_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_powers_precomp_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  if (arg1) (arg1)->powers = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_fmpq_1poly_1powers_1precomp_1struct_1powers_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  fmpq_poly_powers_precomp_struct *arg1 = (fmpq_poly_powers_precomp_struct *) 0 ;
  fmpq_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_powers_precomp_struct **)&jarg1; 
  result = (fmpq_poly_struct *) ((arg1)->powers);
  *(fmpq_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1powers_1precomp_1struct_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpq_poly_powers_precomp_struct *arg1 = (fmpq_poly_powers_precomp_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_powers_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->len = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1powers_1precomp_1struct_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_powers_precomp_struct *arg1 = (fmpq_poly_powers_precomp_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_powers_precomp_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1fmpq_1poly_1powers_1precomp_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  fmpq_poly_powers_precomp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (fmpq_poly_powers_precomp_struct *)new fmpq_poly_powers_precomp_struct();
  *(fmpq_poly_powers_precomp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1fmpq_1poly_1powers_1precomp_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  fmpq_poly_powers_precomp_struct *arg1 = (fmpq_poly_powers_precomp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpq_poly_powers_precomp_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_WEAK_1CANONICALISE_1CUTOFF_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(25600);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpq_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  fmpq_poly_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1init2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpq_poly_init2(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1realloc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpq_poly_realloc(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1fit_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpq_poly_fit_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1set_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _fmpq_poly_set_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpq_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  fmpq_poly_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1normalise(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpq_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  _fmpq_poly_normalise(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1get_1numerator(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_get_numerator(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1get_1denominator(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_get_denominator(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1canonicalise(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _fmpq_poly_canonicalise(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1canonicalise(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpq_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  fmpq_poly_canonicalise(arg1);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1is_1canonical(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_fmpq_poly_is_canonical((long const *)arg1,(long const (*))arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1is_1canonical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (int)fmpq_poly_is_canonical((fmpq_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1degree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)fmpq_poly_degree((fmpq_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)fmpq_poly_length((fmpq_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  fmpq_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpq_poly_randtest(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1randtest_1unsigned(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  fmpq_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpq_poly_randtest_unsigned(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1randtest_1not_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4) {
  fmpq_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  fmpq_poly_randtest_not_zero(arg1,arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_set(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpq_poly_set_si(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpq_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpq_poly_set_ui(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpq_poly_struct *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  fmpq_poly_set_fmpz(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  fmpq *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  fmpq_poly_set_fmpq(arg1,(fmpq const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  __mpz_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(__mpz_struct **)&jarg2; 
  fmpq_poly_set_mpz(arg1,(__mpz_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1mpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  __mpq_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(__mpq_struct **)&jarg2; 
  fmpq_poly_set_mpq(arg1,(__mpq_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1fmpz_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  fmpq_poly_set_fmpz_poly(arg1,(fmpz_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1get_1nmod_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  _fmpq_poly_get_nmod_poly(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1get_1nmod_1poly_1den(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  nmod_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  int arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  fmpq_poly_get_nmod_poly_den(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1get_1nmod_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  nmod_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(nmod_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_get_nmod_poly(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1nmod_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  nmod_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(nmod_poly_struct **)&jarg2; 
  fmpq_poly_set_nmod_poly(arg1,(nmod_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1set_1array_1mpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mpq_t *arg3 = (mpq_t *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(mpq_t **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpq_poly_set_array_mpq(arg1,arg2,(__mpq_struct const (*)[1])arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1array_1mpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  mpq_t *arg2 = (mpq_t *) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(mpq_t **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_set_array_mpq(arg1,(__mpq_struct const (*)[1])arg2,arg3);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jstring jarg3, jint jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  char *arg3 = (char *) 0 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)_fmpq_poly_set_str(arg1,arg2,(char const *)arg3,arg4);
  jresult = (jint)result; 
  
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)fmpq_poly_set_str(arg1,(char const *)arg2);
  jresult = (jint)result; 
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_fmpq_1poly_1get_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jstring jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (char *)fmpq_poly_get_str((fmpq_poly_struct const (*))arg1);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_fmpq_1poly_1get_1str_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jstring jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  char *arg2 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (char *)fmpq_poly_get_str_pretty((fmpq_poly_struct const (*))arg1,(char const *)arg2);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1get_1str_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jstring jarg4) {
  jstring jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  char *arg4 = (char *) 0 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return 0;
  }
  result = (char *)_fmpq_poly_get_str_pretty((long const *)arg1,(long const (*))arg2,arg3,(char const *)arg4);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpq_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  fmpq_poly_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpq_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  fmpq_poly_one(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_neg(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1inv(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_inv(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1truncate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  fmpq_poly_truncate(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_set_trunc(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1get_1slice(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpq_poly_get_slice(arg1,(fmpq_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1reverse(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_reverse(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1get_1coeff_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpz *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_get_coeff_fmpz(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1get_1coeff_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_get_coeff_fmpq(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1get_1coeff_1mpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  __mpq_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(__mpq_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_get_coeff_mpq(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1coeff_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_set_coeff_si(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1coeff_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_poly_set_coeff_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1coeff_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpq_poly_set_coeff_fmpz(arg1,arg2,(long const (*))arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1coeff_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_poly_set_coeff_fmpq(arg1,arg2,(fmpq const (*))arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1coeff_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  __mpz_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(__mpz_struct **)&jarg3; 
  fmpq_poly_set_coeff_mpz(arg1,arg2,(__mpz_struct const (*))arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1set_1coeff_1mpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  __mpq_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(__mpq_struct **)&jarg3; 
  fmpq_poly_set_coeff_mpq(arg1,arg2,(__mpq_struct const (*))arg3);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  result = (int)fmpq_poly_equal((fmpq_poly_struct const (*))arg1,(fmpq_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  result = (int)_fmpq_poly_cmp((long const *)arg1,(long const (*))arg2,(long const *)arg3,(long const (*))arg4,arg5);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  result = (int)fmpq_poly_cmp((fmpq_poly_struct const (*))arg1,(fmpq_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1equal_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jint jarg7) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  fmpz *arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  result = (int)_fmpq_poly_equal_trunc((long const *)arg1,(long const (*))arg2,arg3,(long const *)arg4,(long const (*))arg5,arg6,arg7);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1equal_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)fmpq_poly_equal_trunc((fmpq_poly_struct const (*))arg1,(fmpq_poly_struct const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (int)fmpq_poly_is_zero((fmpq_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (int)fmpq_poly_is_one((fmpq_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1is_1gen(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (int)fmpq_poly_is_gen((fmpq_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1add_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_add_si(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1sub_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_sub_si(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1si_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_si_sub(arg1,arg2,(fmpq_poly_struct const (*))arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1add_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpq_poly_add_fmpz(arg1,(fmpq_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1sub_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpq_poly_sub_fmpz(arg1,(fmpq_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1fmpz_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpz *arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_fmpz_sub(arg1,(long const (*))arg2,(fmpq_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1add_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_poly_add_fmpq(arg1,(fmpq_poly_struct const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1sub_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_poly_sub_fmpq(arg1,(fmpq_poly_struct const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1fmpq_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq *arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_fmpq_sub(arg1,(fmpq const (*))arg2,(fmpq_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  _fmpq_poly_add(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_add(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1add_1can(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jint jarg9) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  int arg9 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (int)jarg9; 
  _fmpq_poly_add_can(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,arg9);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1add_1can(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  fmpq_poly_add_can(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1add_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jint jarg9) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  _fmpq_poly_add_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,arg9);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1add_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpq_poly_add_series(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1add_1series_1can(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jint jarg9, jint jarg10) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  int arg10 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  arg10 = (int)jarg10; 
  _fmpq_poly_add_series_can(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,arg9,arg10);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1add_1series_1can(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  fmpq_poly_add_series_can(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  _fmpq_poly_sub(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_sub(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1sub_1can(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jint jarg9) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  int arg9 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (int)jarg9; 
  _fmpq_poly_sub_can(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,arg9);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1sub_1can(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  int arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  fmpq_poly_sub_can(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1sub_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jint jarg9) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  _fmpq_poly_sub_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,arg9);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1sub_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpq_poly_sub_series(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1sub_1series_1can(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jint jarg9, jint jarg10) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  int arg10 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  arg10 = (int)jarg10; 
  _fmpq_poly_sub_series_can(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,arg9,arg10);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1sub_1series_1can(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  int arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (int)jarg5; 
  fmpq_poly_sub_series_can(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1scalar_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_scalar_mul_si(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1scalar_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  _fmpq_poly_scalar_mul_ui(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1scalar_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpq_poly_scalar_mul_fmpz(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const (*))arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1scalar_1mul_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 ;
  fmpz *arg7 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  _fmpq_poly_scalar_mul_fmpq(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const (*))arg6,(long const (*))arg7);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1scalar_1mul_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_scalar_mul_si(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1scalar_1mul_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_poly_scalar_mul_ui(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1scalar_1mul_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpq_poly_scalar_mul_fmpz(arg1,(fmpq_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1scalar_1mul_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_poly_scalar_mul_fmpq(arg1,(fmpq_poly_struct const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1scalar_1mul_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  __mpz_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(__mpz_struct **)&jarg3; 
  fmpq_poly_scalar_mul_mpz(arg1,(fmpq_poly_struct const (*))arg2,(__mpz_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1scalar_1mul_1mpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  __mpq_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(__mpq_struct **)&jarg3; 
  fmpq_poly_scalar_mul_mpq(arg1,(fmpq_poly_struct const (*))arg2,(__mpq_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1scalar_1div_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_scalar_div_si(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1scalar_1div_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  _fmpq_poly_scalar_div_ui(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1scalar_1div_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpq_poly_scalar_div_fmpz(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const (*))arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1scalar_1div_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 ;
  fmpz *arg7 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  _fmpq_poly_scalar_div_fmpq(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const (*))arg6,(long const (*))arg7);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1scalar_1div_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_scalar_div_si(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1scalar_1div_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_poly_scalar_div_ui(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1scalar_1div_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpq_poly_scalar_div_fmpz(arg1,(fmpq_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1scalar_1div_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_poly_scalar_div_fmpq(arg1,(fmpq_poly_struct const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1scalar_1div_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  __mpz_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(__mpz_struct **)&jarg3; 
  fmpq_poly_scalar_div_mpz(arg1,(fmpq_poly_struct const (*))arg2,(__mpz_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1scalar_1div_1mpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  __mpq_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(__mpq_struct **)&jarg3; 
  fmpq_poly_scalar_div_mpq(arg1,(fmpq_poly_struct const (*))arg2,(__mpq_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  _fmpq_poly_mul(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_mul(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1mullow(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jint jarg9) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  _fmpq_poly_mullow(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,arg9);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1mullow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpq_poly_mullow(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1addmul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_addmul(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1submul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_submul(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  _fmpq_poly_pow(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  fmpq_poly_pow(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1pow_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jint jarg7) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _fmpq_poly_pow_trunc(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6,arg7);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1pow_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpq_poly_pow_trunc(arg1,(fmpq_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1shift_1left(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_shift_left(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1shift_1right(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_shift_right(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1divrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jint jarg7, jlong jarg8, jlong jarg9, jint jarg10, jlong jarg11, jobject jarg11_) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  fmpz *arg6 ;
  mp_limb_signed_t arg7 ;
  fmpz *arg8 = (fmpz *) 0 ;
  fmpz *arg9 ;
  mp_limb_signed_t arg10 ;
  fmpz_preinvn_struct *arg11 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg11_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = *(fmpz **)&jarg8; 
  arg9 = *(long **)&jarg9; 
  arg10 = (mp_limb_signed_t)jarg10; 
  arg11 = *(fmpz_preinvn_struct **)&jarg11; 
  _fmpq_poly_divrem(arg1,arg2,arg3,arg4,(long const *)arg5,(long const (*))arg6,arg7,(long const *)arg8,(long const (*))arg9,arg10,(fmpz_preinvn_struct const (*))arg11);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1divrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  fmpq_poly_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = *(fmpq_poly_struct **)&jarg4; 
  fmpq_poly_divrem(arg1,arg2,(fmpq_poly_struct const (*))arg3,(fmpq_poly_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jlong jarg9, jobject jarg9_) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  fmpz_preinvn_struct *arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg9_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = *(fmpz_preinvn_struct **)&jarg9; 
  _fmpq_poly_div(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,(fmpz_preinvn_struct const (*))arg9);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_div(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1rem(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jlong jarg9, jobject jarg9_) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  fmpz_preinvn_struct *arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg9_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = *(fmpz_preinvn_struct **)&jarg9; 
  _fmpq_poly_rem(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,(fmpz_preinvn_struct const (*))arg9);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1rem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_rem(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1powers_1precompute(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jlong jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  fmpq_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (fmpq_poly_struct *)_fmpq_poly_powers_precompute((long const *)arg1,(long const (*))arg2,arg3);
  *(fmpq_poly_struct **)&jresult = result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1powers_1precompute(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_powers_precomp_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_powers_precomp_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_powers_precompute(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1powers_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  fmpq_poly_struct *arg1 = (fmpq_poly_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _fmpq_poly_powers_clear(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1powers_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  fmpq_poly_powers_precomp_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_powers_precomp_struct **)&jarg1; 
  fmpq_poly_powers_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1rem_1powers_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jlong jarg4, jlong jarg5, jint jarg6, jlong jarg7, jobject jarg7_) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 = (fmpz *) 0 ;
  fmpz *arg5 ;
  mp_limb_signed_t arg6 ;
  fmpq_poly_struct *arg7 = (fmpq_poly_struct *) (fmpq_poly_struct *)0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg7_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(fmpq_poly_struct **)&jarg7; 
  _fmpq_poly_rem_powers_precomp(arg1,arg2,arg3,(long const *)arg4,(long const (*))arg5,arg6,arg7);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1rem_1powers_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  fmpq_poly_powers_precomp_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = *(fmpq_poly_powers_precomp_struct **)&jarg4; 
  fmpq_poly_rem_powers_precomp(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,(fmpq_poly_powers_precomp_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1divides(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  result = (int)_fmpq_poly_divides(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1divides(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  result = (int)fmpq_poly_divides(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1remove(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  result = (mp_limb_signed_t)fmpq_poly_remove(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1inv_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_inv_series_newton(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1inv_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_inv_series_newton(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1inv_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_inv_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1inv_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_inv_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1div_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jint jarg9) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  _fmpq_poly_div_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,arg9);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1div_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpq_poly_div_series(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1gcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_gcd(arg1,arg2,(long const *)arg3,arg4,(long const *)arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1gcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_gcd(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1xgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7, jlong jarg8, jint jarg9, jlong jarg10, jlong jarg11, jint jarg12) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  fmpz *arg6 ;
  fmpz *arg7 = (fmpz *) 0 ;
  fmpz *arg8 ;
  mp_limb_signed_t arg9 ;
  fmpz *arg10 = (fmpz *) 0 ;
  fmpz *arg11 ;
  mp_limb_signed_t arg12 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = *(fmpz **)&jarg7; 
  arg8 = *(long **)&jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  arg10 = *(fmpz **)&jarg10; 
  arg11 = *(long **)&jarg11; 
  arg12 = (mp_limb_signed_t)jarg12; 
  _fmpq_poly_xgcd(arg1,arg2,arg3,arg4,arg5,arg6,(long const *)arg7,(long const (*))arg8,arg9,(long const *)arg10,(long const (*))arg11,arg12);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1xgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  fmpq_poly_struct *arg4 ;
  fmpq_poly_struct *arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = *(fmpq_poly_struct **)&jarg4; 
  arg5 = *(fmpq_poly_struct **)&jarg5; 
  fmpq_poly_xgcd(arg1,arg2,arg3,(fmpq_poly_struct const (*))arg4,(fmpq_poly_struct const (*))arg5);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1lcm(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jlong jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_lcm(arg1,arg2,(long const *)arg3,arg4,(long const *)arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1lcm(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_lcm(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1resultant(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  _fmpq_poly_resultant(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1resultant(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_resultant(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1resultant_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jlong jarg9, jint jarg10) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  fmpz *arg9 ;
  mp_limb_signed_t arg10 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = *(long **)&jarg9; 
  arg10 = (mp_limb_signed_t)jarg10; 
  _fmpq_poly_resultant_div(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,(long const (*))arg9,arg10);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1resultant_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  fmpq *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  fmpq_poly_resultant_div(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,(long const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1derivative(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpq_poly_derivative(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1derivative(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_derivative(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1integral(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpq_poly_integral(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1integral(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_integral(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1invsqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_invsqrt_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1invsqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_invsqrt_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1sqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_sqrt_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1sqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_sqrt_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1power_1sums(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpq_poly_power_sums(arg1,arg2,(long const *)arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1power_1sums(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_power_sums(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1power_1sums_1to_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpq_poly_power_sums_to_poly(arg1,(long const *)arg2,(long const (*))arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1power_1sums_1to_1fmpz_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpz_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_power_sums_to_fmpz_poly(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1power_1sums_1to_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_power_sums_to_poly(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1log_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_log_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1log_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_log_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1exp_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_exp_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1exp_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_exp_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1atan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_atan_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1atan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_atan_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1atanh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_atanh_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1atanh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_atanh_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1asin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_asin_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1asin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_asin_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1asinh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_asinh_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1asinh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_asinh_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1tan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_tan_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1tan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_tan_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1sin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_sin_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1sin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_sin_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_cos_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_cos_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1sin_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jint jarg7, jint jarg8) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  fmpz *arg5 = (fmpz *) 0 ;
  fmpz *arg6 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = *(fmpz **)&jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  _fmpq_poly_sin_cos_series(arg1,arg2,arg3,arg4,(long const *)arg5,(long const (*))arg6,arg7,arg8);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1sin_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpq_poly_sin_cos_series(arg1,arg2,(fmpq_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1sinh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_sinh_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1sinh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_sinh_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1cosh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_cosh_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1cosh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_cosh_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1tanh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_tanh_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1tanh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_tanh_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1legendre_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  _fmpq_poly_legendre_p(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1legendre_1p(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpq_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpq_poly_legendre_p(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1laguerre_1l(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  _fmpq_poly_laguerre_l(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1laguerre_1l(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  fmpq_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  fmpq_poly_laguerre_l(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1gegenbauer_1c(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_t arg3 ;
  fmpq *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(fmpq **)&jarg4; 
  _fmpq_poly_gegenbauer_c(arg1,arg2,arg3,(fmpq const (*))arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1gegenbauer_1c(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_poly_gegenbauer_c(arg1,arg2,(fmpq const (*))arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1evaluate_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(long **)&jarg6; 
  _fmpq_poly_evaluate_fmpz(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const (*))arg6);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1evaluate_1fmpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  fmpq *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  fmpq_poly_evaluate_fmpz(arg1,(fmpq_poly_struct const (*))arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1evaluate_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 ;
  fmpz *arg7 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  _fmpq_poly_evaluate_fmpq(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const (*))arg6,(long const (*))arg7);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1evaluate_1fmpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_poly_evaluate_fmpq(arg1,(fmpq_poly_struct const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1evaluate_1mpz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  __mpq_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  __mpz_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(__mpq_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(__mpz_struct **)&jarg3; 
  fmpq_poly_evaluate_mpz(arg1,(fmpq_poly_struct const (*))arg2,(__mpz_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1evaluate_1mpq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  __mpq_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  __mpq_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(__mpq_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(__mpq_struct **)&jarg3; 
  fmpq_poly_evaluate_mpq(arg1,(fmpq_poly_struct const (*))arg2,(__mpq_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1interpolate_1fmpz_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 = (fmpz *) 0 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(fmpz **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpq_poly_interpolate_fmpz_vec(arg1,arg2,(long const *)arg3,(long const *)arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1interpolate_1fmpz_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpq_poly_struct *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 = (fmpz *) 0 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpq_poly_interpolate_fmpz_vec(arg1,(long const *)arg2,(long const *)arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1compose(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  _fmpq_poly_compose(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1compose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  fmpq_poly_compose(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1rescale(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 ;
  fmpz *arg7 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  _fmpq_poly_rescale(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const (*))arg6,(long const (*))arg7);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1rescale(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq **)&jarg3; 
  fmpq_poly_rescale(arg1,(fmpq_poly_struct const (*))arg2,(fmpq const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1compose_1series_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jint jarg9) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  _fmpq_poly_compose_series_horner(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,arg9);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1compose_1series_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpq_poly_compose_series_horner(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1compose_1series_1brent_1kung(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jint jarg9) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  _fmpq_poly_compose_series_brent_kung(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,arg9);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1compose_1series_1brent_1kung(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpq_poly_compose_series_brent_kung(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1compose_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jlong jarg6, jlong jarg7, jint jarg8, jint jarg9) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  fmpz *arg6 = (fmpz *) 0 ;
  fmpz *arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(fmpz **)&jarg6; 
  arg7 = *(long **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  _fmpq_poly_compose_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,(long const *)arg6,(long const (*))arg7,arg8,arg9);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1compose_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  fmpq_poly_compose_series(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1revert_1series_1lagrange(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_revert_series_lagrange(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1revert_1series_1lagrange(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_revert_series_lagrange(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1revert_1series_1lagrange_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_revert_series_lagrange_fast(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1revert_1series_1lagrange_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_revert_series_lagrange_fast(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1revert_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_revert_series_newton(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1revert_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_revert_series_newton(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1revert_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _fmpq_poly_revert_series(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1revert_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  fmpq_poly_revert_series(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1content(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  fmpq *arg1 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _fmpq_poly_content(arg1,(long const *)arg2,(long const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1content(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_content(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1primitive_1part(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpq_poly_primitive_part(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1primitive_1part(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_primitive_part(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1is_1monic(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_fmpq_poly_is_monic((long const *)arg1,(long const (*))arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1is_1monic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (int)fmpq_poly_is_monic((fmpq_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1make_1monic(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jint jarg5) {
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  fmpz *arg3 = (fmpz *) 0 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(fmpz **)&jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _fmpq_poly_make_monic(arg1,arg2,(long const *)arg3,(long const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_fmpq_1poly_1make_1monic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  fmpq_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  fmpq_poly_make_monic(arg1,(fmpq_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1is_1squarefree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (int)fmpq_poly_is_squarefree((fmpq_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1debug(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (int)fmpq_poly_debug((fmpq_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)_fmpq_poly_fprint(arg1,(long const *)arg2,(long const (*))arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1fprint(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpq_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  result = (int)fmpq_poly_fprint(arg1,(fmpq_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1fprint_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jstring jarg5) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpz *arg2 = (fmpz *) 0 ;
  fmpz *arg3 ;
  mp_limb_signed_t arg4 ;
  char *arg5 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpz **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = 0;
  if (jarg5) {
    arg5 = (char *)jenv->GetStringUTFChars(jarg5, 0);
    if (!arg5) return 0;
  }
  result = (int)_fmpq_poly_fprint_pretty(arg1,(long const *)arg2,(long const (*))arg3,arg4,(char const *)arg5);
  jresult = (jint)result; 
  
  if (arg5) jenv->ReleaseStringUTFChars(jarg5, (const char *)arg5);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1fprint_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jstring jarg3) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpq_poly_struct *arg2 ;
  char *arg3 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = 0;
  if (jarg3) {
    arg3 = (char *)jenv->GetStringUTFChars(jarg3, 0);
    if (!arg3) return 0;
  }
  result = (int)fmpq_poly_fprint_pretty(arg1,(fmpq_poly_struct const (*))arg2,(char const *)arg3);
  jresult = (jint)result; 
  
  if (arg3) jenv->ReleaseStringUTFChars(jarg3, (const char *)arg3);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)_fmpq_poly_print((long const *)arg1,(long const (*))arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (int)fmpq_poly_print((fmpq_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1fmpq_1poly_1print_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jint jarg3, jstring jarg4) {
  jint jresult = 0 ;
  fmpz *arg1 = (fmpz *) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  char *arg4 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(fmpz **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = 0;
  if (jarg4) {
    arg4 = (char *)jenv->GetStringUTFChars(jarg4, 0);
    if (!arg4) return 0;
  }
  result = (int)_fmpq_poly_print_pretty((long const *)arg1,(long const (*))arg2,arg3,(char const *)arg4);
  jresult = (jint)result; 
  
  if (arg4) jenv->ReleaseStringUTFChars(jarg4, (const char *)arg4);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1print_1pretty(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jstring jarg2) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  char *arg2 = (char *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  arg2 = 0;
  if (jarg2) {
    arg2 = (char *)jenv->GetStringUTFChars(jarg2, 0);
    if (!arg2) return 0;
  }
  result = (int)fmpq_poly_print_pretty((fmpq_poly_struct const (*))arg1,(char const *)arg2);
  jresult = (jint)result; 
  
  if (arg2) jenv->ReleaseStringUTFChars(jarg2, (const char *)arg2);
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1fread(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  FILE *arg1 = (FILE *) 0 ;
  fmpq_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  result = (int)fmpq_poly_fread(arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_fmpq_1poly_1read(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  fmpq_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(fmpq_poly_struct **)&jarg1; 
  result = (int)fmpq_poly_read(arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1struct_1coeffs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_poly_struct *arg1 = (arb_poly_struct *) 0 ;
  arb_ptr arg2 = (arb_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_ptr *)&jarg2; 
  if (arg1) (arg1)->coeffs = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1poly_1struct_1coeffs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  arb_poly_struct *arg1 = (arb_poly_struct *) 0 ;
  arb_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  result = (arb_ptr) ((arg1)->coeffs);
  *(arb_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1struct_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_poly_struct *arg1 = (arb_poly_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1struct_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 = (arb_poly_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->length);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1struct_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_poly_struct *arg1 = (arb_poly_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->alloc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1struct_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 = (arb_poly_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->alloc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1arb_1poly_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  arb_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (arb_poly_struct *)new arb_poly_struct();
  *(arb_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1arb_1poly_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  arb_poly_struct *arg1 = (arb_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(arb_poly_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arb_poly_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1init2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_poly_init2(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arb_poly_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1fit_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_poly_fit_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1set_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _arb_poly_set_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1normalise(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  _arb_poly_normalise(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arb_poly_swap(arg1,arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arb_poly_set(arg1,(arb_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1set_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_set_round(arg1,(arb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1set_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_set_trunc(arg1,(arb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1set_1trunc_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_set_trunc_round(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)arb_poly_length((arb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1degree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)arb_poly_degree((arb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1valuation(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)arb_poly_valuation((arb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  result = (int)arb_poly_is_zero((arb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  result = (int)arb_poly_is_one((arb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1is_1x(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  result = (int)arb_poly_is_x((arb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arb_poly_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arb_poly_one(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1set_1coeff_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  arb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_set_coeff_si(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1set_1coeff_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  arb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  arb_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arb_poly_set_coeff_arb(arg1,arg2,(arb_struct const (*))arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1get_1coeff_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_get_coeff_arb(arg1,(arb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1reverse(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_reverse(arg1,(arb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1shift_1right(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_shift_right(arg1,(arb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1shift_1right(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_shift_right(arg1,(arb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1shift_1left(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_shift_left(arg1,(arb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1shift_1left(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_shift_left(arg1,(arb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1truncate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_poly_truncate(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1set_1fmpz_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_set_fmpz_poly(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1set_1fmpq_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_set_fmpq_poly(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1set_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_poly_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arb_poly_set_arb(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_poly_set_si(arg1,arg2);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1get_1unique_1fmpz_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  result = (int)arb_poly_get_unique_fmpz_poly(arg1,(arb_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  result = (int)arb_poly_contains((arb_poly_struct const (*))arg1,(arb_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1contains_1fmpz_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  result = (int)arb_poly_contains_fmpz_poly((arb_poly_struct const (*))arg1,(fmpz_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1contains_1fmpq_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  result = (int)arb_poly_contains_fmpq_poly((arb_poly_struct const (*))arg1,(fmpq_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  result = (int)arb_poly_equal((arb_poly_struct const (*))arg1,(arb_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arb_1poly_1overlaps(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  arb_srcptr arg1 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arb_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)_arb_poly_overlaps((arb_struct const *)arg1,arg2,(arb_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1overlaps(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  result = (int)arb_poly_overlaps((arb_poly_struct const (*))arg1,(arb_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1majorant(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_majorant(arg1,(arb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1majorant(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_majorant(arg1,(arb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1fprintd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  FILE *arg1 = (FILE *) 0 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_fprintd(arg1,(arb_poly_struct const (*))arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1printd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  arb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arb_poly_printd((arb_poly_struct const (*))arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_randtest(arg1,arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_add(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_add(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1add_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_add_si(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_sub(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_sub(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1add_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_add_series(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sub_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_sub_series(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arb_poly_neg(arg1,(arb_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1scalar_1mul_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_scalar_mul_2exp_si(arg1,(arb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1scalar_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_scalar_mul(arg1,(arb_poly_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1scalar_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_scalar_div(arg1,(arb_poly_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1mullow_1ztrunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _arb_poly_mullow_ztrunc(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1mullow_1ztrunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_mullow_ztrunc(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1mullow_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _arb_poly_mullow_classical(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1mullow_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_mullow_classical(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1mullow_1block(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _arb_poly_mullow_block(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1mullow_1block(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_mullow_block(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1mullow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _arb_poly_mullow(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1mullow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_mullow(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_mul(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_mul(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1mul_1monic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_mul_monic(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1inv_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_inv_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1inv_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_inv_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1div_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _arb_poly_div_series(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1div_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_div_series(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_div(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1divrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_ptr arg2 = (arb_ptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  arb_srcptr arg5 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg5_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_ptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(arb_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _arb_poly_divrem(arg1,arg2,(arb_struct const *)arg3,arg4,(arb_struct const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1rem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_rem(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1divrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  arb_poly_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = *(arb_poly_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  result = (int)arb_poly_divrem(arg1,arg2,(arb_poly_struct const (*))arg3,(arb_poly_struct const (*))arg4,arg5);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1div_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_struct *arg2 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  arb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg5_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(arb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_div_root(arg1,arg2,(arb_struct const *)arg3,arg4,(arb_struct const (*))arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1product_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_product_roots(arg1,(arb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1product_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_product_roots(arg1,(arb_struct const *)arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1product_1roots_1complex(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_product_roots_complex(arg1,(arb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1product_1roots_1complex(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_poly_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arb_poly_product_roots_complex(arg1,(arb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1arb_1poly_1tree_1alloc(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  mp_limb_signed_t arg1 ;
  arb_ptr *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  result = (arb_ptr *)_arb_poly_tree_alloc(arg1);
  *(arb_ptr **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1tree_1free(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  arb_ptr *arg1 = (arb_ptr *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(arb_ptr **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _arb_poly_tree_free(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1tree_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr *arg1 = (arb_ptr *) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(arb_ptr **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_tree_build(arg1,(arb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1taylor_1shift_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_taylor_shift_horner(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1taylor_1shift_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_taylor_shift_horner(arg1,(arb_poly_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1taylor_1shift_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_taylor_shift_divconquer(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1taylor_1shift_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_taylor_shift_divconquer(arg1,(arb_poly_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1taylor_1shift_1convolution(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_taylor_shift_convolution(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1taylor_1shift_1convolution(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_taylor_shift_convolution(arg1,(arb_poly_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1taylor_1shift(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_taylor_shift(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1taylor_1shift(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_taylor_shift(arg1,(arb_poly_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1compose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_compose(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1compose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_compose(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1compose_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_compose_horner(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1compose_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_compose_horner(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1compose_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_compose_divconquer(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1compose_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_compose_divconquer(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1compose_1series_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _arb_poly_compose_series_horner(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1compose_1series_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_compose_series_horner(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1compose_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _arb_poly_compose_series(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1compose_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_compose_series(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1revert_1series_1lagrange(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_revert_series_lagrange(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1revert_1series_1lagrange(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_revert_series_lagrange(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1revert_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_revert_series_newton(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1revert_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_revert_series_newton(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1revert_1series_1lagrange_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_revert_series_lagrange_fast(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1revert_1series_1lagrange_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_revert_series_lagrange_fast(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1revert_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_revert_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1revert_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_revert_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_evaluate_horner(arg1,(arb_struct const *)arg2,arg3,(arb_struct const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_evaluate_horner(arg1,(arb_poly_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate_1rectangular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_evaluate_rectangular(arg1,(arb_struct const *)arg2,arg3,(arb_struct const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate_1rectangular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_evaluate_rectangular(arg1,(arb_poly_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_evaluate(arg1,(arb_struct const *)arg2,arg3,(arb_struct const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_evaluate(arg1,(arb_poly_struct const (*))arg2,(arb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate2_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  arb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg5_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(arb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_evaluate2_horner(arg1,arg2,(arb_struct const *)arg3,arg4,(arb_struct const (*))arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate2_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_poly_struct *arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_evaluate2_horner(arg1,arg2,(arb_poly_struct const (*))arg3,(arb_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate2_1rectangular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  arb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg5_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(arb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_evaluate2_rectangular(arg1,arg2,(arb_struct const *)arg3,arg4,(arb_struct const (*))arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate2_1rectangular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_poly_struct *arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_evaluate2_rectangular(arg1,arg2,(arb_poly_struct const (*))arg3,(arb_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  arb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg5_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(arb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_evaluate2(arg1,arg2,(arb_struct const *)arg3,arg4,(arb_struct const (*))arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_poly_struct *arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_evaluate2(arg1,arg2,(arb_poly_struct const (*))arg3,(arb_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate_1vec_1iter(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_evaluate_vec_iter(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate_1vec_1iter(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_poly_struct *arg2 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_evaluate_vec_iter(arg1,(arb_poly_struct const (*))arg2,(arb_struct const *)arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate_1vec_1fast_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_ptr *arg4 = (arb_ptr *) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_ptr **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_evaluate_vec_fast_precomp(arg1,(arb_struct const *)arg2,arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate_1vec_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_evaluate_vec_fast(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate_1vec_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_poly_struct *arg2 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_evaluate_vec_fast(arg1,(arb_poly_struct const (*))arg2,(arb_struct const *)arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1interpolate_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_interpolate_newton(arg1,(arb_struct const *)arg2,(arb_struct const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1interpolate_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_interpolate_newton(arg1,(arb_struct const *)arg2,(arb_struct const *)arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1interpolate_1barycentric(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_interpolate_barycentric(arg1,(arb_struct const *)arg2,(arb_struct const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1interpolate_1barycentric(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_interpolate_barycentric(arg1,(arb_struct const *)arg2,(arb_struct const *)arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1interpolation_1weights(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_ptr *arg2 = (arb_ptr *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_ptr **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_interpolation_weights(arg1,arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1interpolate_1fast_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  arb_ptr *arg3 = (arb_ptr *) 0 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = *(arb_ptr **)&jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_interpolate_fast_precomp(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1interpolate_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_interpolate_fast(arg1,(arb_struct const *)arg2,(arb_struct const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1interpolate_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_interpolate_fast(arg1,(arb_struct const *)arg2,(arb_struct const *)arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1derivative(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_derivative(arg1,(arb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1derivative(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_derivative(arg1,(arb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1integral(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_integral(arg1,(arb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1integral(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_integral(arg1,(arb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1borel_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_borel_transform(arg1,(arb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1borel_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_borel_transform(arg1,(arb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1inv_1borel_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_inv_borel_transform(arg1,(arb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1inv_1borel_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_inv_borel_transform(arg1,(arb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1binomial_1transform_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_binomial_transform_basecase(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1binomial_1transform_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_binomial_transform_basecase(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1binomial_1transform_1convolution(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_binomial_transform_convolution(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1binomial_1transform_1convolution(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_binomial_transform_convolution(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1binomial_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_binomial_transform(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1binomial_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_binomial_transform(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1pow_1ui_1trunc_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_pow_ui_trunc_binexp(arg1,(arb_struct const *)arg2,arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1pow_1ui_1trunc_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_pow_ui_trunc_binexp(arg1,(arb_poly_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_pow_ui(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_pow_ui(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1pow_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _arb_poly_pow_series(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1pow_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_pow_series(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1pow_1arb_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_pow_arb_series(arg1,(arb_struct const *)arg2,arg3,(arb_struct const (*))arg4,arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1pow_1arb_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_pow_arb_series(arg1,(arb_poly_struct const (*))arg2,(arb_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1binomial_1pow_1arb_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_binomial_pow_arb_series(arg1,(arb_struct const *)arg2,arg3,(arb_struct const (*))arg4,arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1rsqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_rsqrt_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1rsqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_rsqrt_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_sqrt_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_sqrt_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1log_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_log_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1log_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_log_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1log1p_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_log1p_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1log1p_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_log1p_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1atan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_atan_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1atan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_atan_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1asin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_asin_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1asin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_asin_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1acos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_acos_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1acos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_acos_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1exp_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_exp_series_basecase(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1exp_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_exp_series_basecase(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1exp_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_exp_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1exp_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_exp_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sinh_1cosh_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_ptr arg2 = (arb_ptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_ptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_sinh_cosh_series_basecase(arg1,arg2,(arb_struct const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sinh_1cosh_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_sinh_cosh_series_basecase(arg1,arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sinh_1cosh_1series_1exponential(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_ptr arg2 = (arb_ptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_ptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_sinh_cosh_series_exponential(arg1,arg2,(arb_struct const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sinh_1cosh_1series_1exponential(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_sinh_cosh_series_exponential(arg1,arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sinh_1cosh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_ptr arg2 = (arb_ptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_ptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_sinh_cosh_series(arg1,arg2,(arb_struct const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sinh_1cosh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_sinh_cosh_series(arg1,arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sinh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_sinh_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sinh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_sinh_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1cosh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_cosh_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1cosh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_cosh_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sin_1cos_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_ptr arg2 = (arb_ptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_ptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  _arb_poly_sin_cos_series_basecase(arg1,arg2,(arb_struct const *)arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sin_1cos_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (int)jarg6; 
  arb_poly_sin_cos_series_basecase(arg1,arg2,(arb_poly_struct const (*))arg3,arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sin_1cos_1series_1tangent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_ptr arg2 = (arb_ptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_ptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  _arb_poly_sin_cos_series_tangent(arg1,arg2,(arb_struct const *)arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sin_1cos_1series_1tangent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (int)jarg6; 
  arb_poly_sin_cos_series_tangent(arg1,arg2,(arb_poly_struct const (*))arg3,arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sin_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_ptr arg2 = (arb_ptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_ptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_sin_cos_series(arg1,arg2,(arb_struct const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sin_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_sin_cos_series(arg1,arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sin_1cos_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_ptr arg2 = (arb_ptr) 0 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_ptr *)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_sin_cos_pi_series(arg1,arg2,(arb_struct const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sin_1cos_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_sin_cos_pi_series(arg1,arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_sin_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_sin_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_cos_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_cos_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sin_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_sin_pi_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sin_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_sin_pi_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1cos_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_cos_pi_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1cos_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_cos_pi_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1cot_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_cot_pi_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1cot_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_cot_pi_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1tan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_tan_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1tan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_tan_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sinc_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_sinc_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sinc_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_sinc_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1sinc_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_sinc_pi_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1sinc_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_sinc_pi_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1compose_1series_1brent_1kung(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _arb_poly_compose_series_brent_kung(arg1,(arb_struct const *)arg2,arg3,(arb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1compose_1series_1brent_1kung(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_compose_series_brent_kung(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate_1acb_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_evaluate_acb_horner(arg1,(arb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate_1acb_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  arb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_evaluate_acb_horner(arg1,(arb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate_1acb_1rectangular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_evaluate_acb_rectangular(arg1,(arb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate_1acb_1rectangular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  arb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_evaluate_acb_rectangular(arg1,(arb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate_1acb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_evaluate_acb(arg1,(arb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate_1acb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  arb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_evaluate_acb(arg1,(arb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate2_1acb_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  acb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg5_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(acb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_evaluate2_acb_horner(arg1,arg2,(arb_struct const *)arg3,arg4,(acb_struct const (*))arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate2_1acb_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  arb_poly_struct *arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_evaluate2_acb_horner(arg1,arg2,(arb_poly_struct const (*))arg3,(acb_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate2_1acb_1rectangular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  acb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg5_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(acb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_evaluate2_acb_rectangular(arg1,arg2,(arb_struct const *)arg3,arg4,(acb_struct const (*))arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate2_1acb_1rectangular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  arb_poly_struct *arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_evaluate2_acb_rectangular(arg1,arg2,(arb_poly_struct const (*))arg3,(acb_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1evaluate2_1acb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  arb_srcptr arg3 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  acb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg5_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(arb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(acb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_evaluate2_acb(arg1,arg2,(arb_struct const *)arg3,arg4,(acb_struct const (*))arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1evaluate2_1acb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  arb_poly_struct *arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_evaluate2_acb(arg1,arg2,(arb_poly_struct const (*))arg3,(acb_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1lambertw_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  int arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_lambertw_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1lambertw_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_lambertw_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1gamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_gamma_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1gamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_gamma_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1rgamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_rgamma_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1rgamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_rgamma_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1lgamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_lgamma_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1lgamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_lgamma_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1digamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_digamma_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1digamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_digamma_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1rising_1ui_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _arb_poly_rising_ui_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1rising_1ui_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arb_poly_rising_ui_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1zeta_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  int arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _arb_poly_zeta_series(arg1,(arb_struct const *)arg2,arg3,(arb_struct const (*))arg4,arg5,arg6,arg7);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1zeta_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_struct *arg3 ;
  int arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arb_poly_zeta_series(arg1,(arb_poly_struct const (*))arg2,(arb_struct const (*))arg3,arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1riemann_1siegel_1theta_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_riemann_siegel_theta_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1riemann_1siegel_1theta_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_riemann_siegel_theta_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1riemann_1siegel_1z_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_riemann_siegel_z_series(arg1,(arb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1riemann_1siegel_1z_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arb_poly_riemann_siegel_z_series(arg1,(arb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arb_1poly_1swinnerton_1dyer_1ui_1prec(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (mp_limb_signed_t)_arb_poly_swinnerton_dyer_ui_prec(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1swinnerton_1dyer_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _arb_poly_swinnerton_dyer_ui(arg1,arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1swinnerton_1dyer_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_poly_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arb_poly_swinnerton_dyer_ui(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1newton_1convergence_1factor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  arf_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _arb_poly_newton_convergence_factor(arg1,(arb_struct const *)arg2,arg3,(arb_struct const (*))arg4,arg5);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1arb_1poly_1newton_1step(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_, jint jarg7) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  arb_struct *arg5 ;
  arf_struct *arg6 ;
  mp_limb_signed_t arg7 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  (void)jarg6_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = *(arb_struct **)&jarg5; 
  arg6 = *(arf_struct **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  result = (int)_arb_poly_newton_step(arg1,(arb_struct const *)arg2,arg3,(arb_struct const (*))arg4,(arb_struct const (*))arg5,(arf_struct const (*))arg6,arg7);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1newton_1refine_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
  arb_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  arb_struct *arg5 ;
  arf_struct *arg6 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  (void)jarg6_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = *(arb_struct **)&jarg5; 
  arg6 = *(arf_struct **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  _arb_poly_newton_refine_root(arg1,(arb_struct const *)arg2,arg3,(arb_struct const (*))arg4,(arb_struct const (*))arg5,(arf_struct const (*))arg6,arg7,arg8);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1arb_1poly_1root_1bound_1fujiwara(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  mag_struct *arg1 ;
  arb_srcptr arg2 = (arb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _arb_poly_root_bound_fujiwara(arg1,(arb_struct const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1poly_1root_1bound_1fujiwara(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  arb_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arb_poly_root_bound_fujiwara(arg1,arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_arb_1poly_1allocated_1bytes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  arb_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)arb_poly_allocated_bytes((arb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_n_1zerobits(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  mp_limb_t arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  result = (int)n_zerobits(arg1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_poly_1pow_1length(JNIEnv *jenv, jclass jcls, jint jarg1, jlong jarg2, jint jarg3) {
  jint jresult = 0 ;
  mp_limb_signed_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (mp_limb_signed_t)poly_pow_length(arg1,arg2,arg3);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1struct_1coeffs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_poly_struct *arg1 = (acb_poly_struct *) 0 ;
  acb_ptr arg2 = (acb_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_ptr *)&jarg2; 
  if (arg1) (arg1)->coeffs = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1poly_1struct_1coeffs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_poly_struct *arg1 = (acb_poly_struct *) 0 ;
  acb_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  result = (acb_ptr) ((arg1)->coeffs);
  *(acb_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1struct_1length_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_poly_struct *arg1 = (acb_poly_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->length = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1struct_1length_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 = (acb_poly_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->length);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1struct_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_poly_struct *arg1 = (acb_poly_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->alloc = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1struct_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 = (acb_poly_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->alloc);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1acb_1poly_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  acb_poly_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (acb_poly_struct *)new acb_poly_struct();
  *(acb_poly_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1acb_1poly_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  acb_poly_struct *arg1 = (acb_poly_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(acb_poly_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  acb_poly_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1init2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  acb_poly_init2(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  acb_poly_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1fit_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  acb_poly_fit_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1set_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _acb_poly_set_length(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1normalise(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  _acb_poly_normalise(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1swap(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  acb_poly_swap(arg1,arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)acb_poly_length((acb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1degree(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)acb_poly_degree((acb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1valuation(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)acb_poly_valuation((acb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1is_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  result = (int)acb_poly_is_zero((acb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1is_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  result = (int)acb_poly_is_one((acb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1is_1x(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  result = (int)acb_poly_is_x((acb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  acb_poly_zero(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_poly_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  acb_poly_one(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set_1coeff_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  acb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_set_coeff_si(arg1,arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set_1coeff_1acb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_) {
  acb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  acb_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  acb_poly_set_coeff_acb(arg1,arg2,(acb_struct const (*))arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1get_1coeff_1acb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_get_coeff_acb(arg1,(acb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1shift_1right(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_shift_right(arg1,(acb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1shift_1right(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_shift_right(arg1,(acb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1shift_1left(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_shift_left(arg1,(acb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1shift_1left(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_shift_left(arg1,(acb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1truncate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  acb_poly_truncate(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1majorant(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_majorant(arg1,(acb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1majorant(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_majorant(arg1,(acb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1fprintd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  FILE *arg1 = (FILE *) 0 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(FILE **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_fprintd(arg1,(acb_poly_struct const (*))arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1printd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  acb_poly_printd((acb_poly_struct const (*))arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1evaluate_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_evaluate_horner(arg1,(acb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1evaluate_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_evaluate_horner(arg1,(acb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1evaluate_1rectangular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_evaluate_rectangular(arg1,(acb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1evaluate_1rectangular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_evaluate_rectangular(arg1,(acb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1evaluate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_evaluate(arg1,(acb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1evaluate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_evaluate(arg1,(acb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1evaluate2_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  acb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg5_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(acb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_evaluate2_horner(arg1,arg2,(acb_struct const *)arg3,arg4,(acb_struct const (*))arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1evaluate2_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_poly_struct *arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_evaluate2_horner(arg1,arg2,(acb_poly_struct const (*))arg3,(acb_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1evaluate2_1rectangular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  acb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg5_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(acb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_evaluate2_rectangular(arg1,arg2,(acb_struct const *)arg3,arg4,(acb_struct const (*))arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1evaluate2_1rectangular(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_poly_struct *arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_evaluate2_rectangular(arg1,arg2,(acb_poly_struct const (*))arg3,(acb_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1evaluate2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  acb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg5_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(acb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_evaluate2(arg1,arg2,(acb_struct const *)arg3,arg4,(acb_struct const (*))arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1evaluate2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_poly_struct *arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_evaluate2(arg1,arg2,(acb_poly_struct const (*))arg3,(acb_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1derivative(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_derivative(arg1,(acb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1derivative(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_derivative(arg1,(acb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1integral(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_integral(arg1,(acb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1integral(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_integral(arg1,(acb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1borel_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_borel_transform(arg1,(acb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1borel_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_borel_transform(arg1,(acb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1inv_1borel_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_inv_borel_transform(arg1,(acb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1inv_1borel_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_inv_borel_transform(arg1,(acb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1binomial_1transform_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_binomial_transform_basecase(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1binomial_1transform_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_binomial_transform_basecase(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1binomial_1transform_1convolution(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_binomial_transform_convolution(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1binomial_1transform_1convolution(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_binomial_transform_convolution(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1binomial_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_binomial_transform(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1binomial_1transform(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_binomial_transform(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  acb_poly_set(arg1,(acb_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_set_round(arg1,(acb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set_1trunc(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_set_trunc(arg1,(acb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set_1trunc_1round(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_set_trunc_round(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set_1arb_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  acb_poly_set_arb_poly(arg1,(arb_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set2_1arb_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  acb_poly_struct *arg1 ;
  arb_poly_struct *arg2 ;
  arb_poly_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(arb_poly_struct **)&jarg2; 
  arg3 = *(arb_poly_struct **)&jarg3; 
  acb_poly_set2_arb_poly(arg1,(arb_poly_struct const (*))arg2,(arb_poly_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set_1fmpq_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_set_fmpq_poly(arg1,(fmpq_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set2_1fmpq_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  fmpq_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  arg3 = *(fmpq_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_set2_fmpq_poly(arg1,(fmpq_poly_struct const (*))arg2,(fmpq_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set_1fmpz_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_set_fmpz_poly(arg1,(fmpz_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set2_1fmpz_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  fmpz_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  arg3 = *(fmpz_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_set2_fmpz_poly(arg1,(fmpz_poly_struct const (*))arg2,(fmpz_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1get_1unique_1fmpz_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  fmpz_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(fmpz_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  result = (int)acb_poly_get_unique_fmpz_poly(arg1,(acb_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set_1acb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_poly_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_poly_set_acb(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1set_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_poly_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  acb_poly_set_si(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1randtest(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  flint_rand_s *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(flint_rand_s **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_randtest(arg1,arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1equal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  result = (int)acb_poly_equal((acb_poly_struct const (*))arg1,(acb_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1contains_1fmpz_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  fmpz_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(fmpz_poly_struct **)&jarg2; 
  result = (int)acb_poly_contains_fmpz_poly((acb_poly_struct const (*))arg1,(fmpz_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1contains_1fmpq_1poly(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  fmpq_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(fmpq_poly_struct **)&jarg2; 
  result = (int)acb_poly_contains_fmpq_poly((acb_poly_struct const (*))arg1,(fmpq_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1acb_1poly_1overlaps(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  jint jresult = 0 ;
  acb_srcptr arg1 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(acb_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)_acb_poly_overlaps((acb_struct const *)arg1,arg2,(acb_struct const *)arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1overlaps(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  result = (int)acb_poly_overlaps((acb_poly_struct const (*))arg1,(acb_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1contains(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  result = (int)acb_poly_contains((acb_poly_struct const (*))arg1,(acb_poly_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1is_1real(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  result = (int)acb_poly_is_real((acb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_add(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_add(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1add_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_add_si(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_sub(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sub(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_sub(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1add_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_add_series(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sub_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_sub_series(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1neg(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  acb_poly_neg(arg1,(acb_poly_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1scalar_1mul_12exp_1si(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_poly_scalar_mul_2exp_si(arg1,(acb_poly_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1scalar_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_scalar_mul(arg1,(acb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1scalar_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_scalar_div(arg1,(acb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1mullow_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_mullow_classical(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1mullow_1classical(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_mullow_classical(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1mullow_1transpose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_mullow_transpose(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1mullow_1transpose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_mullow_transpose(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1mullow_1transpose_1gauss(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_mullow_transpose_gauss(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1mullow_1transpose_1gauss(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_mullow_transpose_gauss(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1mullow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_mullow(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1mullow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_mullow(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_mul(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_mul(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1mul_1monic(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_mul_monic(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1inv_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_inv_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1inv_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_inv_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1div_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_div_series(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1div_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_div_series(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1reverse(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_reverse(arg1,(acb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1div(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_div(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1divrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_ptr arg2 = (acb_ptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  acb_srcptr arg5 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg5_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_ptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(acb_srcptr *)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_divrem(arg1,arg2,(acb_struct const *)arg3,arg4,(acb_struct const *)arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1rem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_rem(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1divrem(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  acb_poly_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = *(acb_poly_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  result = (int)acb_poly_divrem(arg1,arg2,(acb_poly_struct const (*))arg3,(acb_poly_struct const (*))arg4,arg5);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1div_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  acb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg5_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(acb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_div_root(arg1,arg2,(acb_struct const *)arg3,arg4,(acb_struct const (*))arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1taylor_1shift_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_taylor_shift_horner(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1taylor_1shift_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_taylor_shift_horner(arg1,(acb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1taylor_1shift_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_taylor_shift_divconquer(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1taylor_1shift_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_taylor_shift_divconquer(arg1,(acb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1taylor_1shift_1convolution(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_taylor_shift_convolution(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1taylor_1shift_1convolution(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_taylor_shift_convolution(arg1,(acb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1taylor_1shift(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_taylor_shift(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1taylor_1shift(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_taylor_shift(arg1,(acb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1compose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_compose(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1compose(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_compose(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1compose_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_compose_horner(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1compose_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_compose_horner(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1compose_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_compose_divconquer(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1compose_1divconquer(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_compose_divconquer(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1compose_1series_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_compose_series_horner(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1compose_1series_1horner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_compose_series_horner(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1compose_1series_1brent_1kung(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_compose_series_brent_kung(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1compose_1series_1brent_1kung(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_compose_series_brent_kung(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1compose_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_compose_series(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1compose_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_compose_series(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1revert_1series_1lagrange(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_revert_series_lagrange(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1revert_1series_1lagrange(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_revert_series_lagrange(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1revert_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_revert_series_newton(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1revert_1series_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_revert_series_newton(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1revert_1series_1lagrange_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_revert_series_lagrange_fast(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1revert_1series_1lagrange_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_revert_series_lagrange_fast(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1revert_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_revert_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1revert_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_revert_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1evaluate_1vec_1fast_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_ptr *arg4 = (acb_ptr *) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_ptr **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_evaluate_vec_fast_precomp(arg1,(acb_struct const *)arg2,arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1evaluate_1vec_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_evaluate_vec_fast(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1evaluate_1vec_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_poly_struct *arg2 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_evaluate_vec_fast(arg1,(acb_poly_struct const (*))arg2,(acb_struct const *)arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1evaluate_1vec_1iter(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_evaluate_vec_iter(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1evaluate_1vec_1iter(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_poly_struct *arg2 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_evaluate_vec_iter(arg1,(acb_poly_struct const (*))arg2,(acb_struct const *)arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1interpolate_1barycentric(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_interpolate_barycentric(arg1,(acb_struct const *)arg2,(acb_struct const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1interpolate_1barycentric(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_interpolate_barycentric(arg1,(acb_struct const *)arg2,(acb_struct const *)arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1interpolation_1weights(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_ptr *arg2 = (acb_ptr *) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_ptr **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_interpolation_weights(arg1,arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1interpolate_1fast_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  acb_ptr *arg3 = (acb_ptr *) 0 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = *(acb_ptr **)&jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_interpolate_fast_precomp(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1interpolate_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_interpolate_fast(arg1,(acb_struct const *)arg2,(acb_struct const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1interpolate_1fast(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_interpolate_fast(arg1,(acb_struct const *)arg2,(acb_struct const *)arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1interpolate_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_interpolate_newton(arg1,(acb_struct const *)arg2,(acb_struct const *)arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1interpolate_1newton(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_interpolate_newton(arg1,(acb_struct const *)arg2,(acb_struct const *)arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1product_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_product_roots(arg1,(acb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1product_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_product_roots(arg1,(acb_struct const *)arg2,arg3,arg4);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1acb_1poly_1tree_1alloc(JNIEnv *jenv, jclass jcls, jint jarg1) {
  jlong jresult = 0 ;
  mp_limb_signed_t arg1 ;
  acb_ptr *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_signed_t)jarg1; 
  result = (acb_ptr *)_acb_poly_tree_alloc(arg1);
  *(acb_ptr **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1tree_1free(JNIEnv *jenv, jclass jcls, jlong jarg1, jint jarg2) {
  acb_ptr *arg1 = (acb_ptr *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(acb_ptr **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  _acb_poly_tree_free(arg1,arg2);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1tree_1build(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr *arg1 = (acb_ptr *) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(acb_ptr **)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_tree_build(arg1,(acb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1root_1inclusion(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_root_inclusion(arg1,(acb_struct const (*))arg2,(acb_struct const *)arg3,(acb_struct const *)arg4,arg5,arg6);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1acb_1poly_1validate_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (mp_limb_signed_t)_acb_poly_validate_roots(arg1,(acb_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1refine_1roots_1durand_1kerner(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_poly_refine_roots_durand_kerner(arg1,(acb_struct const *)arg2,arg3,arg4);
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1acb_1poly_1find_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  jint jresult = 0 ;
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  result = (mp_limb_signed_t)_acb_poly_find_roots(arg1,(acb_struct const *)arg2,(acb_struct const *)arg3,arg4,arg5,arg6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1find_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  jint jresult = 0 ;
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_poly_struct *arg2 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  result = (mp_limb_signed_t)acb_poly_find_roots(arg1,(acb_poly_struct const (*))arg2,(acb_struct const *)arg3,arg4,arg5);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1root_1bound_1fujiwara(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  mag_struct *arg1 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  _acb_poly_root_bound_fujiwara(arg1,(acb_struct const *)arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1root_1bound_1fujiwara(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  acb_poly_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  acb_poly_root_bound_fujiwara(arg1,arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1acb_1poly_1validate_1real_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  acb_srcptr arg1 = (acb_srcptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_srcptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (int)_acb_poly_validate_real_roots((acb_struct const *)arg1,(acb_struct const *)arg2,arg3,arg4);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1validate_1real_1roots(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  jint jresult = 0 ;
  acb_srcptr arg1 = (acb_srcptr) 0 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_srcptr *)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (int)acb_poly_validate_real_roots((acb_struct const *)arg1,(acb_poly_struct const (*))arg2,arg3);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1pow_1ui_1trunc_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_pow_ui_trunc_binexp(arg1,(acb_struct const *)arg2,arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1pow_1ui_1trunc_1binexp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_pow_ui_trunc_binexp(arg1,(acb_poly_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_pow_ui(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1pow_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_pow_ui(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1rsqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_rsqrt_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1rsqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_rsqrt_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1sqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_sqrt_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sqrt_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_sqrt_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1log_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_log_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1log_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_log_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1log1p_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_log1p_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1log1p_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_log1p_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1atan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_atan_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1atan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_atan_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1exp_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_exp_series_basecase(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1exp_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_exp_series_basecase(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1exp_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_exp_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1exp_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_exp_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1exp_1pi_1i_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_exp_pi_i_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1exp_1pi_1i_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_exp_pi_i_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1sinh_1cosh_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_ptr arg2 = (acb_ptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) (acb_srcptr)0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_ptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_sinh_cosh_series_basecase(arg1,arg2,(acb_struct const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sinh_1cosh_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_sinh_cosh_series_basecase(arg1,arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1sinh_1cosh_1series_1exponential(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_ptr arg2 = (acb_ptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) (acb_srcptr)0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_ptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_sinh_cosh_series_exponential(arg1,arg2,(acb_struct const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sinh_1cosh_1series_1exponential(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_sinh_cosh_series_exponential(arg1,arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1sinh_1cosh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_ptr arg2 = (acb_ptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) (acb_srcptr)0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_ptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_sinh_cosh_series(arg1,arg2,(acb_struct const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sinh_1cosh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_sinh_cosh_series(arg1,arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1sinh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_sinh_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sinh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_sinh_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1cosh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_cosh_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1cosh_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_cosh_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1sin_1cos_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_ptr arg2 = (acb_ptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_ptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  _acb_poly_sin_cos_series_basecase(arg1,arg2,(acb_struct const *)arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sin_1cos_1series_1basecase(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (int)jarg6; 
  acb_poly_sin_cos_series_basecase(arg1,arg2,(acb_poly_struct const (*))arg3,arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1sin_1cos_1series_1tangent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_ptr arg2 = (acb_ptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) (acb_srcptr)0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  int arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_ptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (int)jarg7; 
  _acb_poly_sin_cos_series_tangent(arg1,arg2,(acb_struct const *)arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sin_1cos_1series_1tangent(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  int arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (int)jarg6; 
  acb_poly_sin_cos_series_tangent(arg1,arg2,(acb_poly_struct const (*))arg3,arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1sin_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_ptr arg2 = (acb_ptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) (acb_srcptr)0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_ptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_sin_cos_series(arg1,arg2,(acb_struct const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sin_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_sin_cos_series(arg1,arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1sin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_sin_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sin_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_sin_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_cos_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1cos_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_cos_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1sin_1cos_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_ptr arg2 = (acb_ptr) 0 ;
  acb_srcptr arg3 = (acb_srcptr) (acb_srcptr)0 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_ptr *)&jarg2; 
  arg3 = *(acb_srcptr *)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_sin_cos_pi_series(arg1,arg2,(acb_struct const *)arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sin_1cos_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_sin_cos_pi_series(arg1,arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1sin_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_sin_pi_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sin_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_sin_pi_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1cos_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_cos_pi_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1cos_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_cos_pi_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1cot_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_cot_pi_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1cot_1pi_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_cot_pi_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1tan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_tan_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1tan_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_tan_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1sinc_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_sinc_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1sinc_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_sinc_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1lambertw_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  int arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_lambertw_series(arg1,(acb_struct const *)arg2,arg3,(long const (*))arg4,arg5,arg6,arg7);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1lambertw_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5, jint jarg6) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  fmpz *arg3 ;
  int arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_poly_lambertw_series(arg1,(acb_poly_struct const (*))arg2,(long const (*))arg3,arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1gamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_gamma_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1gamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_gamma_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1rgamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_rgamma_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1rgamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_rgamma_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1lgamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_lgamma_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1lgamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_lgamma_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1digamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_digamma_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1digamma_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_digamma_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1rising_1ui_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_rising_ui_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5,arg6);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1rising_1ui_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_rising_ui_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1pow_1acb_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_pow_acb_series(arg1,(acb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1pow_1acb_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_pow_acb_series(arg1,(acb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1pow_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_pow_series(arg1,(acb_struct const *)arg2,arg3,(acb_struct const *)arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1pow_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_poly_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_poly_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_pow_series(arg1,(acb_poly_struct const (*))arg2,(acb_poly_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1binomial_1pow_1acb_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_binomial_pow_acb_series(arg1,(acb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1acb_1pow_1cpx(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_acb_pow_cpx(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1acb_1invpow_1cpx(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_acb_invpow_cpx(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1mullow_1cpx(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_mullow_cpx(arg1,(acb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1powsum_1series_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_powsum_series_naive(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,(acb_struct const (*))arg4,arg5,arg6,arg7);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1powsum_1series_1naive_1threaded(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_powsum_series_naive_threaded(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,(acb_struct const (*))arg4,arg5,arg6,arg7);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1powsum_1one_1series_1sieved(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_powsum_one_series_sieved(arg1,(acb_struct const (*))arg2,arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1zeta_1em_1sum(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jlong jarg5, jlong jarg6, jint jarg7, jint jarg8) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  int arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t arg6 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  _acb_poly_zeta_em_sum(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5,arg6,arg7,arg8);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1zeta_1em_1choose_1param(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jint jarg6, jint jarg7, jint jarg8) {
  mag_struct *arg1 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  acb_struct *arg4 ;
  acb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = *(acb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  _acb_poly_zeta_em_choose_param(arg1,arg2,arg3,(acb_struct const (*))arg4,(acb_struct const (*))arg5,arg6,arg7,arg8);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1zeta_1em_1bound1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6, jint jarg7) {
  mag_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_zeta_em_bound1(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5,arg6,arg7);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1zeta_1em_1bound(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5, jint jarg6, jint jarg7) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_zeta_em_bound(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5,arg6,arg7);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1zeta_1em_1tail_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_zeta_em_tail_naive(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,(acb_struct const *)arg4,arg5,arg6,arg7);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1zeta_1em_1tail_1bsplit(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  acb_srcptr arg4 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = *(acb_srcptr *)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_zeta_em_tail_bsplit(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,(acb_struct const *)arg4,arg5,arg6,arg7);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1zeta_1cpx_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  int arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_zeta_cpx_series(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5,arg6);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1zeta_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  int arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_poly_zeta_series(arg1,(acb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5,arg6,arg7);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1zeta_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5, jint jarg6) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  int arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_poly_zeta_series(arg1,(acb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1polylog_1cpx_1zeta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_polylog_cpx_zeta(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1polylog_1cpx_1small(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_polylog_cpx_small(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1polylog_1cpx(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_polylog_cpx(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1polylog_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_polylog_series(arg1,(acb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1polylog_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_polylog_series(arg1,(acb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1agm1_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_agm1_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1agm1_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_agm1_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1elliptic_1k_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_elliptic_k_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1elliptic_1k_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_elliptic_k_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1elliptic_1p_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_poly_elliptic_p_series(arg1,(acb_struct const *)arg2,arg3,(acb_struct const (*))arg4,arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1elliptic_1p_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_poly_elliptic_p_series(arg1,(acb_poly_struct const (*))arg2,(acb_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1poly_1erf_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  _acb_poly_erf_series(arg1,(acb_struct const *)arg2,arg3,arg4,arg5);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1poly_1erf_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_poly_erf_series(arg1,(acb_poly_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1poly_1allocated_1bytes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_poly_struct *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  result = (mp_limb_signed_t)acb_poly_allocated_bytes((acb_poly_struct const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1MODPE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DLOG_MODPE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1CRT_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DLOG_CRT;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1POWER_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DLOG_POWER;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1BSGS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DLOG_BSGS;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1TABLE_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DLOG_TABLE;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_123_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)DLOG_23;
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_11modpe_1struct_1inv1p_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_1modpe_struct *arg1 = (dlog_1modpe_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_1modpe_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->inv1p = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_11modpe_1struct_1inv1p_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_1modpe_struct *arg1 = (dlog_1modpe_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_1modpe_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->inv1p);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_11modpe_1struct_1invloga1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_1modpe_struct *arg1 = (dlog_1modpe_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_1modpe_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->invloga1 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_11modpe_1struct_1invloga1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_1modpe_struct *arg1 = (dlog_1modpe_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_1modpe_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->invloga1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dlog_11modpe_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dlog_1modpe_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dlog_1modpe_struct *)new dlog_1modpe_struct();
  *(dlog_1modpe_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dlog_11modpe_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dlog_1modpe_struct *arg1 = (dlog_1modpe_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dlog_1modpe_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1p_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->p = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1p_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->p);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1e_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->e = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1e_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->e);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1pe1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->pe1 = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1pe1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->pe1);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1inva_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->inva = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1inva_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->inva);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1pe_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->pe = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1pe_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  result = (nmod_t *)& ((arg1)->pe);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1modp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  dlog_precomp_struct *arg2 = (dlog_precomp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  arg2 = *(dlog_precomp_struct **)&jarg2; 
  if (arg1) (arg1)->modp = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1modp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  dlog_precomp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  result = (dlog_precomp_struct *) ((arg1)->modp);
  *(dlog_precomp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1modpe_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  dlog_1modpe_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  arg2 = *(dlog_1modpe_struct **)&jarg2; 
  {
    size_t ii;
    dlog_1modpe_struct *b = (dlog_1modpe_struct *) arg1->modpe;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((dlog_1modpe_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1modpe_1struct_1modpe_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  dlog_1modpe_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  result = (dlog_1modpe_struct *) ((arg1)->modpe);
  *(dlog_1modpe_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dlog_1modpe_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dlog_modpe_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dlog_modpe_struct *)new dlog_modpe_struct();
  *(dlog_modpe_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dlog_1modpe_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dlog_modpe_struct *arg1 = (dlog_modpe_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1table_1struct_1mod_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_table_struct *arg1 = (dlog_table_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_table_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->mod = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1table_1struct_1mod_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_table_struct *arg1 = (dlog_table_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_table_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->mod);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1table_1struct_1table_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_table_struct *arg1 = (dlog_table_struct *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_table_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  if (arg1) (arg1)->table = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1table_1struct_1table_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_table_struct *arg1 = (dlog_table_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_table_struct **)&jarg1; 
  result = (mp_limb_t *) ((arg1)->table);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dlog_1table_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dlog_table_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dlog_table_struct *)new dlog_table_struct();
  *(dlog_table_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dlog_1table_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dlog_table_struct *arg1 = (dlog_table_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dlog_table_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_apow_1t_1k_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  apow *arg1 = (apow *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(apow **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->k = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_apow_1t_1k_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  apow *arg1 = (apow *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(apow **)&jarg1; 
  result = (mp_limb_t) ((arg1)->k);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_apow_1t_1ak_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  apow *arg1 = (apow *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(apow **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->ak = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_apow_1t_1ak_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  apow *arg1 = (apow *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(apow **)&jarg1; 
  result = (mp_limb_t) ((arg1)->ak);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1apow_1t(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  apow *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (apow *)new apow();
  *(apow **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1apow_1t(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  apow *arg1 = (apow *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(apow **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_apow_1cmp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  apow_t *arg1 = (apow_t *) 0 ;
  apow_t *arg2 = (apow_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(apow_t **)&jarg1; 
  arg2 = *(apow_t **)&jarg2; 
  result = (int)apow_cmp((apow const *)arg1,(apow const *)arg2);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1bsgs_1struct_1mod_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dlog_bsgs_struct *arg1 = (dlog_bsgs_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->mod = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1bsgs_1struct_1mod_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_bsgs_struct *arg1 = (dlog_bsgs_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  result = (nmod_t *)& ((arg1)->mod);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1bsgs_1struct_1m_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_bsgs_struct *arg1 = (dlog_bsgs_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->m = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1bsgs_1struct_1m_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_bsgs_struct *arg1 = (dlog_bsgs_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->m);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1bsgs_1struct_1am_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_bsgs_struct *arg1 = (dlog_bsgs_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->am = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1bsgs_1struct_1am_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_bsgs_struct *arg1 = (dlog_bsgs_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->am);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1bsgs_1struct_1g_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_bsgs_struct *arg1 = (dlog_bsgs_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->g = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1bsgs_1struct_1g_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_bsgs_struct *arg1 = (dlog_bsgs_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->g);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1bsgs_1struct_1table_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dlog_bsgs_struct *arg1 = (dlog_bsgs_struct *) 0 ;
  apow_t *arg2 = (apow_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  arg2 = *(apow_t **)&jarg2; 
  if (arg1) (arg1)->table = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1bsgs_1struct_1table_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_bsgs_struct *arg1 = (dlog_bsgs_struct *) 0 ;
  apow_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  result = (apow_t *) ((arg1)->table);
  *(apow_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dlog_1bsgs_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dlog_bsgs_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dlog_bsgs_struct *)new dlog_bsgs_struct();
  *(dlog_bsgs_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dlog_1bsgs_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dlog_bsgs_struct *arg1 = (dlog_bsgs_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1rho_1struct_1a_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_rho_struct *arg1 = (dlog_rho_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_rho_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->a = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1rho_1struct_1a_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_rho_struct *arg1 = (dlog_rho_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_rho_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->a);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1rho_1struct_1n_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dlog_rho_struct *arg1 = (dlog_rho_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dlog_rho_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->n = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1rho_1struct_1n_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_rho_struct *arg1 = (dlog_rho_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_rho_struct **)&jarg1; 
  result = (nmod_t *)& ((arg1)->n);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1rho_1struct_1mod_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dlog_rho_struct *arg1 = (dlog_rho_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dlog_rho_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->mod = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1rho_1struct_1mod_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_rho_struct *arg1 = (dlog_rho_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_rho_struct **)&jarg1; 
  result = (nmod_t *)& ((arg1)->mod);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1rho_1struct_1nisprime_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  dlog_rho_struct *arg1 = (dlog_rho_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_rho_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->nisprime = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dlog_1rho_1struct_1nisprime_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dlog_rho_struct *arg1 = (dlog_rho_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_rho_struct **)&jarg1; 
  result = (int) ((arg1)->nisprime);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dlog_1rho_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dlog_rho_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dlog_rho_struct *)new dlog_rho_struct();
  *(dlog_rho_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dlog_1rho_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dlog_rho_struct *arg1 = (dlog_rho_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dlog_rho_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1crt_1struct_1mod_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dlog_crt_struct *arg1 = (dlog_crt_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->mod = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1crt_1struct_1mod_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_crt_struct *arg1 = (dlog_crt_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  result = (nmod_t *)& ((arg1)->mod);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1crt_1struct_1n_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dlog_crt_struct *arg1 = (dlog_crt_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->n = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1crt_1struct_1n_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_crt_struct *arg1 = (dlog_crt_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  result = (nmod_t *)& ((arg1)->n);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1crt_1struct_1num_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_crt_struct *arg1 = (dlog_crt_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->num = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1crt_1struct_1num_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_crt_struct *arg1 = (dlog_crt_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->num);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1crt_1struct_1expo_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_crt_struct *arg1 = (dlog_crt_struct *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  if (arg1) (arg1)->expo = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1crt_1struct_1expo_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_crt_struct *arg1 = (dlog_crt_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  result = (mp_limb_t *) ((arg1)->expo);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1crt_1struct_1crt_1coeffs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_crt_struct *arg1 = (dlog_crt_struct *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  if (arg1) (arg1)->crt_coeffs = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1crt_1struct_1crt_1coeffs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_crt_struct *arg1 = (dlog_crt_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  result = (mp_limb_t *) ((arg1)->crt_coeffs);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1crt_1struct_1pre_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dlog_crt_struct *arg1 = (dlog_crt_struct *) 0 ;
  dlog_precomp_ptr arg2 = (dlog_precomp_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  arg2 = *(dlog_precomp_ptr *)&jarg2; 
  if (arg1) (arg1)->pre = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1crt_1struct_1pre_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_crt_struct *arg1 = (dlog_crt_struct *) 0 ;
  dlog_precomp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  result = (dlog_precomp_ptr) ((arg1)->pre);
  *(dlog_precomp_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dlog_1crt_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dlog_crt_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dlog_crt_struct *)new dlog_crt_struct();
  *(dlog_crt_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dlog_1crt_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dlog_crt_struct *arg1 = (dlog_crt_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1power_1struct_1mod_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dlog_power_struct *arg1 = (dlog_power_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dlog_power_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->mod = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1power_1struct_1mod_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_power_struct *arg1 = (dlog_power_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_power_struct **)&jarg1; 
  result = (nmod_t *)& ((arg1)->mod);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1power_1struct_1p_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_power_struct *arg1 = (dlog_power_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_power_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->p = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1power_1struct_1p_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_power_struct *arg1 = (dlog_power_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_power_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->p);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1power_1struct_1e_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_power_struct *arg1 = (dlog_power_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_power_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->e = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1power_1struct_1e_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_power_struct *arg1 = (dlog_power_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_power_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->e);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1power_1struct_1apk_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_power_struct *arg1 = (dlog_power_struct *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_power_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  if (arg1) (arg1)->apk = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1power_1struct_1apk_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_power_struct *arg1 = (dlog_power_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_power_struct **)&jarg1; 
  result = (mp_limb_t *) ((arg1)->apk);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1power_1struct_1pre_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dlog_power_struct *arg1 = (dlog_power_struct *) 0 ;
  dlog_precomp_struct *arg2 = (dlog_precomp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dlog_power_struct **)&jarg1; 
  arg2 = *(dlog_precomp_struct **)&jarg2; 
  if (arg1) (arg1)->pre = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1power_1struct_1pre_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_power_struct *arg1 = (dlog_power_struct *) 0 ;
  dlog_precomp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_power_struct **)&jarg1; 
  result = (dlog_precomp_struct *) ((arg1)->pre);
  *(dlog_precomp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dlog_1power_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dlog_power_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dlog_power_struct *)new dlog_power_struct();
  *(dlog_power_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dlog_1power_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dlog_power_struct *arg1 = (dlog_power_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dlog_power_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1precomp_1struct_1type_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  dlog_precomp_struct *arg1 = (dlog_precomp_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_precomp_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->type = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dlog_1precomp_1struct_1type_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dlog_precomp_struct *arg1 = (dlog_precomp_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_precomp_struct **)&jarg1; 
  result = (int) ((arg1)->type);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1precomp_1struct_1cost_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dlog_precomp_struct *arg1 = (dlog_precomp_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->cost = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1precomp_1struct_1cost_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dlog_precomp_struct *arg1 = (dlog_precomp_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_precomp_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->cost);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dlog_1precomp_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dlog_precomp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dlog_precomp_struct *)new dlog_precomp_struct();
  *(dlog_precomp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dlog_1precomp_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dlog_precomp_struct *arg1 = (dlog_precomp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dlog_precomp_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1precomp_1modpe_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  dlog_precomp_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  dlog_precomp_modpe_init(arg1,arg2,arg3,arg4,arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1precomp_1small_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  dlog_precomp_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  dlog_precomp_small_init(arg1,arg2,arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1precomp_1n_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  dlog_precomp_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  dlog_precomp_n_init(arg1,arg2,arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1precomp_1p_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  dlog_precomp_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  dlog_precomp_p_init(arg1,arg2,arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1precomp_1pe_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6, jlong jarg7) {
  dlog_precomp_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t arg6 ;
  mp_limb_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = (mp_limb_t)jarg7; 
  dlog_precomp_pe_init(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1precomp_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  dlog_precomp_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_precomp_struct **)&jarg1; 
  dlog_precomp_clear(arg1);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  dlog_precomp_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)dlog_precomp((dlog_precomp_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1order23_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(unsigned long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)dlog_order23_init(arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1table_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  dlog_table_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_table_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)dlog_table_init(arg1,arg2,arg3);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1crt_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  dlog_crt_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (mp_limb_t)dlog_crt_init(arg1,arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1power_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  jlong jresult = 0 ;
  dlog_power_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t arg6 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_power_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  result = (mp_limb_t)dlog_power_init(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1modpe_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jlong jarg6) {
  jlong jresult = 0 ;
  dlog_modpe_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t arg6 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  result = (mp_limb_t)dlog_modpe_init(arg1,arg2,arg3,arg4,arg5,arg6);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1bsgs_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5) {
  jlong jresult = 0 ;
  dlog_bsgs_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  result = (mp_limb_t)dlog_bsgs_init(arg1,arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_11modpe_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  dlog_1modpe_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  arg1 = *(dlog_1modpe_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  dlog_1modpe_init(arg1,arg2,arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1rho_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4) {
  dlog_rho_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_rho_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  dlog_rho_init(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1once(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  nmod_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t const *argp3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t const");
    return 0;
  }
  arg3 = *argp3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)dlog_once(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1order23_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mp_limb_t *arg1 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(unsigned long **)&jarg1; 
  dlog_order23_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1table_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  dlog_table_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_table_struct **)&jarg1; 
  dlog_table_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1crt_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  dlog_crt_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  dlog_crt_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1power_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  dlog_power_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_power_struct **)&jarg1; 
  dlog_power_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1modpe_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  dlog_modpe_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  dlog_modpe_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1bsgs_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  dlog_bsgs_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  dlog_bsgs_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1rho_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  dlog_rho_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_rho_struct **)&jarg1; 
  dlog_rho_clear(arg1);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1bsgs_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)dlog_bsgs_size(arg1,arg2);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1order23(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  jlong jresult = 0 ;
  mp_limb_t *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(unsigned long **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)dlog_order23((unsigned long const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1table(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  dlog_table_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_table_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)dlog_table((dlog_table_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1crt(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  dlog_crt_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_crt_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)dlog_crt((dlog_crt_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1power(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  dlog_power_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_power_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)dlog_power((dlog_power_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1modpe(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  dlog_modpe_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)dlog_modpe((dlog_modpe_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1bsgs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  dlog_bsgs_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_bsgs_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)dlog_bsgs((dlog_bsgs_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1rho(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  dlog_rho_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_rho_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)dlog_rho((dlog_rho_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_11modpe_11modp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg5 = *argp5; 
  result = (mp_limb_t)dlog_1modpe_1modp(arg1,arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_11modpe(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_) {
  jlong jresult = 0 ;
  dlog_1modpe_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  nmod_t *argp5 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  arg1 = *(dlog_1modpe_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg5 = *argp5; 
  result = (mp_limb_t)dlog_1modpe((dlog_1modpe_struct const (*))arg1,arg2,arg3,arg4,arg5);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1mod2e_11mod4(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  nmod_t arg4 ;
  nmod_t *argp4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg4 = *argp4; 
  result = (mp_limb_t)dlog_mod2e_1mod4(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1mod2e(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  dlog_modpe_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dlog_modpe_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)dlog_mod2e((dlog_modpe_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1SMALL_1LIM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(50);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1TABLE_1LIM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(50);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1TABLE_1P_1LIM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(50);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1TABLE_1MODPE_1LIM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(50);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1TABLE_1PE_1LIM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(50);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1TABLE_1N_1LIM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(50);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1BSGS_1LIM_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(500);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1LOOP_1MAX_1FACTOR_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(6);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1G_1SMALL_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(0);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_DLOG_1G_1BIG_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(1);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1n_1factor_1group(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  n_factor_t *arg1 = (n_factor_t *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(n_factor_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  dlog_n_factor_group(arg1,arg2);
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dlog_1vec_1pindex_1factorgcd(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jlong jarg6, jlong jarg7, jlong jarg8, jlong jarg9, jobject jarg9_, jint jarg10) {
  jlong jresult = 0 ;
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  nmod_t arg4 ;
  mp_limb_t arg5 ;
  mp_limb_t arg6 ;
  mp_limb_t arg7 ;
  mp_limb_t arg8 ;
  nmod_t arg9 ;
  int arg10 ;
  nmod_t *argp4 ;
  nmod_t *argp9 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  (void)jarg9_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  argp4 = *(nmod_t **)&jarg4; 
  if (!argp4) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg4 = *argp4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (mp_limb_t)jarg6; 
  arg7 = (mp_limb_t)jarg7; 
  arg8 = (mp_limb_t)jarg8; 
  argp9 = *(nmod_t **)&jarg9; 
  if (!argp9) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return 0;
  }
  arg9 = *argp9; 
  arg10 = (int)jarg10; 
  result = (mp_limb_t)dlog_vec_pindex_factorgcd(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8,arg9,arg10);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1vec_1fill(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  dlog_vec_fill(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1vec_1set_1not_1found(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  nmod_t arg3 ;
  nmod_t *argp3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  argp3 = *(nmod_t **)&jarg3; 
  if (!argp3) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg3 = *argp3; 
  dlog_vec_set_not_found(arg1,arg2,arg3);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1vec_1loop(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp5 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  (void)jarg7_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  dlog_vec_loop(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1vec_1loop_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp5 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  (void)jarg7_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  dlog_vec_loop_add(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1vec_1eratos_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp5 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  (void)jarg7_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  dlog_vec_eratos_add(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1vec_1eratos(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp5 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  (void)jarg7_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  dlog_vec_eratos(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1vec_1sieve_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp5 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  (void)jarg7_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  dlog_vec_sieve_add(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1vec_1sieve(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp5 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  (void)jarg7_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  dlog_vec_sieve(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1vec_1add(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp5 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  (void)jarg7_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  dlog_vec_add(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jlong jarg6, jlong jarg7, jobject jarg7_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  nmod_t arg5 ;
  mp_limb_t arg6 ;
  nmod_t arg7 ;
  nmod_t *argp5 ;
  nmod_t *argp7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg5_;
  (void)jarg7_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  argp5 = *(nmod_t **)&jarg5; 
  if (!argp5) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg5 = *argp5; 
  arg6 = (mp_limb_t)jarg6; 
  argp7 = *(nmod_t **)&jarg7; 
  if (!argp7) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg7 = *argp7; 
  dlog_vec(arg1,arg2,arg3,arg4,arg5,arg6,arg7);
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1vec_1sieve_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_, jlong jarg7, jlong jarg8, jobject jarg8_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  dlog_precomp_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  nmod_t arg6 ;
  mp_limb_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp6 ;
  nmod_t *argp8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  (void)jarg6_;
  (void)jarg8_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(dlog_precomp_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  arg7 = (mp_limb_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg8 = *argp8; 
  dlog_vec_sieve_precomp(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1vec_1sieve_1add_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_, jlong jarg7, jlong jarg8, jobject jarg8_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  dlog_precomp_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  nmod_t arg6 ;
  mp_limb_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp6 ;
  nmod_t *argp8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  (void)jarg6_;
  (void)jarg8_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(dlog_precomp_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  arg7 = (mp_limb_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg8 = *argp8; 
  dlog_vec_sieve_add_precomp(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dlog_1vec_1add_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jlong jarg5, jlong jarg6, jobject jarg6_, jlong jarg7, jlong jarg8, jobject jarg8_) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t arg2 ;
  dlog_precomp_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t arg5 ;
  nmod_t arg6 ;
  mp_limb_t arg7 ;
  nmod_t arg8 ;
  nmod_t *argp6 ;
  nmod_t *argp8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg3_;
  (void)jarg6_;
  (void)jarg8_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(dlog_precomp_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  argp6 = *(nmod_t **)&jarg6; 
  if (!argp6) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg6 = *argp6; 
  arg7 = (mp_limb_t)jarg7; 
  argp8 = *(nmod_t **)&jarg8; 
  if (!argp8) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg8 = *argp8; 
  dlog_vec_add_precomp(arg1,arg2,arg3,arg4,arg5,arg6,arg7,arg8);
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_MAX_1FACTORS_1get(JNIEnv *jenv, jclass jcls) {
  jint jresult = 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  result = (int)(15);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1p_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->p = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1p_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->p);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1e_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->e = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1e_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  result = (int) ((arg1)->e);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1pe_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->pe = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1pe_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  result = (nmod_t *)& ((arg1)->pe);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1phi_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->phi = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1phi_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  result = (nmod_t *)& ((arg1)->phi);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1g_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->g = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1g_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->g);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1dlog_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  dlog_precomp_struct *arg2 = (dlog_precomp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  arg2 = *(dlog_precomp_struct **)&jarg2; 
  if (arg1) (arg1)->dlog = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1dlog_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  dlog_precomp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  result = (dlog_precomp_struct *) ((arg1)->dlog);
  *(dlog_precomp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dirichlet_1prime_1group_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dirichlet_prime_group_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dirichlet_prime_group_struct *)new dirichlet_prime_group_struct();
  *(dirichlet_prime_group_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dirichlet_1prime_1group_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1q_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->q = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1q_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->q);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1q_1even_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->q_even = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1q_1even_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->q_even);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1mod_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  nmod_t *arg2 = (nmod_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(nmod_t **)&jarg2; 
  if (arg1) (arg1)->mod = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1mod_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  nmod_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (nmod_t *)& ((arg1)->mod);
  *(nmod_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1rad_1q_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->rad_q = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1rad_1q_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->rad_q);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1phi_1q_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->phi_q = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1phi_1q_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->phi_q);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1neven_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->neven = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1neven_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->neven);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1num_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->num = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1num_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->num);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1expo_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->expo = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1expo_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->expo);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1P_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  dirichlet_prime_group_struct *arg2 = (dirichlet_prime_group_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_prime_group_struct **)&jarg2; 
  if (arg1) (arg1)->P = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1P_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  dirichlet_prime_group_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (dirichlet_prime_group_struct *) ((arg1)->P);
  *(dirichlet_prime_group_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1generators_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  if (arg1) (arg1)->generators = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1generators_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (mp_limb_t *) ((arg1)->generators);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1PHI_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  if (arg1) (arg1)->PHI = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1PHI_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (mp_limb_t *) ((arg1)->PHI);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dirichlet_1group_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dirichlet_group_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dirichlet_group_struct *)new dirichlet_group_struct();
  *(dirichlet_group_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dirichlet_1group_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1size(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (mp_limb_t)dirichlet_group_size((dirichlet_group_struct const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1num_1primitive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (mp_limb_t)dirichlet_group_num_primitive((dirichlet_group_struct const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  dirichlet_group_init(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1subgroup_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  dirichlet_group_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  dirichlet_subgroup_init(arg1,(dirichlet_group_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  dirichlet_group_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  dirichlet_group_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1dlog_1precompute(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  dirichlet_group_dlog_precompute(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1dlog_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  dirichlet_group_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  dirichlet_group_dlog_clear(arg1);
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1conductor_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)dirichlet_conductor_ui((dirichlet_group_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1parity_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jint jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  mp_limb_t arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (int)dirichlet_parity_ui((dirichlet_group_struct const (*))arg1,arg2);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1order_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  result = (mp_limb_t)dirichlet_order_ui((dirichlet_group_struct const (*))arg1,arg2);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1struct_1n_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_char_struct *arg1 = (dirichlet_char_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->n = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1char_1struct_1n_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_char_struct *arg1 = (dirichlet_char_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->n);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1struct_1log_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_char_struct *arg1 = (dirichlet_char_struct *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  if (arg1) (arg1)->log = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1char_1struct_1log_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_char_struct *arg1 = (dirichlet_char_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  result = (mp_limb_t *) ((arg1)->log);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dirichlet_1char_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dirichlet_char_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dirichlet_char_struct *)new dirichlet_char_struct();
  *(dirichlet_char_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dirichlet_1char_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dirichlet_char_struct *arg1 = (dirichlet_char_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dirichlet_char_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  dirichlet_char_init(arg1,(dirichlet_group_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  dirichlet_char_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  dirichlet_char_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dirichlet_group_struct *arg1 ;
  dirichlet_char_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_char_struct **)&jarg2; 
  dirichlet_char_print((dirichlet_group_struct const (*))arg1,(dirichlet_char_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  dirichlet_char_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  dirichlet_char_set(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3);
  
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1char_1eq(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  dirichlet_char_struct *arg1 ;
  dirichlet_char_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_char_struct **)&jarg2; 
  result = (int)dirichlet_char_eq((dirichlet_char_struct const (*))arg1,(dirichlet_char_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1char_1eq_1deep(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jint jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  dirichlet_char_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_char_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  result = (int)dirichlet_char_eq_deep((dirichlet_group_struct const (*))arg1,(dirichlet_char_struct const (*))arg2,(dirichlet_char_struct const (*))arg3);
  jresult = (jint)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1parity_1char(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  dirichlet_char_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_char_struct **)&jarg2; 
  result = (int)dirichlet_parity_char((dirichlet_group_struct const (*))arg1,(dirichlet_char_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1conductor_1char(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  dirichlet_char_struct *arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_char_struct **)&jarg2; 
  result = (mp_limb_t)dirichlet_conductor_char((dirichlet_group_struct const (*))arg1,(dirichlet_char_struct const (*))arg2);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1order_1char(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  dirichlet_char_struct *arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_char_struct **)&jarg2; 
  result = (mp_limb_t)dirichlet_order_char((dirichlet_group_struct const (*))arg1,(dirichlet_char_struct const (*))arg2);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1log(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  dirichlet_char_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  dirichlet_char_log(arg1,(dirichlet_group_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1char_1exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  dirichlet_char_struct *arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_char_struct **)&jarg2; 
  result = (mp_limb_t)dirichlet_char_exp((dirichlet_group_struct const (*))arg1,(dirichlet_char_struct const (*))arg2);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI__1dirichlet_1char_1exp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  dirichlet_char_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  result = (mp_limb_t)_dirichlet_char_exp(arg1,(dirichlet_group_struct const (*))arg2);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1index(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  dirichlet_char_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  dirichlet_char_index(arg1,(dirichlet_group_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1index_1char(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  dirichlet_char_struct *arg2 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_char_struct **)&jarg2; 
  result = (mp_limb_t)dirichlet_index_char((dirichlet_group_struct const (*))arg1,(dirichlet_char_struct const (*))arg2);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1one(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dirichlet_char_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  dirichlet_char_one(arg1,(dirichlet_group_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1first_1primitive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dirichlet_char_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  dirichlet_char_first_primitive(arg1,(dirichlet_group_struct const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1char_1next(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  dirichlet_char_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  result = (int)dirichlet_char_next(arg1,(dirichlet_group_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1char_1next_1primitive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  dirichlet_char_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  result = (int)dirichlet_char_next_primitive(arg1,(dirichlet_group_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1mul(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  dirichlet_char_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  dirichlet_char_mul(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,(dirichlet_char_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1pow(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4) {
  dirichlet_char_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  dirichlet_char_pow(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1lower(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  dirichlet_char_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  dirichlet_group_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = *(dirichlet_group_struct **)&jarg4; 
  dirichlet_char_lower(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,(dirichlet_group_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1lift(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_) {
  dirichlet_char_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  dirichlet_group_struct *arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = *(dirichlet_group_struct **)&jarg4; 
  dirichlet_char_lift(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,(dirichlet_group_struct const (*))arg4);
  
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1pairing(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)dirichlet_pairing((dirichlet_group_struct const (*))arg1,arg2,arg3);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1pairing_1char(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  dirichlet_char_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_char_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  result = (mp_limb_t)dirichlet_pairing_char((dirichlet_group_struct const (*))arg1,(dirichlet_char_struct const (*))arg2,(dirichlet_char_struct const (*))arg3);
  jresult = (jlong)result; 
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1char_1is_1principal(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  dirichlet_char_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_char_struct **)&jarg2; 
  result = (int)dirichlet_char_is_principal((dirichlet_group_struct const (*))arg1,(dirichlet_char_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1char_1is_1real(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  dirichlet_char_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_char_struct **)&jarg2; 
  result = (int)dirichlet_char_is_real((dirichlet_group_struct const (*))arg1,(dirichlet_char_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1char_1is_1primitive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  jint jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  dirichlet_char_struct *arg2 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_char_struct **)&jarg2; 
  result = (int)dirichlet_char_is_primitive((dirichlet_group_struct const (*))arg1,(dirichlet_char_struct const (*))arg2);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1chi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 ;
  dirichlet_char_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_char_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  result = (mp_limb_t)dirichlet_chi((dirichlet_group_struct const (*))arg1,(dirichlet_char_struct const (*))arg2,arg3);
  jresult = (jlong)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1vec_1set_1null(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  dirichlet_group_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  dirichlet_vec_set_null(arg1,(dirichlet_group_struct const (*))arg2,arg3);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1chi_1vec_1loop(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  dirichlet_chi_vec_loop(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1chi_1vec_1primeloop(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  dirichlet_chi_vec_primeloop(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1chi_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  dirichlet_chi_vec(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1chi_1vec_1loop_1order(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  dirichlet_chi_vec_loop_order(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1chi_1vec_1primeloop_1order(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  dirichlet_chi_vec_primeloop_order(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1chi_1vec_1order(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  dirichlet_chi_vec_order(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1powsum_1term(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jint jarg6, jint jarg7, jint jarg8, jint jarg9) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  arb_struct *arg2 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  acb_struct *arg4 ;
  mp_limb_t arg5 ;
  int arg6 ;
  int arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_t)jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (int)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  acb_dirichlet_powsum_term(arg1,arg2,arg3,(acb_struct const (*))arg4,arg5,arg6,arg7,arg8,arg9);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1powsum_1sieved(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_powsum_sieved(arg1,(acb_struct const (*))arg2,arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1powsum_1smooth(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_powsum_smooth(arg1,(acb_struct const (*))arg2,arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta_1bound(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  acb_dirichlet_zeta_bound(arg1,(acb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta_1deriv_1bound(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_) {
  mag_struct *arg1 ;
  mag_struct *arg2 ;
  acb_struct *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  acb_dirichlet_zeta_deriv_bound(arg1,arg2,(acb_struct const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta_1rs_1f_1coeffs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_zeta_rs_f_coeffs(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta_1rs_1d_1coeffs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_zeta_rs_d_coeffs(arg1,(arb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta_1rs_1bound(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  mag_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_dirichlet_zeta_rs_bound(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta_1rs_1r(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_zeta_rs_r(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta_1rs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_zeta_rs(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_dirichlet_zeta(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta_1jet_1rs(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_zeta_jet_rs(arg1,(acb_struct const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta_1jet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_zeta_jet(arg1,(acb_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_hurwitz(arg1,(acb_struct const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1stieltjes(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  fmpz *arg2 ;
  acb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(acb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_stieltjes(arg1,(long const (*))arg2,(acb_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1s_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  acb_struct *arg2 = (acb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  if (arg1) (arg1)->s = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1s_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  acb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  result = (acb_struct *)& ((arg1)->s);
  *(acb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1err_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  mag_struct *arg2 = (mag_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  arg2 = *(mag_struct **)&jarg2; 
  if (arg1) (arg1)->err = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1err_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  mag_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  result = (mag_struct *)& ((arg1)->err);
  *(mag_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1coeffs_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  acb_ptr arg2 = (acb_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  arg2 = *(acb_ptr *)&jarg2; 
  if (arg1) (arg1)->coeffs = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1coeffs_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  acb_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  result = (acb_ptr) ((arg1)->coeffs);
  *(acb_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1deflate_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->deflate = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1deflate_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  result = (int) ((arg1)->deflate);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1A_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->A = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1A_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->A);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1N_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->N = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1N_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->N);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1K_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->K = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1struct_1K_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->K);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1acb_1dirichlet_1hurwitz_1precomp_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  acb_dirichlet_hurwitz_precomp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (acb_dirichlet_hurwitz_precomp_struct *)new acb_dirichlet_hurwitz_precomp_struct();
  *(acb_dirichlet_hurwitz_precomp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1acb_1dirichlet_1hurwitz_1precomp_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  acb_dirichlet_hurwitz_precomp_struct *arg1 = (acb_dirichlet_hurwitz_precomp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5, jint jarg6, jint jarg7) {
  acb_dirichlet_hurwitz_precomp_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  acb_dirichlet_hurwitz_precomp_init(arg1,(acb_struct const (*))arg2,arg3,arg4,arg5,arg6,arg7);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1init_1num(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jdouble jarg4, jint jarg5) {
  acb_dirichlet_hurwitz_precomp_struct *arg1 ;
  acb_struct *arg2 ;
  int arg3 ;
  double arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = (double)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_hurwitz_precomp_init_num(arg1,(acb_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_dirichlet_hurwitz_precomp_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg1; 
  acb_dirichlet_hurwitz_precomp_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1bound(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jint jarg4, jint jarg5) {
  mag_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_hurwitz_precomp_bound(arg1,(acb_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1eval(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jint jarg5) {
  acb_struct *arg1 ;
  acb_dirichlet_hurwitz_precomp_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_hurwitz_precomp_eval(arg1,(acb_dirichlet_hurwitz_precomp_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hurwitz_1precomp_1choose_1param(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4, jobject jarg4_, jdouble jarg5, jint jarg6) {
  mp_limb_t *arg1 = (mp_limb_t *) 0 ;
  mp_limb_t *arg2 = (mp_limb_t *) 0 ;
  mp_limb_t *arg3 = (mp_limb_t *) 0 ;
  acb_struct *arg4 ;
  double arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg4_;
  arg1 = *(mp_limb_t **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  arg3 = *(mp_limb_t **)&jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (double)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_dirichlet_hurwitz_precomp_choose_param(arg1,arg2,arg3,(acb_struct const (*))arg4,arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1dirichlet_1euler_1product_1real_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jint jarg4, jint jarg5, jint jarg6) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  signed char *arg3 = (signed char *) 0 ;
  int arg4 ;
  int arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(signed char **)&jarg3; 
  arg4 = (int)jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  _acb_dirichlet_euler_product_real_ui(arg1,arg2,(signed char const *)arg3,arg4,arg5,arg6);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1eta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_dirichlet_eta(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1xi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_dirichlet_xi(arg1,(acb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1pairing(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jint jarg5) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_pairing(arg1,(dirichlet_group_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1pairing_1char(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_pairing_char(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1order_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->order = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1order_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->order);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1reduced_1order_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  mp_limb_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  if (arg1) (arg1)->reduced_order = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1reduced_1order_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  result = (mp_limb_t) ((arg1)->reduced_order);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1z_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  acb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  {
    size_t ii;
    acb_struct *b = (acb_struct *) arg1->z;
    for (ii = 0; ii < (size_t)1; ii++) b[ii] = *((acb_struct *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1z_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  acb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  result = (acb_struct *) ((arg1)->z);
  *(acb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->size = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->size);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1depth_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->depth = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1depth_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->depth);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1Zptr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  acb_ptr *arg2 = (acb_ptr *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  arg2 = *(acb_ptr **)&jarg2; 
  if (arg1) (arg1)->Zptr = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1Zptr_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  acb_ptr *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  result = (acb_ptr *) ((arg1)->Zptr);
  *(acb_ptr **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1use_1pow_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->use_pow = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1struct_1use_1pow_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  result = (int) ((arg1)->use_pow);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1acb_1dirichlet_1roots_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  acb_dirichlet_roots_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (acb_dirichlet_roots_struct *)new acb_dirichlet_roots_struct();
  *(acb_dirichlet_roots_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1acb_1dirichlet_1roots_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  acb_dirichlet_roots_struct *arg1 = (acb_dirichlet_roots_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  acb_dirichlet_roots_struct *arg1 ;
  mp_limb_t arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_roots_init(arg1,arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1roots_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_dirichlet_roots_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_roots_struct **)&jarg1; 
  acb_dirichlet_roots_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1root(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jint jarg4) {
  acb_struct *arg1 ;
  acb_dirichlet_roots_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_dirichlet_roots_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_root(arg1,(acb_dirichlet_roots_struct const (*))arg2,arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1chi(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_chi(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1chi_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_chi_vec(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1arb_1quadratic_1powers(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  mp_limb_signed_t arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_arb_quadratic_powers(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1qseries_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_struct *arg1 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_qseries_arb(arg1,(acb_struct const *)arg2,(arb_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1qseries_1arb_1powers_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jint jarg6, jint jarg7) {
  acb_struct *arg1 ;
  arb_struct *arg2 ;
  int arg3 ;
  mp_limb_t *arg4 = (mp_limb_t *) 0 ;
  acb_dirichlet_roots_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg5_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(mp_limb_t **)&jarg4; 
  arg5 = *(acb_dirichlet_roots_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  acb_dirichlet_qseries_arb_powers_naive(arg1,(arb_struct const (*))arg2,arg3,(unsigned long const *)arg4,(acb_dirichlet_roots_struct const (*))arg5,arg6,arg7);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1qseries_1arb_1powers_1smallorder(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jlong jarg5, jobject jarg5_, jint jarg6, jint jarg7) {
  acb_struct *arg1 ;
  arb_struct *arg2 ;
  int arg3 ;
  mp_limb_t *arg4 = (mp_limb_t *) 0 ;
  acb_dirichlet_roots_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg5_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (int)jarg3; 
  arg4 = *(mp_limb_t **)&jarg4; 
  arg5 = *(acb_dirichlet_roots_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  acb_dirichlet_qseries_arb_powers_smallorder(arg1,(arb_struct const (*))arg2,arg3,(unsigned long const *)arg4,(acb_dirichlet_roots_struct const (*))arg5,arg6,arg7);
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1theta_1length_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jdouble jarg2, jint jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  double arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (double)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (mp_limb_t)acb_dirichlet_theta_length_d(arg1,arg2,arg3);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1theta_1length(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_, jint jarg3) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  result = (mp_limb_t)acb_dirichlet_theta_length(arg1,(arb_struct const (*))arg2,arg3);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mag_1tail_1kexpk2_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  mag_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  mag_tail_kexpk2_arb(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1dirichlet_1theta_1argument_1at_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  mp_limb_t arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_dirichlet_theta_argument_at_arb(arg1,arg2,(arb_struct const (*))arg3,arg4);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1theta_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_theta_arb(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,(arb_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1ui_1theta_1arb(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  mp_limb_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_ui_theta_arb(arg1,(dirichlet_group_struct const (*))arg2,arg3,(arb_struct const (*))arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1gauss_1sum_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_gauss_sum_naive(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1gauss_1sum_1factor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_gauss_sum_factor(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1gauss_1sum_1order2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_gauss_sum_order2(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1gauss_1sum_1theta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_gauss_sum_theta(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1gauss_1sum(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_gauss_sum(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1root_1number_1theta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_root_number_theta(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1root_1number(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_root_number(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1si_1poly_1evaluate(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  mp_limb_signed_t *arg2 = (mp_limb_signed_t *) 0 ;
  mp_limb_signed_t arg3 ;
  acb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(mp_limb_signed_t **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(acb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_si_poly_evaluate(arg1,arg2,arg3,(acb_struct const (*))arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1jacobi_1sum_1naive(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_jacobi_sum_naive(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_jacobi_1one_1prime(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jlong jarg3, jlong jarg4) {
  jlong jresult = 0 ;
  mp_limb_t arg1 ;
  mp_limb_t arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = (mp_limb_t)jarg1; 
  arg2 = (mp_limb_t)jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  result = (mp_limb_t)jacobi_one_prime(arg1,arg2,arg3,arg4);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1jacobi_1sum_1factor(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_jacobi_sum_factor(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1jacobi_1sum_1gauss(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_jacobi_sum_gauss(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1jacobi_1sum(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  dirichlet_char_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = *(dirichlet_char_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_jacobi_sum(arg1,(dirichlet_group_struct const (*))arg2,(dirichlet_char_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1jacobi_1sum_1ui(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jlong jarg4, jint jarg5) {
  acb_struct *arg1 ;
  dirichlet_group_struct *arg2 ;
  mp_limb_t arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(dirichlet_group_struct **)&jarg2; 
  arg3 = (mp_limb_t)jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_jacobi_sum_ui(arg1,(dirichlet_group_struct const (*))arg2,arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1l_1euler_1product(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  dirichlet_group_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(dirichlet_group_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_l_euler_product(arg1,(acb_struct const (*))arg2,(dirichlet_group_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1l_1hurwitz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jint jarg6) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  acb_dirichlet_hurwitz_precomp_struct *arg3 ;
  dirichlet_group_struct *arg4 ;
  dirichlet_char_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg3; 
  arg4 = *(dirichlet_group_struct **)&jarg4; 
  arg5 = *(dirichlet_char_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_dirichlet_l_hurwitz(arg1,(acb_struct const (*))arg2,(acb_dirichlet_hurwitz_precomp_struct const (*))arg3,(dirichlet_group_struct const (*))arg4,(dirichlet_char_struct const (*))arg5,arg6);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1l(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_struct *arg1 ;
  acb_struct *arg2 ;
  dirichlet_group_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(dirichlet_group_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_l(arg1,(acb_struct const (*))arg2,(dirichlet_group_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1l_1vec_1hurwitz(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  acb_dirichlet_hurwitz_precomp_struct *arg3 ;
  dirichlet_group_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(acb_dirichlet_hurwitz_precomp_struct **)&jarg3; 
  arg4 = *(dirichlet_group_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_l_vec_hurwitz(arg1,(acb_struct const (*))arg2,(acb_dirichlet_hurwitz_precomp_struct const (*))arg3,(dirichlet_group_struct const (*))arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1l_1jet(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  dirichlet_group_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  int arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(dirichlet_group_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  acb_dirichlet_l_jet(arg1,(acb_struct const (*))arg2,(dirichlet_group_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5,arg6,arg7);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1dirichlet_1l_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jint jarg6, jint jarg7, jint jarg8) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  dirichlet_group_struct *arg4 ;
  dirichlet_char_struct *arg5 ;
  int arg6 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(dirichlet_group_struct **)&jarg4; 
  arg5 = *(dirichlet_char_struct **)&jarg5; 
  arg6 = (int)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  _acb_dirichlet_l_series(arg1,(acb_struct const *)arg2,arg3,(dirichlet_group_struct const (*))arg4,(dirichlet_char_struct const (*))arg5,arg6,arg7,arg8);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1l_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  dirichlet_group_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  int arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(dirichlet_group_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (int)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  acb_dirichlet_l_series(arg1,(acb_poly_struct const (*))arg2,(dirichlet_group_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5,arg6,arg7);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hardy_1theta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  dirichlet_group_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(dirichlet_group_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_dirichlet_hardy_theta(arg1,(acb_struct const (*))arg2,(dirichlet_group_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hardy_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  dirichlet_group_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(dirichlet_group_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_dirichlet_hardy_z(arg1,(acb_struct const (*))arg2,(dirichlet_group_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1dirichlet_1hardy_1theta_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  dirichlet_group_struct *arg4 ;
  dirichlet_char_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(dirichlet_group_struct **)&jarg4; 
  arg5 = *(dirichlet_char_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_dirichlet_hardy_theta_series(arg1,(acb_struct const *)arg2,arg3,(dirichlet_group_struct const (*))arg4,(dirichlet_char_struct const (*))arg5,arg6,arg7);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hardy_1theta_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  dirichlet_group_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(dirichlet_group_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_dirichlet_hardy_theta_series(arg1,(acb_poly_struct const (*))arg2,(dirichlet_group_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5,arg6);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1dirichlet_1hardy_1z_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jint jarg6, jint jarg7) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg3 ;
  dirichlet_group_struct *arg4 ;
  dirichlet_char_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(dirichlet_group_struct **)&jarg4; 
  arg5 = *(dirichlet_char_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  _acb_dirichlet_hardy_z_series(arg1,(acb_struct const *)arg2,arg3,(dirichlet_group_struct const (*))arg4,(dirichlet_char_struct const (*))arg5,arg6,arg7);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hardy_1z_1series(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_poly_struct *arg1 ;
  acb_poly_struct *arg2 ;
  dirichlet_group_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_poly_struct **)&jarg1; 
  arg2 = *(acb_poly_struct **)&jarg2; 
  arg3 = *(dirichlet_group_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_dirichlet_hardy_z_series(arg1,(acb_poly_struct const (*))arg2,(dirichlet_group_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5,arg6);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1gram_1point(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  dirichlet_group_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = *(dirichlet_group_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_gram_point(arg1,(long const (*))arg2,(dirichlet_group_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1turing_1method_1bound(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jlong jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (mp_limb_t)acb_dirichlet_turing_method_bound((long const (*))arg1);
  jresult = (jlong)result; 
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1acb_1dirichlet_1definite_1hardy_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  jint jresult = 0 ;
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  mp_limb_signed_t *arg3 = (mp_limb_signed_t *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(mp_limb_signed_t **)&jarg3; 
  result = (int)_acb_dirichlet_definite_hardy_z(arg1,(arf_struct const (*))arg2,arg3);
  jresult = (jint)result; 
  
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1dirichlet_1isolate_1gram_1hardy_1z_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  _acb_dirichlet_isolate_gram_hardy_z_zero(arg1,arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1dirichlet_1isolate_1rosser_1hardy_1z_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  _acb_dirichlet_isolate_rosser_hardy_z_zero(arg1,arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1dirichlet_1isolate_1turing_1hardy_1z_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  _acb_dirichlet_isolate_turing_hardy_z_zero(arg1,arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1isolate_1hardy_1z_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3) {
  arf_struct *arg1 ;
  arf_struct *arg2 ;
  fmpz *arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(long **)&jarg3; 
  acb_dirichlet_isolate_hardy_z_zero(arg1,arg2,(long const (*))arg3);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1dirichlet_1refine_1hardy_1z_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  arf_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(arf_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  _acb_dirichlet_refine_hardy_z_zero(arg1,(arf_struct const (*))arg2,(arf_struct const (*))arg3,arg4);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hardy_1z_1zeros(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_hardy_z_zeros(arg1,(long const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta_1zeros(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_zeta_zeros(arg1,(long const (*))arg2,arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI__1acb_1dirichlet_1exact_1zeta_1nzeros(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2, jobject jarg2_) {
  fmpz *arg1 ;
  arf_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg2_;
  arg1 = *(long **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  _acb_dirichlet_exact_zeta_nzeros(arg1,(arf_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta_1nzeros(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_dirichlet_zeta_nzeros(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1backlund_1s(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_dirichlet_backlund_s(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1backlund_1s_1bound(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mag_struct *arg1 ;
  arb_struct *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mag_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  acb_dirichlet_backlund_s_bound(arg1,(arb_struct const (*))arg2);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta_1nzeros_1gram(JNIEnv *jenv, jclass jcls, jlong jarg1, jlong jarg2) {
  fmpz *arg1 ;
  fmpz *arg2 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  acb_dirichlet_zeta_nzeros_gram(arg1,(long const (*))arg2);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1backlund_1s_1gram(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  jint jresult = 0 ;
  fmpz *arg1 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(long **)&jarg1; 
  result = (mp_limb_signed_t)acb_dirichlet_backlund_s_gram((long const (*))arg1);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hardy_1z_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  arb_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_dirichlet_hardy_z_zero(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1zeta_1zero(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3) {
  acb_struct *arg1 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_dirichlet_zeta_zero(arg1,(long const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1c_1precomp_1struct_1len_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  acb_dirichlet_platt_c_precomp_struct *arg1 = (acb_dirichlet_platt_c_precomp_struct *) 0 ;
  mp_limb_signed_t arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  if (arg1) (arg1)->len = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1c_1precomp_1struct_1len_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  acb_dirichlet_platt_c_precomp_struct *arg1 = (acb_dirichlet_platt_c_precomp_struct *) 0 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg1; 
  result = (mp_limb_signed_t) ((arg1)->len);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1c_1precomp_1struct_1p_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_dirichlet_platt_c_precomp_struct *arg1 = (acb_dirichlet_platt_c_precomp_struct *) 0 ;
  arb_ptr arg2 = (arb_ptr) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg1; 
  arg2 = *(arb_ptr *)&jarg2; 
  if (arg1) (arg1)->p = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1c_1precomp_1struct_1p_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_platt_c_precomp_struct *arg1 = (acb_dirichlet_platt_c_precomp_struct *) 0 ;
  arb_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg1; 
  result = (arb_ptr) ((arg1)->p);
  *(arb_ptr *)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1c_1precomp_1struct_1Xa_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_dirichlet_platt_c_precomp_struct *arg1 = (acb_dirichlet_platt_c_precomp_struct *) 0 ;
  arb_struct *arg2 = (arb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  if (arg1) (arg1)->Xa = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1c_1precomp_1struct_1Xa_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_platt_c_precomp_struct *arg1 = (acb_dirichlet_platt_c_precomp_struct *) 0 ;
  arb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg1; 
  result = (arb_struct *)& ((arg1)->Xa);
  *(arb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1c_1precomp_1struct_1Xb_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_dirichlet_platt_c_precomp_struct *arg1 = (acb_dirichlet_platt_c_precomp_struct *) 0 ;
  arb_struct *arg2 = (arb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  if (arg1) (arg1)->Xb = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1c_1precomp_1struct_1Xb_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_platt_c_precomp_struct *arg1 = (acb_dirichlet_platt_c_precomp_struct *) 0 ;
  arb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg1; 
  result = (arb_struct *)& ((arg1)->Xb);
  *(arb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1acb_1dirichlet_1platt_1c_1precomp_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  acb_dirichlet_platt_c_precomp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (acb_dirichlet_platt_c_precomp_struct *)new acb_dirichlet_platt_c_precomp_struct();
  *(acb_dirichlet_platt_c_precomp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1acb_1dirichlet_1platt_1c_1precomp_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  acb_dirichlet_platt_c_precomp_struct *arg1 = (acb_dirichlet_platt_c_precomp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1i_1precomp_1struct_1c1_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_dirichlet_platt_i_precomp_struct *arg1 = (acb_dirichlet_platt_i_precomp_struct *) 0 ;
  arb_struct *arg2 = (arb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_dirichlet_platt_i_precomp_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  if (arg1) (arg1)->c1 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1i_1precomp_1struct_1c1_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_platt_i_precomp_struct *arg1 = (acb_dirichlet_platt_i_precomp_struct *) 0 ;
  arb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_platt_i_precomp_struct **)&jarg1; 
  result = (arb_struct *)& ((arg1)->c1);
  *(arb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1i_1precomp_1struct_1c2_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_dirichlet_platt_i_precomp_struct *arg1 = (acb_dirichlet_platt_i_precomp_struct *) 0 ;
  arb_struct *arg2 = (arb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_dirichlet_platt_i_precomp_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  if (arg1) (arg1)->c2 = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1i_1precomp_1struct_1c2_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_platt_i_precomp_struct *arg1 = (acb_dirichlet_platt_i_precomp_struct *) 0 ;
  arb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_platt_i_precomp_struct **)&jarg1; 
  result = (arb_struct *)& ((arg1)->c2);
  *(arb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1acb_1dirichlet_1platt_1i_1precomp_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  acb_dirichlet_platt_i_precomp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (acb_dirichlet_platt_i_precomp_struct *)new acb_dirichlet_platt_i_precomp_struct();
  *(acb_dirichlet_platt_i_precomp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1acb_1dirichlet_1platt_1i_1precomp_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  acb_dirichlet_platt_i_precomp_struct *arg1 = (acb_dirichlet_platt_i_precomp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(acb_dirichlet_platt_i_precomp_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1ws_1precomp_1struct_1pre_1c_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_dirichlet_platt_ws_precomp_struct *arg1 = (acb_dirichlet_platt_ws_precomp_struct *) 0 ;
  acb_dirichlet_platt_c_precomp_struct *arg2 = (acb_dirichlet_platt_c_precomp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_dirichlet_platt_ws_precomp_struct **)&jarg1; 
  arg2 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg2; 
  if (arg1) (arg1)->pre_c = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1ws_1precomp_1struct_1pre_1c_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_platt_ws_precomp_struct *arg1 = (acb_dirichlet_platt_ws_precomp_struct *) 0 ;
  acb_dirichlet_platt_c_precomp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_platt_ws_precomp_struct **)&jarg1; 
  result = (acb_dirichlet_platt_c_precomp_struct *)& ((arg1)->pre_c);
  *(acb_dirichlet_platt_c_precomp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1ws_1precomp_1struct_1pre_1i_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_dirichlet_platt_ws_precomp_struct *arg1 = (acb_dirichlet_platt_ws_precomp_struct *) 0 ;
  acb_dirichlet_platt_i_precomp_struct *arg2 = (acb_dirichlet_platt_i_precomp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_dirichlet_platt_ws_precomp_struct **)&jarg1; 
  arg2 = *(acb_dirichlet_platt_i_precomp_struct **)&jarg2; 
  if (arg1) (arg1)->pre_i = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1ws_1precomp_1struct_1pre_1i_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_dirichlet_platt_ws_precomp_struct *arg1 = (acb_dirichlet_platt_ws_precomp_struct *) 0 ;
  acb_dirichlet_platt_i_precomp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_platt_ws_precomp_struct **)&jarg1; 
  result = (acb_dirichlet_platt_i_precomp_struct *)& ((arg1)->pre_i);
  *(acb_dirichlet_platt_i_precomp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1acb_1dirichlet_1platt_1ws_1precomp_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  acb_dirichlet_platt_ws_precomp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (acb_dirichlet_platt_ws_precomp_struct *)new acb_dirichlet_platt_ws_precomp_struct();
  *(acb_dirichlet_platt_ws_precomp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1acb_1dirichlet_1platt_1ws_1precomp_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  acb_dirichlet_platt_ws_precomp_struct *arg1 = (acb_dirichlet_platt_ws_precomp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(acb_dirichlet_platt_ws_precomp_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1c_1precomp_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jint jarg5) {
  acb_dirichlet_platt_c_precomp_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  arb_struct *arg3 ;
  mp_limb_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_platt_c_precomp_init(arg1,arg2,(arb_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1c_1precomp_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_dirichlet_platt_c_precomp_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg1; 
  acb_dirichlet_platt_c_precomp_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1c_1bound_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jint jarg6, jint jarg7) {
  arb_struct *arg1 ;
  acb_dirichlet_platt_c_precomp_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  arb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  (void)jarg5_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = *(arb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  acb_dirichlet_platt_c_bound_precomp(arg1,(acb_dirichlet_platt_c_precomp_struct const (*))arg2,arg3,(arb_struct const (*))arg4,(arb_struct const (*))arg5,arg6,arg7);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1c_1bound(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  arb_struct *arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_dirichlet_platt_c_bound(arg1,arg2,(arb_struct const (*))arg3,(arb_struct const (*))arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1i_1precomp_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_dirichlet_platt_i_precomp_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(acb_dirichlet_platt_i_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_platt_i_precomp_init(arg1,arg2,(arb_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1i_1precomp_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_dirichlet_platt_i_precomp_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_platt_i_precomp_struct **)&jarg1; 
  acb_dirichlet_platt_i_precomp_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1i_1bound_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jlong jarg6, jobject jarg6_, jint jarg7, jint jarg8) {
  arb_struct *arg1 ;
  acb_dirichlet_platt_i_precomp_struct *arg2 ;
  acb_dirichlet_platt_c_precomp_struct *arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  arb_struct *arg6 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg6_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(acb_dirichlet_platt_i_precomp_struct **)&jarg2; 
  arg3 = *(acb_dirichlet_platt_c_precomp_struct **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = *(arb_struct **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  acb_dirichlet_platt_i_bound_precomp(arg1,(acb_dirichlet_platt_i_precomp_struct const (*))arg2,(acb_dirichlet_platt_c_precomp_struct const (*))arg3,(arb_struct const (*))arg4,arg5,(arb_struct const (*))arg6,arg7,arg8);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1i_1bound(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_dirichlet_platt_i_bound(arg1,(arb_struct const (*))arg2,arg3,(arb_struct const (*))arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1ws_1precomp_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  acb_dirichlet_platt_ws_precomp_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(acb_dirichlet_platt_ws_precomp_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_platt_ws_precomp_init(arg1,arg2,(arb_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1ws_1precomp_1clear(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_dirichlet_platt_ws_precomp_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_dirichlet_platt_ws_precomp_struct **)&jarg1; 
  acb_dirichlet_platt_ws_precomp_clear(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1ws_1interpolation_1precomp(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jobject jarg5_, jlong jarg6, jint jarg7, jint jarg8, jint jarg9, jlong jarg10, jobject jarg10_, jint jarg11, jint jarg12) {
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  acb_dirichlet_platt_ws_precomp_struct *arg3 ;
  arb_struct *arg4 ;
  arb_srcptr arg5 = (arb_srcptr) 0 ;
  fmpz *arg6 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  arb_struct *arg10 ;
  mp_limb_signed_t arg11 ;
  mp_limb_signed_t arg12 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg5_;
  (void)jarg10_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(acb_dirichlet_platt_ws_precomp_struct **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = *(arb_srcptr *)&jarg5; 
  arg6 = *(long **)&jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  arg10 = *(arb_struct **)&jarg10; 
  arg11 = (mp_limb_signed_t)jarg11; 
  arg12 = (mp_limb_signed_t)jarg12; 
  acb_dirichlet_platt_ws_interpolation_precomp(arg1,arg2,(acb_dirichlet_platt_ws_precomp_struct const (*))arg3,(arb_struct const (*))arg4,(arb_struct const *)arg5,(long const (*))arg6,arg7,arg8,arg9,(arb_struct const (*))arg10,arg11,arg12);
  
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1ws_1interpolation(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jlong jarg5, jint jarg6, jint jarg7, jint jarg8, jlong jarg9, jobject jarg9_, jint jarg10, jint jarg11) {
  arb_struct *arg1 ;
  arf_struct *arg2 ;
  arb_struct *arg3 ;
  arb_srcptr arg4 = (arb_srcptr) 0 ;
  fmpz *arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  arb_struct *arg9 ;
  mp_limb_signed_t arg10 ;
  mp_limb_signed_t arg11 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  (void)jarg9_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = *(arb_srcptr *)&jarg4; 
  arg5 = *(long **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = *(arb_struct **)&jarg9; 
  arg10 = (mp_limb_signed_t)jarg10; 
  arg11 = (mp_limb_signed_t)jarg11; 
  acb_dirichlet_platt_ws_interpolation(arg1,arg2,(arb_struct const (*))arg3,(arb_struct const *)arg4,(long const (*))arg5,arg6,arg7,arg8,(arb_struct const (*))arg9,arg10,arg11);
  
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1bound_1C3(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_dirichlet_platt_bound_C3(arg1,(arb_struct const (*))arg2,arg3,(arb_struct const (*))arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1scaled_1lambda(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_dirichlet_platt_scaled_lambda(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1scaled_1lambda_1vec(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4, jint jarg5) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_platt_scaled_lambda_vec(arg1,(long const (*))arg2,arg3,arg4,arg5);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1beta(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jint jarg3) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_dirichlet_platt_beta(arg1,(arb_struct const (*))arg2,arg3);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1lemma_132(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_platt_lemma_32(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,(arb_struct const (*))arg4,arg5);
  
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1lemma_1A5(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_platt_lemma_A5(arg1,arg2,(arb_struct const (*))arg3,arg4,arg5);
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1lemma_1A7(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6, jint jarg7) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  arb_struct *arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  acb_dirichlet_platt_lemma_A7(arg1,arg2,(arb_struct const (*))arg3,(arb_struct const (*))arg4,arg5,arg6,arg7);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1lemma_1A9(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  arb_struct *arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_dirichlet_platt_lemma_A9(arg1,arg2,(arb_struct const (*))arg3,(arb_struct const (*))arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1lemma_1A11(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4, jint jarg5) {
  arb_struct *arg1 ;
  arb_struct *arg2 ;
  arb_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_platt_lemma_A11(arg1,(arb_struct const (*))arg2,(arb_struct const (*))arg3,arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1lemma_1B1(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  arb_struct *arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  acb_dirichlet_platt_lemma_B1(arg1,arg2,(arb_struct const (*))arg3,(arb_struct const (*))arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1lemma_1B2(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5) {
  arb_struct *arg1 ;
  mp_limb_signed_t arg2 ;
  arb_struct *arg3 ;
  arb_struct *arg4 ;
  mp_limb_signed_t arg5 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = *(arb_struct **)&jarg3; 
  arg4 = *(arb_struct **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  acb_dirichlet_platt_lemma_B2(arg1,arg2,(arb_struct const (*))arg3,(arb_struct const (*))arg4,arg5);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1multieval(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4, jlong jarg5, jobject jarg5_, jint jarg6, jint jarg7, jint jarg8, jint jarg9) {
  arb_ptr arg1 = (arb_ptr) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  arb_struct *arg5 ;
  mp_limb_signed_t arg6 ;
  mp_limb_signed_t arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg5_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  arg5 = *(arb_struct **)&jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = (mp_limb_signed_t)jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  acb_dirichlet_platt_multieval(arg1,(long const (*))arg2,arg3,arg4,(arb_struct const (*))arg5,arg6,arg7,arg8,arg9);
  
  
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI__1acb_1dirichlet_1platt_1local_1hardy_1z_1zeros(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jlong jarg4, jint jarg5, jint jarg6, jlong jarg7, jobject jarg7_, jint jarg8, jint jarg9, jint jarg10, jint jarg11, jlong jarg12, jobject jarg12_, jint jarg13, jint jarg14) {
  jint jresult = 0 ;
  arb_ptr arg1 = (arb_ptr) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  fmpz *arg4 ;
  mp_limb_signed_t arg5 ;
  mp_limb_signed_t arg6 ;
  arb_struct *arg7 ;
  mp_limb_signed_t arg8 ;
  mp_limb_signed_t arg9 ;
  mp_limb_signed_t arg10 ;
  mp_limb_signed_t arg11 ;
  arb_struct *arg12 ;
  mp_limb_signed_t arg13 ;
  mp_limb_signed_t arg14 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg7_;
  (void)jarg12_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = *(long **)&jarg4; 
  arg5 = (mp_limb_signed_t)jarg5; 
  arg6 = (mp_limb_signed_t)jarg6; 
  arg7 = *(arb_struct **)&jarg7; 
  arg8 = (mp_limb_signed_t)jarg8; 
  arg9 = (mp_limb_signed_t)jarg9; 
  arg10 = (mp_limb_signed_t)jarg10; 
  arg11 = (mp_limb_signed_t)jarg11; 
  arg12 = *(arb_struct **)&jarg12; 
  arg13 = (mp_limb_signed_t)jarg13; 
  arg14 = (mp_limb_signed_t)jarg14; 
  result = (mp_limb_signed_t)_acb_dirichlet_platt_local_hardy_z_zeros(arg1,(long const (*))arg2,arg3,(long const (*))arg4,arg5,arg6,(arb_struct const (*))arg7,arg8,arg9,arg10,arg11,(arb_struct const (*))arg12,arg13,arg14);
  jresult = (jint)result; 
  
  
  
  
  return jresult;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1platt_1local_1hardy_1z_1zeros(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jint jarg3, jint jarg4) {
  jint jresult = 0 ;
  arb_ptr arg1 = (arb_ptr) 0 ;
  fmpz *arg2 ;
  mp_limb_signed_t arg3 ;
  mp_limb_signed_t arg4 ;
  mp_limb_signed_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_ptr *)&jarg1; 
  arg2 = *(long **)&jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  result = (mp_limb_signed_t)acb_dirichlet_platt_local_hardy_z_zeros(arg1,(long const (*))arg2,arg3,arg4);
  jresult = (jint)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1dft_1index(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  dirichlet_group_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = *(dirichlet_group_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_dft_index(arg1,(acb_struct const *)arg2,(dirichlet_group_struct const (*))arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1dft(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jint jarg4) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_srcptr arg2 = (acb_srcptr) 0 ;
  dirichlet_group_struct *arg3 ;
  mp_limb_signed_t arg4 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_srcptr *)&jarg2; 
  arg3 = *(dirichlet_group_struct **)&jarg3; 
  arg4 = (mp_limb_signed_t)jarg4; 
  acb_dirichlet_dft(arg1,(acb_struct const *)arg2,(dirichlet_group_struct const (*))arg3,arg4);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1vec_1printd(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jint jarg3) {
  acb_srcptr arg1 = (acb_srcptr) 0 ;
  mp_limb_signed_t arg2 ;
  mp_limb_signed_t arg3 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_srcptr *)&jarg1; 
  arg2 = (mp_limb_signed_t)jarg2; 
  arg3 = (mp_limb_signed_t)jarg3; 
  acb_vec_printd((acb_struct const *)arg1,arg2,arg3);
}


#ifdef __cplusplus
}
#endif

