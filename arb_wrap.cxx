/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */


#ifndef SWIGJAVA
#define SWIGJAVA
#endif



#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


/* Fix for jlong on some versions of gcc on Windows */
#if defined(__GNUC__) && !defined(__INTEL_COMPILER)
  typedef long long __int64;
#endif

/* Fix for jlong on 64-bit x86 Solaris */
#if defined(__x86_64)
# ifdef _LP64
#   undef _LP64
# endif
#endif

#include <jni.h>
#include <stdlib.h>
#include <string.h>


/* Support for throwing Java exceptions */
typedef enum {
  SWIG_JavaOutOfMemoryError = 1,
  SWIG_JavaIOException,
  SWIG_JavaRuntimeException,
  SWIG_JavaIndexOutOfBoundsException,
  SWIG_JavaArithmeticException,
  SWIG_JavaIllegalArgumentException,
  SWIG_JavaNullPointerException,
  SWIG_JavaDirectorPureVirtual,
  SWIG_JavaUnknownError,
  SWIG_JavaIllegalStateException,
} SWIG_JavaExceptionCodes;

typedef struct {
  SWIG_JavaExceptionCodes code;
  const char *java_exception;
} SWIG_JavaExceptions_t;


static void SWIGUNUSED SWIG_JavaThrowException(JNIEnv *jenv, SWIG_JavaExceptionCodes code, const char *msg) {
  jclass excep;
  static const SWIG_JavaExceptions_t java_exceptions[] = {
    { SWIG_JavaOutOfMemoryError, "java/lang/OutOfMemoryError" },
    { SWIG_JavaIOException, "java/io/IOException" },
    { SWIG_JavaRuntimeException, "java/lang/RuntimeException" },
    { SWIG_JavaIndexOutOfBoundsException, "java/lang/IndexOutOfBoundsException" },
    { SWIG_JavaArithmeticException, "java/lang/ArithmeticException" },
    { SWIG_JavaIllegalArgumentException, "java/lang/IllegalArgumentException" },
    { SWIG_JavaNullPointerException, "java/lang/NullPointerException" },
    { SWIG_JavaDirectorPureVirtual, "java/lang/RuntimeException" },
    { SWIG_JavaUnknownError,  "java/lang/UnknownError" },
    { SWIG_JavaIllegalStateException, "java/lang/IllegalStateException" },
    { (SWIG_JavaExceptionCodes)0,  "java/lang/UnknownError" }
  };
  const SWIG_JavaExceptions_t *except_ptr = java_exceptions;

  while (except_ptr->code != code && except_ptr->code)
    except_ptr++;

  jenv->ExceptionClear();
  excep = jenv->FindClass(except_ptr->java_exception);
  if (excep)
    jenv->ThrowNew(excep, msg);
}


/* Contract support */

#define SWIG_contract_assert(nullreturn, expr, msg) if (!(expr)) {SWIG_JavaThrowException(jenv, SWIG_JavaIllegalArgumentException, msg); return nullreturn; } else


#include <mpfr.h>
#include <flint/flint.h>
#include <arf.h>
#include <arb.h>
#include <acb.h>
#include <acb_poly.h>
#include <acb_dirichlet.h>
#include <dirichlet.h>


#ifdef __cplusplus
extern "C" {
#endif

SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1struct_1real_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 = (acb_struct *) 0 ;
  arb_struct *arg2 = (arb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  if (arg1) (arg1)->real = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1struct_1real_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_struct *arg1 = (acb_struct *) 0 ;
  arb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (arb_struct *)& ((arg1)->real);
  *(arb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1struct_1imag_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  acb_struct *arg1 = (acb_struct *) 0 ;
  arb_struct *arg2 = (arb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = *(arb_struct **)&jarg2; 
  if (arg1) (arg1)->imag = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_acb_1struct_1imag_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  acb_struct *arg1 = (acb_struct *) 0 ;
  arb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  result = (arb_struct *)& ((arg1)->imag);
  *(arb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1acb_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  acb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (acb_struct *)new acb_struct();
  *(acb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1acb_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  acb_struct *arg1 = (acb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(acb_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1q_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  if (arg1) (arg1)->q = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1q_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (unsigned long) ((arg1)->q);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1q_1even_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  if (arg1) (arg1)->q_even = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1q_1even_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (unsigned long) ((arg1)->q_even);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1mod_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  nmod_t arg2 ;
  nmod_t *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  argp2 = *(nmod_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->mod = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1mod_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  nmod_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result =  ((arg1)->mod);
  *(nmod_t **)&jresult = new nmod_t((const nmod_t &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1rad_1q_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  if (arg1) (arg1)->rad_q = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1rad_1q_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (unsigned long) ((arg1)->rad_q);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1phi_1q_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  if (arg1) (arg1)->phi_q = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1phi_1q_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (unsigned long) ((arg1)->phi_q);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1neven_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->neven = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1neven_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (long) ((arg1)->neven);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1num_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (long)jarg2; 
  if (arg1) (arg1)->num = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1num_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (long) ((arg1)->num);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1expo_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  if (arg1) (arg1)->expo = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1expo_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (unsigned long) ((arg1)->expo);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1P_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  dirichlet_prime_group_struct *arg2 = (dirichlet_prime_group_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(dirichlet_prime_group_struct **)&jarg2; 
  if (arg1) (arg1)->P = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1P_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  dirichlet_prime_group_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (dirichlet_prime_group_struct *) ((arg1)->P);
  *(dirichlet_prime_group_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1generators_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long *arg2 = (unsigned long *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(unsigned long **)&jarg2; 
  if (arg1) (arg1)->generators = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1generators_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (unsigned long *) ((arg1)->generators);
  *(unsigned long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1PHI_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long *arg2 = (unsigned long *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  arg2 = *(unsigned long **)&jarg2; 
  if (arg1) (arg1)->PHI = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1group_1struct_1PHI_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  unsigned long *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  result = (unsigned long *) ((arg1)->PHI);
  *(unsigned long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dirichlet_1group_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dirichlet_group_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dirichlet_group_struct *)new dirichlet_group_struct();
  *(dirichlet_group_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dirichlet_1group_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dirichlet_group_struct *arg1 = (dirichlet_group_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dirichlet_group_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1struct_1n_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_char_struct *arg1 = (dirichlet_char_struct *) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  if (arg1) (arg1)->n = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1char_1struct_1n_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_char_struct *arg1 = (dirichlet_char_struct *) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  result = (unsigned long) ((arg1)->n);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1char_1struct_1log_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_char_struct *arg1 = (dirichlet_char_struct *) 0 ;
  unsigned long *arg2 = (unsigned long *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  arg2 = *(unsigned long **)&jarg2; 
  if (arg1) (arg1)->log = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1char_1struct_1log_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_char_struct *arg1 = (dirichlet_char_struct *) 0 ;
  unsigned long *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  result = (unsigned long *) ((arg1)->log);
  *(unsigned long **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dirichlet_1char_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dirichlet_char_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dirichlet_char_struct *)new dirichlet_char_struct();
  *(dirichlet_char_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dirichlet_1char_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dirichlet_char_struct *arg1 = (dirichlet_char_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dirichlet_char_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1p_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  if (arg1) (arg1)->p = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1p_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  result = (unsigned long) ((arg1)->p);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1e_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  int arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  arg2 = (int)jarg2; 
  if (arg1) (arg1)->e = arg2;
}


SWIGEXPORT jint JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1e_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jint jresult = 0 ;
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  int result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  result = (int) ((arg1)->e);
  jresult = (jint)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1pe_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  nmod_t arg2 ;
  nmod_t *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  argp2 = *(nmod_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->pe = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1pe_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  nmod_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  result =  ((arg1)->pe);
  *(nmod_t **)&jresult = new nmod_t((const nmod_t &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1phi_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  nmod_t arg2 ;
  nmod_t *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  argp2 = *(nmod_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null nmod_t");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->phi = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1phi_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  nmod_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  result =  ((arg1)->phi);
  *(nmod_t **)&jresult = new nmod_t((const nmod_t &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1g_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  unsigned long arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  arg2 = (unsigned long)jarg2; 
  if (arg1) (arg1)->g = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1g_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  unsigned long result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  result = (unsigned long) ((arg1)->g);
  jresult = (jlong)result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1dlog_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  dlog_precomp_struct *arg2 = (dlog_precomp_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  arg2 = *(dlog_precomp_struct **)&jarg2; 
  if (arg1) (arg1)->dlog = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_dirichlet_1prime_1group_1struct_1dlog_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  dlog_precomp_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  result = (dlog_precomp_struct *) ((arg1)->dlog);
  *(dlog_precomp_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1dirichlet_1prime_1group_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  dirichlet_prime_group_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (dirichlet_prime_group_struct *)new dirichlet_prime_group_struct();
  *(dirichlet_prime_group_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1dirichlet_1prime_1group_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  dirichlet_prime_group_struct *arg1 = (dirichlet_prime_group_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(dirichlet_prime_group_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1struct_1mid_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arb_struct *arg1 = (arb_struct *) 0 ;
  arf_struct *arg2 = (arf_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = *(arf_struct **)&jarg2; 
  if (arg1) (arg1)->mid = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1struct_1mid_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  arb_struct *arg1 = (arb_struct *) 0 ;
  arf_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result = (arf_struct *)& ((arg1)->mid);
  *(arf_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1struct_1rad_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  arb_struct *arg1 = (arb_struct *) 0 ;
  mag_struct arg2 ;
  mag_struct *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  argp2 = *(mag_struct **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null mag_struct");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->rad = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arb_1struct_1rad_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  arb_struct *arg1 = (arb_struct *) 0 ;
  mag_struct result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  result =  ((arg1)->rad);
  *(mag_struct **)&jresult = new mag_struct((const mag_struct &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1arb_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  arb_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (arb_struct *)new arb_struct();
  *(arb_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1arb_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  arb_struct *arg1 = (arb_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(arb_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arf_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arf_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  acb_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mantissa_1noptr_1struct_1d_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mantissa_noptr_struct *arg1 = (mantissa_noptr_struct *) 0 ;
  mp_limb_t *arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_noptr_struct **)&jarg1; 
  arg2 = *(mp_limb_t **)&jarg2; 
  {
    size_t ii;
    mp_limb_t *b = (mp_limb_t *) arg1->d;
    for (ii = 0; ii < (size_t)ARF_NOPTR_LIMBS; ii++) b[ii] = *((mp_limb_t *) arg2 + ii);
  }
  
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mantissa_1noptr_1struct_1d_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mantissa_noptr_struct *arg1 = (mantissa_noptr_struct *) 0 ;
  mp_limb_t *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_noptr_struct **)&jarg1; 
  result = (mp_limb_t *)(mp_limb_t *) ((arg1)->d);
  *(mp_limb_t **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1mantissa_1noptr_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mantissa_noptr_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mantissa_noptr_struct *)new mantissa_noptr_struct();
  *(mantissa_noptr_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1mantissa_1noptr_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mantissa_noptr_struct *arg1 = (mantissa_noptr_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mantissa_noptr_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mantissa_1ptr_1struct_1alloc_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mantissa_ptr_struct *arg1 = (mantissa_ptr_struct *) 0 ;
  mp_size_t arg2 ;
  mp_size_t *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_ptr_struct **)&jarg1; 
  argp2 = *(mp_size_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null mp_size_t");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->alloc = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mantissa_1ptr_1struct_1alloc_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mantissa_ptr_struct *arg1 = (mantissa_ptr_struct *) 0 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_ptr_struct **)&jarg1; 
  result =  ((arg1)->alloc);
  *(mp_size_t **)&jresult = new mp_size_t((const mp_size_t &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mantissa_1ptr_1struct_1d_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  mantissa_ptr_struct *arg1 = (mantissa_ptr_struct *) 0 ;
  mp_ptr arg2 ;
  mp_ptr *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_ptr_struct **)&jarg1; 
  argp2 = *(mp_ptr **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null mp_ptr");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->d = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mantissa_1ptr_1struct_1d_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mantissa_ptr_struct *arg1 = (mantissa_ptr_struct *) 0 ;
  mp_ptr result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_ptr_struct **)&jarg1; 
  result =  ((arg1)->d);
  *(mp_ptr **)&jresult = new mp_ptr((const mp_ptr &)result); 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1mantissa_1ptr_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mantissa_ptr_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mantissa_ptr_struct *)new mantissa_ptr_struct();
  *(mantissa_ptr_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1mantissa_1ptr_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mantissa_ptr_struct *arg1 = (mantissa_ptr_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mantissa_ptr_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mantissa_1struct_1noptr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mantissa_struct *arg1 = (mantissa_struct *) 0 ;
  mantissa_noptr_struct *arg2 = (mantissa_noptr_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mantissa_struct **)&jarg1; 
  arg2 = *(mantissa_noptr_struct **)&jarg2; 
  if (arg1) (arg1)->noptr = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mantissa_1struct_1noptr_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mantissa_struct *arg1 = (mantissa_struct *) 0 ;
  mantissa_noptr_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_struct **)&jarg1; 
  result = (mantissa_noptr_struct *)& ((arg1)->noptr);
  *(mantissa_noptr_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_mantissa_1struct_1ptr_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  mantissa_struct *arg1 = (mantissa_struct *) 0 ;
  mantissa_ptr_struct *arg2 = (mantissa_ptr_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(mantissa_struct **)&jarg1; 
  arg2 = *(mantissa_ptr_struct **)&jarg2; 
  if (arg1) (arg1)->ptr = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_mantissa_1struct_1ptr_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  mantissa_struct *arg1 = (mantissa_struct *) 0 ;
  mantissa_ptr_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(mantissa_struct **)&jarg1; 
  result = (mantissa_ptr_struct *)& ((arg1)->ptr);
  *(mantissa_ptr_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1mantissa_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  mantissa_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (mantissa_struct *)new mantissa_struct();
  *(mantissa_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1mantissa_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  mantissa_struct *arg1 = (mantissa_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(mantissa_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1struct_1exp_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  arf_struct *arg1 = (arf_struct *) 0 ;
  fmpz arg2 ;
  fmpz *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  argp2 = *(fmpz **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null fmpz");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->exp = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arf_1struct_1exp_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  arf_struct *arg1 = (arf_struct *) 0 ;
  fmpz result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result =  ((arg1)->exp);
  *(fmpz **)&jresult = new fmpz((const fmpz &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1struct_1size_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  arf_struct *arg1 = (arf_struct *) 0 ;
  mp_size_t arg2 ;
  mp_size_t *argp2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  argp2 = *(mp_size_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null mp_size_t");
    return ;
  }
  arg2 = *argp2; 
  if (arg1) (arg1)->size = arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arf_1struct_1size_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  arf_struct *arg1 = (arf_struct *) 0 ;
  mp_size_t result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result =  ((arg1)->size);
  *(mp_size_t **)&jresult = new mp_size_t((const mp_size_t &)result); 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1struct_1d_1set(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_) {
  arf_struct *arg1 = (arf_struct *) 0 ;
  mantissa_struct *arg2 = (mantissa_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = *(mantissa_struct **)&jarg2; 
  if (arg1) (arg1)->d = *arg2;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_arf_1struct_1d_1get(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  jlong jresult = 0 ;
  arf_struct *arg1 = (arf_struct *) 0 ;
  mantissa_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  result = (mantissa_struct *)& ((arg1)->d);
  *(mantissa_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT jlong JNICALL Java_arblib_arblibJNI_new_1arf_1struct(JNIEnv *jenv, jclass jcls) {
  jlong jresult = 0 ;
  arf_struct *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  result = (arf_struct *)new arf_struct();
  *(arf_struct **)&jresult = result; 
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_delete_1arf_1struct(JNIEnv *jenv, jclass jcls, jlong jarg1) {
  arf_struct *arg1 = (arf_struct *) 0 ;
  
  (void)jenv;
  (void)jcls;
  arg1 = *(arf_struct **)&jarg1; 
  delete arg1;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arb_1init(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  arb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arb_init(arg1);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  acb_struct *arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  acb_set_d(arg1,arg2);
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1dirichlet_1hardy_1z(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2, jobject jarg2_, jlong jarg3, jobject jarg3_, jlong jarg4, jobject jarg4_, jint jarg5, jint jarg6) {
  acb_ptr arg1 = (acb_ptr) 0 ;
  acb_struct *arg2 ;
  dirichlet_group_struct *arg3 ;
  dirichlet_char_struct *arg4 ;
  long arg5 ;
  long arg6 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  (void)jarg2_;
  (void)jarg3_;
  (void)jarg4_;
  arg1 = *(acb_ptr *)&jarg1; 
  arg2 = *(acb_struct **)&jarg2; 
  arg3 = *(dirichlet_group_struct **)&jarg3; 
  arg4 = *(dirichlet_char_struct **)&jarg4; 
  arg5 = (long)jarg5; 
  arg6 = (long)jarg6; 
  acb_dirichlet_hardy_z(arg1,(acb_struct const (*))arg2,(dirichlet_group_struct const (*))arg3,(dirichlet_char_struct const (*))arg4,arg5,arg6);
  
  
  
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_acb_1print(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_) {
  acb_struct *arg1 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(acb_struct **)&jarg1; 
  acb_print((acb_struct const (*))arg1);
  
}


SWIGEXPORT jstring JNICALL Java_arblib_arblibJNI_arb_1get_1str(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jint jarg2, jlong jarg3) {
  jstring jresult = 0 ;
  arb_struct *arg1 ;
  long arg2 ;
  unsigned long arg3 ;
  char *result = 0 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arb_struct **)&jarg1; 
  arg2 = (long)jarg2; 
  arg3 = (unsigned long)jarg3; 
  result = (char *)arb_get_str((arb_struct const (*))arg1,arg2,arg3);
  if (result) jresult = jenv->NewStringUTF((const char *)result);
  
  return jresult;
}


SWIGEXPORT jdouble JNICALL Java_arblib_arblibJNI_arf_1get_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jlong jarg2) {
  jdouble jresult = 0 ;
  arf_struct *arg1 ;
  arf_rnd_t arg2 ;
  arf_rnd_t *argp2 ;
  double result;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  argp2 = *(arf_rnd_t **)&jarg2; 
  if (!argp2) {
    SWIG_JavaThrowException(jenv, SWIG_JavaNullPointerException, "Attempt to dereference null arf_rnd_t");
    return 0;
  }
  arg2 = *argp2; 
  result = (double)arf_get_d((arf_struct const (*))arg1,arg2);
  jresult = (jdouble)result; 
  
  return jresult;
}


SWIGEXPORT void JNICALL Java_arblib_arblibJNI_arf_1set_1d(JNIEnv *jenv, jclass jcls, jlong jarg1, jobject jarg1_, jdouble jarg2) {
  arf_struct *arg1 ;
  double arg2 ;
  
  (void)jenv;
  (void)jcls;
  (void)jarg1_;
  arg1 = *(arf_struct **)&jarg1; 
  arg2 = (double)jarg2; 
  arf_set_d(arg1,arg2);
  
}


#ifdef __cplusplus
}
#endif

