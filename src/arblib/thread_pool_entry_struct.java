/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package arblib;

public class thread_pool_entry_struct {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected thread_pool_entry_struct(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(thread_pool_entry_struct obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        arblibJNI.delete_thread_pool_entry_struct(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void setPth(long value) {
    arblibJNI.thread_pool_entry_struct_pth_set(swigCPtr, this, value);
  }

  public long getPth() {
    return arblibJNI.thread_pool_entry_struct_pth_get(swigCPtr, this);
  }

  public void setMutex(pthread_mutex_t value) {
    arblibJNI.thread_pool_entry_struct_mutex_set(swigCPtr, this, pthread_mutex_t.getCPtr(value), value);
  }

  public pthread_mutex_t getMutex() {
    long cPtr = arblibJNI.thread_pool_entry_struct_mutex_get(swigCPtr, this);
    return (cPtr == 0) ? null : new pthread_mutex_t(cPtr, false);
  }

  public void setSleep1(pthread_cond_t value) {
    arblibJNI.thread_pool_entry_struct_sleep1_set(swigCPtr, this, pthread_cond_t.getCPtr(value), value);
  }

  public pthread_cond_t getSleep1() {
    long cPtr = arblibJNI.thread_pool_entry_struct_sleep1_get(swigCPtr, this);
    return (cPtr == 0) ? null : new pthread_cond_t(cPtr, false);
  }

  public void setSleep2(pthread_cond_t value) {
    arblibJNI.thread_pool_entry_struct_sleep2_set(swigCPtr, this, pthread_cond_t.getCPtr(value), value);
  }

  public pthread_cond_t getSleep2() {
    long cPtr = arblibJNI.thread_pool_entry_struct_sleep2_get(swigCPtr, this);
    return (cPtr == 0) ? null : new pthread_cond_t(cPtr, false);
  }

  public void setIdx(int value) {
    arblibJNI.thread_pool_entry_struct_idx_set(swigCPtr, this, value);
  }

  public int getIdx() {
    return arblibJNI.thread_pool_entry_struct_idx_get(swigCPtr, this);
  }

  public void setAvailable(int value) {
    arblibJNI.thread_pool_entry_struct_available_set(swigCPtr, this, value);
  }

  public int getAvailable() {
    return arblibJNI.thread_pool_entry_struct_available_get(swigCPtr, this);
  }

  public void setMax_workers(int value) {
    arblibJNI.thread_pool_entry_struct_max_workers_set(swigCPtr, this, value);
  }

  public int getMax_workers() {
    return arblibJNI.thread_pool_entry_struct_max_workers_get(swigCPtr, this);
  }

  public void setFxn(SWIGTYPE_p_f_p_void__void value) {
    arblibJNI.thread_pool_entry_struct_fxn_set(swigCPtr, this, SWIGTYPE_p_f_p_void__void.getCPtr(value));
  }

  public SWIGTYPE_p_f_p_void__void getFxn() {
    long cPtr = arblibJNI.thread_pool_entry_struct_fxn_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_f_p_void__void(cPtr, false);
  }

  public void setFxnarg(SWIGTYPE_p_void value) {
    arblibJNI.thread_pool_entry_struct_fxnarg_set(swigCPtr, this, SWIGTYPE_p_void.getCPtr(value));
  }

  public SWIGTYPE_p_void getFxnarg() {
    long cPtr = arblibJNI.thread_pool_entry_struct_fxnarg_get(swigCPtr, this);
    return (cPtr == 0) ? null : new SWIGTYPE_p_void(cPtr, false);
  }

  public void setWorking(int value) {
    arblibJNI.thread_pool_entry_struct_working_set(swigCPtr, this, value);
  }

  public int getWorking() {
    return arblibJNI.thread_pool_entry_struct_working_get(swigCPtr, this);
  }

  public void setExit(int value) {
    arblibJNI.thread_pool_entry_struct_exit_set(swigCPtr, this, value);
  }

  public int getExit() {
    return arblibJNI.thread_pool_entry_struct_exit_get(swigCPtr, this);
  }

  public thread_pool_entry_struct() {
    this(arblibJNI.new_thread_pool_entry_struct(), true);
  }

}
