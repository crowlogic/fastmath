/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package arblib;

public class __pthread_mutex_s {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  protected __pthread_mutex_s(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  protected static long getCPtr(__pthread_mutex_s obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  @SuppressWarnings("deprecation")
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        arblibJNI.delete___pthread_mutex_s(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public void set__lock(int value) {
    arblibJNI.__pthread_mutex_s___lock_set(swigCPtr, this, value);
  }

  public int get__lock() {
    return arblibJNI.__pthread_mutex_s___lock_get(swigCPtr, this);
  }

  public void set__count(long value) {
    arblibJNI.__pthread_mutex_s___count_set(swigCPtr, this, value);
  }

  public long get__count() {
    return arblibJNI.__pthread_mutex_s___count_get(swigCPtr, this);
  }

  public void set__owner(int value) {
    arblibJNI.__pthread_mutex_s___owner_set(swigCPtr, this, value);
  }

  public int get__owner() {
    return arblibJNI.__pthread_mutex_s___owner_get(swigCPtr, this);
  }

  public void set__kind(int value) {
    arblibJNI.__pthread_mutex_s___kind_set(swigCPtr, this, value);
  }

  public int get__kind() {
    return arblibJNI.__pthread_mutex_s___kind_get(swigCPtr, this);
  }

  public void set__nusers(long value) {
    arblibJNI.__pthread_mutex_s___nusers_set(swigCPtr, this, value);
  }

  public long get__nusers() {
    return arblibJNI.__pthread_mutex_s___nusers_get(swigCPtr, this);
  }

  public void set__list(__pthread_slist_t value) {
    arblibJNI.__pthread_mutex_s___list_set(swigCPtr, this, __pthread_slist_t.getCPtr(value), value);
  }

  public __pthread_slist_t get__list() {
    long cPtr = arblibJNI.__pthread_mutex_s___list_get(swigCPtr, this);
    return (cPtr == 0) ? null : new __pthread_slist_t(cPtr, false);
  }

  public __pthread_mutex_s() {
    this(arblibJNI.new___pthread_mutex_s(), true);
  }

}
