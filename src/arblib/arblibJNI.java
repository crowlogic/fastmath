/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.1
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package arblib;

public class arblibJNI {
  public final static native int MPFR_VERSION_MAJOR_get();
  public final static native int MPFR_VERSION_MINOR_get();
  public final static native int MPFR_VERSION_PATCHLEVEL_get();
  public final static native String MPFR_VERSION_STRING_get();
  public final static native int MPFR_VERSION_get();
  public final static native int _GLIBCXX_IOSFWD_get();
  public final static native int _GLIBCXX_CXX_CONFIG_H_get();
  public final static native int _GLIBCXX_RELEASE_get();
  public final static native int __GLIBCXX___get();
  public final static native int _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY_get();
  public final static native int _GLIBCXX_USE_DEPRECATED_get();
  public final static native int _GLIBCXX_OS_DEFINES_get();
  public final static native int __NO_CTYPE_get();
  public final static native int _FEATURES_H_get();
  public final static native int _DEFAULT_SOURCE_get();
  public final static native int __GLIBC_USE_ISOC2X_get();
  public final static native int __USE_POSIX_IMPLICITLY_get();
  public final static native int _POSIX_SOURCE_get();
  public final static native int _POSIX_C_SOURCE_get();
  public final static native int __USE_POSIX_get();
  public final static native int __USE_POSIX2_get();
  public final static native int __USE_POSIX199309_get();
  public final static native int __USE_POSIX199506_get();
  public final static native int __USE_XOPEN2K_get();
  public final static native int __USE_ISOC95_get();
  public final static native int __USE_ISOC99_get();
  public final static native int __USE_XOPEN2K8_get();
  public final static native int _ATFILE_SOURCE_get();
  public final static native int __USE_MISC_get();
  public final static native int __USE_ATFILE_get();
  public final static native int __USE_FORTIFY_LEVEL_get();
  public final static native int __GLIBC_USE_DEPRECATED_GETS_get();
  public final static native int __GLIBC_USE_DEPRECATED_SCANF_get();
  public final static native int _STDC_PREDEF_H_get();
  public final static native int __STDC_IEC_559___get();
  public final static native int __STDC_IEC_559_COMPLEX___get();
  public final static native int __STDC_ISO_10646___get();
  public final static native int __GNU_LIBRARY___get();
  public final static native int __GLIBC___get();
  public final static native int __GLIBC_MINOR___get();
  public final static native int _SYS_CDEFS_H_get();
  public final static native int __glibc_c99_flexarr_available_get();
  public final static native int __WORDSIZE_get();
  public final static native int __WORDSIZE32_SIZE_ULONG_get();
  public final static native int __WORDSIZE32_PTRDIFF_LONG_get();
  public final static native int __WORDSIZE_TIME64_COMPAT32_get();
  public final static native int __LDOUBLE_REDIRECTS_TO_FLOAT128_ABI_get();
  public final static native int __HAVE_GENERIC_SELECTION_get();
  public final static native int _GLIBCXX_NO_OBSOLETE_ISINF_ISNAN_DYNAMIC_get();
  public final static native int _GLIBCXX_CPU_DEFINES_get();
  public final static native int _GLIBCXX_FAST_MATH_get();
  public final static native int _GLIBCXX_HAVE_ACOSF_get();
  public final static native int _GLIBCXX_HAVE_ACOSL_get();
  public final static native int _GLIBCXX_HAVE_ALIGNED_ALLOC_get();
  public final static native int _GLIBCXX_HAVE_ARPA_INET_H_get();
  public final static native int _GLIBCXX_HAVE_ASINF_get();
  public final static native int _GLIBCXX_HAVE_ASINL_get();
  public final static native int _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE_get();
  public final static native int _GLIBCXX_HAVE_ATAN2F_get();
  public final static native int _GLIBCXX_HAVE_ATAN2L_get();
  public final static native int _GLIBCXX_HAVE_ATANF_get();
  public final static native int _GLIBCXX_HAVE_ATANL_get();
  public final static native int _GLIBCXX_HAVE_ATOMIC_LOCK_POLICY_get();
  public final static native int _GLIBCXX_HAVE_AT_QUICK_EXIT_get();
  public final static native int _GLIBCXX_HAVE_CEILF_get();
  public final static native int _GLIBCXX_HAVE_CEILL_get();
  public final static native int _GLIBCXX_HAVE_COMPLEX_H_get();
  public final static native int _GLIBCXX_HAVE_COSF_get();
  public final static native int _GLIBCXX_HAVE_COSHF_get();
  public final static native int _GLIBCXX_HAVE_COSHL_get();
  public final static native int _GLIBCXX_HAVE_COSL_get();
  public final static native int _GLIBCXX_HAVE_DIRENT_H_get();
  public final static native int _GLIBCXX_HAVE_DLFCN_H_get();
  public final static native int _GLIBCXX_HAVE_EBADMSG_get();
  public final static native int _GLIBCXX_HAVE_ECANCELED_get();
  public final static native int _GLIBCXX_HAVE_ECHILD_get();
  public final static native int _GLIBCXX_HAVE_EIDRM_get();
  public final static native int _GLIBCXX_HAVE_ENDIAN_H_get();
  public final static native int _GLIBCXX_HAVE_ENODATA_get();
  public final static native int _GLIBCXX_HAVE_ENOLINK_get();
  public final static native int _GLIBCXX_HAVE_ENOSPC_get();
  public final static native int _GLIBCXX_HAVE_ENOSR_get();
  public final static native int _GLIBCXX_HAVE_ENOSTR_get();
  public final static native int _GLIBCXX_HAVE_ENOTRECOVERABLE_get();
  public final static native int _GLIBCXX_HAVE_ENOTSUP_get();
  public final static native int _GLIBCXX_HAVE_EOVERFLOW_get();
  public final static native int _GLIBCXX_HAVE_EOWNERDEAD_get();
  public final static native int _GLIBCXX_HAVE_EPERM_get();
  public final static native int _GLIBCXX_HAVE_EPROTO_get();
  public final static native int _GLIBCXX_HAVE_ETIME_get();
  public final static native int _GLIBCXX_HAVE_ETIMEDOUT_get();
  public final static native int _GLIBCXX_HAVE_ETXTBSY_get();
  public final static native int _GLIBCXX_HAVE_EWOULDBLOCK_get();
  public final static native int _GLIBCXX_HAVE_EXCEPTION_PTR_SINCE_GCC46_get();
  public final static native int _GLIBCXX_HAVE_EXECINFO_H_get();
  public final static native int _GLIBCXX_HAVE_EXPF_get();
  public final static native int _GLIBCXX_HAVE_EXPL_get();
  public final static native int _GLIBCXX_HAVE_FABSF_get();
  public final static native int _GLIBCXX_HAVE_FABSL_get();
  public final static native int _GLIBCXX_HAVE_FCNTL_H_get();
  public final static native int _GLIBCXX_HAVE_FENV_H_get();
  public final static native int _GLIBCXX_HAVE_FINITE_get();
  public final static native int _GLIBCXX_HAVE_FINITEF_get();
  public final static native int _GLIBCXX_HAVE_FINITEL_get();
  public final static native int _GLIBCXX_HAVE_FLOAT_H_get();
  public final static native int _GLIBCXX_HAVE_FLOORF_get();
  public final static native int _GLIBCXX_HAVE_FLOORL_get();
  public final static native int _GLIBCXX_HAVE_FMODF_get();
  public final static native int _GLIBCXX_HAVE_FMODL_get();
  public final static native int _GLIBCXX_HAVE_FREXPF_get();
  public final static native int _GLIBCXX_HAVE_FREXPL_get();
  public final static native int _GLIBCXX_HAVE_GETIPINFO_get();
  public final static native int _GLIBCXX_HAVE_GETS_get();
  public final static native int _GLIBCXX_HAVE_HYPOT_get();
  public final static native int _GLIBCXX_HAVE_HYPOTF_get();
  public final static native int _GLIBCXX_HAVE_HYPOTL_get();
  public final static native int _GLIBCXX_HAVE_ICONV_get();
  public final static native int _GLIBCXX_HAVE_INT64_T_get();
  public final static native int _GLIBCXX_HAVE_INT64_T_LONG_get();
  public final static native int _GLIBCXX_HAVE_INTTYPES_H_get();
  public final static native int _GLIBCXX_HAVE_ISINFF_get();
  public final static native int _GLIBCXX_HAVE_ISINFL_get();
  public final static native int _GLIBCXX_HAVE_ISNANF_get();
  public final static native int _GLIBCXX_HAVE_ISNANL_get();
  public final static native int _GLIBCXX_HAVE_ISWBLANK_get();
  public final static native int _GLIBCXX_HAVE_LC_MESSAGES_get();
  public final static native int _GLIBCXX_HAVE_LDEXPF_get();
  public final static native int _GLIBCXX_HAVE_LDEXPL_get();
  public final static native int _GLIBCXX_HAVE_LIBINTL_H_get();
  public final static native int _GLIBCXX_HAVE_LIMIT_AS_get();
  public final static native int _GLIBCXX_HAVE_LIMIT_DATA_get();
  public final static native int _GLIBCXX_HAVE_LIMIT_FSIZE_get();
  public final static native int _GLIBCXX_HAVE_LIMIT_RSS_get();
  public final static native int _GLIBCXX_HAVE_LIMIT_VMEM_get();
  public final static native int _GLIBCXX_HAVE_LINK_get();
  public final static native int _GLIBCXX_HAVE_LINUX_FUTEX_get();
  public final static native int _GLIBCXX_HAVE_LINUX_RANDOM_H_get();
  public final static native int _GLIBCXX_HAVE_LINUX_TYPES_H_get();
  public final static native int _GLIBCXX_HAVE_LOCALE_H_get();
  public final static native int _GLIBCXX_HAVE_LOG10F_get();
  public final static native int _GLIBCXX_HAVE_LOG10L_get();
  public final static native int _GLIBCXX_HAVE_LOGF_get();
  public final static native int _GLIBCXX_HAVE_LOGL_get();
  public final static native int _GLIBCXX_HAVE_MBSTATE_T_get();
  public final static native int _GLIBCXX_HAVE_MEMALIGN_get();
  public final static native int _GLIBCXX_HAVE_MEMORY_H_get();
  public final static native int _GLIBCXX_HAVE_MODF_get();
  public final static native int _GLIBCXX_HAVE_MODFF_get();
  public final static native int _GLIBCXX_HAVE_MODFL_get();
  public final static native int _GLIBCXX_HAVE_NETDB_H_get();
  public final static native int _GLIBCXX_HAVE_NETINET_IN_H_get();
  public final static native int _GLIBCXX_HAVE_NETINET_TCP_H_get();
  public final static native int _GLIBCXX_HAVE_POLL_get();
  public final static native int _GLIBCXX_HAVE_POLL_H_get();
  public final static native int _GLIBCXX_HAVE_POSIX_MEMALIGN_get();
  public final static native int _GLIBCXX_HAVE_POWF_get();
  public final static native int _GLIBCXX_HAVE_POWL_get();
  public final static native int _GLIBCXX_HAVE_QUICK_EXIT_get();
  public final static native int _GLIBCXX_HAVE_READLINK_get();
  public final static native int _GLIBCXX_HAVE_SETENV_get();
  public final static native int _GLIBCXX_HAVE_SINCOS_get();
  public final static native int _GLIBCXX_HAVE_SINCOSF_get();
  public final static native int _GLIBCXX_HAVE_SINCOSL_get();
  public final static native int _GLIBCXX_HAVE_SINF_get();
  public final static native int _GLIBCXX_HAVE_SINHF_get();
  public final static native int _GLIBCXX_HAVE_SINHL_get();
  public final static native int _GLIBCXX_HAVE_SINL_get();
  public final static native int _GLIBCXX_HAVE_SOCKATMARK_get();
  public final static native int _GLIBCXX_HAVE_SQRTF_get();
  public final static native int _GLIBCXX_HAVE_SQRTL_get();
  public final static native int _GLIBCXX_HAVE_STDALIGN_H_get();
  public final static native int _GLIBCXX_HAVE_STDBOOL_H_get();
  public final static native int _GLIBCXX_HAVE_STDINT_H_get();
  public final static native int _GLIBCXX_HAVE_STDLIB_H_get();
  public final static native int _GLIBCXX_HAVE_STRERROR_L_get();
  public final static native int _GLIBCXX_HAVE_STRERROR_R_get();
  public final static native int _GLIBCXX_HAVE_STRINGS_H_get();
  public final static native int _GLIBCXX_HAVE_STRING_H_get();
  public final static native int _GLIBCXX_HAVE_STRTOF_get();
  public final static native int _GLIBCXX_HAVE_STRTOLD_get();
  public final static native int _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE_get();
  public final static native int _GLIBCXX_HAVE_STRXFRM_L_get();
  public final static native int _GLIBCXX_HAVE_SYMLINK_get();
  public final static native int _GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT_get();
  public final static native int _GLIBCXX_HAVE_SYS_IOCTL_H_get();
  public final static native int _GLIBCXX_HAVE_SYS_IPC_H_get();
  public final static native int _GLIBCXX_HAVE_SYS_PARAM_H_get();
  public final static native int _GLIBCXX_HAVE_SYS_RESOURCE_H_get();
  public final static native int _GLIBCXX_HAVE_SYS_SDT_H_get();
  public final static native int _GLIBCXX_HAVE_SYS_SEM_H_get();
  public final static native int _GLIBCXX_HAVE_SYS_SOCKET_H_get();
  public final static native int _GLIBCXX_HAVE_SYS_STATVFS_H_get();
  public final static native int _GLIBCXX_HAVE_SYS_STAT_H_get();
  public final static native int _GLIBCXX_HAVE_SYS_SYSINFO_H_get();
  public final static native int _GLIBCXX_HAVE_SYS_TIME_H_get();
  public final static native int _GLIBCXX_HAVE_SYS_TYPES_H_get();
  public final static native int _GLIBCXX_HAVE_SYS_UIO_H_get();
  public final static native int _GLIBCXX_HAVE_S_ISREG_get();
  public final static native int _GLIBCXX_HAVE_TANF_get();
  public final static native int _GLIBCXX_HAVE_TANHF_get();
  public final static native int _GLIBCXX_HAVE_TANHL_get();
  public final static native int _GLIBCXX_HAVE_TANL_get();
  public final static native int _GLIBCXX_HAVE_TGMATH_H_get();
  public final static native int _GLIBCXX_HAVE_TIMESPEC_GET_get();
  public final static native int _GLIBCXX_HAVE_TLS_get();
  public final static native int _GLIBCXX_HAVE_TRUNCATE_get();
  public final static native int _GLIBCXX_HAVE_UCHAR_H_get();
  public final static native int _GLIBCXX_HAVE_UNISTD_H_get();
  public final static native int _GLIBCXX_HAVE_UTIME_H_get();
  public final static native int _GLIBCXX_HAVE_VFWSCANF_get();
  public final static native int _GLIBCXX_HAVE_VSWSCANF_get();
  public final static native int _GLIBCXX_HAVE_VWSCANF_get();
  public final static native int _GLIBCXX_HAVE_WCHAR_H_get();
  public final static native int _GLIBCXX_HAVE_WCSTOF_get();
  public final static native int _GLIBCXX_HAVE_WCTYPE_H_get();
  public final static native int _GLIBCXX_HAVE_WRITEV_get();
  public final static native int _GLIBCXX_HAVE___CXA_THREAD_ATEXIT_IMPL_get();
  public final static native String LT_OBJDIR_get();
  public final static native String _GLIBCXX_PACKAGE_BUGREPORT_get();
  public final static native String _GLIBCXX_PACKAGE_NAME_get();
  public final static native String _GLIBCXX_PACKAGE_STRING_get();
  public final static native String _GLIBCXX_PACKAGE_TARNAME_get();
  public final static native String _GLIBCXX_PACKAGE_URL_get();
  public final static native String _GLIBCXX_PACKAGE__GLIBCXX_VERSION_get();
  public final static native int STDC_HEADERS_get();
  public final static native int _GLIBCXX_DARWIN_USE_64_BIT_INODE_get();
  public final static native int _GLIBCXX11_USE_C99_COMPLEX_get();
  public final static native int _GLIBCXX11_USE_C99_MATH_get();
  public final static native int _GLIBCXX11_USE_C99_STDIO_get();
  public final static native int _GLIBCXX11_USE_C99_STDLIB_get();
  public final static native int _GLIBCXX11_USE_C99_WCHAR_get();
  public final static native int _GLIBCXX98_USE_C99_COMPLEX_get();
  public final static native int _GLIBCXX98_USE_C99_MATH_get();
  public final static native int _GLIBCXX98_USE_C99_STDIO_get();
  public final static native int _GLIBCXX98_USE_C99_STDLIB_get();
  public final static native int _GLIBCXX98_USE_C99_WCHAR_get();
  public final static native int _GLIBCXX_ATOMIC_BUILTINS_get();
  public final static native int _GLIBCXX_FULLY_DYNAMIC_STRING_get();
  public final static native int _GLIBCXX_HAS_GTHREADS_get();
  public final static native int _GLIBCXX_HOSTED_get();
  public final static native int _GLIBCXX_RES_LIMITS_get();
  public final static native int _GLIBCXX_STDIO_EOF_get();
  public final static native int _GLIBCXX_STDIO_SEEK_CUR_get();
  public final static native int _GLIBCXX_STDIO_SEEK_END_get();
  public final static native int _GLIBCXX_SYMVER_get();
  public final static native int _GLIBCXX_SYMVER_GNU_get();
  public final static native int _GLIBCXX_USE_C11_UCHAR_CXX11_get();
  public final static native int _GLIBCXX_USE_C99_get();
  public final static native int _GLIBCXX_USE_C99_COMPLEX_TR1_get();
  public final static native int _GLIBCXX_USE_C99_CTYPE_TR1_get();
  public final static native int _GLIBCXX_USE_C99_FENV_TR1_get();
  public final static native int _GLIBCXX_USE_C99_INTTYPES_TR1_get();
  public final static native int _GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1_get();
  public final static native int _GLIBCXX_USE_C99_MATH_TR1_get();
  public final static native int _GLIBCXX_USE_C99_STDINT_TR1_get();
  public final static native int _GLIBCXX_USE_CLOCK_MONOTONIC_get();
  public final static native int _GLIBCXX_USE_CLOCK_REALTIME_get();
  public final static native int _GLIBCXX_USE_DECIMAL_FLOAT_get();
  public final static native int _GLIBCXX_USE_DEV_RANDOM_get();
  public final static native int _GLIBCXX_USE_FCHMOD_get();
  public final static native int _GLIBCXX_USE_FCHMODAT_get();
  public final static native int _GLIBCXX_USE_GETTIMEOFDAY_get();
  public final static native int _GLIBCXX_USE_GET_NPROCS_get();
  public final static native int _GLIBCXX_USE_INT128_get();
  public final static native int _GLIBCXX_USE_LFS_get();
  public final static native int _GLIBCXX_USE_LONG_LONG_get();
  public final static native int _GLIBCXX_USE_LSTAT_get();
  public final static native int _GLIBCXX_USE_NANOSLEEP_get();
  public final static native int _GLIBCXX_USE_NLS_get();
  public final static native int _GLIBCXX_USE_PTHREAD_COND_CLOCKWAIT_get();
  public final static native int _GLIBCXX_USE_PTHREAD_MUTEX_CLOCKLOCK_get();
  public final static native int _GLIBCXX_USE_PTHREAD_RWLOCK_CLOCKLOCK_get();
  public final static native int _GLIBCXX_USE_PTHREAD_RWLOCK_T_get();
  public final static native int _GLIBCXX_USE_RANDOM_TR1_get();
  public final static native int _GLIBCXX_USE_REALPATH_get();
  public final static native int _GLIBCXX_USE_SCHED_YIELD_get();
  public final static native int _GLIBCXX_USE_SC_NPROCESSORS_ONLN_get();
  public final static native int _GLIBCXX_USE_SENDFILE_get();
  public final static native int _GLIBCXX_USE_ST_MTIM_get();
  public final static native int _GLIBCXX_USE_TMPNAM_get();
  public final static native int _GLIBCXX_USE_UTIME_get();
  public final static native int _GLIBCXX_USE_UTIMENSAT_get();
  public final static native int _GLIBCXX_USE_WCHAR_T_get();
  public final static native int _GLIBCXX_VERBOSE_get();
  public final static native int _GLIBCXX_X86_RDRAND_get();
  public final static native int _GLIBCXX_X86_RDSEED_get();
  public final static native int _GTHREAD_USE_MUTEX_TIMEDLOCK_get();
  public final static native int _STRINGFWD_H_get();
  public final static native int _MEMORYFWD_H_get();
  public final static native int _GLIBCXX_POSTYPES_H_get();
  public final static native int _WCHAR_H_get();
  public final static native int __GLIBC_USE_LIB_EXT2_get();
  public final static native int __GLIBC_USE_IEC_60559_BFP_EXT_get();
  public final static native int __GLIBC_USE_IEC_60559_BFP_EXT_C2X_get();
  public final static native int __GLIBC_USE_IEC_60559_FUNCS_EXT_get();
  public final static native int __GLIBC_USE_IEC_60559_FUNCS_EXT_C2X_get();
  public final static native int __GLIBC_USE_IEC_60559_TYPES_EXT_get();
  public final static native int __HAVE_FLOAT128_get();
  public final static native int __HAVE_DISTINCT_FLOAT128_get();
  public final static native int __HAVE_FLOAT64X_get();
  public final static native int __HAVE_FLOAT64X_LONG_DOUBLE_get();
  public final static native int __HAVE_FLOAT16_get();
  public final static native int __HAVE_FLOAT32_get();
  public final static native int __HAVE_FLOAT64_get();
  public final static native int __HAVE_FLOAT32X_get();
  public final static native int __HAVE_FLOAT128X_get();
  public final static native int __HAVE_DISTINCT_FLOAT16_get();
  public final static native int __HAVE_DISTINCT_FLOAT32_get();
  public final static native int __HAVE_DISTINCT_FLOAT64_get();
  public final static native int __HAVE_DISTINCT_FLOAT32X_get();
  public final static native int __HAVE_DISTINCT_FLOAT64X_get();
  public final static native int __HAVE_DISTINCT_FLOAT128X_get();
  public final static native int __HAVE_FLOATN_NOT_TYPEDEF_get();
  public final static native int _BITS_WCHAR_H_get();
  public final static native int __WCHAR_MAX_get();
  public final static native int __WCHAR_MIN_get();
  public final static native int __wint_t_defined_get();
  public final static native int _WINT_T_get();
  public final static native int __mbstate_t_defined_get();
  public final static native int ____mbstate_t_defined_get();
  public final static native void __mbstate_t___count_set(long jarg1, __mbstate_t jarg1_, int jarg2);
  public final static native int __mbstate_t___count_get(long jarg1, __mbstate_t jarg1_);
  public final static native long new___mbstate_t();
  public final static native void delete___mbstate_t(long jarg1);
  public final static native int ____FILE_defined_get();
  public final static native int __FILE_defined_get();
  public final static native int _BITS_TYPES_LOCALE_T_H_get();
  public final static native int _BITS_TYPES___LOCALE_T_H_get();
  public final static native void __locale_struct___locales_set(long jarg1, __locale_struct jarg1_, long jarg2);
  public final static native long __locale_struct___locales_get(long jarg1, __locale_struct jarg1_);
  public final static native void __locale_struct___ctype_b_set(long jarg1, __locale_struct jarg1_, long jarg2);
  public final static native long __locale_struct___ctype_b_get(long jarg1, __locale_struct jarg1_);
  public final static native void __locale_struct___ctype_tolower_set(long jarg1, __locale_struct jarg1_, long jarg2);
  public final static native long __locale_struct___ctype_tolower_get(long jarg1, __locale_struct jarg1_);
  public final static native void __locale_struct___ctype_toupper_set(long jarg1, __locale_struct jarg1_, long jarg2);
  public final static native long __locale_struct___ctype_toupper_get(long jarg1, __locale_struct jarg1_);
  public final static native void __locale_struct___names_set(long jarg1, __locale_struct jarg1_, long jarg2);
  public final static native long __locale_struct___names_get(long jarg1, __locale_struct jarg1_);
  public final static native long new___locale_struct();
  public final static native void delete___locale_struct(long jarg1);
  public final static native int WCHAR_MIN_get();
  public final static native int WCHAR_MAX_get();
  public final static native long WEOF_get();
  public final static native long wcscpy(long jarg1, long jarg2);
  public final static native long wcsncpy(long jarg1, long jarg2, long jarg3);
  public final static native long wcscat(long jarg1, long jarg2);
  public final static native long wcsncat(long jarg1, long jarg2, long jarg3);
  public final static native int wcscmp(long jarg1, long jarg2);
  public final static native int wcsncmp(long jarg1, long jarg2, long jarg3);
  public final static native int wcscasecmp(long jarg1, long jarg2);
  public final static native int wcsncasecmp(long jarg1, long jarg2, long jarg3);
  public final static native int wcscasecmp_l(long jarg1, long jarg2, long jarg3, __locale_struct jarg3_);
  public final static native int wcsncasecmp_l(long jarg1, long jarg2, long jarg3, long jarg4, __locale_struct jarg4_);
  public final static native int wcscoll(long jarg1, long jarg2);
  public final static native long wcsxfrm(long jarg1, long jarg2, long jarg3);
  public final static native int wcscoll_l(long jarg1, long jarg2, long jarg3, __locale_struct jarg3_);
  public final static native long wcsxfrm_l(long jarg1, long jarg2, long jarg3, long jarg4, __locale_struct jarg4_);
  public final static native long wcsdup(long jarg1);
  public final static native long wcschr(long jarg1, long jarg2);
  public final static native long wcsrchr(long jarg1, long jarg2);
  public final static native long wcscspn(long jarg1, long jarg2);
  public final static native long wcsspn(long jarg1, long jarg2);
  public final static native long wcspbrk(long jarg1, long jarg2);
  public final static native long wcsstr(long jarg1, long jarg2);
  public final static native long wcstok(long jarg1, long jarg2, long jarg3);
  public final static native long wcslen(long jarg1);
  public final static native long wcsnlen(long jarg1, long jarg2);
  public final static native long wmemchr(long jarg1, long jarg2, long jarg3);
  public final static native int wmemcmp(long jarg1, long jarg2, long jarg3);
  public final static native long wmemcpy(long jarg1, long jarg2, long jarg3);
  public final static native long wmemmove(long jarg1, long jarg2, long jarg3);
  public final static native long wmemset(long jarg1, long jarg2, long jarg3);
  public final static native long btowc(int jarg1);
  public final static native int wctob(long jarg1);
  public final static native int mbsinit(long jarg1, __mbstate_t jarg1_);
  public final static native long mbrtowc(long jarg1, String jarg2, long jarg3, long jarg4, __mbstate_t jarg4_);
  public final static native long wcrtomb(String jarg1, long jarg2, long jarg3, __mbstate_t jarg3_);
  public final static native long __mbrlen(String jarg1, long jarg2, long jarg3, __mbstate_t jarg3_);
  public final static native long mbrlen(String jarg1, long jarg2, long jarg3, __mbstate_t jarg3_);
  public final static native long mbsrtowcs(long jarg1, long jarg2, long jarg3, long jarg4, __mbstate_t jarg4_);
  public final static native long wcsrtombs(String jarg1, long jarg2, long jarg3, long jarg4, __mbstate_t jarg4_);
  public final static native long mbsnrtowcs(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, __mbstate_t jarg5_);
  public final static native long wcsnrtombs(String jarg1, long jarg2, long jarg3, long jarg4, long jarg5, __mbstate_t jarg5_);
  public final static native double wcstod(long jarg1, long jarg2);
  public final static native float wcstof(long jarg1, long jarg2);
  public final static native long wcstold(long jarg1, long jarg2);
  public final static native int wcstol(long jarg1, long jarg2, int jarg3);
  public final static native long wcstoul(long jarg1, long jarg2, int jarg3);
  public final static native long wcstoll(long jarg1, long jarg2, int jarg3);
  public final static native java.math.BigInteger wcstoull(long jarg1, long jarg2, int jarg3);
  public final static native long wcpcpy(long jarg1, long jarg2);
  public final static native long wcpncpy(long jarg1, long jarg2, long jarg3);
  public final static native long open_wmemstream(long jarg1, long jarg2);
  public final static native int fwide(long jarg1, _IO_FILE jarg1_, int jarg2);
  public final static native int fwprintf(long jarg1, _IO_FILE jarg1_, long jarg2);
  public final static native int wprintf(long jarg1);
  public final static native int swprintf(long jarg1, long jarg2, long jarg3);
  public final static native int vfwprintf(long jarg1, _IO_FILE jarg1_, long jarg2, long jarg3);
  public final static native int vwprintf(long jarg1, long jarg2);
  public final static native int vswprintf(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int fwscanf(long jarg1, _IO_FILE jarg1_, long jarg2);
  public final static native int wscanf(long jarg1);
  public final static native int swscanf(long jarg1, long jarg2);
  public final static native int __isoc99_fwscanf(long jarg1, _IO_FILE jarg1_, long jarg2);
  public final static native int __isoc99_wscanf(long jarg1);
  public final static native int __isoc99_swscanf(long jarg1, long jarg2);
  public final static native int vfwscanf(long jarg1, _IO_FILE jarg1_, long jarg2, long jarg3);
  public final static native int vwscanf(long jarg1, long jarg2);
  public final static native int vswscanf(long jarg1, long jarg2, long jarg3);
  public final static native int __isoc99_vfwscanf(long jarg1, _IO_FILE jarg1_, long jarg2, long jarg3);
  public final static native int __isoc99_vwscanf(long jarg1, long jarg2);
  public final static native int __isoc99_vswscanf(long jarg1, long jarg2, long jarg3);
  public final static native long fgetwc(long jarg1, _IO_FILE jarg1_);
  public final static native long getwc(long jarg1, _IO_FILE jarg1_);
  public final static native long getwchar();
  public final static native long fputwc(long jarg1, long jarg2, _IO_FILE jarg2_);
  public final static native long putwc(long jarg1, long jarg2, _IO_FILE jarg2_);
  public final static native long putwchar(long jarg1);
  public final static native long fgetws(long jarg1, int jarg2, long jarg3, _IO_FILE jarg3_);
  public final static native int fputws(long jarg1, long jarg2, _IO_FILE jarg2_);
  public final static native long ungetwc(long jarg1, long jarg2, _IO_FILE jarg2_);
  public final static native long wcsftime(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int _GLIBCXX_CWCHAR_get();
  public final static native long wcschr__SWIG_1(long jarg1, long jarg2);
  public final static native long wcspbrk__SWIG_1(long jarg1, long jarg2);
  public final static native long wcsrchr__SWIG_1(long jarg1, long jarg2);
  public final static native long wcsstr__SWIG_1(long jarg1, long jarg2);
  public final static native long wmemchr__SWIG_1(long jarg1, long jarg2, long jarg3);
  public final static native int _STDIO_H_get();
  public final static native int _BITS_TYPES_H_get();
  public final static native int __TIMESIZE_get();
  public final static native int _BITS_TYPESIZES_H_get();
  public final static native int __RLIM_T_MATCHES_RLIM64_T_get();
  public final static native int __STATFS_MATCHES_STATFS64_get();
  public final static native int __KERNEL_OLD_TIMEVAL_MATCHES_TIMEVAL64_get();
  public final static native int __FD_SETSIZE_get();
  public final static native int _BITS_TIME64_H_get();
  public final static native void __fsid_t___val_set(long jarg1, __fsid_t jarg1_, long jarg2);
  public final static native long __fsid_t___val_get(long jarg1, __fsid_t jarg1_);
  public final static native long new___fsid_t();
  public final static native void delete___fsid_t(long jarg1);
  public final static native int _____fpos_t_defined_get();
  public final static native void __fpos_t___pos_set(long jarg1, __fpos_t jarg1_, int jarg2);
  public final static native int __fpos_t___pos_get(long jarg1, __fpos_t jarg1_);
  public final static native void __fpos_t___state_set(long jarg1, __fpos_t jarg1_, long jarg2, __mbstate_t jarg2_);
  public final static native long __fpos_t___state_get(long jarg1, __fpos_t jarg1_);
  public final static native long new___fpos_t();
  public final static native void delete___fpos_t(long jarg1);
  public final static native int _____fpos64_t_defined_get();
  public final static native void __fpos64_t___pos_set(long jarg1, __fpos64_t jarg1_, long jarg2);
  public final static native long __fpos64_t___pos_get(long jarg1, __fpos64_t jarg1_);
  public final static native void __fpos64_t___state_set(long jarg1, __fpos64_t jarg1_, long jarg2, __mbstate_t jarg2_);
  public final static native long __fpos64_t___state_get(long jarg1, __fpos64_t jarg1_);
  public final static native long new___fpos64_t();
  public final static native void delete___fpos64_t(long jarg1);
  public final static native int __struct_FILE_defined_get();
  public final static native void _IO_FILE__flags_set(long jarg1, _IO_FILE jarg1_, int jarg2);
  public final static native int _IO_FILE__flags_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__IO_read_ptr_set(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native String _IO_FILE__IO_read_ptr_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__IO_read_end_set(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native String _IO_FILE__IO_read_end_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__IO_read_base_set(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native String _IO_FILE__IO_read_base_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__IO_write_base_set(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native String _IO_FILE__IO_write_base_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__IO_write_ptr_set(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native String _IO_FILE__IO_write_ptr_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__IO_write_end_set(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native String _IO_FILE__IO_write_end_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__IO_buf_base_set(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native String _IO_FILE__IO_buf_base_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__IO_buf_end_set(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native String _IO_FILE__IO_buf_end_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__IO_save_base_set(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native String _IO_FILE__IO_save_base_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__IO_backup_base_set(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native String _IO_FILE__IO_backup_base_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__IO_save_end_set(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native String _IO_FILE__IO_save_end_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__markers_set(long jarg1, _IO_FILE jarg1_, long jarg2);
  public final static native long _IO_FILE__markers_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__chain_set(long jarg1, _IO_FILE jarg1_, long jarg2, _IO_FILE jarg2_);
  public final static native long _IO_FILE__chain_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__fileno_set(long jarg1, _IO_FILE jarg1_, int jarg2);
  public final static native int _IO_FILE__fileno_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__flags2_set(long jarg1, _IO_FILE jarg1_, int jarg2);
  public final static native int _IO_FILE__flags2_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__old_offset_set(long jarg1, _IO_FILE jarg1_, int jarg2);
  public final static native int _IO_FILE__old_offset_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__cur_column_set(long jarg1, _IO_FILE jarg1_, int jarg2);
  public final static native int _IO_FILE__cur_column_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__vtable_offset_set(long jarg1, _IO_FILE jarg1_, byte jarg2);
  public final static native byte _IO_FILE__vtable_offset_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__shortbuf_set(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native String _IO_FILE__shortbuf_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__lock_set(long jarg1, _IO_FILE jarg1_, long jarg2);
  public final static native long _IO_FILE__lock_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__offset_set(long jarg1, _IO_FILE jarg1_, long jarg2);
  public final static native long _IO_FILE__offset_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__codecvt_set(long jarg1, _IO_FILE jarg1_, long jarg2);
  public final static native long _IO_FILE__codecvt_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__wide_data_set(long jarg1, _IO_FILE jarg1_, long jarg2);
  public final static native long _IO_FILE__wide_data_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__freeres_list_set(long jarg1, _IO_FILE jarg1_, long jarg2, _IO_FILE jarg2_);
  public final static native long _IO_FILE__freeres_list_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__freeres_buf_set(long jarg1, _IO_FILE jarg1_, long jarg2);
  public final static native long _IO_FILE__freeres_buf_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE___pad5_set(long jarg1, _IO_FILE jarg1_, long jarg2);
  public final static native long _IO_FILE___pad5_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__mode_set(long jarg1, _IO_FILE jarg1_, int jarg2);
  public final static native int _IO_FILE__mode_get(long jarg1, _IO_FILE jarg1_);
  public final static native void _IO_FILE__unused2_set(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native String _IO_FILE__unused2_get(long jarg1, _IO_FILE jarg1_);
  public final static native long new__IO_FILE();
  public final static native void delete__IO_FILE(long jarg1);
  public final static native int _IO_EOF_SEEN_get();
  public final static native int _IO_ERR_SEEN_get();
  public final static native int _IO_USER_LOCK_get();
  public final static native int _IOFBF_get();
  public final static native int _IOLBF_get();
  public final static native int _IONBF_get();
  public final static native int BUFSIZ_get();
  public final static native int EOF_get();
  public final static native int SEEK_SET_get();
  public final static native int SEEK_CUR_get();
  public final static native int SEEK_END_get();
  public final static native String P_tmpdir_get();
  public final static native int _BITS_STDIO_LIM_H_get();
  public final static native int L_tmpnam_get();
  public final static native int TMP_MAX_get();
  public final static native int FILENAME_MAX_get();
  public final static native int L_ctermid_get();
  public final static native int FOPEN_MAX_get();
  public final static native void stdin_set(long jarg1, _IO_FILE jarg1_);
  public final static native long stdin_get();
  public final static native void stdout_set(long jarg1, _IO_FILE jarg1_);
  public final static native long stdout_get();
  public final static native void stderr_set(long jarg1, _IO_FILE jarg1_);
  public final static native long stderr_get();
  public final static native int remove(String jarg1);
  public final static native int rename(String jarg1, String jarg2);
  public final static native int renameat(int jarg1, String jarg2, int jarg3, String jarg4);
  public final static native long tmpfile();
  public final static native String tmpnam(String jarg1);
  public final static native String tmpnam_r(String jarg1);
  public final static native String tempnam(String jarg1, String jarg2);
  public final static native int fclose(long jarg1, _IO_FILE jarg1_);
  public final static native int fflush(long jarg1, _IO_FILE jarg1_);
  public final static native int fflush_unlocked(long jarg1, _IO_FILE jarg1_);
  public final static native long fopen(String jarg1, String jarg2);
  public final static native long freopen(String jarg1, String jarg2, long jarg3, _IO_FILE jarg3_);
  public final static native long fdopen(int jarg1, String jarg2);
  public final static native long fmemopen(long jarg1, long jarg2, String jarg3);
  public final static native long open_memstream(long jarg1, long jarg2);
  public final static native void setbuf(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native int setvbuf(long jarg1, _IO_FILE jarg1_, String jarg2, int jarg3, long jarg4);
  public final static native void setbuffer(long jarg1, _IO_FILE jarg1_, String jarg2, long jarg3);
  public final static native void setlinebuf(long jarg1, _IO_FILE jarg1_);
  public final static native int fprintf(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native int printf(String jarg1);
  public final static native int sprintf(String jarg1, String jarg2);
  public final static native int vfprintf(long jarg1, _IO_FILE jarg1_, String jarg2, long jarg3);
  public final static native int vprintf(String jarg1, long jarg2);
  public final static native int vsprintf(String jarg1, String jarg2, long jarg3);
  public final static native int snprintf(String jarg1, long jarg2, String jarg3);
  public final static native int vsnprintf(String jarg1, long jarg2, String jarg3, long jarg4);
  public final static native int vdprintf(int jarg1, String jarg2, long jarg3);
  public final static native int dprintf(int jarg1, String jarg2);
  public final static native int fscanf(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native int scanf(String jarg1);
  public final static native int sscanf(String jarg1, String jarg2);
  public final static native int __isoc99_fscanf(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native int __isoc99_scanf(String jarg1);
  public final static native int __isoc99_sscanf(String jarg1, String jarg2);
  public final static native int vfscanf(long jarg1, _IO_FILE jarg1_, String jarg2, long jarg3);
  public final static native int vscanf(String jarg1, long jarg2);
  public final static native int vsscanf(String jarg1, String jarg2, long jarg3);
  public final static native int __isoc99_vfscanf(long jarg1, _IO_FILE jarg1_, String jarg2, long jarg3);
  public final static native int __isoc99_vscanf(String jarg1, long jarg2);
  public final static native int __isoc99_vsscanf(String jarg1, String jarg2, long jarg3);
  public final static native int fgetc(long jarg1, _IO_FILE jarg1_);
  public final static native int getc(long jarg1, _IO_FILE jarg1_);
  public final static native int getchar();
  public final static native int getc_unlocked(long jarg1, _IO_FILE jarg1_);
  public final static native int getchar_unlocked();
  public final static native int fgetc_unlocked(long jarg1, _IO_FILE jarg1_);
  public final static native int fputc(int jarg1, long jarg2, _IO_FILE jarg2_);
  public final static native int putc(int jarg1, long jarg2, _IO_FILE jarg2_);
  public final static native int putchar(int jarg1);
  public final static native int fputc_unlocked(int jarg1, long jarg2, _IO_FILE jarg2_);
  public final static native int putc_unlocked(int jarg1, long jarg2, _IO_FILE jarg2_);
  public final static native int putchar_unlocked(int jarg1);
  public final static native int getw(long jarg1, _IO_FILE jarg1_);
  public final static native int putw(int jarg1, long jarg2, _IO_FILE jarg2_);
  public final static native String fgets(String jarg1, int jarg2, long jarg3, _IO_FILE jarg3_);
  public final static native String gets(String jarg1);
  public final static native int __getdelim(long jarg1, long jarg2, int jarg3, long jarg4, _IO_FILE jarg4_);
  public final static native int getdelim(long jarg1, long jarg2, int jarg3, long jarg4, _IO_FILE jarg4_);
  public final static native int getline(long jarg1, long jarg2, long jarg3, _IO_FILE jarg3_);
  public final static native int fputs(String jarg1, long jarg2, _IO_FILE jarg2_);
  public final static native int puts(String jarg1);
  public final static native int ungetc(int jarg1, long jarg2, _IO_FILE jarg2_);
  public final static native long fread(long jarg1, long jarg2, long jarg3, long jarg4, _IO_FILE jarg4_);
  public final static native long fwrite(long jarg1, long jarg2, long jarg3, long jarg4, _IO_FILE jarg4_);
  public final static native long fread_unlocked(long jarg1, long jarg2, long jarg3, long jarg4, _IO_FILE jarg4_);
  public final static native long fwrite_unlocked(long jarg1, long jarg2, long jarg3, long jarg4, _IO_FILE jarg4_);
  public final static native int fseek(long jarg1, _IO_FILE jarg1_, int jarg2, int jarg3);
  public final static native int ftell(long jarg1, _IO_FILE jarg1_);
  public final static native void rewind(long jarg1, _IO_FILE jarg1_);
  public final static native int fseeko(long jarg1, _IO_FILE jarg1_, int jarg2, int jarg3);
  public final static native int ftello(long jarg1, _IO_FILE jarg1_);
  public final static native int fgetpos(long jarg1, _IO_FILE jarg1_, long jarg2, __fpos_t jarg2_);
  public final static native int fsetpos(long jarg1, _IO_FILE jarg1_, long jarg2, __fpos_t jarg2_);
  public final static native void clearerr(long jarg1, _IO_FILE jarg1_);
  public final static native int feof(long jarg1, _IO_FILE jarg1_);
  public final static native int ferror(long jarg1, _IO_FILE jarg1_);
  public final static native void clearerr_unlocked(long jarg1, _IO_FILE jarg1_);
  public final static native int feof_unlocked(long jarg1, _IO_FILE jarg1_);
  public final static native int ferror_unlocked(long jarg1, _IO_FILE jarg1_);
  public final static native void perror(String jarg1);
  public final static native int fileno(long jarg1, _IO_FILE jarg1_);
  public final static native int fileno_unlocked(long jarg1, _IO_FILE jarg1_);
  public final static native long popen(String jarg1, String jarg2);
  public final static native int pclose(long jarg1, _IO_FILE jarg1_);
  public final static native String ctermid(String jarg1);
  public final static native void flockfile(long jarg1, _IO_FILE jarg1_);
  public final static native int ftrylockfile(long jarg1, _IO_FILE jarg1_);
  public final static native void funlockfile(long jarg1, _IO_FILE jarg1_);
  public final static native int __uflow(long jarg1, _IO_FILE jarg1_);
  public final static native int __overflow(long jarg1, _IO_FILE jarg1_, int jarg2);
  public final static native int _GLIBCXX_CSTDIO_get();
  public final static native int __GMP_HAVE_HOST_CPU_FAMILY_power_get();
  public final static native int __GMP_HAVE_HOST_CPU_FAMILY_powerpc_get();
  public final static native int GMP_LIMB_BITS_get();
  public final static native int GMP_NAIL_BITS_get();
  public final static native int GMP_NUMB_BITS_get();
  public final static native int __GNU_MP___get();
  public final static native int NR_OPEN_get();
  public final static native int NGROUPS_MAX_get();
  public final static native int ARG_MAX_get();
  public final static native int LINK_MAX_get();
  public final static native int MAX_CANON_get();
  public final static native int MAX_INPUT_get();
  public final static native int NAME_MAX_get();
  public final static native int PATH_MAX_get();
  public final static native int PIPE_BUF_get();
  public final static native int XATTR_NAME_MAX_get();
  public final static native int XATTR_SIZE_MAX_get();
  public final static native int XATTR_LIST_MAX_get();
  public final static native int RTSIG_MAX_get();
  public final static native int __GMP_LIBGMP_DLL_get();
  public final static native void __mpz_struct__mp_alloc_set(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native int __mpz_struct__mp_alloc_get(long jarg1, __mpz_struct jarg1_);
  public final static native void __mpz_struct__mp_size_set(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native int __mpz_struct__mp_size_get(long jarg1, __mpz_struct jarg1_);
  public final static native void __mpz_struct__mp_d_set(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native long __mpz_struct__mp_d_get(long jarg1, __mpz_struct jarg1_);
  public final static native long new___mpz_struct();
  public final static native void delete___mpz_struct(long jarg1);
  public final static native int __GMP_MP_SIZE_T_INT_get();
  public final static native void __mpq_struct__mp_num_set(long jarg1, __mpq_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native long __mpq_struct__mp_num_get(long jarg1, __mpq_struct jarg1_);
  public final static native void __mpq_struct__mp_den_set(long jarg1, __mpq_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native long __mpq_struct__mp_den_get(long jarg1, __mpq_struct jarg1_);
  public final static native long new___mpq_struct();
  public final static native void delete___mpq_struct(long jarg1);
  public final static native void __mpf_struct__mp_prec_set(long jarg1, __mpf_struct jarg1_, int jarg2);
  public final static native int __mpf_struct__mp_prec_get(long jarg1, __mpf_struct jarg1_);
  public final static native void __mpf_struct__mp_size_set(long jarg1, __mpf_struct jarg1_, int jarg2);
  public final static native int __mpf_struct__mp_size_get(long jarg1, __mpf_struct jarg1_);
  public final static native void __mpf_struct__mp_exp_set(long jarg1, __mpf_struct jarg1_, int jarg2);
  public final static native int __mpf_struct__mp_exp_get(long jarg1, __mpf_struct jarg1_);
  public final static native void __mpf_struct__mp_d_set(long jarg1, __mpf_struct jarg1_, long jarg2);
  public final static native long __mpf_struct__mp_d_get(long jarg1, __mpf_struct jarg1_);
  public final static native long new___mpf_struct();
  public final static native void delete___mpf_struct(long jarg1);
  public final static native int GMP_RAND_ALG_DEFAULT_get();
  public final static native int GMP_RAND_ALG_LC_get();
  public final static native void __gmp_randstate_struct__mp_seed_set(long jarg1, __gmp_randstate_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native long __gmp_randstate_struct__mp_seed_get(long jarg1, __gmp_randstate_struct jarg1_);
  public final static native void __gmp_randstate_struct__mp_alg_set(long jarg1, __gmp_randstate_struct jarg1_, int jarg2);
  public final static native int __gmp_randstate_struct__mp_alg_get(long jarg1, __gmp_randstate_struct jarg1_);
  public final static native long new___gmp_randstate_struct();
  public final static native void delete___gmp_randstate_struct(long jarg1);
  public final static native int _GMP_H_HAVE_FILE_get();
  public final static native int __GMP_INLINE_PROTOTYPES_get();
  public final static native void __gmp_set_memory_functions(long jarg1, long jarg2, long jarg3);
  public final static native void __gmp_get_memory_functions(long jarg1, long jarg2, long jarg3);
  public final static native int __gmp_bits_per_limb_get();
  public final static native void __gmp_errno_set(int jarg1);
  public final static native int __gmp_errno_get();
  public final static native String __gmp_version_get();
  public final static native void __gmp_randinit(long jarg1, __gmp_randstate_struct jarg1_, int jarg2);
  public final static native void __gmp_randinit_default(long jarg1, __gmp_randstate_struct jarg1_);
  public final static native void __gmp_randinit_lc_2exp(long jarg1, __gmp_randstate_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, long jarg4);
  public final static native int __gmp_randinit_lc_2exp_size(long jarg1, __gmp_randstate_struct jarg1_, long jarg2);
  public final static native void __gmp_randinit_mt(long jarg1, __gmp_randstate_struct jarg1_);
  public final static native void __gmp_randinit_set(long jarg1, __gmp_randstate_struct jarg1_, long jarg2, __gmp_randstate_struct jarg2_);
  public final static native void __gmp_randseed(long jarg1, __gmp_randstate_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native void __gmp_randseed_ui(long jarg1, __gmp_randstate_struct jarg1_, long jarg2);
  public final static native void __gmp_randclear(long jarg1, __gmp_randstate_struct jarg1_);
  public final static native long __gmp_urandomb_ui(long jarg1, __gmp_randstate_struct jarg1_, long jarg2);
  public final static native long __gmp_urandomm_ui(long jarg1, __gmp_randstate_struct jarg1_, long jarg2);
  public final static native int __gmp_asprintf(long jarg1, String jarg2);
  public final static native int __gmp_fprintf(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native int __gmp_printf(String jarg1);
  public final static native int __gmp_snprintf(String jarg1, long jarg2, String jarg3);
  public final static native int __gmp_sprintf(String jarg1, String jarg2);
  public final static native int __gmp_fscanf(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native int __gmp_scanf(String jarg1);
  public final static native int __gmp_sscanf(String jarg1, String jarg2);
  public final static native long __gmpz_realloc(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native void __gmpz_add(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_add_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_addmul(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_addmul_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_and(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_array_init(long jarg1, __mpz_struct jarg1_, int jarg2, int jarg3);
  public final static native void __gmpz_bin_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_bin_uiui(long jarg1, __mpz_struct jarg1_, long jarg2, long jarg3);
  public final static native void __gmpz_cdiv_q(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_cdiv_q_2exp(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native long __gmpz_cdiv_q_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_cdiv_qr(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_, long jarg4, __mpz_struct jarg4_);
  public final static native long __gmpz_cdiv_qr_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_, long jarg4);
  public final static native void __gmpz_cdiv_r(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_cdiv_r_2exp(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native long __gmpz_cdiv_r_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native long __gmpz_cdiv_ui(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_clear(long jarg1, __mpz_struct jarg1_);
  public final static native void __gmpz_clears(long jarg1, __mpz_struct jarg1_);
  public final static native void __gmpz_clrbit(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native int __gmpz_cmp(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native int __gmpz_cmp_d(long jarg1, __mpz_struct jarg1_, double jarg2);
  public final static native int __gmpz_cmp_si(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native int __gmpz_cmp_ui(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native int __gmpz_cmpabs(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native int __gmpz_cmpabs_d(long jarg1, __mpz_struct jarg1_, double jarg2);
  public final static native int __gmpz_cmpabs_ui(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_com(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native void __gmpz_combit(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native int __gmpz_congruent_p(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native int __gmpz_congruent_2exp_p(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native int __gmpz_congruent_ui_p(long jarg1, __mpz_struct jarg1_, long jarg2, long jarg3);
  public final static native void __gmpz_divexact(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_divexact_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native int __gmpz_divisible_p(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native int __gmpz_divisible_ui_p(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native int __gmpz_divisible_2exp_p(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_dump(long jarg1, __mpz_struct jarg1_);
  public final static native long __gmpz_export(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, long jarg7, __mpz_struct jarg7_);
  public final static native void __gmpz_fac_ui(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_2fac_ui(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_mfac_uiui(long jarg1, __mpz_struct jarg1_, long jarg2, long jarg3);
  public final static native void __gmpz_primorial_ui(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_fdiv_q(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_fdiv_q_2exp(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native long __gmpz_fdiv_q_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_fdiv_qr(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_, long jarg4, __mpz_struct jarg4_);
  public final static native long __gmpz_fdiv_qr_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_, long jarg4);
  public final static native void __gmpz_fdiv_r(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_fdiv_r_2exp(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native long __gmpz_fdiv_r_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native long __gmpz_fdiv_ui(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_fib_ui(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_fib2_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native int __gmpz_fits_sint_p(long jarg1, __mpz_struct jarg1_);
  public final static native int __gmpz_fits_slong_p(long jarg1, __mpz_struct jarg1_);
  public final static native int __gmpz_fits_sshort_p(long jarg1, __mpz_struct jarg1_);
  public final static native void __gmpz_gcd(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native long __gmpz_gcd_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_gcdext(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_, long jarg4, __mpz_struct jarg4_, long jarg5, __mpz_struct jarg5_);
  public final static native double __gmpz_get_d(long jarg1, __mpz_struct jarg1_);
  public final static native double __gmpz_get_d_2exp(long jarg1, long jarg2, __mpz_struct jarg2_);
  public final static native int __gmpz_get_si(long jarg1, __mpz_struct jarg1_);
  public final static native String __gmpz_get_str(String jarg1, int jarg2, long jarg3, __mpz_struct jarg3_);
  public final static native long __gmpz_hamdist(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native void __gmpz_import(long jarg1, __mpz_struct jarg1_, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, long jarg7);
  public final static native void __gmpz_init(long jarg1, __mpz_struct jarg1_);
  public final static native void __gmpz_init2(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_inits(long jarg1, __mpz_struct jarg1_);
  public final static native void __gmpz_init_set(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native void __gmpz_init_set_d(long jarg1, __mpz_struct jarg1_, double jarg2);
  public final static native void __gmpz_init_set_si(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native int __gmpz_init_set_str(long jarg1, __mpz_struct jarg1_, String jarg2, int jarg3);
  public final static native void __gmpz_init_set_ui(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native long __gmpz_inp_raw(long jarg1, __mpz_struct jarg1_, long jarg2, _IO_FILE jarg2_);
  public final static native long __gmpz_inp_str(long jarg1, __mpz_struct jarg1_, long jarg2, _IO_FILE jarg2_, int jarg3);
  public final static native int __gmpz_invert(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_ior(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native int __gmpz_jacobi(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native int __gmpz_kronecker_si(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native int __gmpz_kronecker_ui(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native int __gmpz_si_kronecker(int jarg1, long jarg2, __mpz_struct jarg2_);
  public final static native int __gmpz_ui_kronecker(long jarg1, long jarg2, __mpz_struct jarg2_);
  public final static native void __gmpz_lcm(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_lcm_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_lucnum_ui(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_lucnum2_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native int __gmpz_millerrabin(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native void __gmpz_mod(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_mul(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_mul_2exp(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_mul_si(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, int jarg3);
  public final static native void __gmpz_mul_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_nextprime(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native long __gmpz_out_raw(long jarg1, _IO_FILE jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native long __gmpz_out_str(long jarg1, _IO_FILE jarg1_, int jarg2, long jarg3, __mpz_struct jarg3_);
  public final static native int __gmpz_perfect_power_p(long jarg1, __mpz_struct jarg1_);
  public final static native void __gmpz_pow_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_powm(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_, long jarg4, __mpz_struct jarg4_);
  public final static native void __gmpz_powm_sec(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_, long jarg4, __mpz_struct jarg4_);
  public final static native void __gmpz_powm_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, long jarg4, __mpz_struct jarg4_);
  public final static native int __gmpz_probab_prime_p(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native void __gmpz_random(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native void __gmpz_random2(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native void __gmpz_realloc2(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native long __gmpz_remove(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native int __gmpz_root(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_rootrem(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_, long jarg4);
  public final static native void __gmpz_rrandomb(long jarg1, __mpz_struct jarg1_, long jarg2, __gmp_randstate_struct jarg2_, long jarg3);
  public final static native long __gmpz_scan0(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native long __gmpz_scan1(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_set(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native void __gmpz_set_d(long jarg1, __mpz_struct jarg1_, double jarg2);
  public final static native void __gmpz_set_f(long jarg1, __mpz_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native void __gmpz_set_si(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native int __gmpz_set_str(long jarg1, __mpz_struct jarg1_, String jarg2, int jarg3);
  public final static native void __gmpz_set_ui(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_setbit(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native long __gmpz_sizeinbase(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native void __gmpz_sqrt(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native void __gmpz_sqrtrem(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_sub(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_sub_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_ui_sub(long jarg1, __mpz_struct jarg1_, long jarg2, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_submul(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_submul_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_swap(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native long __gmpz_tdiv_ui(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_tdiv_q(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_tdiv_q_2exp(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native long __gmpz_tdiv_q_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native void __gmpz_tdiv_qr(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_, long jarg4, __mpz_struct jarg4_);
  public final static native long __gmpz_tdiv_qr_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_, long jarg4);
  public final static native void __gmpz_tdiv_r(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_tdiv_r_2exp(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native long __gmpz_tdiv_r_ui(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3);
  public final static native int __gmpz_tstbit(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void __gmpz_ui_pow_ui(long jarg1, __mpz_struct jarg1_, long jarg2, long jarg3);
  public final static native void __gmpz_urandomb(long jarg1, __mpz_struct jarg1_, long jarg2, __gmp_randstate_struct jarg2_, long jarg3);
  public final static native void __gmpz_urandomm(long jarg1, __mpz_struct jarg1_, long jarg2, __gmp_randstate_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void __gmpz_xor(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native long __gmpz_limbs_read(long jarg1, __mpz_struct jarg1_);
  public final static native long __gmpz_limbs_write(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native long __gmpz_limbs_modify(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native void __gmpz_limbs_finish(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native long __gmpz_roinit_n(long jarg1, __mpz_struct jarg1_, long jarg2, int jarg3);
  public final static native void __gmpq_add(long jarg1, __mpq_struct jarg1_, long jarg2, __mpq_struct jarg2_, long jarg3, __mpq_struct jarg3_);
  public final static native void __gmpq_canonicalize(long jarg1, __mpq_struct jarg1_);
  public final static native void __gmpq_clear(long jarg1, __mpq_struct jarg1_);
  public final static native void __gmpq_clears(long jarg1, __mpq_struct jarg1_);
  public final static native int __gmpq_cmp(long jarg1, __mpq_struct jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native int __gmpq_cmp_si(long jarg1, __mpq_struct jarg1_, int jarg2, long jarg3);
  public final static native int __gmpq_cmp_ui(long jarg1, __mpq_struct jarg1_, long jarg2, long jarg3);
  public final static native int __gmpq_cmp_z(long jarg1, __mpq_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native void __gmpq_div(long jarg1, __mpq_struct jarg1_, long jarg2, __mpq_struct jarg2_, long jarg3, __mpq_struct jarg3_);
  public final static native void __gmpq_div_2exp(long jarg1, __mpq_struct jarg1_, long jarg2, __mpq_struct jarg2_, long jarg3);
  public final static native int __gmpq_equal(long jarg1, __mpq_struct jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native void __gmpq_get_num(long jarg1, __mpz_struct jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native void __gmpq_get_den(long jarg1, __mpz_struct jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native double __gmpq_get_d(long jarg1, __mpq_struct jarg1_);
  public final static native String __gmpq_get_str(String jarg1, int jarg2, long jarg3, __mpq_struct jarg3_);
  public final static native void __gmpq_init(long jarg1, __mpq_struct jarg1_);
  public final static native void __gmpq_inits(long jarg1, __mpq_struct jarg1_);
  public final static native long __gmpq_inp_str(long jarg1, __mpq_struct jarg1_, long jarg2, _IO_FILE jarg2_, int jarg3);
  public final static native void __gmpq_inv(long jarg1, __mpq_struct jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native void __gmpq_mul(long jarg1, __mpq_struct jarg1_, long jarg2, __mpq_struct jarg2_, long jarg3, __mpq_struct jarg3_);
  public final static native void __gmpq_mul_2exp(long jarg1, __mpq_struct jarg1_, long jarg2, __mpq_struct jarg2_, long jarg3);
  public final static native long __gmpq_out_str(long jarg1, _IO_FILE jarg1_, int jarg2, long jarg3, __mpq_struct jarg3_);
  public final static native void __gmpq_set(long jarg1, __mpq_struct jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native void __gmpq_set_d(long jarg1, __mpq_struct jarg1_, double jarg2);
  public final static native void __gmpq_set_den(long jarg1, __mpq_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native void __gmpq_set_f(long jarg1, __mpq_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native void __gmpq_set_num(long jarg1, __mpq_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native void __gmpq_set_si(long jarg1, __mpq_struct jarg1_, int jarg2, long jarg3);
  public final static native int __gmpq_set_str(long jarg1, __mpq_struct jarg1_, String jarg2, int jarg3);
  public final static native void __gmpq_set_ui(long jarg1, __mpq_struct jarg1_, long jarg2, long jarg3);
  public final static native void __gmpq_set_z(long jarg1, __mpq_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native void __gmpq_sub(long jarg1, __mpq_struct jarg1_, long jarg2, __mpq_struct jarg2_, long jarg3, __mpq_struct jarg3_);
  public final static native void __gmpq_swap(long jarg1, __mpq_struct jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native void __gmpf_abs(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native void __gmpf_add(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3, __mpf_struct jarg3_);
  public final static native void __gmpf_add_ui(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3);
  public final static native void __gmpf_ceil(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native void __gmpf_clear(long jarg1, __mpf_struct jarg1_);
  public final static native void __gmpf_clears(long jarg1, __mpf_struct jarg1_);
  public final static native int __gmpf_cmp(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native int __gmpf_cmp_z(long jarg1, __mpf_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native int __gmpf_cmp_d(long jarg1, __mpf_struct jarg1_, double jarg2);
  public final static native int __gmpf_cmp_si(long jarg1, __mpf_struct jarg1_, int jarg2);
  public final static native int __gmpf_cmp_ui(long jarg1, __mpf_struct jarg1_, long jarg2);
  public final static native void __gmpf_div(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3, __mpf_struct jarg3_);
  public final static native void __gmpf_div_2exp(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3);
  public final static native void __gmpf_div_ui(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3);
  public final static native void __gmpf_dump(long jarg1, __mpf_struct jarg1_);
  public final static native int __gmpf_eq(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3);
  public final static native int __gmpf_fits_sint_p(long jarg1, __mpf_struct jarg1_);
  public final static native int __gmpf_fits_slong_p(long jarg1, __mpf_struct jarg1_);
  public final static native int __gmpf_fits_sshort_p(long jarg1, __mpf_struct jarg1_);
  public final static native int __gmpf_fits_uint_p(long jarg1, __mpf_struct jarg1_);
  public final static native int __gmpf_fits_ulong_p(long jarg1, __mpf_struct jarg1_);
  public final static native int __gmpf_fits_ushort_p(long jarg1, __mpf_struct jarg1_);
  public final static native void __gmpf_floor(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native double __gmpf_get_d(long jarg1, __mpf_struct jarg1_);
  public final static native double __gmpf_get_d_2exp(long jarg1, long jarg2, __mpf_struct jarg2_);
  public final static native long __gmpf_get_default_prec();
  public final static native long __gmpf_get_prec(long jarg1, __mpf_struct jarg1_);
  public final static native int __gmpf_get_si(long jarg1, __mpf_struct jarg1_);
  public final static native String __gmpf_get_str(String jarg1, long jarg2, int jarg3, long jarg4, long jarg5, __mpf_struct jarg5_);
  public final static native long __gmpf_get_ui(long jarg1, __mpf_struct jarg1_);
  public final static native void __gmpf_init(long jarg1, __mpf_struct jarg1_);
  public final static native void __gmpf_init2(long jarg1, __mpf_struct jarg1_, long jarg2);
  public final static native void __gmpf_inits(long jarg1, __mpf_struct jarg1_);
  public final static native void __gmpf_init_set(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native void __gmpf_init_set_d(long jarg1, __mpf_struct jarg1_, double jarg2);
  public final static native void __gmpf_init_set_si(long jarg1, __mpf_struct jarg1_, int jarg2);
  public final static native int __gmpf_init_set_str(long jarg1, __mpf_struct jarg1_, String jarg2, int jarg3);
  public final static native void __gmpf_init_set_ui(long jarg1, __mpf_struct jarg1_, long jarg2);
  public final static native long __gmpf_inp_str(long jarg1, __mpf_struct jarg1_, long jarg2, _IO_FILE jarg2_, int jarg3);
  public final static native int __gmpf_integer_p(long jarg1, __mpf_struct jarg1_);
  public final static native void __gmpf_mul(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3, __mpf_struct jarg3_);
  public final static native void __gmpf_mul_2exp(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3);
  public final static native void __gmpf_mul_ui(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3);
  public final static native void __gmpf_neg(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native long __gmpf_out_str(long jarg1, _IO_FILE jarg1_, int jarg2, long jarg3, long jarg4, __mpf_struct jarg4_);
  public final static native void __gmpf_pow_ui(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3);
  public final static native void __gmpf_random2(long jarg1, __mpf_struct jarg1_, int jarg2, int jarg3);
  public final static native void __gmpf_reldiff(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3, __mpf_struct jarg3_);
  public final static native void __gmpf_set(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native void __gmpf_set_d(long jarg1, __mpf_struct jarg1_, double jarg2);
  public final static native void __gmpf_set_default_prec(long jarg1);
  public final static native void __gmpf_set_prec(long jarg1, __mpf_struct jarg1_, long jarg2);
  public final static native void __gmpf_set_prec_raw(long jarg1, __mpf_struct jarg1_, long jarg2);
  public final static native void __gmpf_set_q(long jarg1, __mpf_struct jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native void __gmpf_set_si(long jarg1, __mpf_struct jarg1_, int jarg2);
  public final static native int __gmpf_set_str(long jarg1, __mpf_struct jarg1_, String jarg2, int jarg3);
  public final static native void __gmpf_set_ui(long jarg1, __mpf_struct jarg1_, long jarg2);
  public final static native void __gmpf_set_z(long jarg1, __mpf_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native long __gmpf_size(long jarg1, __mpf_struct jarg1_);
  public final static native void __gmpf_sqrt(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native void __gmpf_sqrt_ui(long jarg1, __mpf_struct jarg1_, long jarg2);
  public final static native void __gmpf_sub(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3, __mpf_struct jarg3_);
  public final static native void __gmpf_sub_ui(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3);
  public final static native void __gmpf_swap(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native void __gmpf_trunc(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native void __gmpf_ui_div(long jarg1, __mpf_struct jarg1_, long jarg2, long jarg3, __mpf_struct jarg3_);
  public final static native void __gmpf_ui_sub(long jarg1, __mpf_struct jarg1_, long jarg2, long jarg3, __mpf_struct jarg3_);
  public final static native void __gmpf_urandomb(long jarg1, __mpf_struct jarg1_, long jarg2, __gmp_randstate_struct jarg2_, long jarg3);
  public final static native long __gmpn_add_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native long __gmpn_addmul_1(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void __gmpn_divexact_1(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native long __gmpn_divexact_by3c(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native long __gmpn_divrem(long jarg1, int jarg2, long jarg3, int jarg4, long jarg5, int jarg6);
  public final static native long __gmpn_divrem_1(long jarg1, int jarg2, long jarg3, int jarg4, long jarg5);
  public final static native long __gmpn_divrem_2(long jarg1, int jarg2, long jarg3, int jarg4, long jarg5);
  public final static native long __gmpn_div_qr_1(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5);
  public final static native long __gmpn_div_qr_2(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5);
  public final static native int __gmpn_gcd(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native long __gmpn_gcd_11(long jarg1, long jarg2);
  public final static native long __gmpn_gcd_1(long jarg1, int jarg2, long jarg3);
  public final static native long __gmpn_gcdext_1(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int __gmpn_gcdext(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7);
  public final static native long __gmpn_get_str(long jarg1, int jarg2, long jarg3, int jarg4);
  public final static native long __gmpn_hamdist(long jarg1, long jarg2, int jarg3);
  public final static native long __gmpn_lshift(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native long __gmpn_mod_1(long jarg1, int jarg2, long jarg3);
  public final static native long __gmpn_mul(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native long __gmpn_mul_1(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void __gmpn_mul_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void __gmpn_sqr(long jarg1, long jarg2, int jarg3);
  public final static native void __gmpn_com(long jarg1, long jarg2, int jarg3);
  public final static native int __gmpn_perfect_square_p(long jarg1, int jarg2);
  public final static native int __gmpn_perfect_power_p(long jarg1, int jarg2);
  public final static native long __gmpn_popcount(long jarg1, int jarg2);
  public final static native int __gmpn_pow_1(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5);
  public final static native long __gmpn_preinv_mod_1(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native void __gmpn_random(long jarg1, int jarg2);
  public final static native void __gmpn_random2(long jarg1, int jarg2);
  public final static native long __gmpn_rshift(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native long __gmpn_scan0(long jarg1, long jarg2);
  public final static native long __gmpn_scan1(long jarg1, long jarg2);
  public final static native int __gmpn_set_str(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native long __gmpn_sizeinbase(long jarg1, int jarg2, int jarg3);
  public final static native int __gmpn_sqrtrem(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native long __gmpn_sub_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native long __gmpn_submul_1(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void __gmpn_tdiv_qr(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, int jarg7);
  public final static native void __gmpn_and_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void __gmpn_andn_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void __gmpn_nand_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void __gmpn_ior_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void __gmpn_iorn_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void __gmpn_nior_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void __gmpn_xor_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void __gmpn_xnor_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void __gmpn_copyi(long jarg1, long jarg2, int jarg3);
  public final static native void __gmpn_copyd(long jarg1, long jarg2, int jarg3);
  public final static native void __gmpn_zero(long jarg1, int jarg2);
  public final static native long __gmpn_cnd_add_n(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native long __gmpn_cnd_sub_n(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native long __gmpn_sec_add_1(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5);
  public final static native int __gmpn_sec_add_1_itch(int jarg1);
  public final static native long __gmpn_sec_sub_1(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5);
  public final static native int __gmpn_sec_sub_1_itch(int jarg1);
  public final static native void __gmpn_cnd_swap(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void __gmpn_sec_mul(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6);
  public final static native int __gmpn_sec_mul_itch(int jarg1, int jarg2);
  public final static native void __gmpn_sec_sqr(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native int __gmpn_sec_sqr_itch(int jarg1);
  public final static native void __gmpn_sec_powm(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, long jarg6, int jarg7, long jarg8);
  public final static native int __gmpn_sec_powm_itch(int jarg1, long jarg2, int jarg3);
  public final static native void __gmpn_sec_tabselect(long jarg1, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native long __gmpn_sec_div_qr(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6);
  public final static native int __gmpn_sec_div_qr_itch(int jarg1, int jarg2);
  public final static native void __gmpn_sec_div_r(long jarg1, int jarg2, long jarg3, int jarg4, long jarg5);
  public final static native int __gmpn_sec_div_r_itch(int jarg1, int jarg2);
  public final static native int __gmpn_sec_invert(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6);
  public final static native int __gmpn_sec_invert_itch(int jarg1);
  public final static native void __gmpz_abs(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native int __gmpz_fits_uint_p(long jarg1, __mpz_struct jarg1_);
  public final static native int __gmpz_fits_ulong_p(long jarg1, __mpz_struct jarg1_);
  public final static native int __gmpz_fits_ushort_p(long jarg1, __mpz_struct jarg1_);
  public final static native long __gmpz_get_ui(long jarg1, __mpz_struct jarg1_);
  public final static native long __gmpz_getlimbn(long jarg1, __mpz_struct jarg1_, int jarg2);
  public final static native void __gmpz_neg(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native int __gmpz_perfect_square_p(long jarg1, __mpz_struct jarg1_);
  public final static native long __gmpz_popcount(long jarg1, __mpz_struct jarg1_);
  public final static native void __gmpz_set_q(long jarg1, __mpz_struct jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native long __gmpz_size(long jarg1, __mpz_struct jarg1_);
  public final static native void __gmpq_abs(long jarg1, __mpq_struct jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native void __gmpq_neg(long jarg1, __mpq_struct jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native long __gmpn_add(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native long __gmpn_add_1(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native int __gmpn_cmp(long jarg1, long jarg2, int jarg3);
  public final static native int __gmpn_zero_p(long jarg1, int jarg2);
  public final static native long __gmpn_sub(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native long __gmpn_sub_1(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native long __gmpn_neg(long jarg1, long jarg2, int jarg3);
  public final static native int GMP_ERROR_NONE_get();
  public final static native int GMP_ERROR_UNSUPPORTED_ARGUMENT_get();
  public final static native int GMP_ERROR_DIVISION_BY_ZERO_get();
  public final static native int GMP_ERROR_SQRT_OF_NEGATIVE_get();
  public final static native int GMP_ERROR_INVALID_ARGUMENT_get();
  public final static native String __GMP_CC_get();
  public final static native String __GMP_CFLAGS_get();
  public final static native int __GNU_MP_VERSION_get();
  public final static native int __GNU_MP_VERSION_MINOR_get();
  public final static native int __GNU_MP_VERSION_PATCHLEVEL_get();
  public final static native int __GNU_MP_RELEASE_get();
  public final static native int MPFR_FLAGS_UNDERFLOW_get();
  public final static native int MPFR_FLAGS_OVERFLOW_get();
  public final static native int MPFR_FLAGS_NAN_get();
  public final static native int MPFR_FLAGS_INEXACT_get();
  public final static native int MPFR_FLAGS_ERANGE_get();
  public final static native int MPFR_FLAGS_DIVBY0_get();
  public final static native int MPFR_FLAGS_ALL_get();
  public final static native int MPFR_RNDN_get();
  public final static native int MPFR_RNDNA_get();
  public final static native int _MPFR_PREC_FORMAT_get();
  public final static native int _MPFR_EXP_FORMAT_get();
  public final static native int MPFR_PREC_MIN_get();
  public final static native void __mpfr_struct__mpfr_prec_set(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int __mpfr_struct__mpfr_prec_get(long jarg1, __mpfr_struct jarg1_);
  public final static native void __mpfr_struct__mpfr_sign_set(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int __mpfr_struct__mpfr_sign_get(long jarg1, __mpfr_struct jarg1_);
  public final static native void __mpfr_struct__mpfr_exp_set(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int __mpfr_struct__mpfr_exp_get(long jarg1, __mpfr_struct jarg1_);
  public final static native void __mpfr_struct__mpfr_d_set(long jarg1, __mpfr_struct jarg1_, long jarg2);
  public final static native long __mpfr_struct__mpfr_d_get(long jarg1, __mpfr_struct jarg1_);
  public final static native long new___mpfr_struct();
  public final static native void delete___mpfr_struct(long jarg1);
  public final static native int MPFR_NAN_KIND_get();
  public final static native int MPFR_INF_KIND_get();
  public final static native int MPFR_ZERO_KIND_get();
  public final static native int MPFR_REGULAR_KIND_get();
  public final static native int MPFR_FREE_LOCAL_CACHE_get();
  public final static native int MPFR_FREE_GLOBAL_CACHE_get();
  public final static native int MPFR_USE_C99_FEATURE_get();
  public final static native String mpfr_get_version();
  public final static native String mpfr_get_patches();
  public final static native int mpfr_buildopt_tls_p();
  public final static native int mpfr_buildopt_float128_p();
  public final static native int mpfr_buildopt_decimal_p();
  public final static native int mpfr_buildopt_gmpinternals_p();
  public final static native int mpfr_buildopt_sharedcache_p();
  public final static native String mpfr_buildopt_tune_case();
  public final static native int mpfr_get_emin();
  public final static native int mpfr_set_emin(int jarg1);
  public final static native int mpfr_get_emin_min();
  public final static native int mpfr_get_emin_max();
  public final static native int mpfr_get_emax();
  public final static native int mpfr_set_emax(int jarg1);
  public final static native int mpfr_get_emax_min();
  public final static native int mpfr_get_emax_max();
  public final static native void mpfr_set_default_rounding_mode(int jarg1);
  public final static native int mpfr_get_default_rounding_mode();
  public final static native String mpfr_print_rnd_mode(int jarg1);
  public final static native void mpfr_clear_flags();
  public final static native void mpfr_clear_underflow();
  public final static native void mpfr_clear_overflow();
  public final static native void mpfr_clear_divby0();
  public final static native void mpfr_clear_nanflag();
  public final static native void mpfr_clear_inexflag();
  public final static native void mpfr_clear_erangeflag();
  public final static native void mpfr_set_underflow();
  public final static native void mpfr_set_overflow();
  public final static native void mpfr_set_divby0();
  public final static native void mpfr_set_nanflag();
  public final static native void mpfr_set_inexflag();
  public final static native void mpfr_set_erangeflag();
  public final static native int mpfr_underflow_p();
  public final static native int mpfr_overflow_p();
  public final static native int mpfr_divby0_p();
  public final static native int mpfr_nanflag_p();
  public final static native int mpfr_inexflag_p();
  public final static native int mpfr_erangeflag_p();
  public final static native void mpfr_flags_clear(long jarg1);
  public final static native void mpfr_flags_set(long jarg1);
  public final static native long mpfr_flags_test(long jarg1);
  public final static native long mpfr_flags_save();
  public final static native void mpfr_flags_restore(long jarg1, long jarg2);
  public final static native int mpfr_check_range(long jarg1, __mpfr_struct jarg1_, int jarg2, int jarg3);
  public final static native void mpfr_init2(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native void mpfr_init(long jarg1, __mpfr_struct jarg1_);
  public final static native void mpfr_clear(long jarg1, __mpfr_struct jarg1_);
  public final static native void mpfr_inits2(int jarg1, long jarg2, __mpfr_struct jarg2_);
  public final static native void mpfr_inits(long jarg1, __mpfr_struct jarg1_);
  public final static native void mpfr_clears(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_prec_round(long jarg1, __mpfr_struct jarg1_, int jarg2, int jarg3);
  public final static native int mpfr_can_round(long jarg1, __mpfr_struct jarg1_, int jarg2, int jarg3, int jarg4, int jarg5);
  public final static native int mpfr_min_prec(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_get_exp(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_set_exp(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_get_prec(long jarg1, __mpfr_struct jarg1_);
  public final static native void mpfr_set_prec(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native void mpfr_set_prec_raw(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native void mpfr_set_default_prec(int jarg1);
  public final static native int mpfr_get_default_prec();
  public final static native int mpfr_set_d(long jarg1, __mpfr_struct jarg1_, double jarg2, int jarg3);
  public final static native int mpfr_set_flt(long jarg1, __mpfr_struct jarg1_, float jarg2, int jarg3);
  public final static native int mpfr_set_ld(long jarg1, __mpfr_struct jarg1_, long jarg2, int jarg3);
  public final static native int mpfr_set_z(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpz_struct jarg2_, int jarg3);
  public final static native int mpfr_set_z_2exp(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpz_struct jarg2_, int jarg3, int jarg4);
  public final static native void mpfr_set_nan(long jarg1, __mpfr_struct jarg1_);
  public final static native void mpfr_set_inf(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native void mpfr_set_zero(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_set_f(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpf_struct jarg2_, int jarg3);
  public final static native int mpfr_cmp_f(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native int mpfr_get_f(long jarg1, __mpf_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_set_si(long jarg1, __mpfr_struct jarg1_, int jarg2, int jarg3);
  public final static native int mpfr_set_ui(long jarg1, __mpfr_struct jarg1_, long jarg2, int jarg3);
  public final static native int mpfr_set_si_2exp(long jarg1, __mpfr_struct jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int mpfr_set_ui_2exp(long jarg1, __mpfr_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native int mpfr_set_q(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpq_struct jarg2_, int jarg3);
  public final static native int mpfr_mul_q(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpq_struct jarg3_, int jarg4);
  public final static native int mpfr_div_q(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpq_struct jarg3_, int jarg4);
  public final static native int mpfr_add_q(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpq_struct jarg3_, int jarg4);
  public final static native int mpfr_sub_q(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpq_struct jarg3_, int jarg4);
  public final static native int mpfr_cmp_q(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native void mpfr_get_q(long jarg1, __mpq_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_set_str(long jarg1, __mpfr_struct jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native int mpfr_init_set_str(long jarg1, __mpfr_struct jarg1_, String jarg2, int jarg3, int jarg4);
  public final static native int mpfr_set4(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3, int jarg4);
  public final static native int mpfr_abs(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_set(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_neg(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_signbit(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_setsign(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3, int jarg4);
  public final static native int mpfr_copysign(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_get_z_2exp(long jarg1, __mpz_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native float mpfr_get_flt(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native double mpfr_get_d(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native long mpfr_get_ld(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native double mpfr_get_d1(long jarg1, __mpfr_struct jarg1_);
  public final static native double mpfr_get_d_2exp(long jarg1, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native long mpfr_get_ld_2exp(long jarg1, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_frexp(long jarg1, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_get_si(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native long mpfr_get_ui(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native long mpfr_get_str_ndigits(int jarg1, int jarg2);
  public final static native String mpfr_get_str(String jarg1, long jarg2, int jarg3, long jarg4, long jarg5, __mpfr_struct jarg5_, int jarg6);
  public final static native int mpfr_get_z(long jarg1, __mpz_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native void mpfr_free_str(String jarg1);
  public final static native int mpfr_urandom(long jarg1, __mpfr_struct jarg1_, long jarg2, __gmp_randstate_struct jarg2_, int jarg3);
  public final static native int mpfr_grandom(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __gmp_randstate_struct jarg3_, int jarg4);
  public final static native int mpfr_nrandom(long jarg1, __mpfr_struct jarg1_, long jarg2, __gmp_randstate_struct jarg2_, int jarg3);
  public final static native int mpfr_erandom(long jarg1, __mpfr_struct jarg1_, long jarg2, __gmp_randstate_struct jarg2_, int jarg3);
  public final static native int mpfr_urandomb(long jarg1, __mpfr_struct jarg1_, long jarg2, __gmp_randstate_struct jarg2_);
  public final static native void mpfr_nextabove(long jarg1, __mpfr_struct jarg1_);
  public final static native void mpfr_nextbelow(long jarg1, __mpfr_struct jarg1_);
  public final static native void mpfr_nexttoward(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_printf(String jarg1);
  public final static native int mpfr_asprintf(long jarg1, String jarg2);
  public final static native int mpfr_sprintf(String jarg1, String jarg2);
  public final static native int mpfr_snprintf(String jarg1, long jarg2, String jarg3);
  public final static native int mpfr_pow(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_pow_si(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3, int jarg4);
  public final static native int mpfr_pow_ui(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, int jarg4);
  public final static native int mpfr_ui_pow_ui(long jarg1, __mpfr_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native int mpfr_ui_pow(long jarg1, __mpfr_struct jarg1_, long jarg2, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_pow_z(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpz_struct jarg3_, int jarg4);
  public final static native int mpfr_sqrt(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_sqrt_ui(long jarg1, __mpfr_struct jarg1_, long jarg2, int jarg3);
  public final static native int mpfr_rec_sqrt(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_add(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_sub(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_mul(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_div(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_add_ui(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, int jarg4);
  public final static native int mpfr_sub_ui(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, int jarg4);
  public final static native int mpfr_ui_sub(long jarg1, __mpfr_struct jarg1_, long jarg2, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_mul_ui(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, int jarg4);
  public final static native int mpfr_div_ui(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, int jarg4);
  public final static native int mpfr_ui_div(long jarg1, __mpfr_struct jarg1_, long jarg2, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_add_si(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3, int jarg4);
  public final static native int mpfr_sub_si(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3, int jarg4);
  public final static native int mpfr_si_sub(long jarg1, __mpfr_struct jarg1_, int jarg2, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_mul_si(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3, int jarg4);
  public final static native int mpfr_div_si(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3, int jarg4);
  public final static native int mpfr_si_div(long jarg1, __mpfr_struct jarg1_, int jarg2, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_add_d(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, double jarg3, int jarg4);
  public final static native int mpfr_sub_d(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, double jarg3, int jarg4);
  public final static native int mpfr_d_sub(long jarg1, __mpfr_struct jarg1_, double jarg2, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_mul_d(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, double jarg3, int jarg4);
  public final static native int mpfr_div_d(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, double jarg3, int jarg4);
  public final static native int mpfr_d_div(long jarg1, __mpfr_struct jarg1_, double jarg2, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_sqr(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_const_pi(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_const_log2(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_const_euler(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_const_catalan(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_agm(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_log(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_log2(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_log10(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_log1p(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_log_ui(long jarg1, __mpfr_struct jarg1_, long jarg2, int jarg3);
  public final static native int mpfr_exp(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_exp2(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_exp10(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_expm1(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_eint(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_li2(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_cmp(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_cmp3(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_cmp_d(long jarg1, __mpfr_struct jarg1_, double jarg2);
  public final static native int mpfr_cmp_ld(long jarg1, __mpfr_struct jarg1_, long jarg2);
  public final static native int mpfr_cmp_ui(long jarg1, __mpfr_struct jarg1_, long jarg2);
  public final static native int mpfr_cmp_si(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_cmp_ui_2exp(long jarg1, __mpfr_struct jarg1_, long jarg2, int jarg3);
  public final static native int mpfr_cmp_si_2exp(long jarg1, __mpfr_struct jarg1_, int jarg2, int jarg3);
  public final static native int mpfr_cmpabs(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_cmpabs_ui(long jarg1, __mpfr_struct jarg1_, long jarg2);
  public final static native void mpfr_reldiff(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_eq(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3);
  public final static native int mpfr_sgn(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_mul_2exp(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, int jarg4);
  public final static native int mpfr_div_2exp(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, int jarg4);
  public final static native int mpfr_mul_2ui(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, int jarg4);
  public final static native int mpfr_div_2ui(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, int jarg4);
  public final static native int mpfr_mul_2si(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3, int jarg4);
  public final static native int mpfr_div_2si(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3, int jarg4);
  public final static native int mpfr_rint(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_roundeven(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_round(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_trunc(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_ceil(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_floor(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_rint_roundeven(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_rint_round(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_rint_trunc(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_rint_ceil(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_rint_floor(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_frac(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_modf(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_remquo(long jarg1, __mpfr_struct jarg1_, long jarg2, long jarg3, __mpfr_struct jarg3_, long jarg4, __mpfr_struct jarg4_, int jarg5);
  public final static native int mpfr_remainder(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_fmod(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_fmodquo(long jarg1, __mpfr_struct jarg1_, long jarg2, long jarg3, __mpfr_struct jarg3_, long jarg4, __mpfr_struct jarg4_, int jarg5);
  public final static native int mpfr_fits_ulong_p(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_fits_slong_p(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_fits_uint_p(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_fits_sint_p(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_fits_ushort_p(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_fits_sshort_p(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_fits_uintmax_p(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native int mpfr_fits_intmax_p(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native void mpfr_extract(long jarg1, __mpz_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3);
  public final static native void mpfr_swap(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native void mpfr_dump(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_nan_p(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_inf_p(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_number_p(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_integer_p(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_zero_p(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_regular_p(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_greater_p(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_greaterequal_p(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_less_p(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_lessequal_p(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_lessgreater_p(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_equal_p(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_unordered_p(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int mpfr_atanh(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_acosh(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_asinh(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_cosh(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_sinh(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_tanh(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_sinh_cosh(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_sech(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_csch(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_coth(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_acos(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_asin(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_atan(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_sin(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_sin_cos(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_cos(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_tan(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_atan2(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_sec(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_csc(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_cot(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_hypot(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_erf(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_erfc(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_cbrt(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_root(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, int jarg4);
  public final static native int mpfr_rootn_ui(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, int jarg4);
  public final static native int mpfr_gamma(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_gamma_inc(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_beta(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_lngamma(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_lgamma(long jarg1, __mpfr_struct jarg1_, long jarg2, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_digamma(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_zeta(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_zeta_ui(long jarg1, __mpfr_struct jarg1_, long jarg2, int jarg3);
  public final static native int mpfr_fac_ui(long jarg1, __mpfr_struct jarg1_, long jarg2, int jarg3);
  public final static native int mpfr_j0(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_j1(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_jn(long jarg1, __mpfr_struct jarg1_, int jarg2, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_y0(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_y1(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_yn(long jarg1, __mpfr_struct jarg1_, int jarg2, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_ai(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, int jarg3);
  public final static native int mpfr_min(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_max(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_dim(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_mul_z(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpz_struct jarg3_, int jarg4);
  public final static native int mpfr_div_z(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpz_struct jarg3_, int jarg4);
  public final static native int mpfr_add_z(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpz_struct jarg3_, int jarg4);
  public final static native int mpfr_sub_z(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpz_struct jarg3_, int jarg4);
  public final static native int mpfr_z_sub(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native int mpfr_cmp_z(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native int mpfr_fma(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, long jarg4, __mpfr_struct jarg4_, int jarg5);
  public final static native int mpfr_fms(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, long jarg4, __mpfr_struct jarg4_, int jarg5);
  public final static native int mpfr_fmma(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, long jarg4, __mpfr_struct jarg4_, long jarg5, __mpfr_struct jarg5_, int jarg6);
  public final static native int mpfr_fmms(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, long jarg4, __mpfr_struct jarg4_, long jarg5, __mpfr_struct jarg5_, int jarg6);
  public final static native int mpfr_sum(long jarg1, __mpfr_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native int mpfr_dot(long jarg1, __mpfr_struct jarg1_, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void mpfr_free_cache();
  public final static native void mpfr_free_cache2(int jarg1);
  public final static native void mpfr_free_pool();
  public final static native int mpfr_mp_memory_cleanup();
  public final static native int mpfr_subnormalize(long jarg1, __mpfr_struct jarg1_, int jarg2, int jarg3);
  public final static native int mpfr_strtofr(long jarg1, __mpfr_struct jarg1_, String jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void mpfr_round_nearest_away_begin(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_round_nearest_away_end(long jarg1, __mpfr_struct jarg1_, int jarg2);
  public final static native long mpfr_custom_get_size(int jarg1);
  public final static native void mpfr_custom_init(long jarg1, int jarg2);
  public final static native long mpfr_custom_get_significand(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_custom_get_exp(long jarg1, __mpfr_struct jarg1_);
  public final static native void mpfr_custom_move(long jarg1, __mpfr_struct jarg1_, long jarg2);
  public final static native void mpfr_custom_init_set(long jarg1, __mpfr_struct jarg1_, int jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int mpfr_custom_get_kind(long jarg1, __mpfr_struct jarg1_);
  public final static native int mpfr_total_order_p(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int _MPFR_H_HAVE_FILE_get();
  public final static native long __gmpfr_inp_str(long jarg1, __mpfr_struct jarg1_, long jarg2, _IO_FILE jarg2_, int jarg3, int jarg4);
  public final static native long __gmpfr_out_str(long jarg1, _IO_FILE jarg1_, int jarg2, long jarg3, long jarg4, __mpfr_struct jarg4_, int jarg5);
  public final static native int __gmpfr_fprintf(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native int __gmpfr_fpif_export(long jarg1, _IO_FILE jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int __gmpfr_fpif_import(long jarg1, __mpfr_struct jarg1_, long jarg2, _IO_FILE jarg2_);
  public final static native int _SYS_PARAM_H_get();
  public final static native int _SYS_TYPES_H_get();
  public final static native int __clock_t_defined_get();
  public final static native int __clockid_t_defined_get();
  public final static native int __time_t_defined_get();
  public final static native int __timer_t_defined_get();
  public final static native int _BITS_STDINT_INTN_H_get();
  public final static native int __BIT_TYPES_DEFINED___get();
  public final static native int _ENDIAN_H_get();
  public final static native int _BITS_ENDIAN_H_get();
  public final static native int __LITTLE_ENDIAN_get();
  public final static native int __BIG_ENDIAN_get();
  public final static native int __PDP_ENDIAN_get();
  public final static native int _BITS_ENDIANNESS_H_get();
  public final static native int __BYTE_ORDER_get();
  public final static native int __FLOAT_WORD_ORDER_get();
  public final static native int LITTLE_ENDIAN_get();
  public final static native int BIG_ENDIAN_get();
  public final static native int PDP_ENDIAN_get();
  public final static native int BYTE_ORDER_get();
  public final static native int _BITS_BYTESWAP_H_get();
  public final static native int __bswap_16(int jarg1);
  public final static native long __bswap_32(long jarg1);
  public final static native java.math.BigInteger __bswap_64(java.math.BigInteger jarg1);
  public final static native int _BITS_UINTN_IDENTITY_H_get();
  public final static native int __uint16_identity(int jarg1);
  public final static native long __uint32_identity(long jarg1);
  public final static native java.math.BigInteger __uint64_identity(java.math.BigInteger jarg1);
  public final static native int _SYS_SELECT_H_get();
  public final static native int __sigset_t_defined_get();
  public final static native void __sigset_t___val_set(long jarg1, __sigset_t jarg1_, long jarg2);
  public final static native long __sigset_t___val_get(long jarg1, __sigset_t jarg1_);
  public final static native long new___sigset_t();
  public final static native void delete___sigset_t(long jarg1);
  public final static native int __timeval_defined_get();
  public final static native void timeval_tv_sec_set(long jarg1, timeval jarg1_, int jarg2);
  public final static native int timeval_tv_sec_get(long jarg1, timeval jarg1_);
  public final static native void timeval_tv_usec_set(long jarg1, timeval jarg1_, int jarg2);
  public final static native int timeval_tv_usec_get(long jarg1, timeval jarg1_);
  public final static native long new_timeval();
  public final static native void delete_timeval(long jarg1);
  public final static native int _STRUCT_TIMESPEC_get();
  public final static native void timespec_tv_sec_set(long jarg1, timespec jarg1_, int jarg2);
  public final static native int timespec_tv_sec_get(long jarg1, timespec jarg1_);
  public final static native void timespec_tv_nsec_set(long jarg1, timespec jarg1_, int jarg2);
  public final static native int timespec_tv_nsec_get(long jarg1, timespec jarg1_);
  public final static native long new_timespec();
  public final static native void delete_timespec(long jarg1);
  public final static native void fd_set___fds_bits_set(long jarg1, fd_set jarg1_, long jarg2);
  public final static native long fd_set___fds_bits_get(long jarg1, fd_set jarg1_);
  public final static native long new_fd_set();
  public final static native void delete_fd_set(long jarg1);
  public final static native int FD_SETSIZE_get();
  public final static native int select(int jarg1, long jarg2, fd_set jarg2_, long jarg3, fd_set jarg3_, long jarg4, fd_set jarg4_, long jarg5, timeval jarg5_);
  public final static native int pselect(int jarg1, long jarg2, fd_set jarg2_, long jarg3, fd_set jarg3_, long jarg4, fd_set jarg4_, long jarg5, timespec jarg5_, long jarg6, __sigset_t jarg6_);
  public final static native int _BITS_PTHREADTYPES_COMMON_H_get();
  public final static native int _THREAD_SHARED_TYPES_H_get();
  public final static native int _BITS_PTHREADTYPES_ARCH_H_get();
  public final static native int __SIZEOF_PTHREAD_MUTEX_T_get();
  public final static native int __SIZEOF_PTHREAD_ATTR_T_get();
  public final static native int __SIZEOF_PTHREAD_RWLOCK_T_get();
  public final static native int __SIZEOF_PTHREAD_BARRIER_T_get();
  public final static native int __SIZEOF_PTHREAD_MUTEXATTR_T_get();
  public final static native int __SIZEOF_PTHREAD_COND_T_get();
  public final static native int __SIZEOF_PTHREAD_CONDATTR_T_get();
  public final static native int __SIZEOF_PTHREAD_RWLOCKATTR_T_get();
  public final static native int __SIZEOF_PTHREAD_BARRIERATTR_T_get();
  public final static native void __pthread_list_t___prev_set(long jarg1, __pthread_list_t jarg1_, long jarg2, __pthread_list_t jarg2_);
  public final static native long __pthread_list_t___prev_get(long jarg1, __pthread_list_t jarg1_);
  public final static native void __pthread_list_t___next_set(long jarg1, __pthread_list_t jarg1_, long jarg2, __pthread_list_t jarg2_);
  public final static native long __pthread_list_t___next_get(long jarg1, __pthread_list_t jarg1_);
  public final static native long new___pthread_list_t();
  public final static native void delete___pthread_list_t(long jarg1);
  public final static native void __pthread_slist_t___next_set(long jarg1, __pthread_slist_t jarg1_, long jarg2, __pthread_slist_t jarg2_);
  public final static native long __pthread_slist_t___next_get(long jarg1, __pthread_slist_t jarg1_);
  public final static native long new___pthread_slist_t();
  public final static native void delete___pthread_slist_t(long jarg1);
  public final static native int _THREAD_MUTEX_INTERNAL_H_get();
  public final static native void __pthread_mutex_s___lock_set(long jarg1, __pthread_mutex_s jarg1_, int jarg2);
  public final static native int __pthread_mutex_s___lock_get(long jarg1, __pthread_mutex_s jarg1_);
  public final static native void __pthread_mutex_s___count_set(long jarg1, __pthread_mutex_s jarg1_, long jarg2);
  public final static native long __pthread_mutex_s___count_get(long jarg1, __pthread_mutex_s jarg1_);
  public final static native void __pthread_mutex_s___owner_set(long jarg1, __pthread_mutex_s jarg1_, int jarg2);
  public final static native int __pthread_mutex_s___owner_get(long jarg1, __pthread_mutex_s jarg1_);
  public final static native void __pthread_mutex_s___kind_set(long jarg1, __pthread_mutex_s jarg1_, int jarg2);
  public final static native int __pthread_mutex_s___kind_get(long jarg1, __pthread_mutex_s jarg1_);
  public final static native void __pthread_mutex_s___nusers_set(long jarg1, __pthread_mutex_s jarg1_, long jarg2);
  public final static native long __pthread_mutex_s___nusers_get(long jarg1, __pthread_mutex_s jarg1_);
  public final static native void __pthread_mutex_s___list_set(long jarg1, __pthread_mutex_s jarg1_, long jarg2, __pthread_slist_t jarg2_);
  public final static native long __pthread_mutex_s___list_get(long jarg1, __pthread_mutex_s jarg1_);
  public final static native int __PTHREAD_MUTEX_HAVE_PREV_get();
  public final static native long new___pthread_mutex_s();
  public final static native void delete___pthread_mutex_s(long jarg1);
  public final static native void __pthread_rwlock_arch_t___readers_set(long jarg1, __pthread_rwlock_arch_t jarg1_, long jarg2);
  public final static native long __pthread_rwlock_arch_t___readers_get(long jarg1, __pthread_rwlock_arch_t jarg1_);
  public final static native void __pthread_rwlock_arch_t___writers_set(long jarg1, __pthread_rwlock_arch_t jarg1_, long jarg2);
  public final static native long __pthread_rwlock_arch_t___writers_get(long jarg1, __pthread_rwlock_arch_t jarg1_);
  public final static native void __pthread_rwlock_arch_t___wrphase_futex_set(long jarg1, __pthread_rwlock_arch_t jarg1_, long jarg2);
  public final static native long __pthread_rwlock_arch_t___wrphase_futex_get(long jarg1, __pthread_rwlock_arch_t jarg1_);
  public final static native void __pthread_rwlock_arch_t___writers_futex_set(long jarg1, __pthread_rwlock_arch_t jarg1_, long jarg2);
  public final static native long __pthread_rwlock_arch_t___writers_futex_get(long jarg1, __pthread_rwlock_arch_t jarg1_);
  public final static native void __pthread_rwlock_arch_t___pad3_set(long jarg1, __pthread_rwlock_arch_t jarg1_, long jarg2);
  public final static native long __pthread_rwlock_arch_t___pad3_get(long jarg1, __pthread_rwlock_arch_t jarg1_);
  public final static native void __pthread_rwlock_arch_t___pad4_set(long jarg1, __pthread_rwlock_arch_t jarg1_, long jarg2);
  public final static native long __pthread_rwlock_arch_t___pad4_get(long jarg1, __pthread_rwlock_arch_t jarg1_);
  public final static native void __pthread_rwlock_arch_t___flags_set(long jarg1, __pthread_rwlock_arch_t jarg1_, short jarg2);
  public final static native short __pthread_rwlock_arch_t___flags_get(long jarg1, __pthread_rwlock_arch_t jarg1_);
  public final static native void __pthread_rwlock_arch_t___shared_set(long jarg1, __pthread_rwlock_arch_t jarg1_, short jarg2);
  public final static native short __pthread_rwlock_arch_t___shared_get(long jarg1, __pthread_rwlock_arch_t jarg1_);
  public final static native void __pthread_rwlock_arch_t___rwelision_set(long jarg1, __pthread_rwlock_arch_t jarg1_, byte jarg2);
  public final static native byte __pthread_rwlock_arch_t___rwelision_get(long jarg1, __pthread_rwlock_arch_t jarg1_);
  public final static native void __pthread_rwlock_arch_t___pad2_set(long jarg1, __pthread_rwlock_arch_t jarg1_, short jarg2);
  public final static native short __pthread_rwlock_arch_t___pad2_get(long jarg1, __pthread_rwlock_arch_t jarg1_);
  public final static native void __pthread_rwlock_arch_t___cur_writer_set(long jarg1, __pthread_rwlock_arch_t jarg1_, int jarg2);
  public final static native int __pthread_rwlock_arch_t___cur_writer_get(long jarg1, __pthread_rwlock_arch_t jarg1_);
  public final static native long new___pthread_rwlock_arch_t();
  public final static native void delete___pthread_rwlock_arch_t(long jarg1);
  public final static native void __pthread_cond_s___wseq_set(long jarg1, __pthread_cond_s jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger __pthread_cond_s___wseq_get(long jarg1, __pthread_cond_s jarg1_);
  public final static native void __pthread_cond_s___g1_start_set(long jarg1, __pthread_cond_s jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger __pthread_cond_s___g1_start_get(long jarg1, __pthread_cond_s jarg1_);
  public final static native void __pthread_cond_s___g_refs_set(long jarg1, __pthread_cond_s jarg1_, long jarg2);
  public final static native long __pthread_cond_s___g_refs_get(long jarg1, __pthread_cond_s jarg1_);
  public final static native void __pthread_cond_s___g_size_set(long jarg1, __pthread_cond_s jarg1_, long jarg2);
  public final static native long __pthread_cond_s___g_size_get(long jarg1, __pthread_cond_s jarg1_);
  public final static native void __pthread_cond_s___g1_orig_size_set(long jarg1, __pthread_cond_s jarg1_, long jarg2);
  public final static native long __pthread_cond_s___g1_orig_size_get(long jarg1, __pthread_cond_s jarg1_);
  public final static native void __pthread_cond_s___wrefs_set(long jarg1, __pthread_cond_s jarg1_, long jarg2);
  public final static native long __pthread_cond_s___wrefs_get(long jarg1, __pthread_cond_s jarg1_);
  public final static native void __pthread_cond_s___g_signals_set(long jarg1, __pthread_cond_s jarg1_, long jarg2);
  public final static native long __pthread_cond_s___g_signals_get(long jarg1, __pthread_cond_s jarg1_);
  public final static native long new___pthread_cond_s();
  public final static native void delete___pthread_cond_s(long jarg1);
  public final static native void __once_flag___data_set(long jarg1, __once_flag jarg1_, int jarg2);
  public final static native int __once_flag___data_get(long jarg1, __once_flag jarg1_);
  public final static native long new___once_flag();
  public final static native void delete___once_flag(long jarg1);
  public final static native void pthread_mutexattr_t___size_set(long jarg1, pthread_mutexattr_t jarg1_, String jarg2);
  public final static native String pthread_mutexattr_t___size_get(long jarg1, pthread_mutexattr_t jarg1_);
  public final static native void pthread_mutexattr_t___align_set(long jarg1, pthread_mutexattr_t jarg1_, int jarg2);
  public final static native int pthread_mutexattr_t___align_get(long jarg1, pthread_mutexattr_t jarg1_);
  public final static native long new_pthread_mutexattr_t();
  public final static native void delete_pthread_mutexattr_t(long jarg1);
  public final static native void pthread_condattr_t___size_set(long jarg1, pthread_condattr_t jarg1_, String jarg2);
  public final static native String pthread_condattr_t___size_get(long jarg1, pthread_condattr_t jarg1_);
  public final static native void pthread_condattr_t___align_set(long jarg1, pthread_condattr_t jarg1_, int jarg2);
  public final static native int pthread_condattr_t___align_get(long jarg1, pthread_condattr_t jarg1_);
  public final static native long new_pthread_condattr_t();
  public final static native void delete_pthread_condattr_t(long jarg1);
  public final static native void pthread_attr_t___size_set(long jarg1, pthread_attr_t jarg1_, String jarg2);
  public final static native String pthread_attr_t___size_get(long jarg1, pthread_attr_t jarg1_);
  public final static native void pthread_attr_t___align_set(long jarg1, pthread_attr_t jarg1_, int jarg2);
  public final static native int pthread_attr_t___align_get(long jarg1, pthread_attr_t jarg1_);
  public final static native long new_pthread_attr_t();
  public final static native void delete_pthread_attr_t(long jarg1);
  public final static native int __have_pthread_attr_t_get();
  public final static native void pthread_mutex_t___data_set(long jarg1, pthread_mutex_t jarg1_, long jarg2, __pthread_mutex_s jarg2_);
  public final static native long pthread_mutex_t___data_get(long jarg1, pthread_mutex_t jarg1_);
  public final static native void pthread_mutex_t___size_set(long jarg1, pthread_mutex_t jarg1_, String jarg2);
  public final static native String pthread_mutex_t___size_get(long jarg1, pthread_mutex_t jarg1_);
  public final static native void pthread_mutex_t___align_set(long jarg1, pthread_mutex_t jarg1_, int jarg2);
  public final static native int pthread_mutex_t___align_get(long jarg1, pthread_mutex_t jarg1_);
  public final static native long new_pthread_mutex_t();
  public final static native void delete_pthread_mutex_t(long jarg1);
  public final static native void pthread_cond_t___data_set(long jarg1, pthread_cond_t jarg1_, long jarg2, __pthread_cond_s jarg2_);
  public final static native long pthread_cond_t___data_get(long jarg1, pthread_cond_t jarg1_);
  public final static native void pthread_cond_t___size_set(long jarg1, pthread_cond_t jarg1_, String jarg2);
  public final static native String pthread_cond_t___size_get(long jarg1, pthread_cond_t jarg1_);
  public final static native void pthread_cond_t___align_set(long jarg1, pthread_cond_t jarg1_, long jarg2);
  public final static native long pthread_cond_t___align_get(long jarg1, pthread_cond_t jarg1_);
  public final static native long new_pthread_cond_t();
  public final static native void delete_pthread_cond_t(long jarg1);
  public final static native void pthread_rwlock_t___data_set(long jarg1, pthread_rwlock_t jarg1_, long jarg2, __pthread_rwlock_arch_t jarg2_);
  public final static native long pthread_rwlock_t___data_get(long jarg1, pthread_rwlock_t jarg1_);
  public final static native void pthread_rwlock_t___size_set(long jarg1, pthread_rwlock_t jarg1_, String jarg2);
  public final static native String pthread_rwlock_t___size_get(long jarg1, pthread_rwlock_t jarg1_);
  public final static native void pthread_rwlock_t___align_set(long jarg1, pthread_rwlock_t jarg1_, int jarg2);
  public final static native int pthread_rwlock_t___align_get(long jarg1, pthread_rwlock_t jarg1_);
  public final static native long new_pthread_rwlock_t();
  public final static native void delete_pthread_rwlock_t(long jarg1);
  public final static native void pthread_rwlockattr_t___size_set(long jarg1, pthread_rwlockattr_t jarg1_, String jarg2);
  public final static native String pthread_rwlockattr_t___size_get(long jarg1, pthread_rwlockattr_t jarg1_);
  public final static native void pthread_rwlockattr_t___align_set(long jarg1, pthread_rwlockattr_t jarg1_, int jarg2);
  public final static native int pthread_rwlockattr_t___align_get(long jarg1, pthread_rwlockattr_t jarg1_);
  public final static native long new_pthread_rwlockattr_t();
  public final static native void delete_pthread_rwlockattr_t(long jarg1);
  public final static native void pthread_barrier_t___size_set(long jarg1, pthread_barrier_t jarg1_, String jarg2);
  public final static native String pthread_barrier_t___size_get(long jarg1, pthread_barrier_t jarg1_);
  public final static native void pthread_barrier_t___align_set(long jarg1, pthread_barrier_t jarg1_, int jarg2);
  public final static native int pthread_barrier_t___align_get(long jarg1, pthread_barrier_t jarg1_);
  public final static native long new_pthread_barrier_t();
  public final static native void delete_pthread_barrier_t(long jarg1);
  public final static native void pthread_barrierattr_t___size_set(long jarg1, pthread_barrierattr_t jarg1_, String jarg2);
  public final static native String pthread_barrierattr_t___size_get(long jarg1, pthread_barrierattr_t jarg1_);
  public final static native void pthread_barrierattr_t___align_set(long jarg1, pthread_barrierattr_t jarg1_, int jarg2);
  public final static native int pthread_barrierattr_t___align_get(long jarg1, pthread_barrierattr_t jarg1_);
  public final static native long new_pthread_barrierattr_t();
  public final static native void delete_pthread_barrierattr_t(long jarg1);
  public final static native int __BITS_PER_LONG_get();
  public final static native void __kernel_fd_set_fds_bits_set(long jarg1, __kernel_fd_set jarg1_, long jarg2);
  public final static native long __kernel_fd_set_fds_bits_get(long jarg1, __kernel_fd_set jarg1_);
  public final static native long new___kernel_fd_set();
  public final static native void delete___kernel_fd_set(long jarg1);
  public final static native void __kernel_fsid_t_val_set(long jarg1, __kernel_fsid_t jarg1_, long jarg2);
  public final static native long __kernel_fsid_t_val_get(long jarg1, __kernel_fsid_t jarg1_);
  public final static native long new___kernel_fsid_t();
  public final static native void delete___kernel_fsid_t(long jarg1);
  public final static native void __kernel_timespec_tv_sec_set(long jarg1, __kernel_timespec jarg1_, long jarg2);
  public final static native long __kernel_timespec_tv_sec_get(long jarg1, __kernel_timespec jarg1_);
  public final static native void __kernel_timespec_tv_nsec_set(long jarg1, __kernel_timespec jarg1_, long jarg2);
  public final static native long __kernel_timespec_tv_nsec_get(long jarg1, __kernel_timespec jarg1_);
  public final static native long new___kernel_timespec();
  public final static native void delete___kernel_timespec(long jarg1);
  public final static native void __kernel_itimerspec_it_interval_set(long jarg1, __kernel_itimerspec jarg1_, long jarg2, __kernel_timespec jarg2_);
  public final static native long __kernel_itimerspec_it_interval_get(long jarg1, __kernel_itimerspec jarg1_);
  public final static native void __kernel_itimerspec_it_value_set(long jarg1, __kernel_itimerspec jarg1_, long jarg2, __kernel_timespec jarg2_);
  public final static native long __kernel_itimerspec_it_value_get(long jarg1, __kernel_itimerspec jarg1_);
  public final static native long new___kernel_itimerspec();
  public final static native void delete___kernel_itimerspec(long jarg1);
  public final static native void __kernel_old_timeval_tv_sec_set(long jarg1, __kernel_old_timeval jarg1_, int jarg2);
  public final static native int __kernel_old_timeval_tv_sec_get(long jarg1, __kernel_old_timeval jarg1_);
  public final static native void __kernel_old_timeval_tv_usec_set(long jarg1, __kernel_old_timeval jarg1_, int jarg2);
  public final static native int __kernel_old_timeval_tv_usec_get(long jarg1, __kernel_old_timeval jarg1_);
  public final static native long new___kernel_old_timeval();
  public final static native void delete___kernel_old_timeval(long jarg1);
  public final static native void __kernel_old_timespec_tv_sec_set(long jarg1, __kernel_old_timespec jarg1_, int jarg2);
  public final static native int __kernel_old_timespec_tv_sec_get(long jarg1, __kernel_old_timespec jarg1_);
  public final static native void __kernel_old_timespec_tv_nsec_set(long jarg1, __kernel_old_timespec jarg1_, int jarg2);
  public final static native int __kernel_old_timespec_tv_nsec_get(long jarg1, __kernel_old_timespec jarg1_);
  public final static native long new___kernel_old_timespec();
  public final static native void delete___kernel_old_timespec(long jarg1);
  public final static native void __kernel_old_itimerval_it_interval_set(long jarg1, __kernel_old_itimerval jarg1_, long jarg2, __kernel_old_timeval jarg2_);
  public final static native long __kernel_old_itimerval_it_interval_get(long jarg1, __kernel_old_itimerval jarg1_);
  public final static native void __kernel_old_itimerval_it_value_set(long jarg1, __kernel_old_itimerval jarg1_, long jarg2, __kernel_old_timeval jarg2_);
  public final static native long __kernel_old_itimerval_it_value_get(long jarg1, __kernel_old_itimerval jarg1_);
  public final static native long new___kernel_old_itimerval();
  public final static native void delete___kernel_old_itimerval(long jarg1);
  public final static native void __kernel_sock_timeval_tv_sec_set(long jarg1, __kernel_sock_timeval jarg1_, long jarg2);
  public final static native long __kernel_sock_timeval_tv_sec_get(long jarg1, __kernel_sock_timeval jarg1_);
  public final static native void __kernel_sock_timeval_tv_usec_set(long jarg1, __kernel_sock_timeval jarg1_, long jarg2);
  public final static native long __kernel_sock_timeval_tv_usec_get(long jarg1, __kernel_sock_timeval jarg1_);
  public final static native long new___kernel_sock_timeval();
  public final static native void delete___kernel_sock_timeval(long jarg1);
  public final static native void itimerspec_it_interval_set(long jarg1, itimerspec jarg1_, long jarg2, timespec jarg2_);
  public final static native long itimerspec_it_interval_get(long jarg1, itimerspec jarg1_);
  public final static native void itimerspec_it_value_set(long jarg1, itimerspec jarg1_, long jarg2, timespec jarg2_);
  public final static native long itimerspec_it_value_get(long jarg1, itimerspec jarg1_);
  public final static native long new_itimerspec();
  public final static native void delete_itimerspec(long jarg1);
  public final static native void itimerval_it_interval_set(long jarg1, itimerval jarg1_, long jarg2, timeval jarg2_);
  public final static native long itimerval_it_interval_get(long jarg1, itimerval jarg1_);
  public final static native void itimerval_it_value_set(long jarg1, itimerval jarg1_, long jarg2, timeval jarg2_);
  public final static native long itimerval_it_value_get(long jarg1, itimerval jarg1_);
  public final static native long new_itimerval();
  public final static native void delete_itimerval(long jarg1);
  public final static native void timezone_tz_minuteswest_set(long jarg1, timezone jarg1_, int jarg2);
  public final static native int timezone_tz_minuteswest_get(long jarg1, timezone jarg1_);
  public final static native void timezone_tz_dsttime_set(long jarg1, timezone jarg1_, int jarg2);
  public final static native int timezone_tz_dsttime_get(long jarg1, timezone jarg1_);
  public final static native long new_timezone();
  public final static native void delete_timezone(long jarg1);
  public final static native int ITIMER_REAL_get();
  public final static native int ITIMER_VIRTUAL_get();
  public final static native int ITIMER_PROF_get();
  public final static native int CLOCK_REALTIME_get();
  public final static native int CLOCK_MONOTONIC_get();
  public final static native int CLOCK_PROCESS_CPUTIME_ID_get();
  public final static native int CLOCK_THREAD_CPUTIME_ID_get();
  public final static native int CLOCK_MONOTONIC_RAW_get();
  public final static native int CLOCK_REALTIME_COARSE_get();
  public final static native int CLOCK_MONOTONIC_COARSE_get();
  public final static native int CLOCK_BOOTTIME_get();
  public final static native int CLOCK_REALTIME_ALARM_get();
  public final static native int CLOCK_BOOTTIME_ALARM_get();
  public final static native int CLOCK_SGI_CYCLE_get();
  public final static native int CLOCK_TAI_get();
  public final static native int MAX_CLOCKS_get();
  public final static native int CLOCKS_MASK_get();
  public final static native int CLOCKS_MONO_get();
  public final static native int TIMER_ABSTIME_get();
  public final static native int NSIG_get();
  public final static native int SIGHUP_get();
  public final static native int SIGINT_get();
  public final static native int SIGQUIT_get();
  public final static native int SIGILL_get();
  public final static native int SIGTRAP_get();
  public final static native int SIGABRT_get();
  public final static native int SIGIOT_get();
  public final static native int SIGBUS_get();
  public final static native int SIGFPE_get();
  public final static native int SIGKILL_get();
  public final static native int SIGUSR1_get();
  public final static native int SIGSEGV_get();
  public final static native int SIGUSR2_get();
  public final static native int SIGPIPE_get();
  public final static native int SIGALRM_get();
  public final static native int SIGTERM_get();
  public final static native int SIGSTKFLT_get();
  public final static native int SIGCHLD_get();
  public final static native int SIGCONT_get();
  public final static native int SIGSTOP_get();
  public final static native int SIGTSTP_get();
  public final static native int SIGTTIN_get();
  public final static native int SIGTTOU_get();
  public final static native int SIGURG_get();
  public final static native int SIGXCPU_get();
  public final static native int SIGXFSZ_get();
  public final static native int SIGVTALRM_get();
  public final static native int SIGPROF_get();
  public final static native int SIGWINCH_get();
  public final static native int SIGIO_get();
  public final static native int SIGPOLL_get();
  public final static native int SIGPWR_get();
  public final static native int SIGSYS_get();
  public final static native int SIGUNUSED_get();
  public final static native int SIGRTMIN_get();
  public final static native long SA_NOCLDSTOP_get();
  public final static native long SA_NOCLDWAIT_get();
  public final static native long SA_SIGINFO_get();
  public final static native long SA_ONSTACK_get();
  public final static native long SA_RESTART_get();
  public final static native long SA_NODEFER_get();
  public final static native long SA_RESETHAND_get();
  public final static native long SA_NOMASK_get();
  public final static native long SA_ONESHOT_get();
  public final static native int SA_RESTORER_get();
  public final static native int MINSIGSTKSZ_get();
  public final static native int SIGSTKSZ_get();
  public final static native int SIG_BLOCK_get();
  public final static native int SIG_UNBLOCK_get();
  public final static native int SIG_SETMASK_get();
  public final static native void sigaction_sa_handler_set(long jarg1, sigaction jarg1_, long jarg2);
  public final static native long sigaction_sa_handler_get(long jarg1, sigaction jarg1_);
  public final static native void sigaction_sa_flags_set(long jarg1, sigaction jarg1_, long jarg2);
  public final static native long sigaction_sa_flags_get(long jarg1, sigaction jarg1_);
  public final static native void sigaction_sa_restorer_set(long jarg1, sigaction jarg1_, long jarg2);
  public final static native long sigaction_sa_restorer_get(long jarg1, sigaction jarg1_);
  public final static native void sigaction_sa_mask_set(long jarg1, sigaction jarg1_, long jarg2, __sigset_t jarg2_);
  public final static native long sigaction_sa_mask_get(long jarg1, sigaction jarg1_);
  public final static native long new_sigaction();
  public final static native void delete_sigaction(long jarg1);
  public final static native void stack_t_ss_sp_set(long jarg1, stack_t jarg1_, long jarg2);
  public final static native long stack_t_ss_sp_get(long jarg1, stack_t jarg1_);
  public final static native void stack_t_ss_flags_set(long jarg1, stack_t jarg1_, int jarg2);
  public final static native int stack_t_ss_flags_get(long jarg1, stack_t jarg1_);
  public final static native void stack_t_ss_size_set(long jarg1, stack_t jarg1_, long jarg2);
  public final static native long stack_t_ss_size_get(long jarg1, stack_t jarg1_);
  public final static native long new_stack_t();
  public final static native void delete_stack_t(long jarg1);
  public final static native void sigval_t_sival_int_set(long jarg1, sigval_t jarg1_, int jarg2);
  public final static native int sigval_t_sival_int_get(long jarg1, sigval_t jarg1_);
  public final static native void sigval_t_sival_ptr_set(long jarg1, sigval_t jarg1_, long jarg2);
  public final static native long sigval_t_sival_ptr_get(long jarg1, sigval_t jarg1_);
  public final static native long new_sigval_t();
  public final static native void delete_sigval_t(long jarg1);
  public final static native int SI_MAX_SIZE_get();
  public final static native long new___sifields();
  public final static native void delete___sifields(long jarg1);
  public final static native void siginfo_t_si_signo_set(long jarg1, siginfo_t jarg1_, int jarg2);
  public final static native int siginfo_t_si_signo_get(long jarg1, siginfo_t jarg1_);
  public final static native void siginfo_t_si_errno_set(long jarg1, siginfo_t jarg1_, int jarg2);
  public final static native int siginfo_t_si_errno_get(long jarg1, siginfo_t jarg1_);
  public final static native void siginfo_t_si_code_set(long jarg1, siginfo_t jarg1_, int jarg2);
  public final static native int siginfo_t_si_code_get(long jarg1, siginfo_t jarg1_);
  public final static native void siginfo_t__sifields_set(long jarg1, siginfo_t jarg1_, long jarg2, __sifields jarg2_);
  public final static native long siginfo_t__sifields_get(long jarg1, siginfo_t jarg1_);
  public final static native void siginfo_t__si_pad_set(long jarg1, siginfo_t jarg1_, long jarg2);
  public final static native long siginfo_t__si_pad_get(long jarg1, siginfo_t jarg1_);
  public final static native long new_siginfo_t();
  public final static native void delete_siginfo_t(long jarg1);
  public final static native int SI_USER_get();
  public final static native int SI_KERNEL_get();
  public final static native int SI_QUEUE_get();
  public final static native int SI_TIMER_get();
  public final static native int SI_MESGQ_get();
  public final static native int SI_ASYNCIO_get();
  public final static native int SI_SIGIO_get();
  public final static native int SI_TKILL_get();
  public final static native int SI_DETHREAD_get();
  public final static native int SI_ASYNCNL_get();
  public final static native int ILL_ILLOPC_get();
  public final static native int ILL_ILLOPN_get();
  public final static native int ILL_ILLADR_get();
  public final static native int ILL_ILLTRP_get();
  public final static native int ILL_PRVOPC_get();
  public final static native int ILL_PRVREG_get();
  public final static native int ILL_COPROC_get();
  public final static native int ILL_BADSTK_get();
  public final static native int ILL_BADIADDR_get();
  public final static native int __ILL_BREAK_get();
  public final static native int __ILL_BNDMOD_get();
  public final static native int NSIGILL_get();
  public final static native int FPE_INTDIV_get();
  public final static native int FPE_INTOVF_get();
  public final static native int FPE_FLTDIV_get();
  public final static native int FPE_FLTOVF_get();
  public final static native int FPE_FLTUND_get();
  public final static native int FPE_FLTRES_get();
  public final static native int FPE_FLTINV_get();
  public final static native int FPE_FLTSUB_get();
  public final static native int __FPE_DECOVF_get();
  public final static native int __FPE_DECDIV_get();
  public final static native int __FPE_DECERR_get();
  public final static native int __FPE_INVASC_get();
  public final static native int __FPE_INVDEC_get();
  public final static native int FPE_FLTUNK_get();
  public final static native int FPE_CONDTRAP_get();
  public final static native int NSIGFPE_get();
  public final static native int SEGV_MAPERR_get();
  public final static native int SEGV_ACCERR_get();
  public final static native int SEGV_BNDERR_get();
  public final static native int SEGV_PKUERR_get();
  public final static native int SEGV_ACCADI_get();
  public final static native int SEGV_ADIDERR_get();
  public final static native int SEGV_ADIPERR_get();
  public final static native int NSIGSEGV_get();
  public final static native int BUS_ADRALN_get();
  public final static native int BUS_ADRERR_get();
  public final static native int BUS_OBJERR_get();
  public final static native int BUS_MCEERR_AR_get();
  public final static native int BUS_MCEERR_AO_get();
  public final static native int NSIGBUS_get();
  public final static native int TRAP_BRKPT_get();
  public final static native int TRAP_TRACE_get();
  public final static native int TRAP_BRANCH_get();
  public final static native int TRAP_HWBKPT_get();
  public final static native int TRAP_UNK_get();
  public final static native int NSIGTRAP_get();
  public final static native int CLD_EXITED_get();
  public final static native int CLD_KILLED_get();
  public final static native int CLD_DUMPED_get();
  public final static native int CLD_TRAPPED_get();
  public final static native int CLD_STOPPED_get();
  public final static native int CLD_CONTINUED_get();
  public final static native int NSIGCHLD_get();
  public final static native int POLL_IN_get();
  public final static native int POLL_OUT_get();
  public final static native int POLL_MSG_get();
  public final static native int POLL_ERR_get();
  public final static native int POLL_PRI_get();
  public final static native int POLL_HUP_get();
  public final static native int NSIGPOLL_get();
  public final static native int SYS_SECCOMP_get();
  public final static native int NSIGSYS_get();
  public final static native int EMT_TAGOVF_get();
  public final static native int NSIGEMT_get();
  public final static native int SIGEV_SIGNAL_get();
  public final static native int SIGEV_NONE_get();
  public final static native int SIGEV_THREAD_get();
  public final static native int SIGEV_THREAD_ID_get();
  public final static native int SIGEV_MAX_SIZE_get();
  public final static native void sigevent_t_sigev_value_set(long jarg1, sigevent_t jarg1_, long jarg2, sigval_t jarg2_);
  public final static native long sigevent_t_sigev_value_get(long jarg1, sigevent_t jarg1_);
  public final static native void sigevent_t_sigev_signo_set(long jarg1, sigevent_t jarg1_, int jarg2);
  public final static native int sigevent_t_sigev_signo_get(long jarg1, sigevent_t jarg1_);
  public final static native void sigevent_t_sigev_notify_set(long jarg1, sigevent_t jarg1_, int jarg2);
  public final static native int sigevent_t_sigev_notify_get(long jarg1, sigevent_t jarg1_);
  public final static native long new_sigevent_t();
  public final static native void delete_sigevent_t(long jarg1);
  public final static native int SS_ONSTACK_get();
  public final static native int SS_DISABLE_get();
  public final static native long SS_AUTODISARM_get();
  public final static native long SS_FLAG_BITS_get();
  public final static native int HZ_get();
  public final static native int EXEC_PAGESIZE_get();
  public final static native int NOGROUP_get();
  public final static native int MAXHOSTNAMELEN_get();
  public final static native int MAXSYMLINKS_get();
  public final static native int NOFILE_get();
  public final static native int NCARGS_get();
  public final static native int NGROUPS_get();
  public final static native int CANBSIZ_get();
  public final static native int MAXPATHLEN_get();
  public final static native int DEV_BSIZE_get();
  public final static native int _STDLIB_H_get();
  public final static native int WNOHANG_get();
  public final static native int WUNTRACED_get();
  public final static native int WSTOPPED_get();
  public final static native int WEXITED_get();
  public final static native int WCONTINUED_get();
  public final static native int WNOWAIT_get();
  public final static native int __WNOTHREAD_get();
  public final static native int __WALL_get();
  public final static native int __WCLONE_get();
  public final static native int __ENUM_IDTYPE_T_get();
  public final static native int __W_CONTINUED_get();
  public final static native int __WCOREFLAG_get();
  public final static native void div_t_quot_set(long jarg1, div_t jarg1_, int jarg2);
  public final static native int div_t_quot_get(long jarg1, div_t jarg1_);
  public final static native void div_t_rem_set(long jarg1, div_t jarg1_, int jarg2);
  public final static native int div_t_rem_get(long jarg1, div_t jarg1_);
  public final static native long new_div_t();
  public final static native void delete_div_t(long jarg1);
  public final static native void ldiv_t_quot_set(long jarg1, ldiv_t jarg1_, int jarg2);
  public final static native int ldiv_t_quot_get(long jarg1, ldiv_t jarg1_);
  public final static native void ldiv_t_rem_set(long jarg1, ldiv_t jarg1_, int jarg2);
  public final static native int ldiv_t_rem_get(long jarg1, ldiv_t jarg1_);
  public final static native long new_ldiv_t();
  public final static native void delete_ldiv_t(long jarg1);
  public final static native int __ldiv_t_defined_get();
  public final static native void lldiv_t_quot_set(long jarg1, lldiv_t jarg1_, long jarg2);
  public final static native long lldiv_t_quot_get(long jarg1, lldiv_t jarg1_);
  public final static native void lldiv_t_rem_set(long jarg1, lldiv_t jarg1_, long jarg2);
  public final static native long lldiv_t_rem_get(long jarg1, lldiv_t jarg1_);
  public final static native long new_lldiv_t();
  public final static native void delete_lldiv_t(long jarg1);
  public final static native int __lldiv_t_defined_get();
  public final static native int RAND_MAX_get();
  public final static native int EXIT_FAILURE_get();
  public final static native int EXIT_SUCCESS_get();
  public final static native long __ctype_get_mb_cur_max();
  public final static native double atof(String jarg1);
  public final static native int atoi(String jarg1);
  public final static native int atol(String jarg1);
  public final static native long atoll(String jarg1);
  public final static native double strtod(String jarg1, long jarg2);
  public final static native float strtof(String jarg1, long jarg2);
  public final static native long strtold(String jarg1, long jarg2);
  public final static native int strtol(String jarg1, long jarg2, int jarg3);
  public final static native long strtoul(String jarg1, long jarg2, int jarg3);
  public final static native long strtoq(String jarg1, long jarg2, int jarg3);
  public final static native java.math.BigInteger strtouq(String jarg1, long jarg2, int jarg3);
  public final static native long strtoll(String jarg1, long jarg2, int jarg3);
  public final static native java.math.BigInteger strtoull(String jarg1, long jarg2, int jarg3);
  public final static native String l64a(int jarg1);
  public final static native int a64l(String jarg1);
  public final static native int random();
  public final static native void srandom(long jarg1);
  public final static native String initstate(long jarg1, String jarg2, long jarg3);
  public final static native String setstate(String jarg1);
  public final static native void random_data_fptr_set(long jarg1, random_data jarg1_, long jarg2);
  public final static native long random_data_fptr_get(long jarg1, random_data jarg1_);
  public final static native void random_data_rptr_set(long jarg1, random_data jarg1_, long jarg2);
  public final static native long random_data_rptr_get(long jarg1, random_data jarg1_);
  public final static native void random_data_state_set(long jarg1, random_data jarg1_, long jarg2);
  public final static native long random_data_state_get(long jarg1, random_data jarg1_);
  public final static native void random_data_rand_type_set(long jarg1, random_data jarg1_, int jarg2);
  public final static native int random_data_rand_type_get(long jarg1, random_data jarg1_);
  public final static native void random_data_rand_deg_set(long jarg1, random_data jarg1_, int jarg2);
  public final static native int random_data_rand_deg_get(long jarg1, random_data jarg1_);
  public final static native void random_data_rand_sep_set(long jarg1, random_data jarg1_, int jarg2);
  public final static native int random_data_rand_sep_get(long jarg1, random_data jarg1_);
  public final static native void random_data_end_ptr_set(long jarg1, random_data jarg1_, long jarg2);
  public final static native long random_data_end_ptr_get(long jarg1, random_data jarg1_);
  public final static native long new_random_data();
  public final static native void delete_random_data(long jarg1);
  public final static native int random_r(long jarg1, random_data jarg1_, long jarg2);
  public final static native int srandom_r(long jarg1, long jarg2, random_data jarg2_);
  public final static native int initstate_r(long jarg1, String jarg2, long jarg3, long jarg4, random_data jarg4_);
  public final static native int setstate_r(String jarg1, long jarg2, random_data jarg2_);
  public final static native int rand();
  public final static native void srand(long jarg1);
  public final static native int rand_r(long jarg1);
  public final static native double drand48();
  public final static native double erand48(long jarg1);
  public final static native int lrand48();
  public final static native int nrand48(long jarg1);
  public final static native int mrand48();
  public final static native int jrand48(long jarg1);
  public final static native void srand48(int jarg1);
  public final static native long seed48(long jarg1);
  public final static native void lcong48(long jarg1);
  public final static native void drand48_data___x_set(long jarg1, drand48_data jarg1_, long jarg2);
  public final static native long drand48_data___x_get(long jarg1, drand48_data jarg1_);
  public final static native void drand48_data___old_x_set(long jarg1, drand48_data jarg1_, long jarg2);
  public final static native long drand48_data___old_x_get(long jarg1, drand48_data jarg1_);
  public final static native void drand48_data___c_set(long jarg1, drand48_data jarg1_, int jarg2);
  public final static native int drand48_data___c_get(long jarg1, drand48_data jarg1_);
  public final static native void drand48_data___init_set(long jarg1, drand48_data jarg1_, int jarg2);
  public final static native int drand48_data___init_get(long jarg1, drand48_data jarg1_);
  public final static native void drand48_data___a_set(long jarg1, drand48_data jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger drand48_data___a_get(long jarg1, drand48_data jarg1_);
  public final static native long new_drand48_data();
  public final static native void delete_drand48_data(long jarg1);
  public final static native int drand48_r(long jarg1, drand48_data jarg1_, long jarg2);
  public final static native int erand48_r(long jarg1, long jarg2, drand48_data jarg2_, long jarg3);
  public final static native int lrand48_r(long jarg1, drand48_data jarg1_, long jarg2);
  public final static native int nrand48_r(long jarg1, long jarg2, drand48_data jarg2_, long jarg3);
  public final static native int mrand48_r(long jarg1, drand48_data jarg1_, long jarg2);
  public final static native int jrand48_r(long jarg1, long jarg2, drand48_data jarg2_, long jarg3);
  public final static native int srand48_r(int jarg1, long jarg2, drand48_data jarg2_);
  public final static native int seed48_r(long jarg1, long jarg2, drand48_data jarg2_);
  public final static native int lcong48_r(long jarg1, long jarg2, drand48_data jarg2_);
  public final static native long malloc(long jarg1);
  public final static native long calloc(long jarg1, long jarg2);
  public final static native long realloc(long jarg1, long jarg2);
  public final static native long reallocarray(long jarg1, long jarg2, long jarg3);
  public final static native void free(long jarg1);
  public final static native int _ALLOCA_H_get();
  public final static native long alloca(long jarg1);
  public final static native long valloc(long jarg1);
  public final static native int posix_memalign(long jarg1, long jarg2, long jarg3);
  public final static native void abort();
  public final static native int atexit(long jarg1);
  public final static native int on_exit(long jarg1, long jarg2);
  public final static native void exit(int jarg1);
  public final static native void _Exit(int jarg1);
  public final static native String getenv(String jarg1);
  public final static native int putenv(String jarg1);
  public final static native int setenv(String jarg1, String jarg2, int jarg3);
  public final static native int unsetenv(String jarg1);
  public final static native int clearenv();
  public final static native String mktemp(String jarg1);
  public final static native int mkstemp(String jarg1);
  public final static native int mkstemps(String jarg1, int jarg2);
  public final static native String mkdtemp(String jarg1);
  public final static native int system(String jarg1);
  public final static native String realpath(String jarg1, String jarg2);
  public final static native long bsearch(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void qsort(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int abs(int jarg1);
  public final static native int labs(int jarg1);
  public final static native long llabs(long jarg1);
  public final static native long div(int jarg1, int jarg2);
  public final static native long ldiv(int jarg1, int jarg2);
  public final static native long lldiv(long jarg1, long jarg2);
  public final static native String ecvt(double jarg1, int jarg2, long jarg3, long jarg4);
  public final static native String fcvt(double jarg1, int jarg2, long jarg3, long jarg4);
  public final static native String gcvt(double jarg1, int jarg2, String jarg3);
  public final static native String qecvt(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native String qfcvt(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native String qgcvt(long jarg1, int jarg2, String jarg3);
  public final static native int ecvt_r(double jarg1, int jarg2, long jarg3, long jarg4, String jarg5, long jarg6);
  public final static native int fcvt_r(double jarg1, int jarg2, long jarg3, long jarg4, String jarg5, long jarg6);
  public final static native int qecvt_r(long jarg1, int jarg2, long jarg3, long jarg4, String jarg5, long jarg6);
  public final static native int qfcvt_r(long jarg1, int jarg2, long jarg3, long jarg4, String jarg5, long jarg6);
  public final static native int mblen(String jarg1, long jarg2);
  public final static native int mbtowc(long jarg1, String jarg2, long jarg3);
  public final static native int wctomb(String jarg1, long jarg2);
  public final static native long mbstowcs(long jarg1, String jarg2, long jarg3);
  public final static native long wcstombs(String jarg1, long jarg2, long jarg3);
  public final static native int rpmatch(String jarg1);
  public final static native int getsubopt(long jarg1, long jarg2, long jarg3);
  public final static native int getloadavg(long jarg1, int jarg2);
  public final static native int FLINT_KNOW_STRONG_ORDER_get();
  public final static native int __BITS4_get();
  public final static native long rec_word_tab_get();
  public final static native int HAVE_BLAS_get();
  public final static native int HAVE_TLS_get();
  public final static native int HAVE_FENV_get();
  public final static native int HAVE_PTHREAD_get();
  public final static native int HAVE_GC_get();
  public final static native int HAVE_CPU_SET_T_get();
  public final static native int FLINT_REENTRANT_get();
  public final static native int WANT_ASSERT_get();
  public final static native int __FLINT_VERSION_get();
  public final static native int __FLINT_VERSION_MINOR_get();
  public final static native int __FLINT_VERSION_PATCHLEVEL_get();
  public final static native String FLINT_VERSION_get();
  public final static native int __FLINT_RELEASE_get();
  public final static native void flint_version_set(String jarg1);
  public final static native String flint_version_get();
  public final static native long flint_malloc(long jarg1);
  public final static native long flint_realloc(long jarg1, long jarg2);
  public final static native long flint_calloc(long jarg1, long jarg2);
  public final static native void flint_free(long jarg1);
  public final static native void flint_register_cleanup_function(long jarg1);
  public final static native void flint_cleanup();
  public final static native void flint_cleanup_master();
  public final static native void __flint_set_memory_functions(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void flint_abort();
  public final static native void flint_set_abort(long jarg1);
  public final static native String WORD_FMT_get();
  public final static native String WORD_WIDTH_FMT_get();
  public final static native int FLINT_BITS_get();
  public final static native int FLINT_D_BITS_get();
  public final static native int FLINT64_get();
  public final static native int flint_get_num_threads();
  public final static native void flint_set_num_threads(int jarg1);
  public final static native void _flint_set_num_workers(int jarg1);
  public final static native int flint_set_num_workers(int jarg1);
  public final static native void flint_reset_num_workers(int jarg1);
  public final static native int flint_set_thread_affinity(long jarg1, int jarg2);
  public final static native int flint_restore_thread_affinity();
  public final static native int flint_test_multiplier();
  public final static native void flint_rand_s_gmp_state_set(long jarg1, flint_rand_s jarg1_, long jarg2, __gmp_randstate_struct jarg2_);
  public final static native long flint_rand_s_gmp_state_get(long jarg1, flint_rand_s jarg1_);
  public final static native void flint_rand_s_gmp_init_set(long jarg1, flint_rand_s jarg1_, int jarg2);
  public final static native int flint_rand_s_gmp_init_get(long jarg1, flint_rand_s jarg1_);
  public final static native void flint_rand_s___randval_set(long jarg1, flint_rand_s jarg1_, long jarg2);
  public final static native long flint_rand_s___randval_get(long jarg1, flint_rand_s jarg1_);
  public final static native void flint_rand_s___randval2_set(long jarg1, flint_rand_s jarg1_, long jarg2);
  public final static native long flint_rand_s___randval2_get(long jarg1, flint_rand_s jarg1_);
  public final static native long new_flint_rand_s();
  public final static native void delete_flint_rand_s(long jarg1);
  public final static native void flint_randinit(long jarg1, flint_rand_s jarg1_);
  public final static native void flint_randseed(long jarg1, flint_rand_s jarg1_, long jarg2, long jarg3);
  public final static native void flint_get_randseed(long jarg1, long jarg2, long jarg3, flint_rand_s jarg3_);
  public final static native void _flint_rand_init_gmp(long jarg1, flint_rand_s jarg1_);
  public final static native void flint_randclear(long jarg1, flint_rand_s jarg1_);
  public final static native long flint_rand_alloc();
  public final static native void flint_rand_free(long jarg1, flint_rand_s jarg1_);
  public final static native long __flint_clz_tab_get();
  public final static native long FLINT_BIT_COUNT(long jarg1);
  public final static native void mpn_tdiv_q(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native int parse_fmt(long jarg1, String jarg2);
  public final static native int flint_printf(String jarg1);
  public final static native int flint_vprintf(String jarg1, long jarg2);
  public final static native int flint_fprintf(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native int flint_sprintf(String jarg1, String jarg2);
  public final static native int flint_scanf(String jarg1);
  public final static native int flint_fscanf(long jarg1, _IO_FILE jarg1_, String jarg2);
  public final static native int flint_sscanf(String jarg1, String jarg2);
  public final static native int flint_mul_sizes(int jarg1, int jarg2);
  public final static native void flint_throw(int jarg1, String jarg2);
  public final static native int _MATH_H_get();
  public final static native int _BITS_LIBM_SIMD_DECL_STUBS_H_get();
  public final static native double HUGE_VAL_get();
  public final static native double HUGE_VALF_get();
  public final static native double HUGE_VALL_get();
  public final static native double INFINITY_get();
  public final static native double NAN_get();
  public final static native int __GLIBC_FLT_EVAL_METHOD_get();
  public final static native int __FP_LOGB0_IS_MIN_get();
  public final static native int __FP_LOGBNAN_IS_MIN_get();
  public final static native int FP_ILOGB0_get();
  public final static native int FP_ILOGBNAN_get();
  public final static native int __MATH_DECLARING_DOUBLE_get();
  public final static native int __MATH_DECLARING_FLOATN_get();
  public final static native int __fpclassify(double jarg1);
  public final static native int __signbit(double jarg1);
  public final static native int __isinf(double jarg1);
  public final static native int __finite(double jarg1);
  public final static native int __isnan(double jarg1);
  public final static native int __iseqsig(double jarg1, double jarg2);
  public final static native int __issignaling(double jarg1);
  public final static native double acos(double jarg1);
  public final static native double __acos(double jarg1);
  public final static native double asin(double jarg1);
  public final static native double __asin(double jarg1);
  public final static native double atan(double jarg1);
  public final static native double __atan(double jarg1);
  public final static native double atan2(double jarg1, double jarg2);
  public final static native double __atan2(double jarg1, double jarg2);
  public final static native double cos(double jarg1);
  public final static native double __cos(double jarg1);
  public final static native double sin(double jarg1);
  public final static native double __sin(double jarg1);
  public final static native double tan(double jarg1);
  public final static native double __tan(double jarg1);
  public final static native double cosh(double jarg1);
  public final static native double __cosh(double jarg1);
  public final static native double sinh(double jarg1);
  public final static native double __sinh(double jarg1);
  public final static native double tanh(double jarg1);
  public final static native double __tanh(double jarg1);
  public final static native double acosh(double jarg1);
  public final static native double __acosh(double jarg1);
  public final static native double asinh(double jarg1);
  public final static native double __asinh(double jarg1);
  public final static native double atanh(double jarg1);
  public final static native double __atanh(double jarg1);
  public final static native double exp(double jarg1);
  public final static native double __exp(double jarg1);
  public final static native double frexp(double jarg1, long jarg2);
  public final static native double __frexp(double jarg1, long jarg2);
  public final static native double ldexp(double jarg1, int jarg2);
  public final static native double __ldexp(double jarg1, int jarg2);
  public final static native double log(double jarg1);
  public final static native double __log(double jarg1);
  public final static native double log10(double jarg1);
  public final static native double __log10(double jarg1);
  public final static native double modf(double jarg1, long jarg2);
  public final static native double __modf(double jarg1, long jarg2);
  public final static native double expm1(double jarg1);
  public final static native double __expm1(double jarg1);
  public final static native double log1p(double jarg1);
  public final static native double __log1p(double jarg1);
  public final static native double logb(double jarg1);
  public final static native double __logb(double jarg1);
  public final static native double exp2(double jarg1);
  public final static native double __exp2(double jarg1);
  public final static native double log2(double jarg1);
  public final static native double __log2(double jarg1);
  public final static native double pow(double jarg1, double jarg2);
  public final static native double __pow(double jarg1, double jarg2);
  public final static native double sqrt(double jarg1);
  public final static native double __sqrt(double jarg1);
  public final static native double hypot(double jarg1, double jarg2);
  public final static native double __hypot(double jarg1, double jarg2);
  public final static native double cbrt(double jarg1);
  public final static native double __cbrt(double jarg1);
  public final static native double ceil(double jarg1);
  public final static native double __ceil(double jarg1);
  public final static native double fabs(double jarg1);
  public final static native double __fabs(double jarg1);
  public final static native double floor(double jarg1);
  public final static native double __floor(double jarg1);
  public final static native double fmod(double jarg1, double jarg2);
  public final static native double __fmod(double jarg1, double jarg2);
  public final static native int isinf(double jarg1);
  public final static native int finite(double jarg1);
  public final static native double drem(double jarg1, double jarg2);
  public final static native double __drem(double jarg1, double jarg2);
  public final static native double significand(double jarg1);
  public final static native double __significand(double jarg1);
  public final static native double copysign(double jarg1, double jarg2);
  public final static native double __copysign(double jarg1, double jarg2);
  public final static native double nan(String jarg1);
  public final static native double __nan(String jarg1);
  public final static native int isnan(double jarg1);
  public final static native double j0(double jarg1);
  public final static native double __j0(double jarg1);
  public final static native double j1(double jarg1);
  public final static native double __j1(double jarg1);
  public final static native double jn(int jarg1, double jarg2);
  public final static native double __jn(int jarg1, double jarg2);
  public final static native double y0(double jarg1);
  public final static native double __y0(double jarg1);
  public final static native double y1(double jarg1);
  public final static native double __y1(double jarg1);
  public final static native double yn(int jarg1, double jarg2);
  public final static native double __yn(int jarg1, double jarg2);
  public final static native double erf(double jarg1);
  public final static native double __erf(double jarg1);
  public final static native double erfc(double jarg1);
  public final static native double __erfc(double jarg1);
  public final static native double lgamma(double jarg1);
  public final static native double __lgamma(double jarg1);
  public final static native double tgamma(double jarg1);
  public final static native double __tgamma(double jarg1);
  public final static native double gamma(double jarg1);
  public final static native double __gamma(double jarg1);
  public final static native double lgamma_r(double jarg1, long jarg2);
  public final static native double __lgamma_r(double jarg1, long jarg2);
  public final static native double rint(double jarg1);
  public final static native double __rint(double jarg1);
  public final static native double nextafter(double jarg1, double jarg2);
  public final static native double __nextafter(double jarg1, double jarg2);
  public final static native double nexttoward(double jarg1, long jarg2);
  public final static native double __nexttoward(double jarg1, long jarg2);
  public final static native double remainder(double jarg1, double jarg2);
  public final static native double __remainder(double jarg1, double jarg2);
  public final static native double scalbn(double jarg1, int jarg2);
  public final static native double __scalbn(double jarg1, int jarg2);
  public final static native int ilogb(double jarg1);
  public final static native int __ilogb(double jarg1);
  public final static native double scalbln(double jarg1, int jarg2);
  public final static native double __scalbln(double jarg1, int jarg2);
  public final static native double nearbyint(double jarg1);
  public final static native double __nearbyint(double jarg1);
  public final static native double round(double jarg1);
  public final static native double __round(double jarg1);
  public final static native double trunc(double jarg1);
  public final static native double __trunc(double jarg1);
  public final static native double remquo(double jarg1, double jarg2, long jarg3);
  public final static native double __remquo(double jarg1, double jarg2, long jarg3);
  public final static native int lrint(double jarg1);
  public final static native int __lrint(double jarg1);
  public final static native long llrint(double jarg1);
  public final static native long __llrint(double jarg1);
  public final static native int lround(double jarg1);
  public final static native int __lround(double jarg1);
  public final static native long llround(double jarg1);
  public final static native long __llround(double jarg1);
  public final static native double fdim(double jarg1, double jarg2);
  public final static native double __fdim(double jarg1, double jarg2);
  public final static native double fmax(double jarg1, double jarg2);
  public final static native double __fmax(double jarg1, double jarg2);
  public final static native double fmin(double jarg1, double jarg2);
  public final static native double __fmin(double jarg1, double jarg2);
  public final static native double fma(double jarg1, double jarg2, double jarg3);
  public final static native double __fma(double jarg1, double jarg2, double jarg3);
  public final static native double scalb(double jarg1, double jarg2);
  public final static native double __scalb(double jarg1, double jarg2);
  public final static native int __MATH_DECLARE_LDOUBLE_get();
  public final static native void signgam_set(int jarg1);
  public final static native int signgam_get();
  public final static native int MATH_ERRNO_get();
  public final static native int MATH_ERREXCEPT_get();
  public final static native int math_errhandling_get();
  public final static native double M_E_get();
  public final static native double M_LOG2E_get();
  public final static native double M_LOG10E_get();
  public final static native double M_LN2_get();
  public final static native double M_LN10_get();
  public final static native double M_PI_get();
  public final static native double M_PI_2_get();
  public final static native double M_PI_4_get();
  public final static native double M_1_PI_get();
  public final static native double M_2_PI_get();
  public final static native double M_2_SQRTPI_get();
  public final static native double M_SQRT2_get();
  public final static native double M_SQRT1_2_get();
  public final static native void n_pair_t_x_set(long jarg1, n_pair_t jarg1_, long jarg2);
  public final static native long n_pair_t_x_get(long jarg1, n_pair_t jarg1_);
  public final static native void n_pair_t_y_set(long jarg1, n_pair_t jarg1_, long jarg2);
  public final static native long n_pair_t_y_get(long jarg1, n_pair_t jarg1_);
  public final static native long new_n_pair_t();
  public final static native void delete_n_pair_t(long jarg1);
  public final static native int FLINT_MAX_FACTORS_IN_LIMB_get();
  public final static native void n_factor_t_num_set(long jarg1, n_factor_t jarg1_, int jarg2);
  public final static native int n_factor_t_num_get(long jarg1, n_factor_t jarg1_);
  public final static native void n_factor_t_exp_set(long jarg1, n_factor_t jarg1_, long jarg2);
  public final static native long n_factor_t_exp_get(long jarg1, n_factor_t jarg1_);
  public final static native void n_factor_t_p_set(long jarg1, n_factor_t jarg1_, long jarg2);
  public final static native long n_factor_t_p_get(long jarg1, n_factor_t jarg1_);
  public final static native long new_n_factor_t();
  public final static native void delete_n_factor_t(long jarg1);
  public final static native int FLINT_ODDPRIME_SMALL_CUTOFF_get();
  public final static native int FLINT_NUM_PRIMES_SMALL_get();
  public final static native int FLINT_PRIMES_SMALL_CUTOFF_get();
  public final static native int FLINT_PSEUDOSQUARES_CUTOFF_get();
  public final static native int FLINT_FACTOR_TRIAL_PRIMES_get();
  public final static native long FLINT_FACTOR_TRIAL_PRIMES_PRIME_get();
  public final static native long FLINT_FACTOR_TRIAL_CUTOFF_get();
  public final static native int FLINT_PRIMES_TAB_DEFAULT_CUTOFF_get();
  public final static native int FLINT_FACTOR_SQUFOF_ITERS_get();
  public final static native long FLINT_FACTOR_ONE_LINE_MAX_get();
  public final static native int FLINT_FACTOR_ONE_LINE_ITERS_get();
  public final static native int FLINT_PRIME_PI_ODD_LOOKUP_CUTOFF_get();
  public final static native int FLINT_SIEVE_SIZE_get();
  public final static native long UWORD_MAX_PRIME_get();
  public final static native void n_primes_struct_small_i_set(long jarg1, n_primes_struct jarg1_, int jarg2);
  public final static native int n_primes_struct_small_i_get(long jarg1, n_primes_struct jarg1_);
  public final static native void n_primes_struct_small_num_set(long jarg1, n_primes_struct jarg1_, int jarg2);
  public final static native int n_primes_struct_small_num_get(long jarg1, n_primes_struct jarg1_);
  public final static native void n_primes_struct_small_primes_set(long jarg1, n_primes_struct jarg1_, long jarg2);
  public final static native long n_primes_struct_small_primes_get(long jarg1, n_primes_struct jarg1_);
  public final static native void n_primes_struct_sieve_a_set(long jarg1, n_primes_struct jarg1_, long jarg2);
  public final static native long n_primes_struct_sieve_a_get(long jarg1, n_primes_struct jarg1_);
  public final static native void n_primes_struct_sieve_b_set(long jarg1, n_primes_struct jarg1_, long jarg2);
  public final static native long n_primes_struct_sieve_b_get(long jarg1, n_primes_struct jarg1_);
  public final static native void n_primes_struct_sieve_i_set(long jarg1, n_primes_struct jarg1_, int jarg2);
  public final static native int n_primes_struct_sieve_i_get(long jarg1, n_primes_struct jarg1_);
  public final static native void n_primes_struct_sieve_num_set(long jarg1, n_primes_struct jarg1_, int jarg2);
  public final static native int n_primes_struct_sieve_num_get(long jarg1, n_primes_struct jarg1_);
  public final static native void n_primes_struct_sieve_set(long jarg1, n_primes_struct jarg1_, String jarg2);
  public final static native String n_primes_struct_sieve_get(long jarg1, n_primes_struct jarg1_);
  public final static native long new_n_primes_struct();
  public final static native void delete_n_primes_struct(long jarg1);
  public final static native void n_primes_init(long jarg1, n_primes_struct jarg1_);
  public final static native void n_primes_clear(long jarg1, n_primes_struct jarg1_);
  public final static native void n_primes_extend_small(long jarg1, n_primes_struct jarg1_, long jarg2);
  public final static native void n_primes_sieve_range(long jarg1, n_primes_struct jarg1_, long jarg2, long jarg3);
  public final static native void n_primes_jump_after(long jarg1, n_primes_struct jarg1_, long jarg2);
  public final static native long n_primes_next(long jarg1, n_primes_struct jarg1_);
  public final static native long flint_primes_small_get();
  public final static native void _flint_primes_set(long jarg1);
  public final static native long _flint_primes_get();
  public final static native void _flint_prime_inverses_set(long jarg1);
  public final static native long _flint_prime_inverses_get();
  public final static native void _flint_primes_used_set(int jarg1);
  public final static native int _flint_primes_used_get();
  public final static native void n_compute_primes(long jarg1);
  public final static native void n_cleanup_primes();
  public final static native long n_primes_arr_readonly(long jarg1);
  public final static native long n_prime_inverses_arr_readonly(long jarg1);
  public final static native long n_randlimb(long jarg1, flint_rand_s jarg1_);
  public final static native long n_randint(long jarg1, flint_rand_s jarg1_, long jarg2);
  public final static native long n_urandint(long jarg1, flint_rand_s jarg1_, long jarg2);
  public final static native long n_randbits(long jarg1, flint_rand_s jarg1_, long jarg2);
  public final static native long n_randtest_bits(long jarg1, flint_rand_s jarg1_, int jarg2);
  public final static native long n_randtest(long jarg1, flint_rand_s jarg1_);
  public final static native long n_randtest_not_zero(long jarg1, flint_rand_s jarg1_);
  public final static native long n_randprime(long jarg1, flint_rand_s jarg1_, long jarg2, int jarg3);
  public final static native long n_randtest_prime(long jarg1, flint_rand_s jarg1_, int jarg2);
  public final static native long n_pow(long jarg1, long jarg2);
  public final static native long n_flog(long jarg1, long jarg2);
  public final static native long n_clog(long jarg1, long jarg2);
  public final static native double n_precompute_inverse(long jarg1);
  public final static native long n_preinvert_limb(long jarg1);
  public final static native long n_mod_precomp(long jarg1, long jarg2, double jarg3);
  public final static native long n_mod2_precomp(long jarg1, long jarg2, double jarg3);
  public final static native long n_divrem2_precomp(long jarg1, long jarg2, long jarg3, double jarg4);
  public final static native long n_divrem2_preinv(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long n_div2_preinv(long jarg1, long jarg2, long jarg3);
  public final static native long n_mod2_preinv(long jarg1, long jarg2, long jarg3);
  public final static native long n_ll_mod_preinv(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long n_lll_mod_preinv(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long n_mulmod_precomp(long jarg1, long jarg2, long jarg3, double jarg4);
  public final static native long n_mulmod2_preinv(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long n_mulmod2(long jarg1, long jarg2, long jarg3);
  public final static native long n_mulmod_preinv(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long n_powmod_ui_precomp(long jarg1, long jarg2, long jarg3, double jarg4);
  public final static native long n_powmod_precomp(long jarg1, int jarg2, long jarg3, double jarg4);
  public final static native long n_powmod(long jarg1, int jarg2, long jarg3);
  public final static native long n_powmod2_preinv(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native long n_powmod2_ui_preinv(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long n_powmod_ui_preinv(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long n_powmod2(long jarg1, int jarg2, long jarg3);
  public final static native long n_addmod(long jarg1, long jarg2, long jarg3);
  public final static native long n_submod(long jarg1, long jarg2, long jarg3);
  public final static native long n_negmod(long jarg1, long jarg2);
  public final static native long n_sqrtmod(long jarg1, long jarg2);
  public final static native int n_sqrtmod_2pow(long jarg1, long jarg2, int jarg3);
  public final static native int n_sqrtmod_primepow(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int n_sqrtmodn(long jarg1, long jarg2, long jarg3, n_factor_t jarg3_);
  public final static native long n_gcd(long jarg1, long jarg2);
  public final static native long n_xgcd(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long n_gcdinv(long jarg1, long jarg2, long jarg3);
  public final static native long n_invmod(long jarg1, long jarg2);
  public final static native long n_CRT(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long n_revbin(long jarg1, long jarg2);
  public final static native int n_jacobi(int jarg1, long jarg2);
  public final static native int n_jacobi_unsigned(long jarg1, long jarg2);
  public final static native long n_sqrt(long jarg1);
  public final static native long n_sqrtrem(long jarg1, long jarg2);
  public final static native int n_is_square(long jarg1);
  public final static native double n_cbrt_estimate(double jarg1);
  public final static native long n_cbrt(long jarg1);
  public final static native long n_cbrt_binary_search(long jarg1);
  public final static native long n_cbrt_newton_iteration(long jarg1);
  public final static native long n_cbrt_chebyshev_approx(long jarg1);
  public final static native long n_cbrtrem(long jarg1, long jarg2);
  public final static native int n_is_perfect_power235(long jarg1);
  public final static native int n_is_perfect_power(long jarg1, long jarg2);
  public final static native int n_is_oddprime_small(long jarg1);
  public final static native int n_is_oddprime_binary(long jarg1);
  public final static native int n_is_probabprime_fermat(long jarg1, long jarg2);
  public final static native int n_is_probabprime_fibonacci(long jarg1);
  public final static native int n_is_probabprime_lucas(long jarg1);
  public final static native int n_is_probabprime_BPSW(long jarg1);
  public final static native int n_is_strong_probabprime_precomp(long jarg1, double jarg2, long jarg3, long jarg4);
  public final static native int n_is_strong_probabprime2_preinv(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int n_is_probabprime(long jarg1);
  public final static native int n_is_prime_pseudosquare(long jarg1);
  public final static native int n_is_prime_pocklington(long jarg1, long jarg2);
  public final static native int n_is_prime(long jarg1);
  public final static native long n_nth_prime(long jarg1);
  public final static native void n_nth_prime_bounds(long jarg1, long jarg2, long jarg3);
  public final static native long n_prime_pi(long jarg1);
  public final static native void n_prime_pi_bounds(long jarg1, long jarg2, long jarg3);
  public final static native int n_remove(long jarg1, long jarg2);
  public final static native int n_remove2_precomp(long jarg1, long jarg2, double jarg3);
  public final static native void n_factor_init(long jarg1, n_factor_t jarg1_);
  public final static native void n_factor_insert(long jarg1, n_factor_t jarg1_, long jarg2, long jarg3);
  public final static native long n_factor_trial_range(long jarg1, n_factor_t jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long n_factor_trial_partial(long jarg1, n_factor_t jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long n_factor_trial(long jarg1, n_factor_t jarg1_, long jarg2, long jarg3);
  public final static native long n_factor_partial(long jarg1, n_factor_t jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native long n_factor_power235(long jarg1, long jarg2);
  public final static native long n_factor_one_line(long jarg1, long jarg2);
  public final static native long n_factor_lehman(long jarg1);
  public final static native long n_factor_SQUFOF(long jarg1, long jarg2);
  public final static native void n_factor(long jarg1, n_factor_t jarg1_, long jarg2, int jarg3);
  public final static native long n_factor_pp1(long jarg1, long jarg2, long jarg3);
  public final static native long n_factor_pp1_wrapper(long jarg1);
  public final static native void n_factor_pp1_table_insert(int jarg1, int jarg2, int jarg3);
  public final static native int n_factor_pollard_brent_single(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native int n_factor_pollard_brent(long jarg1, long jarg2, flint_rand_s jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native int n_is_squarefree(long jarg1);
  public final static native int n_moebius_mu(long jarg1);
  public final static native void n_moebius_mu_vec(long jarg1, long jarg2);
  public final static native long n_euler_phi(long jarg1);
  public final static native int n_sizeinbase(long jarg1, int jarg2);
  public final static native long n_nextprime(long jarg1, int jarg2);
  public final static native long n_factorial_mod2_preinv(long jarg1, long jarg2, long jarg3);
  public final static native long n_factorial_fast_mod2_preinv(long jarg1, long jarg2, long jarg3);
  public final static native long n_primitive_root_prime_prefactor(long jarg1, long jarg2, n_factor_t jarg2_);
  public final static native long n_primitive_root_prime(long jarg1);
  public final static native long n_discrete_log_bsgs(long jarg1, long jarg2, long jarg3);
  public final static native long n_root_estimate(double jarg1, int jarg2);
  public final static native long n_rootrem(long jarg1, long jarg2, long jarg3);
  public final static native long n_root(long jarg1, long jarg2);
  public final static native void n_ecm_s_x_set(long jarg1, n_ecm_s jarg1_, long jarg2);
  public final static native long n_ecm_s_x_get(long jarg1, n_ecm_s jarg1_);
  public final static native void n_ecm_s_z_set(long jarg1, n_ecm_s jarg1_, long jarg2);
  public final static native long n_ecm_s_z_get(long jarg1, n_ecm_s jarg1_);
  public final static native void n_ecm_s_a24_set(long jarg1, n_ecm_s jarg1_, long jarg2);
  public final static native long n_ecm_s_a24_get(long jarg1, n_ecm_s jarg1_);
  public final static native void n_ecm_s_ninv_set(long jarg1, n_ecm_s jarg1_, long jarg2);
  public final static native long n_ecm_s_ninv_get(long jarg1, n_ecm_s jarg1_);
  public final static native void n_ecm_s_normbits_set(long jarg1, n_ecm_s jarg1_, long jarg2);
  public final static native long n_ecm_s_normbits_get(long jarg1, n_ecm_s jarg1_);
  public final static native void n_ecm_s_one_set(long jarg1, n_ecm_s jarg1_, long jarg2);
  public final static native long n_ecm_s_one_get(long jarg1, n_ecm_s jarg1_);
  public final static native void n_ecm_s_GCD_table_set(long jarg1, n_ecm_s jarg1_, long jarg2);
  public final static native long n_ecm_s_GCD_table_get(long jarg1, n_ecm_s jarg1_);
  public final static native void n_ecm_s_prime_table_set(long jarg1, n_ecm_s jarg1_, long jarg2);
  public final static native long n_ecm_s_prime_table_get(long jarg1, n_ecm_s jarg1_);
  public final static native long new_n_ecm_s();
  public final static native void delete_n_ecm_s(long jarg1);
  public final static native void n_factor_ecm_double(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, n_ecm_s jarg6_);
  public final static native void n_factor_ecm_add(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, n_ecm_s jarg10_);
  public final static native void n_factor_ecm_mul_montgomery_ladder(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, n_ecm_s jarg7_);
  public final static native int n_factor_ecm_select_curve(long jarg1, long jarg2, long jarg3, long jarg4, n_ecm_s jarg4_);
  public final static native int n_factor_ecm_stage_I(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, n_ecm_s jarg6_);
  public final static native int n_factor_ecm_stage_II(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, n_ecm_s jarg6_);
  public final static native int n_factor_ecm(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, flint_rand_s jarg5_, long jarg6);
  public final static native long n_mulmod_precomp_shoup(long jarg1, long jarg2);
  public final static native long n_mulmod_shoup(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void nmod_t_n_set(long jarg1, nmod_t jarg1_, long jarg2);
  public final static native long nmod_t_n_get(long jarg1, nmod_t jarg1_);
  public final static native void nmod_t_ninv_set(long jarg1, nmod_t jarg1_, long jarg2);
  public final static native long nmod_t_ninv_get(long jarg1, nmod_t jarg1_);
  public final static native void nmod_t_norm_set(long jarg1, nmod_t jarg1_, long jarg2);
  public final static native long nmod_t_norm_get(long jarg1, nmod_t jarg1_);
  public final static native long new_nmod_t();
  public final static native void delete_nmod_t(long jarg1);
  public final static native long _nmod_add(long jarg1, long jarg2, long jarg3, nmod_t jarg3_);
  public final static native long _nmod_sub(long jarg1, long jarg2, long jarg3, nmod_t jarg3_);
  public final static native long nmod_add(long jarg1, long jarg2, long jarg3, nmod_t jarg3_);
  public final static native long nmod_sub(long jarg1, long jarg2, long jarg3, nmod_t jarg3_);
  public final static native long nmod_neg(long jarg1, long jarg2, nmod_t jarg2_);
  public final static native long nmod_mul(long jarg1, long jarg2, long jarg3, nmod_t jarg3_);
  public final static native long nmod_inv(long jarg1, long jarg2, nmod_t jarg2_);
  public final static native long nmod_div(long jarg1, long jarg2, long jarg3, nmod_t jarg3_);
  public final static native long nmod_pow_ui(long jarg1, long jarg2, long jarg3, nmod_t jarg3_);
  public final static native void nmod_init(long jarg1, nmod_t jarg1_, long jarg2);
  public final static native long _nmod_vec_init(int jarg1);
  public final static native void _nmod_vec_clear(long jarg1);
  public final static native void _nmod_vec_randtest(long jarg1, long jarg2, flint_rand_s jarg2_, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void _nmod_vec_zero(long jarg1, int jarg2);
  public final static native long _nmod_vec_max_bits(long jarg1, int jarg2);
  public final static native void _nmod_vec_set(long jarg1, long jarg2, int jarg3);
  public final static native void _nmod_vec_swap(long jarg1, long jarg2, int jarg3);
  public final static native int _nmod_vec_equal(long jarg1, long jarg2, int jarg3);
  public final static native int _nmod_vec_is_zero(long jarg1, int jarg2);
  public final static native void _nmod_vec_reduce(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void _nmod_vec_add(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void _nmod_vec_sub(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void _nmod_vec_neg(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void _nmod_vec_scalar_mul_nmod(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, nmod_t jarg5_);
  public final static native void _nmod_vec_scalar_mul_nmod_shoup(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, nmod_t jarg5_);
  public final static native void _nmod_vec_scalar_addmul_nmod(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, nmod_t jarg5_);
  public final static native int _nmod_vec_dot_bound_limbs(int jarg1, long jarg2, nmod_t jarg2_);
  public final static native long _nmod_vec_dot(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_, int jarg5);
  public final static native long _nmod_vec_dot_ptr(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, nmod_t jarg5_, int jarg6);
  public final static native void nmod_discrete_log_pohlig_hellman_table_entry_struct_gammapow_set(long jarg1, nmod_discrete_log_pohlig_hellman_table_entry_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_table_entry_struct_gammapow_get(long jarg1, nmod_discrete_log_pohlig_hellman_table_entry_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_table_entry_struct_cm_set(long jarg1, nmod_discrete_log_pohlig_hellman_table_entry_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_table_entry_struct_cm_get(long jarg1, nmod_discrete_log_pohlig_hellman_table_entry_struct jarg1_);
  public final static native long new_nmod_discrete_log_pohlig_hellman_table_entry_struct();
  public final static native void delete_nmod_discrete_log_pohlig_hellman_table_entry_struct(long jarg1);
  public final static native void nmod_discrete_log_pohlig_hellman_entry_struct_exp_set(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_, int jarg2);
  public final static native int nmod_discrete_log_pohlig_hellman_entry_struct_exp_get(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_entry_struct_prime_set(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_entry_struct_prime_get(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_entry_struct_gamma_set(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_entry_struct_gamma_get(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_entry_struct_gammainv_set(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_entry_struct_gammainv_get(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_entry_struct_startingbeta_set(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_entry_struct_startingbeta_get(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_entry_struct_co_set(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_entry_struct_co_get(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_entry_struct_startinge_set(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_entry_struct_startinge_get(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_entry_struct_idem_set(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_entry_struct_idem_get(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_entry_struct_cbound_set(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_entry_struct_cbound_get(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_entry_struct_dbound_set(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_entry_struct_dbound_get(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_entry_struct_table_set(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_, long jarg2, nmod_discrete_log_pohlig_hellman_table_entry_struct jarg2_);
  public final static native long nmod_discrete_log_pohlig_hellman_entry_struct_table_get(long jarg1, nmod_discrete_log_pohlig_hellman_entry_struct jarg1_);
  public final static native long new_nmod_discrete_log_pohlig_hellman_entry_struct();
  public final static native void delete_nmod_discrete_log_pohlig_hellman_entry_struct(long jarg1);
  public final static native void nmod_discrete_log_pohlig_hellman_struct_mod_set(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long nmod_discrete_log_pohlig_hellman_struct_mod_get(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_struct_alpha_set(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_struct_alpha_get(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_struct_alphainv_set(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_struct_alphainv_get(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_struct_num_factors_set(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_, int jarg2);
  public final static native int nmod_discrete_log_pohlig_hellman_struct_num_factors_get(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_struct_entries_set(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_, long jarg2, nmod_discrete_log_pohlig_hellman_entry_struct jarg2_);
  public final static native long nmod_discrete_log_pohlig_hellman_struct_entries_get(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_);
  public final static native long new_nmod_discrete_log_pohlig_hellman_struct();
  public final static native void delete_nmod_discrete_log_pohlig_hellman_struct(long jarg1);
  public final static native void nmod_discrete_log_pohlig_hellman_init(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_);
  public final static native void nmod_discrete_log_pohlig_hellman_clear(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_);
  public final static native double nmod_discrete_log_pohlig_hellman_precompute_prime(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_run(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_, long jarg2);
  public final static native long nmod_discrete_log_pohlig_hellman_primitive_root(long jarg1, nmod_discrete_log_pohlig_hellman_struct jarg1_);
  public final static native int _PTHREAD_H_get();
  public final static native int CSIGNAL_get();
  public final static native int CLONE_VM_get();
  public final static native int CLONE_FS_get();
  public final static native int CLONE_FILES_get();
  public final static native int CLONE_SIGHAND_get();
  public final static native int CLONE_PIDFD_get();
  public final static native int CLONE_PTRACE_get();
  public final static native int CLONE_VFORK_get();
  public final static native int CLONE_PARENT_get();
  public final static native int CLONE_THREAD_get();
  public final static native int CLONE_NEWNS_get();
  public final static native int CLONE_SYSVSEM_get();
  public final static native int CLONE_SETTLS_get();
  public final static native int CLONE_PARENT_SETTID_get();
  public final static native int CLONE_CHILD_CLEARTID_get();
  public final static native int CLONE_DETACHED_get();
  public final static native int CLONE_UNTRACED_get();
  public final static native int CLONE_CHILD_SETTID_get();
  public final static native int CLONE_NEWCGROUP_get();
  public final static native int CLONE_NEWUTS_get();
  public final static native int CLONE_NEWIPC_get();
  public final static native int CLONE_NEWUSER_get();
  public final static native int CLONE_NEWPID_get();
  public final static native int CLONE_NEWNET_get();
  public final static native int CLONE_IO_get();
  public final static native java.math.BigInteger CLONE_CLEAR_SIGHAND_get();
  public final static native java.math.BigInteger CLONE_INTO_CGROUP_get();
  public final static native int CLONE_NEWTIME_get();
  public final static native void clone_args_flags_set(long jarg1, clone_args jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger clone_args_flags_get(long jarg1, clone_args jarg1_);
  public final static native void clone_args_pidfd_set(long jarg1, clone_args jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger clone_args_pidfd_get(long jarg1, clone_args jarg1_);
  public final static native void clone_args_child_tid_set(long jarg1, clone_args jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger clone_args_child_tid_get(long jarg1, clone_args jarg1_);
  public final static native void clone_args_parent_tid_set(long jarg1, clone_args jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger clone_args_parent_tid_get(long jarg1, clone_args jarg1_);
  public final static native void clone_args_exit_signal_set(long jarg1, clone_args jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger clone_args_exit_signal_get(long jarg1, clone_args jarg1_);
  public final static native void clone_args_stack_set(long jarg1, clone_args jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger clone_args_stack_get(long jarg1, clone_args jarg1_);
  public final static native void clone_args_stack_size_set(long jarg1, clone_args jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger clone_args_stack_size_get(long jarg1, clone_args jarg1_);
  public final static native void clone_args_tls_set(long jarg1, clone_args jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger clone_args_tls_get(long jarg1, clone_args jarg1_);
  public final static native void clone_args_set_tid_set(long jarg1, clone_args jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger clone_args_set_tid_get(long jarg1, clone_args jarg1_);
  public final static native void clone_args_set_tid_size_set(long jarg1, clone_args jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger clone_args_set_tid_size_get(long jarg1, clone_args jarg1_);
  public final static native void clone_args_cgroup_set(long jarg1, clone_args jarg1_, java.math.BigInteger jarg2);
  public final static native java.math.BigInteger clone_args_cgroup_get(long jarg1, clone_args jarg1_);
  public final static native long new_clone_args();
  public final static native void delete_clone_args(long jarg1);
  public final static native int CLONE_ARGS_SIZE_VER0_get();
  public final static native int CLONE_ARGS_SIZE_VER1_get();
  public final static native int CLONE_ARGS_SIZE_VER2_get();
  public final static native int SCHED_NORMAL_get();
  public final static native int SCHED_FIFO_get();
  public final static native int SCHED_RR_get();
  public final static native int SCHED_BATCH_get();
  public final static native int SCHED_IDLE_get();
  public final static native int SCHED_DEADLINE_get();
  public final static native int SCHED_RESET_ON_FORK_get();
  public final static native int SCHED_FLAG_RESET_ON_FORK_get();
  public final static native int SCHED_FLAG_RECLAIM_get();
  public final static native int SCHED_FLAG_DL_OVERRUN_get();
  public final static native int SCHED_FLAG_KEEP_POLICY_get();
  public final static native int SCHED_FLAG_KEEP_PARAMS_get();
  public final static native int SCHED_FLAG_UTIL_CLAMP_MIN_get();
  public final static native int SCHED_FLAG_UTIL_CLAMP_MAX_get();
  public final static native int SCHED_FLAG_KEEP_ALL_get();
  public final static native int SCHED_FLAG_UTIL_CLAMP_get();
  public final static native int SCHED_FLAG_ALL_get();
  public final static native int _BITS_SETJMP_H_get();
  public final static native int PTHREAD_CREATE_JOINABLE_get();
  public final static native int PTHREAD_CREATE_DETACHED_get();
  public final static native int PTHREAD_MUTEX_TIMED_NP_get();
  public final static native int PTHREAD_MUTEX_RECURSIVE_NP_get();
  public final static native int PTHREAD_MUTEX_ERRORCHECK_NP_get();
  public final static native int PTHREAD_MUTEX_ADAPTIVE_NP_get();
  public final static native int PTHREAD_MUTEX_NORMAL_get();
  public final static native int PTHREAD_MUTEX_RECURSIVE_get();
  public final static native int PTHREAD_MUTEX_ERRORCHECK_get();
  public final static native int PTHREAD_MUTEX_DEFAULT_get();
  public final static native int PTHREAD_MUTEX_STALLED_get();
  public final static native int PTHREAD_MUTEX_STALLED_NP_get();
  public final static native int PTHREAD_MUTEX_ROBUST_get();
  public final static native int PTHREAD_MUTEX_ROBUST_NP_get();
  public final static native int PTHREAD_PRIO_NONE_get();
  public final static native int PTHREAD_PRIO_INHERIT_get();
  public final static native int PTHREAD_PRIO_PROTECT_get();
  public final static native int PTHREAD_RWLOCK_PREFER_READER_NP_get();
  public final static native int PTHREAD_RWLOCK_PREFER_WRITER_NP_get();
  public final static native int PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP_get();
  public final static native int PTHREAD_RWLOCK_DEFAULT_NP_get();
  public final static native int PTHREAD_INHERIT_SCHED_get();
  public final static native int PTHREAD_EXPLICIT_SCHED_get();
  public final static native int PTHREAD_SCOPE_SYSTEM_get();
  public final static native int PTHREAD_SCOPE_PROCESS_get();
  public final static native int PTHREAD_PROCESS_PRIVATE_get();
  public final static native int PTHREAD_PROCESS_SHARED_get();
  public final static native void _pthread_cleanup_buffer___routine_set(long jarg1, _pthread_cleanup_buffer jarg1_, long jarg2);
  public final static native long _pthread_cleanup_buffer___routine_get(long jarg1, _pthread_cleanup_buffer jarg1_);
  public final static native void _pthread_cleanup_buffer___arg_set(long jarg1, _pthread_cleanup_buffer jarg1_, long jarg2);
  public final static native long _pthread_cleanup_buffer___arg_get(long jarg1, _pthread_cleanup_buffer jarg1_);
  public final static native void _pthread_cleanup_buffer___canceltype_set(long jarg1, _pthread_cleanup_buffer jarg1_, int jarg2);
  public final static native int _pthread_cleanup_buffer___canceltype_get(long jarg1, _pthread_cleanup_buffer jarg1_);
  public final static native void _pthread_cleanup_buffer___prev_set(long jarg1, _pthread_cleanup_buffer jarg1_, long jarg2, _pthread_cleanup_buffer jarg2_);
  public final static native long _pthread_cleanup_buffer___prev_get(long jarg1, _pthread_cleanup_buffer jarg1_);
  public final static native long new__pthread_cleanup_buffer();
  public final static native void delete__pthread_cleanup_buffer(long jarg1);
  public final static native int PTHREAD_CANCEL_ENABLE_get();
  public final static native int PTHREAD_CANCEL_DISABLE_get();
  public final static native int PTHREAD_CANCEL_DEFERRED_get();
  public final static native int PTHREAD_CANCEL_ASYNCHRONOUS_get();
  public final static native int PTHREAD_ONCE_INIT_get();
  public final static native int PTHREAD_BARRIER_SERIAL_THREAD_get();
  public final static native int pthread_create(long jarg1, long jarg2, pthread_attr_t jarg2_, long jarg3, long jarg4);
  public final static native void pthread_exit(long jarg1);
  public final static native int pthread_join(long jarg1, long jarg2);
  public final static native int pthread_detach(long jarg1);
  public final static native long pthread_self();
  public final static native int pthread_equal(long jarg1, long jarg2);
  public final static native int pthread_attr_init(long jarg1, pthread_attr_t jarg1_);
  public final static native int pthread_attr_destroy(long jarg1, pthread_attr_t jarg1_);
  public final static native int pthread_attr_getdetachstate(long jarg1, pthread_attr_t jarg1_, long jarg2);
  public final static native int pthread_attr_setdetachstate(long jarg1, pthread_attr_t jarg1_, int jarg2);
  public final static native int pthread_attr_getguardsize(long jarg1, pthread_attr_t jarg1_, long jarg2);
  public final static native int pthread_attr_setguardsize(long jarg1, pthread_attr_t jarg1_, long jarg2);
  public final static native int pthread_attr_getschedparam(long jarg1, pthread_attr_t jarg1_, long jarg2);
  public final static native int pthread_attr_setschedparam(long jarg1, pthread_attr_t jarg1_, long jarg2);
  public final static native int pthread_attr_getschedpolicy(long jarg1, pthread_attr_t jarg1_, long jarg2);
  public final static native int pthread_attr_setschedpolicy(long jarg1, pthread_attr_t jarg1_, int jarg2);
  public final static native int pthread_attr_getinheritsched(long jarg1, pthread_attr_t jarg1_, long jarg2);
  public final static native int pthread_attr_setinheritsched(long jarg1, pthread_attr_t jarg1_, int jarg2);
  public final static native int pthread_attr_getscope(long jarg1, pthread_attr_t jarg1_, long jarg2);
  public final static native int pthread_attr_setscope(long jarg1, pthread_attr_t jarg1_, int jarg2);
  public final static native int pthread_attr_getstackaddr(long jarg1, pthread_attr_t jarg1_, long jarg2);
  public final static native int pthread_attr_setstackaddr(long jarg1, pthread_attr_t jarg1_, long jarg2);
  public final static native int pthread_attr_getstacksize(long jarg1, pthread_attr_t jarg1_, long jarg2);
  public final static native int pthread_attr_setstacksize(long jarg1, pthread_attr_t jarg1_, long jarg2);
  public final static native int pthread_attr_getstack(long jarg1, pthread_attr_t jarg1_, long jarg2, long jarg3);
  public final static native int pthread_attr_setstack(long jarg1, pthread_attr_t jarg1_, long jarg2, long jarg3);
  public final static native int pthread_setschedparam(long jarg1, int jarg2, long jarg3);
  public final static native int pthread_getschedparam(long jarg1, long jarg2, long jarg3);
  public final static native int pthread_setschedprio(long jarg1, int jarg2);
  public final static native int pthread_once(long jarg1, long jarg2);
  public final static native int pthread_setcancelstate(int jarg1, long jarg2);
  public final static native int pthread_setcanceltype(int jarg1, long jarg2);
  public final static native int pthread_cancel(long jarg1);
  public final static native void pthread_testcancel();
  public final static native void __pthread_unwind_buf_t___pad_set(long jarg1, __pthread_unwind_buf_t jarg1_, long jarg2);
  public final static native long __pthread_unwind_buf_t___pad_get(long jarg1, __pthread_unwind_buf_t jarg1_);
  public final static native long new___pthread_unwind_buf_t();
  public final static native void delete___pthread_unwind_buf_t(long jarg1);
  public final static native void __pthread_cleanup_frame___cancel_routine_set(long jarg1, __pthread_cleanup_frame jarg1_, long jarg2);
  public final static native long __pthread_cleanup_frame___cancel_routine_get(long jarg1, __pthread_cleanup_frame jarg1_);
  public final static native void __pthread_cleanup_frame___cancel_arg_set(long jarg1, __pthread_cleanup_frame jarg1_, long jarg2);
  public final static native long __pthread_cleanup_frame___cancel_arg_get(long jarg1, __pthread_cleanup_frame jarg1_);
  public final static native void __pthread_cleanup_frame___do_it_set(long jarg1, __pthread_cleanup_frame jarg1_, int jarg2);
  public final static native int __pthread_cleanup_frame___do_it_get(long jarg1, __pthread_cleanup_frame jarg1_);
  public final static native void __pthread_cleanup_frame___cancel_type_set(long jarg1, __pthread_cleanup_frame jarg1_, int jarg2);
  public final static native int __pthread_cleanup_frame___cancel_type_get(long jarg1, __pthread_cleanup_frame jarg1_);
  public final static native long new___pthread_cleanup_frame();
  public final static native void delete___pthread_cleanup_frame(long jarg1);
  public final static native void __pthread_register_cancel(long jarg1, __pthread_unwind_buf_t jarg1_);
  public final static native void __pthread_unregister_cancel(long jarg1, __pthread_unwind_buf_t jarg1_);
  public final static native void __pthread_unwind_next(long jarg1, __pthread_unwind_buf_t jarg1_);
  public final static native int __sigsetjmp(long jarg1, int jarg2);
  public final static native int pthread_mutex_init(long jarg1, pthread_mutex_t jarg1_, long jarg2, pthread_mutexattr_t jarg2_);
  public final static native int pthread_mutex_destroy(long jarg1, pthread_mutex_t jarg1_);
  public final static native int pthread_mutex_trylock(long jarg1, pthread_mutex_t jarg1_);
  public final static native int pthread_mutex_lock(long jarg1, pthread_mutex_t jarg1_);
  public final static native int pthread_mutex_timedlock(long jarg1, pthread_mutex_t jarg1_, long jarg2, timespec jarg2_);
  public final static native int pthread_mutex_unlock(long jarg1, pthread_mutex_t jarg1_);
  public final static native int pthread_mutex_getprioceiling(long jarg1, pthread_mutex_t jarg1_, long jarg2);
  public final static native int pthread_mutex_setprioceiling(long jarg1, pthread_mutex_t jarg1_, int jarg2, long jarg3);
  public final static native int pthread_mutex_consistent(long jarg1, pthread_mutex_t jarg1_);
  public final static native int pthread_mutexattr_init(long jarg1, pthread_mutexattr_t jarg1_);
  public final static native int pthread_mutexattr_destroy(long jarg1, pthread_mutexattr_t jarg1_);
  public final static native int pthread_mutexattr_getpshared(long jarg1, pthread_mutexattr_t jarg1_, long jarg2);
  public final static native int pthread_mutexattr_setpshared(long jarg1, pthread_mutexattr_t jarg1_, int jarg2);
  public final static native int pthread_mutexattr_gettype(long jarg1, pthread_mutexattr_t jarg1_, long jarg2);
  public final static native int pthread_mutexattr_settype(long jarg1, pthread_mutexattr_t jarg1_, int jarg2);
  public final static native int pthread_mutexattr_getprotocol(long jarg1, pthread_mutexattr_t jarg1_, long jarg2);
  public final static native int pthread_mutexattr_setprotocol(long jarg1, pthread_mutexattr_t jarg1_, int jarg2);
  public final static native int pthread_mutexattr_getprioceiling(long jarg1, pthread_mutexattr_t jarg1_, long jarg2);
  public final static native int pthread_mutexattr_setprioceiling(long jarg1, pthread_mutexattr_t jarg1_, int jarg2);
  public final static native int pthread_mutexattr_getrobust(long jarg1, pthread_mutexattr_t jarg1_, long jarg2);
  public final static native int pthread_mutexattr_setrobust(long jarg1, pthread_mutexattr_t jarg1_, int jarg2);
  public final static native int pthread_rwlock_init(long jarg1, pthread_rwlock_t jarg1_, long jarg2, pthread_rwlockattr_t jarg2_);
  public final static native int pthread_rwlock_destroy(long jarg1, pthread_rwlock_t jarg1_);
  public final static native int pthread_rwlock_rdlock(long jarg1, pthread_rwlock_t jarg1_);
  public final static native int pthread_rwlock_tryrdlock(long jarg1, pthread_rwlock_t jarg1_);
  public final static native int pthread_rwlock_timedrdlock(long jarg1, pthread_rwlock_t jarg1_, long jarg2, timespec jarg2_);
  public final static native int pthread_rwlock_wrlock(long jarg1, pthread_rwlock_t jarg1_);
  public final static native int pthread_rwlock_trywrlock(long jarg1, pthread_rwlock_t jarg1_);
  public final static native int pthread_rwlock_timedwrlock(long jarg1, pthread_rwlock_t jarg1_, long jarg2, timespec jarg2_);
  public final static native int pthread_rwlock_unlock(long jarg1, pthread_rwlock_t jarg1_);
  public final static native int pthread_rwlockattr_init(long jarg1, pthread_rwlockattr_t jarg1_);
  public final static native int pthread_rwlockattr_destroy(long jarg1, pthread_rwlockattr_t jarg1_);
  public final static native int pthread_rwlockattr_getpshared(long jarg1, pthread_rwlockattr_t jarg1_, long jarg2);
  public final static native int pthread_rwlockattr_setpshared(long jarg1, pthread_rwlockattr_t jarg1_, int jarg2);
  public final static native int pthread_rwlockattr_getkind_np(long jarg1, pthread_rwlockattr_t jarg1_, long jarg2);
  public final static native int pthread_rwlockattr_setkind_np(long jarg1, pthread_rwlockattr_t jarg1_, int jarg2);
  public final static native int pthread_cond_init(long jarg1, pthread_cond_t jarg1_, long jarg2, pthread_condattr_t jarg2_);
  public final static native int pthread_cond_destroy(long jarg1, pthread_cond_t jarg1_);
  public final static native int pthread_cond_signal(long jarg1, pthread_cond_t jarg1_);
  public final static native int pthread_cond_broadcast(long jarg1, pthread_cond_t jarg1_);
  public final static native int pthread_cond_wait(long jarg1, pthread_cond_t jarg1_, long jarg2, pthread_mutex_t jarg2_);
  public final static native int pthread_cond_timedwait(long jarg1, pthread_cond_t jarg1_, long jarg2, pthread_mutex_t jarg2_, long jarg3, timespec jarg3_);
  public final static native int pthread_condattr_init(long jarg1, pthread_condattr_t jarg1_);
  public final static native int pthread_condattr_destroy(long jarg1, pthread_condattr_t jarg1_);
  public final static native int pthread_condattr_getpshared(long jarg1, pthread_condattr_t jarg1_, long jarg2);
  public final static native int pthread_condattr_setpshared(long jarg1, pthread_condattr_t jarg1_, int jarg2);
  public final static native int pthread_condattr_getclock(long jarg1, pthread_condattr_t jarg1_, long jarg2);
  public final static native int pthread_condattr_setclock(long jarg1, pthread_condattr_t jarg1_, int jarg2);
  public final static native int pthread_spin_init(long jarg1, int jarg2);
  public final static native int pthread_spin_destroy(long jarg1);
  public final static native int pthread_spin_lock(long jarg1);
  public final static native int pthread_spin_trylock(long jarg1);
  public final static native int pthread_spin_unlock(long jarg1);
  public final static native int pthread_barrier_init(long jarg1, pthread_barrier_t jarg1_, long jarg2, pthread_barrierattr_t jarg2_, long jarg3);
  public final static native int pthread_barrier_destroy(long jarg1, pthread_barrier_t jarg1_);
  public final static native int pthread_barrier_wait(long jarg1, pthread_barrier_t jarg1_);
  public final static native int pthread_barrierattr_init(long jarg1, pthread_barrierattr_t jarg1_);
  public final static native int pthread_barrierattr_destroy(long jarg1, pthread_barrierattr_t jarg1_);
  public final static native int pthread_barrierattr_getpshared(long jarg1, pthread_barrierattr_t jarg1_, long jarg2);
  public final static native int pthread_barrierattr_setpshared(long jarg1, pthread_barrierattr_t jarg1_, int jarg2);
  public final static native int pthread_key_create(long jarg1, long jarg2);
  public final static native int pthread_key_delete(long jarg1);
  public final static native long pthread_getspecific(long jarg1);
  public final static native int pthread_setspecific(long jarg1, long jarg2);
  public final static native int pthread_getcpuclockid(long jarg1, long jarg2);
  public final static native int pthread_atfork(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_arr_set(long jarg1, __mpz_struct jarg1_);
  public final static native long fmpz_arr_get();
  public final static native void fmpz_randstate_set(long jarg1, __gmp_randstate_struct jarg1_);
  public final static native long fmpz_randstate_get();
  public final static native void fmpz_preinvn_struct_dinv_set(long jarg1, fmpz_preinvn_struct jarg1_, long jarg2);
  public final static native long fmpz_preinvn_struct_dinv_get(long jarg1, fmpz_preinvn_struct jarg1_);
  public final static native void fmpz_preinvn_struct_n_set(long jarg1, fmpz_preinvn_struct jarg1_, int jarg2);
  public final static native int fmpz_preinvn_struct_n_get(long jarg1, fmpz_preinvn_struct jarg1_);
  public final static native void fmpz_preinvn_struct_norm_set(long jarg1, fmpz_preinvn_struct jarg1_, long jarg2);
  public final static native long fmpz_preinvn_struct_norm_get(long jarg1, fmpz_preinvn_struct jarg1_);
  public final static native long new_fmpz_preinvn_struct();
  public final static native void delete_fmpz_preinvn_struct(long jarg1);
  public final static native void fmpz_block_header_s_count_set(long jarg1, fmpz_block_header_s jarg1_, int jarg2);
  public final static native int fmpz_block_header_s_count_get(long jarg1, fmpz_block_header_s jarg1_);
  public final static native void fmpz_block_header_s_thread_set(long jarg1, fmpz_block_header_s jarg1_, long jarg2);
  public final static native long fmpz_block_header_s_thread_get(long jarg1, fmpz_block_header_s jarg1_);
  public final static native void fmpz_block_header_s_address_set(long jarg1, fmpz_block_header_s jarg1_, long jarg2);
  public final static native long fmpz_block_header_s_address_get(long jarg1, fmpz_block_header_s jarg1_);
  public final static native long new_fmpz_block_header_s();
  public final static native void delete_fmpz_block_header_s(long jarg1);
  public final static native int COEFF_MAX_get();
  public final static native int COEFF_MIN_get();
  public final static native long _fmpz_new_mpz();
  public final static native void _fmpz_clear_mpz(int jarg1);
  public final static native void _fmpz_cleanup_mpz_content();
  public final static native void _fmpz_cleanup();
  public final static native long _fmpz_promote(long jarg1);
  public final static native long _fmpz_promote_val(long jarg1);
  public final static native void _fmpz_demote(long jarg1);
  public final static native void _fmpz_demote_val(long jarg1);
  public final static native void _fmpz_init_readonly_mpz(long jarg1, long jarg2, __mpz_struct jarg2_);
  public final static native void _fmpz_clear_readonly_mpz(long jarg1, __mpz_struct jarg1_);
  public final static native void fmpz_init(long jarg1);
  public final static native void fmpz_init2(long jarg1, long jarg2);
  public final static native void fmpz_init_set(long jarg1, long jarg2);
  public final static native void fmpz_init_set_ui(long jarg1, long jarg2);
  public final static native void fmpz_init_set_si(long jarg1, int jarg2);
  public final static native void fmpz_clear(long jarg1);
  public final static native void fmpz_randbits(long jarg1, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void fmpz_randm(long jarg1, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void fmpz_randtest(long jarg1, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void fmpz_randtest_unsigned(long jarg1, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void fmpz_randtest_not_zero(long jarg1, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void fmpz_randtest_mod(long jarg1, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void fmpz_randtest_mod_signed(long jarg1, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void fmpz_randprime(long jarg1, long jarg2, flint_rand_s jarg2_, long jarg3, int jarg4);
  public final static native int fmpz_get_si(long jarg1);
  public final static native long fmpz_get_ui(long jarg1);
  public final static native void fmpz_get_uiui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_set_si(long jarg1, int jarg2);
  public final static native void fmpz_set_ui(long jarg1, long jarg2);
  public final static native void fmpz_neg_ui(long jarg1, long jarg2);
  public final static native void fmpz_set_uiui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_neg_uiui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_set_signed_uiui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_set_signed_uiuiui(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpz_set_ui_array(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_get_ui_array(long jarg1, int jarg2, long jarg3);
  public final static native void fmpz_get_mpz(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void fmpz_set_mpz(long jarg1, long jarg2, __mpz_struct jarg2_);
  public final static native double fmpz_get_d(long jarg1);
  public final static native void fmpz_set_d(long jarg1, double jarg2);
  public final static native void fmpz_get_mpf(long jarg1, __mpf_struct jarg1_, long jarg2);
  public final static native void fmpz_set_mpf(long jarg1, long jarg2, __mpf_struct jarg2_);
  public final static native void fmpz_get_mpfr(long jarg1, __mpfr_struct jarg1_, long jarg2, int jarg3);
  public final static native int fmpz_get_mpn(long jarg1, long jarg2);
  public final static native int fmpz_set_str(long jarg1, String jarg2, int jarg3);
  public final static native void flint_mpz_init_set_readonly(long jarg1, __mpz_struct jarg1_, long jarg2);
  public final static native void flint_mpz_clear_readonly(long jarg1, __mpz_struct jarg1_);
  public final static native void fmpz_init_set_readonly(long jarg1, long jarg2, __mpz_struct jarg2_);
  public final static native void fmpz_clear_readonly(long jarg1);
  public final static native int fmpz_abs_fits_ui(long jarg1);
  public final static native int fmpz_fits_si(long jarg1);
  public final static native void fmpz_zero(long jarg1);
  public final static native void fmpz_one(long jarg1);
  public final static native int fmpz_is_zero(long jarg1);
  public final static native int fmpz_is_one(long jarg1);
  public final static native int fmpz_is_pm1(long jarg1);
  public final static native void fmpz_set(long jarg1, long jarg2);
  public final static native int fmpz_equal(long jarg1, long jarg2);
  public final static native int fmpz_equal_si(long jarg1, int jarg2);
  public final static native int fmpz_equal_ui(long jarg1, long jarg2);
  public final static native int fmpz_read(long jarg1);
  public final static native int fmpz_fread(long jarg1, _IO_FILE jarg1_, long jarg2);
  public final static native long fmpz_inp_raw(long jarg1, long jarg2, _IO_FILE jarg2_);
  public final static native int fmpz_print(long jarg1);
  public final static native int fmpz_fprint(long jarg1, _IO_FILE jarg1_, long jarg2);
  public final static native long fmpz_out_raw(long jarg1, _IO_FILE jarg1_, long jarg2);
  public final static native long fmpz_sizeinbase(long jarg1, int jarg2);
  public final static native String fmpz_get_str(String jarg1, int jarg2, long jarg3);
  public final static native void fmpz_swap(long jarg1, long jarg2);
  public final static native int fmpz_cmp(long jarg1, long jarg2);
  public final static native int fmpz_cmp_ui(long jarg1, long jarg2);
  public final static native int fmpz_cmp_si(long jarg1, int jarg2);
  public final static native int fmpz_cmpabs(long jarg1, long jarg2);
  public final static native int fmpz_is_even(long jarg1);
  public final static native int fmpz_is_odd(long jarg1);
  public final static native int fmpz_size(long jarg1);
  public final static native int fmpz_sgn(long jarg1);
  public final static native long fmpz_bits(long jarg1);
  public final static native long fmpz_val2(long jarg1);
  public final static native void fmpz_neg(long jarg1, long jarg2);
  public final static native void fmpz_abs(long jarg1, long jarg2);
  public final static native void fmpz_add(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_sub(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_mul_ui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_mul_si(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_mul(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_mul_2exp(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_add_ui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_sub_ui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_add_si(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_sub_si(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_addmul_ui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_submul_ui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_addmul(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_submul(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_fmma(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void fmpz_fmms(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void fmpz_pow_ui(long jarg1, long jarg2, long jarg3);
  public final static native int fmpz_pow_fmpz(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_powm_ui(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpz_powm(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpz_setbit(long jarg1, long jarg2);
  public final static native int fmpz_tstbit(long jarg1, long jarg2);
  public final static native void fmpz_clrbit(long jarg1, long jarg2);
  public final static native void fmpz_complement(long jarg1, long jarg2);
  public final static native void fmpz_combit(long jarg1, long jarg2);
  public final static native void fmpz_and(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_or(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_xor(long jarg1, long jarg2, long jarg3);
  public final static native long fmpz_popcnt(long jarg1);
  public final static native double fmpz_dlog(long jarg1);
  public final static native int fmpz_flog(long jarg1, long jarg2);
  public final static native int fmpz_flog_ui(long jarg1, long jarg2);
  public final static native int fmpz_clog(long jarg1, long jarg2);
  public final static native int fmpz_clog_ui(long jarg1, long jarg2);
  public final static native int fmpz_sqrtmod(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_sqrt(long jarg1, long jarg2);
  public final static native int fmpz_is_square(long jarg1);
  public final static native void fmpz_root(long jarg1, long jarg2, int jarg3);
  public final static native int fmpz_is_perfect_power(long jarg1, long jarg2);
  public final static native void fmpz_sqrtrem(long jarg1, long jarg2, long jarg3);
  public final static native long fmpz_fdiv_ui(long jarg1, long jarg2);
  public final static native long fmpz_mod_ui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_mod(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_smod(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_negmod(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_gcd(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_lcm(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_gcdinv(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpz_xgcd(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void fmpz_xgcd_partial(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int fmpz_invmod(long jarg1, long jarg2, long jarg3);
  public final static native int fmpz_jacobi(long jarg1, long jarg2);
  public final static native void fmpz_divides_mod_list(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native int _fmpz_remove(long jarg1, long jarg2, double jarg3);
  public final static native int fmpz_remove(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_divexact(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_divexact_si(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_divexact_ui(long jarg1, long jarg2, long jarg3);
  public final static native int fmpz_divisible(long jarg1, long jarg2);
  public final static native int fmpz_divisible_si(long jarg1, int jarg2);
  public final static native void fmpz_cdiv_qr(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpz_cdiv_q(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_cdiv_q_si(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_cdiv_q_ui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_cdiv_q_2exp(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_cdiv_r_2exp(long jarg1, long jarg2, long jarg3);
  public final static native long fmpz_cdiv_ui(long jarg1, long jarg2);
  public final static native void fmpz_fdiv_qr(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpz_fdiv_qr_preinvn(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, fmpz_preinvn_struct jarg5_);
  public final static native void fmpz_fdiv_q(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_fdiv_r(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_fdiv_q_ui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_fdiv_q_si(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_fdiv_q_2exp(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_fdiv_r_2exp(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_tdiv_q(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_tdiv_qr(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpz_tdiv_q_ui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_tdiv_q_si(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_tdiv_r_2exp(long jarg1, long jarg2, long jarg3);
  public final static native long fmpz_tdiv_ui(long jarg1, long jarg2);
  public final static native void fmpz_tdiv_q_2exp(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_preinvn_init(long jarg1, fmpz_preinvn_struct jarg1_, long jarg2);
  public final static native void fmpz_preinvn_clear(long jarg1, fmpz_preinvn_struct jarg1_);
  public final static native double fmpz_get_d_2exp(long jarg1, long jarg2);
  public final static native void fmpz_set_d_2exp(long jarg1, double jarg2, int jarg3);
  public final static native void fmpz_mul2_uiui(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpz_divexact2_uiui(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpz_mul_tdiv_q_2exp(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpz_mul_si_tdiv_q_2exp(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void fmpz_fac_ui(long jarg1, long jarg2);
  public final static native void fmpz_fib_ui(long jarg1, long jarg2);
  public final static native void fmpz_bin_uiui(long jarg1, long jarg2, long jarg3);
  public final static native void _fmpz_rfac_ui(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpz_rfac_ui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_rfac_uiui(long jarg1, long jarg2, long jarg3);
  public final static native int fmpz_bit_pack(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native int fmpz_bit_unpack(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpz_bit_unpack_unsigned(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void _fmpz_CRT_ui_precomp(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, int jarg9);
  public final static native void fmpz_CRT_ui(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native int FLINT_FMPZ_LOG_MULTI_MOD_CUTOFF_get();
  public final static native void fmpz_comb_struct_primes_set(long jarg1, fmpz_comb_struct jarg1_, long jarg2);
  public final static native long fmpz_comb_struct_primes_get(long jarg1, fmpz_comb_struct jarg1_);
  public final static native void fmpz_comb_struct_num_primes_set(long jarg1, fmpz_comb_struct jarg1_, int jarg2);
  public final static native int fmpz_comb_struct_num_primes_get(long jarg1, fmpz_comb_struct jarg1_);
  public final static native void fmpz_comb_struct_n_set(long jarg1, fmpz_comb_struct jarg1_, int jarg2);
  public final static native int fmpz_comb_struct_n_get(long jarg1, fmpz_comb_struct jarg1_);
  public final static native void fmpz_comb_struct_comb_set(long jarg1, fmpz_comb_struct jarg1_, long jarg2);
  public final static native long fmpz_comb_struct_comb_get(long jarg1, fmpz_comb_struct jarg1_);
  public final static native void fmpz_comb_struct_res_set(long jarg1, fmpz_comb_struct jarg1_, long jarg2);
  public final static native long fmpz_comb_struct_res_get(long jarg1, fmpz_comb_struct jarg1_);
  public final static native void fmpz_comb_struct_mod_set(long jarg1, fmpz_comb_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long fmpz_comb_struct_mod_get(long jarg1, fmpz_comb_struct jarg1_);
  public final static native long new_fmpz_comb_struct();
  public final static native void delete_fmpz_comb_struct(long jarg1);
  public final static native void fmpz_comb_temp_struct_n_set(long jarg1, fmpz_comb_temp_struct jarg1_, int jarg2);
  public final static native int fmpz_comb_temp_struct_n_get(long jarg1, fmpz_comb_temp_struct jarg1_);
  public final static native void fmpz_comb_temp_struct_comb_temp_set(long jarg1, fmpz_comb_temp_struct jarg1_, long jarg2);
  public final static native long fmpz_comb_temp_struct_comb_temp_get(long jarg1, fmpz_comb_temp_struct jarg1_);
  public final static native void fmpz_comb_temp_struct_temp_set(long jarg1, fmpz_comb_temp_struct jarg1_, long jarg2);
  public final static native long fmpz_comb_temp_struct_temp_get(long jarg1, fmpz_comb_temp_struct jarg1_);
  public final static native void fmpz_comb_temp_struct_temp2_set(long jarg1, fmpz_comb_temp_struct jarg1_, long jarg2);
  public final static native long fmpz_comb_temp_struct_temp2_get(long jarg1, fmpz_comb_temp_struct jarg1_);
  public final static native long new_fmpz_comb_temp_struct();
  public final static native void delete_fmpz_comb_temp_struct(long jarg1);
  public final static native void fmpz_comb_temp_init(long jarg1, fmpz_comb_temp_struct jarg1_, long jarg2, fmpz_comb_struct jarg2_);
  public final static native void fmpz_comb_temp_clear(long jarg1, fmpz_comb_temp_struct jarg1_);
  public final static native void fmpz_comb_init(long jarg1, fmpz_comb_struct jarg1_, long jarg2, int jarg3);
  public final static native void fmpz_comb_clear(long jarg1, fmpz_comb_struct jarg1_);
  public final static native void fmpz_multi_mod_ui(long jarg1, long jarg2, long jarg3, fmpz_comb_struct jarg3_, long jarg4, fmpz_comb_temp_struct jarg4_);
  public final static native void fmpz_multi_CRT_ui(long jarg1, long jarg2, long jarg3, fmpz_comb_struct jarg3_, long jarg4, fmpz_comb_temp_struct jarg4_, int jarg5);
  public final static native void fmpz_CRT(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void fmpz_set_ui_smod(long jarg1, long jarg2, long jarg3);
  public final static native void _fmpz_multi_crt_prog_instr_a_idx_set(long jarg1, _fmpz_multi_crt_prog_instr jarg1_, int jarg2);
  public final static native int _fmpz_multi_crt_prog_instr_a_idx_get(long jarg1, _fmpz_multi_crt_prog_instr jarg1_);
  public final static native void _fmpz_multi_crt_prog_instr_b_idx_set(long jarg1, _fmpz_multi_crt_prog_instr jarg1_, int jarg2);
  public final static native int _fmpz_multi_crt_prog_instr_b_idx_get(long jarg1, _fmpz_multi_crt_prog_instr jarg1_);
  public final static native void _fmpz_multi_crt_prog_instr_c_idx_set(long jarg1, _fmpz_multi_crt_prog_instr jarg1_, int jarg2);
  public final static native int _fmpz_multi_crt_prog_instr_c_idx_get(long jarg1, _fmpz_multi_crt_prog_instr jarg1_);
  public final static native void _fmpz_multi_crt_prog_instr_idem_set(long jarg1, _fmpz_multi_crt_prog_instr jarg1_, long jarg2);
  public final static native long _fmpz_multi_crt_prog_instr_idem_get(long jarg1, _fmpz_multi_crt_prog_instr jarg1_);
  public final static native void _fmpz_multi_crt_prog_instr_modulus_set(long jarg1, _fmpz_multi_crt_prog_instr jarg1_, long jarg2);
  public final static native long _fmpz_multi_crt_prog_instr_modulus_get(long jarg1, _fmpz_multi_crt_prog_instr jarg1_);
  public final static native long new__fmpz_multi_crt_prog_instr();
  public final static native void delete__fmpz_multi_crt_prog_instr(long jarg1);
  public final static native void fmpz_multi_crt_struct_prog_set(long jarg1, fmpz_multi_crt_struct jarg1_, long jarg2, _fmpz_multi_crt_prog_instr jarg2_);
  public final static native long fmpz_multi_crt_struct_prog_get(long jarg1, fmpz_multi_crt_struct jarg1_);
  public final static native void fmpz_multi_crt_struct_length_set(long jarg1, fmpz_multi_crt_struct jarg1_, int jarg2);
  public final static native int fmpz_multi_crt_struct_length_get(long jarg1, fmpz_multi_crt_struct jarg1_);
  public final static native void fmpz_multi_crt_struct_alloc_set(long jarg1, fmpz_multi_crt_struct jarg1_, int jarg2);
  public final static native int fmpz_multi_crt_struct_alloc_get(long jarg1, fmpz_multi_crt_struct jarg1_);
  public final static native void fmpz_multi_crt_struct_localsize_set(long jarg1, fmpz_multi_crt_struct jarg1_, int jarg2);
  public final static native int fmpz_multi_crt_struct_localsize_get(long jarg1, fmpz_multi_crt_struct jarg1_);
  public final static native void fmpz_multi_crt_struct_temp1loc_set(long jarg1, fmpz_multi_crt_struct jarg1_, int jarg2);
  public final static native int fmpz_multi_crt_struct_temp1loc_get(long jarg1, fmpz_multi_crt_struct jarg1_);
  public final static native void fmpz_multi_crt_struct_temp2loc_set(long jarg1, fmpz_multi_crt_struct jarg1_, int jarg2);
  public final static native int fmpz_multi_crt_struct_temp2loc_get(long jarg1, fmpz_multi_crt_struct jarg1_);
  public final static native void fmpz_multi_crt_struct_good_set(long jarg1, fmpz_multi_crt_struct jarg1_, int jarg2);
  public final static native int fmpz_multi_crt_struct_good_get(long jarg1, fmpz_multi_crt_struct jarg1_);
  public final static native long new_fmpz_multi_crt_struct();
  public final static native void delete_fmpz_multi_crt_struct(long jarg1);
  public final static native void fmpz_multi_crt_init(long jarg1, fmpz_multi_crt_struct jarg1_);
  public final static native int fmpz_multi_crt_precompute(long jarg1, fmpz_multi_crt_struct jarg1_, long jarg2, int jarg3);
  public final static native int fmpz_multi_crt_precompute_p(long jarg1, fmpz_multi_crt_struct jarg1_, long jarg2, int jarg3);
  public final static native void fmpz_multi_crt_precomp(long jarg1, long jarg2, fmpz_multi_crt_struct jarg2_, long jarg3);
  public final static native void fmpz_multi_crt_precomp_p(long jarg1, long jarg2, fmpz_multi_crt_struct jarg2_, long jarg3);
  public final static native int fmpz_multi_crt(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void fmpz_multi_crt_clear(long jarg1, fmpz_multi_crt_struct jarg1_);
  public final static native int _fmpz_multi_crt_local_size(long jarg1, fmpz_multi_crt_struct jarg1_);
  public final static native void _fmpz_multi_crt_run(long jarg1, long jarg2, fmpz_multi_crt_struct jarg2_, long jarg3);
  public final static native void _fmpz_multi_crt_run_p(long jarg1, long jarg2, fmpz_multi_crt_struct jarg2_, long jarg3);
  public final static native long fmpz_abs_ubound_ui_2exp(long jarg1, long jarg2, int jarg3);
  public final static native long fmpz_abs_lbound_ui_2exp(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_lucas_chain(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void fmpz_lucas_chain_full(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void fmpz_lucas_chain_double(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native void fmpz_lucas_chain_add(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9);
  public final static native void fmpz_lucas_chain_mul(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native void fmpz_lucas_chain_VtoU(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int fmpz_is_probabprime_lucas(long jarg1);
  public final static native int fmpz_is_probabprime_BPSW(long jarg1);
  public final static native int fmpz_is_strong_probabprime(long jarg1, long jarg2);
  public final static native int fmpz_is_probabprime(long jarg1);
  public final static native int fmpz_is_prime_pseudosquare(long jarg1);
  public final static native void _fmpz_nm1_trial_factors(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int fmpz_is_prime_pocklington(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void _fmpz_np1_trial_factors(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int fmpz_is_prime_morrison(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native int fmpz_is_prime(long jarg1);
  public final static native int fmpz_divisor_in_residue_class_lenstra(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpz_nextprime(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_primorial(long jarg1, long jarg2);
  public final static native void fmpz_euler_phi(long jarg1, long jarg2);
  public final static native int fmpz_moebius_mu(long jarg1);
  public final static native void fmpz_divisor_sigma(long jarg1, long jarg2, long jarg3);
  public final static native long n_powmod2_fmpz_preinv(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native long nmod_pow_fmpz(long jarg1, long jarg2, long jarg3, nmod_t jarg3_);
  public final static native long __new_fmpz();
  public final static native void __free_fmpz(long jarg1);
  public final static native void __fmpz_set_si(long jarg1, int jarg2);
  public final static native void __fmpz_set_ui(long jarg1, long jarg2);
  public final static native void __fmpz_init(long jarg1);
  public final static native void __fmpz_init_set_ui(long jarg1, long jarg2);
  public final static native void __fmpz_clear(long jarg1);
  public final static native int __fmpz_lt(long jarg1, long jarg2);
  public final static native int __fmpz_gt(long jarg1, long jarg2);
  public final static native int __fmpz_lte(long jarg1, long jarg2);
  public final static native int __fmpz_gte(long jarg1, long jarg2);
  public final static native int __fmpz_eq(long jarg1, long jarg2);
  public final static native int __fmpz_neq(long jarg1, long jarg2);
  public final static native void __fmpz_init_set(long jarg1, long jarg2);
  public final static native void __fmpz_neg(long jarg1, long jarg2);
  public final static native void fmpz_factor_struct_sign_set(long jarg1, fmpz_factor_struct jarg1_, int jarg2);
  public final static native int fmpz_factor_struct_sign_get(long jarg1, fmpz_factor_struct jarg1_);
  public final static native void fmpz_factor_struct_p_set(long jarg1, fmpz_factor_struct jarg1_, long jarg2);
  public final static native long fmpz_factor_struct_p_get(long jarg1, fmpz_factor_struct jarg1_);
  public final static native void fmpz_factor_struct_exp_set(long jarg1, fmpz_factor_struct jarg1_, long jarg2);
  public final static native long fmpz_factor_struct_exp_get(long jarg1, fmpz_factor_struct jarg1_);
  public final static native void fmpz_factor_struct_alloc_set(long jarg1, fmpz_factor_struct jarg1_, int jarg2);
  public final static native int fmpz_factor_struct_alloc_get(long jarg1, fmpz_factor_struct jarg1_);
  public final static native void fmpz_factor_struct_num_set(long jarg1, fmpz_factor_struct jarg1_, int jarg2);
  public final static native int fmpz_factor_struct_num_get(long jarg1, fmpz_factor_struct jarg1_);
  public final static native long new_fmpz_factor_struct();
  public final static native void delete_fmpz_factor_struct(long jarg1);
  public final static native void fmpz_factor_init(long jarg1, fmpz_factor_struct jarg1_);
  public final static native void fmpz_factor_clear(long jarg1, fmpz_factor_struct jarg1_);
  public final static native void fmpz_factor_print(long jarg1, fmpz_factor_struct jarg1_);
  public final static native void _fmpz_factor_fit_length(long jarg1, fmpz_factor_struct jarg1_, int jarg2);
  public final static native void _fmpz_factor_append_ui(long jarg1, fmpz_factor_struct jarg1_, long jarg2, long jarg3);
  public final static native void _fmpz_factor_append(long jarg1, fmpz_factor_struct jarg1_, long jarg2, long jarg3);
  public final static native void _fmpz_factor_set_length(long jarg1, fmpz_factor_struct jarg1_, int jarg2);
  public final static native void _fmpz_factor_concat(long jarg1, fmpz_factor_struct jarg1_, long jarg2, fmpz_factor_struct jarg2_, long jarg3);
  public final static native void _fmpz_factor_extend_factor_ui(long jarg1, fmpz_factor_struct jarg1_, long jarg2);
  public final static native int fmpz_factor_trial_range(long jarg1, fmpz_factor_struct jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native int fmpz_factor_trial(long jarg1, fmpz_factor_struct jarg1_, long jarg2, int jarg3);
  public final static native void fmpz_factor(long jarg1, fmpz_factor_struct jarg1_, long jarg2);
  public final static native void fmpz_factor_no_trial(long jarg1, fmpz_factor_struct jarg1_, long jarg2);
  public final static native int fmpz_factor_smooth(long jarg1, fmpz_factor_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_factor_si(long jarg1, fmpz_factor_struct jarg1_, int jarg2);
  public final static native int fmpz_factor_pp1(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void fmpz_factor_refine(long jarg1, fmpz_factor_struct jarg1_, long jarg2, fmpz_factor_struct jarg2_);
  public final static native void flint_mpn_sqr_and_add_a(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native int flint_mpn_factor_pollard_brent_single(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8);
  public final static native int fmpz_factor_pollard_brent_single(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native int fmpz_factor_pollard_brent(long jarg1, long jarg2, flint_rand_s jarg2_, long jarg3, long jarg4, long jarg5);
  public final static native void fmpz_factor_expand_iterative(long jarg1, long jarg2, fmpz_factor_struct jarg2_);
  public final static native void fmpz_factor_expand_multiexp(long jarg1, long jarg2, fmpz_factor_struct jarg2_);
  public final static native void fmpz_factor_expand(long jarg1, long jarg2, fmpz_factor_struct jarg2_);
  public final static native void fmpz_factor_euler_phi(long jarg1, long jarg2, fmpz_factor_struct jarg2_);
  public final static native int fmpz_factor_moebius_mu(long jarg1, fmpz_factor_struct jarg1_);
  public final static native void fmpz_factor_divisor_sigma(long jarg1, long jarg2, fmpz_factor_struct jarg2_, long jarg3);
  public final static native void ecm_s_t_set(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native long ecm_s_t_get(long jarg1, ecm_s jarg1_);
  public final static native void ecm_s_u_set(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native long ecm_s_u_get(long jarg1, ecm_s jarg1_);
  public final static native void ecm_s_v_set(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native long ecm_s_v_get(long jarg1, ecm_s jarg1_);
  public final static native void ecm_s_w_set(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native long ecm_s_w_get(long jarg1, ecm_s jarg1_);
  public final static native void ecm_s_x_set(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native long ecm_s_x_get(long jarg1, ecm_s jarg1_);
  public final static native void ecm_s_z_set(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native long ecm_s_z_get(long jarg1, ecm_s jarg1_);
  public final static native void ecm_s_a24_set(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native long ecm_s_a24_get(long jarg1, ecm_s jarg1_);
  public final static native void ecm_s_ninv_set(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native long ecm_s_ninv_get(long jarg1, ecm_s jarg1_);
  public final static native void ecm_s_one_set(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native long ecm_s_one_get(long jarg1, ecm_s jarg1_);
  public final static native void ecm_s_GCD_table_set(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native long ecm_s_GCD_table_get(long jarg1, ecm_s jarg1_);
  public final static native void ecm_s_prime_table_set(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native long ecm_s_prime_table_get(long jarg1, ecm_s jarg1_);
  public final static native void ecm_s_n_size_set(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native long ecm_s_n_size_get(long jarg1, ecm_s jarg1_);
  public final static native void ecm_s_normbits_set(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native long ecm_s_normbits_get(long jarg1, ecm_s jarg1_);
  public final static native long new_ecm_s();
  public final static native void delete_ecm_s(long jarg1);
  public final static native void fmpz_factor_ecm_init(long jarg1, ecm_s jarg1_, long jarg2);
  public final static native void fmpz_factor_ecm_clear(long jarg1, ecm_s jarg1_);
  public final static native void fmpz_factor_ecm_addmod(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void fmpz_factor_ecm_submod(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void fmpz_factor_ecm_double(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, ecm_s jarg6_);
  public final static native void fmpz_factor_ecm_add(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, long jarg10, ecm_s jarg10_);
  public final static native void fmpz_factor_ecm_mul_montgomery_ladder(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, ecm_s jarg7_);
  public final static native int fmpz_factor_ecm_select_curve(long jarg1, long jarg2, long jarg3, long jarg4, ecm_s jarg4_);
  public final static native int fmpz_factor_ecm_stage_I(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, ecm_s jarg6_);
  public final static native int fmpz_factor_ecm_stage_II(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, ecm_s jarg6_);
  public final static native int fmpz_factor_ecm(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, flint_rand_s jarg5_, long jarg6);
  public final static native void fmpz_factor_get_fmpz(long jarg1, long jarg2, fmpz_factor_struct jarg2_, int jarg3);
  public final static native long _mpf_vec_init(int jarg1, long jarg2);
  public final static native void _mpf_vec_clear(long jarg1, __mpf_struct jarg1_, int jarg2);
  public final static native void _mpf_vec_randtest(long jarg1, __mpf_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, long jarg4);
  public final static native void _mpf_vec_zero(long jarg1, __mpf_struct jarg1_, int jarg2);
  public final static native void _mpf_vec_set(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, int jarg3);
  public final static native int _mpf_vec_equal(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, int jarg3);
  public final static native int _mpf_vec_approx_equal(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, int jarg3, long jarg4);
  public final static native int _mpf_vec_is_zero(long jarg1, __mpf_struct jarg1_, int jarg2);
  public final static native void _mpf_vec_add(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3, __mpf_struct jarg3_, int jarg4);
  public final static native void _mpf_vec_sub(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3, __mpf_struct jarg3_, int jarg4);
  public final static native void _mpf_vec_scalar_mul_2exp(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, int jarg3, long jarg4);
  public final static native void _mpf_vec_scalar_mul_mpf(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, int jarg3, long jarg4, __mpf_struct jarg4_);
  public final static native void _mpf_vec_dot(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3, __mpf_struct jarg3_, int jarg4);
  public final static native void _mpf_vec_norm(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, int jarg3);
  public final static native int _mpf_vec_dot2(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, long jarg3, __mpf_struct jarg3_, int jarg4, long jarg5);
  public final static native void _mpf_vec_norm2(long jarg1, __mpf_struct jarg1_, long jarg2, __mpf_struct jarg2_, int jarg3, long jarg4);
  public final static native long _fmpz_vec_init(int jarg1);
  public final static native void _fmpz_vec_clear(long jarg1, int jarg2);
  public final static native void _fmpz_vec_randtest(long jarg1, long jarg2, flint_rand_s jarg2_, int jarg3, long jarg4);
  public final static native void _fmpz_vec_randtest_unsigned(long jarg1, long jarg2, flint_rand_s jarg2_, int jarg3, long jarg4);
  public final static native int _fmpz_vec_max_bits(long jarg1, int jarg2);
  public final static native int _fmpz_vec_max_bits_ref(long jarg1, int jarg2);
  public final static native void _fmpz_vec_sum_max_bits(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int _fmpz_vec_max_limbs(long jarg1, int jarg2);
  public final static native void _fmpz_vec_height(long jarg1, long jarg2, int jarg3);
  public final static native int _fmpz_vec_height_index(long jarg1, int jarg2);
  public final static native int _fmpz_vec_fprint(long jarg1, _IO_FILE jarg1_, long jarg2, int jarg3);
  public final static native int _fmpz_vec_print(long jarg1, int jarg2);
  public final static native int _fmpz_vec_fread(long jarg1, _IO_FILE jarg1_, long jarg2, long jarg3);
  public final static native int _fmpz_vec_read(long jarg1, long jarg2);
  public final static native void _fmpz_vec_set_nmod_vec(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void _fmpz_vec_get_nmod_vec(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native int _fmpz_vec_get_fft(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void _fmpz_vec_set_fft(long jarg1, int jarg2, long jarg3, int jarg4, int jarg5);
  public final static native int _fmpz_vec_get_d_vec_2exp(long jarg1, long jarg2, int jarg3);
  public final static native void _fmpz_vec_get_mpf_vec(long jarg1, __mpf_struct jarg1_, long jarg2, int jarg3);
  public final static native void _fmpz_vec_set(long jarg1, long jarg2, int jarg3);
  public final static native void _fmpz_vec_swap(long jarg1, long jarg2, int jarg3);
  public final static native void _fmpz_vec_zero(long jarg1, int jarg2);
  public final static native void _fmpz_vec_neg(long jarg1, long jarg2, int jarg3);
  public final static native void _fmpz_vec_scalar_abs(long jarg1, long jarg2, int jarg3);
  public final static native int _fmpz_vec_equal(long jarg1, long jarg2, int jarg3);
  public final static native int _fmpz_vec_is_zero(long jarg1, int jarg2);
  public final static native void _fmpz_vec_max(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void _fmpz_vec_max_inplace(long jarg1, long jarg2, int jarg3);
  public final static native void _fmpz_vec_min(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void _fmpz_vec_min_inplace(long jarg1, long jarg2, int jarg3);
  public final static native void _fmpz_vec_sort(long jarg1, int jarg2);
  public final static native void _fmpz_vec_add(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void _fmpz_vec_sub(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void _fmpz_vec_scalar_mul_si(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void _fmpz_vec_scalar_mul_ui(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_mul_fmpz(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_mul_2exp(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_divexact_fmpz(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_divexact_si(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void _fmpz_vec_scalar_divexact_ui(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_fdiv_q_fmpz(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_fdiv_q_si(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void _fmpz_vec_scalar_fdiv_q_ui(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_fdiv_q_2exp(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_fdiv_r_2exp(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_tdiv_q_fmpz(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_tdiv_q_si(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void _fmpz_vec_scalar_tdiv_q_ui(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_tdiv_q_2exp(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_addmul_si(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void _fmpz_vec_scalar_addmul_fmpz(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_addmul_si_2exp(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void _fmpz_vec_scalar_submul_si(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void _fmpz_vec_scalar_submul_fmpz(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_submul_si_2exp(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5);
  public final static native void _fmpz_vec_sum(long jarg1, long jarg2, int jarg3);
  public final static native void _fmpz_vec_prod(long jarg1, long jarg2, int jarg3);
  public final static native void _fmpz_vec_scalar_mod_fmpz(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_scalar_smod_fmpz(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_vec_content(long jarg1, long jarg2, int jarg3);
  public final static native void _fmpz_vec_lcm(long jarg1, long jarg2, int jarg3);
  public final static native void _fmpz_vec_dot(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void _fmpz_vec_dot_ptr(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void fmpq_num_set(long jarg1, fmpq jarg1_, int jarg2);
  public final static native int fmpq_num_get(long jarg1, fmpq jarg1_);
  public final static native void fmpq_den_set(long jarg1, fmpq jarg1_, int jarg2);
  public final static native int fmpq_den_get(long jarg1, fmpq jarg1_);
  public final static native long new_fmpq();
  public final static native void delete_fmpq(long jarg1);
  public final static native void fmpq_init(long jarg1, fmpq jarg1_);
  public final static native void fmpq_clear(long jarg1, fmpq jarg1_);
  public final static native void fmpq_zero(long jarg1, fmpq jarg1_);
  public final static native void fmpq_one(long jarg1, fmpq jarg1_);
  public final static native int fmpq_equal(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_);
  public final static native int fmpq_sgn(long jarg1, fmpq jarg1_);
  public final static native int fmpq_is_zero(long jarg1, fmpq jarg1_);
  public final static native int fmpq_is_one(long jarg1, fmpq jarg1_);
  public final static native int fmpq_is_pm1(long jarg1, fmpq jarg1_);
  public final static native void fmpq_set(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_);
  public final static native void fmpq_swap(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_);
  public final static native void fmpq_neg(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_);
  public final static native void fmpq_abs(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_);
  public final static native int _fmpq_cmp(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int fmpq_cmp(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_);
  public final static native int _fmpq_cmp_fmpz(long jarg1, long jarg2, long jarg3);
  public final static native int fmpq_cmp_fmpz(long jarg1, fmpq jarg1_, long jarg2);
  public final static native int _fmpq_cmp_ui(long jarg1, long jarg2, long jarg3);
  public final static native int fmpq_cmp_ui(long jarg1, fmpq jarg1_, long jarg2);
  public final static native int _fmpq_cmp_si(long jarg1, long jarg2, int jarg3);
  public final static native int fmpq_cmp_si(long jarg1, fmpq jarg1_, int jarg2);
  public final static native void _fmpq_canonicalise(long jarg1, long jarg2);
  public final static native void fmpq_canonicalise(long jarg1, fmpq jarg1_);
  public final static native int _fmpq_is_canonical(long jarg1, long jarg2);
  public final static native int fmpq_is_canonical(long jarg1, fmpq jarg1_);
  public final static native void _fmpq_set_ui(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpq_set_ui(long jarg1, fmpq jarg1_, long jarg2, long jarg3);
  public final static native void _fmpq_set_si(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void fmpq_set_si(long jarg1, fmpq jarg1_, int jarg2, long jarg3);
  public final static native int fmpq_equal_ui(long jarg1, fmpq jarg1_, int jarg2);
  public final static native int fmpq_equal_si(long jarg1, fmpq jarg1_, int jarg2);
  public final static native void fmpq_set_fmpz_frac(long jarg1, fmpq jarg1_, long jarg2, long jarg3);
  public final static native int fmpq_set_str(long jarg1, fmpq jarg1_, String jarg2, int jarg3);
  public final static native void fmpq_set_mpq(long jarg1, fmpq jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native void fmpq_get_mpq(long jarg1, __mpq_struct jarg1_, long jarg2, fmpq jarg2_);
  public final static native double fmpq_get_d(long jarg1, fmpq jarg1_);
  public final static native int fmpq_get_mpfr(long jarg1, __mpfr_struct jarg1_, long jarg2, fmpq jarg2_, int jarg3);
  public final static native void fmpq_get_mpz_frac(long jarg1, __mpz_struct jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, fmpq jarg3_);
  public final static native void flint_mpq_init_set_readonly(long jarg1, __mpq_struct jarg1_, long jarg2, fmpq jarg2_);
  public final static native void flint_mpq_clear_readonly(long jarg1, __mpq_struct jarg1_);
  public final static native void fmpq_init_set_readonly(long jarg1, fmpq jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native void fmpq_clear_readonly(long jarg1, fmpq jarg1_);
  public final static native void fmpq_init_set_mpz_frac_readonly(long jarg1, fmpq jarg1_, long jarg2, __mpz_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native String _fmpq_get_str(String jarg1, int jarg2, long jarg3, long jarg4);
  public final static native String fmpq_get_str(String jarg1, int jarg2, long jarg3, fmpq jarg3_);
  public final static native int _fmpq_fprint(long jarg1, _IO_FILE jarg1_, long jarg2, long jarg3);
  public final static native int fmpq_fprint(long jarg1, _IO_FILE jarg1_, long jarg2, fmpq jarg2_);
  public final static native int _fmpq_print(long jarg1, long jarg2);
  public final static native int fmpq_print(long jarg1, fmpq jarg1_);
  public final static native void _fmpq_randtest(long jarg1, long jarg2, long jarg3, flint_rand_s jarg3_, long jarg4);
  public final static native void fmpq_randtest(long jarg1, fmpq jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void fmpq_randtest_not_zero(long jarg1, fmpq jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void _fmpq_randbits(long jarg1, long jarg2, long jarg3, flint_rand_s jarg3_, long jarg4);
  public final static native void fmpq_randbits(long jarg1, fmpq jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void _fmpq_add_small(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6);
  public final static native void _fmpq_mul_small(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6);
  public final static native void _fmpq_add(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void fmpq_add(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3, fmpq jarg3_);
  public final static native void _fmpq_add_si(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void fmpq_add_si(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, int jarg3);
  public final static native void _fmpq_add_ui(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void fmpq_add_ui(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3);
  public final static native void _fmpq_add_fmpz(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void fmpq_add_fmpz(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3);
  public final static native void _fmpq_sub(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void fmpq_sub(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3, fmpq jarg3_);
  public final static native void _fmpq_sub_si(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void fmpq_sub_si(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, int jarg3);
  public final static native void _fmpq_sub_ui(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void fmpq_sub_ui(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3);
  public final static native void _fmpq_sub_fmpz(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void fmpq_sub_fmpz(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3);
  public final static native void _fmpq_mul_si(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void fmpq_mul_si(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, int jarg3);
  public final static native void _fmpq_mul_ui(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void fmpq_mul_ui(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3);
  public final static native void _fmpq_mul(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void fmpq_mul(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3, fmpq jarg3_);
  public final static native void fmpq_mul_fmpz(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3);
  public final static native void _fmpq_pow_si(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void fmpq_pow_si(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, int jarg3);
  public final static native int fmpq_pow_fmpz(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3);
  public final static native void _fmpq_addmul(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void fmpq_addmul(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3, fmpq jarg3_);
  public final static native void _fmpq_submul(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void fmpq_submul(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3, fmpq jarg3_);
  public final static native void fmpq_inv(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_);
  public final static native void _fmpq_div(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void fmpq_div(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3, fmpq jarg3_);
  public final static native void fmpq_div_fmpz(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3);
  public final static native void fmpq_mul_2exp(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3);
  public final static native void fmpq_div_2exp(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3);
  public final static native int _fmpq_mod_fmpz(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int fmpq_mod_fmpz(long jarg1, long jarg2, fmpq jarg2_, long jarg3);
  public final static native void _fmpq_gcd(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void fmpq_gcd(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3, fmpq jarg3_);
  public final static native int _fmpq_reconstruct_fmpz(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native int fmpq_reconstruct_fmpz(long jarg1, fmpq jarg1_, long jarg2, long jarg3);
  public final static native int _fmpq_reconstruct_fmpz_2_naive(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native int _fmpq_reconstruct_fmpz_2(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native int fmpq_reconstruct_fmpz_2(long jarg1, fmpq jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long fmpq_height_bits(long jarg1, fmpq jarg1_);
  public final static native void fmpq_height(long jarg1, long jarg2, fmpq jarg2_);
  public final static native void _fmpq_next_calkin_wilf(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpq_next_calkin_wilf(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_);
  public final static native void _fmpq_next_signed_calkin_wilf(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpq_next_signed_calkin_wilf(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_);
  public final static native void _fmpq_next_minimal(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpq_next_minimal(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_);
  public final static native void _fmpq_next_signed_minimal(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void fmpq_next_signed_minimal(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_);
  public final static native void fmpq_farey_neighbors(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3, fmpq jarg3_, long jarg4);
  public final static native void fmpq_simplest_between(long jarg1, fmpq jarg1_, long jarg2, fmpq jarg2_, long jarg3, fmpq jarg3_);
  public final static native void _fmpq_simplest_between(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native int fmpq_get_cfrac_naive(long jarg1, long jarg2, fmpq jarg2_, long jarg3, fmpq jarg3_, int jarg4);
  public final static native int fmpq_get_cfrac(long jarg1, long jarg2, fmpq jarg2_, long jarg3, fmpq jarg3_, int jarg4);
  public final static native void fmpq_set_cfrac(long jarg1, fmpq jarg1_, long jarg2, int jarg3);
  public final static native int fmpq_cfrac_bound(long jarg1, fmpq jarg1_);
  public final static native void fmpq_dedekind_sum_naive(long jarg1, fmpq jarg1_, long jarg2, long jarg3);
  public final static native void fmpq_dedekind_sum(long jarg1, fmpq jarg1_, long jarg2, long jarg3);
  public final static native void _fmpq_harmonic_ui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpq_harmonic_ui(long jarg1, fmpq jarg1_, long jarg2);
  public final static native long _fmpq_vec_init(int jarg1);
  public final static native void _fmpq_vec_clear(long jarg1, fmpq jarg1_, int jarg2);
  public final static native void _fmpz_mat22_struct__11_set(long jarg1, _fmpz_mat22_struct jarg1_, long jarg2);
  public final static native long _fmpz_mat22_struct__11_get(long jarg1, _fmpz_mat22_struct jarg1_);
  public final static native void _fmpz_mat22_struct__12_set(long jarg1, _fmpz_mat22_struct jarg1_, long jarg2);
  public final static native long _fmpz_mat22_struct__12_get(long jarg1, _fmpz_mat22_struct jarg1_);
  public final static native void _fmpz_mat22_struct__21_set(long jarg1, _fmpz_mat22_struct jarg1_, long jarg2);
  public final static native long _fmpz_mat22_struct__21_get(long jarg1, _fmpz_mat22_struct jarg1_);
  public final static native void _fmpz_mat22_struct__22_set(long jarg1, _fmpz_mat22_struct jarg1_, long jarg2);
  public final static native long _fmpz_mat22_struct__22_get(long jarg1, _fmpz_mat22_struct jarg1_);
  public final static native void _fmpz_mat22_struct_det_set(long jarg1, _fmpz_mat22_struct jarg1_, int jarg2);
  public final static native int _fmpz_mat22_struct_det_get(long jarg1, _fmpz_mat22_struct jarg1_);
  public final static native long new__fmpz_mat22_struct();
  public final static native void delete__fmpz_mat22_struct(long jarg1);
  public final static native void _ui_mat22_struct__11_set(long jarg1, _ui_mat22_struct jarg1_, long jarg2);
  public final static native long _ui_mat22_struct__11_get(long jarg1, _ui_mat22_struct jarg1_);
  public final static native void _ui_mat22_struct__12_set(long jarg1, _ui_mat22_struct jarg1_, long jarg2);
  public final static native long _ui_mat22_struct__12_get(long jarg1, _ui_mat22_struct jarg1_);
  public final static native void _ui_mat22_struct__21_set(long jarg1, _ui_mat22_struct jarg1_, long jarg2);
  public final static native long _ui_mat22_struct__21_get(long jarg1, _ui_mat22_struct jarg1_);
  public final static native void _ui_mat22_struct__22_set(long jarg1, _ui_mat22_struct jarg1_, long jarg2);
  public final static native long _ui_mat22_struct__22_get(long jarg1, _ui_mat22_struct jarg1_);
  public final static native void _ui_mat22_struct_det_set(long jarg1, _ui_mat22_struct jarg1_, int jarg2);
  public final static native int _ui_mat22_struct_det_get(long jarg1, _ui_mat22_struct jarg1_);
  public final static native long new__ui_mat22_struct();
  public final static native void delete__ui_mat22_struct(long jarg1);
  public final static native void _fmpz_mat22_init(long jarg1, _fmpz_mat22_struct jarg1_);
  public final static native void _fmpz_mat22_clear(long jarg1, _fmpz_mat22_struct jarg1_);
  public final static native void _fmpz_mat22_one(long jarg1, _fmpz_mat22_struct jarg1_);
  public final static native int _fmpz_mat22_is_one(long jarg1, _fmpz_mat22_struct jarg1_);
  public final static native long _fmpz_mat22_bits(long jarg1, _fmpz_mat22_struct jarg1_);
  public final static native void _fmpz_mat22_rmul(long jarg1, _fmpz_mat22_struct jarg1_, long jarg2, _fmpz_mat22_struct jarg2_);
  public final static native void _fmpz_mat22_rmul_ui(long jarg1, _fmpz_mat22_struct jarg1_, long jarg2, _ui_mat22_struct jarg2_);
  public final static native void _fmpz_mat22_rmul_inv_ui(long jarg1, _fmpz_mat22_struct jarg1_, long jarg2, _ui_mat22_struct jarg2_);
  public final static native void _fmpz_mat22_rmul_elem(long jarg1, _fmpz_mat22_struct jarg1_, long jarg2);
  public final static native void _fmpz_mat22_rmul_inv_elem(long jarg1, _fmpz_mat22_struct jarg1_, long jarg2);
  public final static native void _fmpz_mat22_lmul_elem(long jarg1, _fmpz_mat22_struct jarg1_, long jarg2);
  public final static native void _fmpq_cfrac_list_struct_array_set(long jarg1, _fmpq_cfrac_list_struct jarg1_, long jarg2);
  public final static native long _fmpq_cfrac_list_struct_array_get(long jarg1, _fmpq_cfrac_list_struct jarg1_);
  public final static native void _fmpq_cfrac_list_struct_length_set(long jarg1, _fmpq_cfrac_list_struct jarg1_, int jarg2);
  public final static native int _fmpq_cfrac_list_struct_length_get(long jarg1, _fmpq_cfrac_list_struct jarg1_);
  public final static native void _fmpq_cfrac_list_struct_alloc_set(long jarg1, _fmpq_cfrac_list_struct jarg1_, int jarg2);
  public final static native int _fmpq_cfrac_list_struct_alloc_get(long jarg1, _fmpq_cfrac_list_struct jarg1_);
  public final static native void _fmpq_cfrac_list_struct_limit_set(long jarg1, _fmpq_cfrac_list_struct jarg1_, int jarg2);
  public final static native int _fmpq_cfrac_list_struct_limit_get(long jarg1, _fmpq_cfrac_list_struct jarg1_);
  public final static native void _fmpq_cfrac_list_struct_alt_sum_set(long jarg1, _fmpq_cfrac_list_struct jarg1_, long jarg2);
  public final static native long _fmpq_cfrac_list_struct_alt_sum_get(long jarg1, _fmpq_cfrac_list_struct jarg1_);
  public final static native void _fmpq_cfrac_list_struct_want_alt_sum_set(long jarg1, _fmpq_cfrac_list_struct jarg1_, int jarg2);
  public final static native int _fmpq_cfrac_list_struct_want_alt_sum_get(long jarg1, _fmpq_cfrac_list_struct jarg1_);
  public final static native long new__fmpq_cfrac_list_struct();
  public final static native void delete__fmpq_cfrac_list_struct(long jarg1);
  public final static native void _fmpq_cfrac_list_init(long jarg1, _fmpq_cfrac_list_struct jarg1_);
  public final static native void _fmpq_cfrac_list_clear(long jarg1, _fmpq_cfrac_list_struct jarg1_);
  public final static native void _fmpq_cfrac_list_fit_length(long jarg1, _fmpq_cfrac_list_struct jarg1_, int jarg2);
  public final static native void _fmpq_cfrac_list_push_back(long jarg1, _fmpq_cfrac_list_struct jarg1_, long jarg2);
  public final static native void _fmpq_cfrac_list_push_back_zero(long jarg1, _fmpq_cfrac_list_struct jarg1_);
  public final static native void _fmpq_cfrac_list_append_ui(long jarg1, _fmpq_cfrac_list_struct jarg1_, long jarg2, int jarg3);
  public final static native void _fmpq_cfrac_list_swap(long jarg1, _fmpq_cfrac_list_struct jarg1_, long jarg2, _fmpq_cfrac_list_struct jarg2_);
  public final static native void _fmpq_ball_struct_left_num_set(long jarg1, _fmpq_ball_struct jarg1_, long jarg2);
  public final static native long _fmpq_ball_struct_left_num_get(long jarg1, _fmpq_ball_struct jarg1_);
  public final static native void _fmpq_ball_struct_left_den_set(long jarg1, _fmpq_ball_struct jarg1_, long jarg2);
  public final static native long _fmpq_ball_struct_left_den_get(long jarg1, _fmpq_ball_struct jarg1_);
  public final static native void _fmpq_ball_struct_right_num_set(long jarg1, _fmpq_ball_struct jarg1_, long jarg2);
  public final static native long _fmpq_ball_struct_right_num_get(long jarg1, _fmpq_ball_struct jarg1_);
  public final static native void _fmpq_ball_struct_right_den_set(long jarg1, _fmpq_ball_struct jarg1_, long jarg2);
  public final static native long _fmpq_ball_struct_right_den_get(long jarg1, _fmpq_ball_struct jarg1_);
  public final static native void _fmpq_ball_struct_exact_set(long jarg1, _fmpq_ball_struct jarg1_, int jarg2);
  public final static native int _fmpq_ball_struct_exact_get(long jarg1, _fmpq_ball_struct jarg1_);
  public final static native long new__fmpq_ball_struct();
  public final static native void delete__fmpq_ball_struct(long jarg1);
  public final static native void _fmpq_ball_init(long jarg1, _fmpq_ball_struct jarg1_);
  public final static native void _fmpq_ball_clear(long jarg1, _fmpq_ball_struct jarg1_);
  public final static native void _fmpq_ball_swap(long jarg1, _fmpq_ball_struct jarg1_, long jarg2, _fmpq_ball_struct jarg2_);
  public final static native int _fmpq_ball_gt_one(long jarg1, _fmpq_ball_struct jarg1_);
  public final static native void _fmpq_hgcd(long jarg1, _fmpq_cfrac_list_struct jarg1_, long jarg2, _fmpz_mat22_struct jarg2_, long jarg3, long jarg4);
  public final static native void _fmpq_ball_get_cfrac(long jarg1, _fmpq_cfrac_list_struct jarg1_, long jarg2, _fmpz_mat22_struct jarg2_, int jarg3, long jarg4, _fmpq_ball_struct jarg4_);
  public final static native void fmpq_numerator(long jarg1, long jarg2, fmpq jarg2_);
  public final static native void fmpq_denominator(long jarg1, long jarg2, fmpq jarg2_);
  public final static native long fmpq_numerator_ptr(long jarg1, fmpq jarg1_);
  public final static native long fmpq_denominator_ptr(long jarg1, fmpq jarg1_);
  public final static native int fmpq_equal_fmpz(long jarg1, fmpq jarg1_, long jarg2);
  public final static native double arb_test_multiplier();
  public final static native void fmpz_add_inline(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_add_si_inline(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_sub_si_inline(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_add_ui_inline(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_add2_fmpz_si_inline(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void fmpz_set_mpn_large(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_adiv_q_2exp(long jarg1, long jarg2, long jarg3);
  public final static native void _fmpz_set_si_small(long jarg1, int jarg2);
  public final static native int _fmpz_sub_small_large(long jarg1, long jarg2);
  public final static native int _fmpz_sub_small(long jarg1, long jarg2);
  public final static native int _fmpz_size(long jarg1);
  public final static native void fmpz_ui_mul_ui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_ui_pow_ui(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_max(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_min(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_lshift_mpn(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5);
  public final static native int fmpz_allocated_bytes(long jarg1);
  public final static native int FMPR_RND_DOWN_get();
  public final static native int FMPR_RND_UP_get();
  public final static native int FMPR_RND_FLOOR_get();
  public final static native int FMPR_RND_CEIL_get();
  public final static native int FMPR_RND_NEAR_get();
  public final static native int rounds_up(int jarg1, int jarg2);
  public final static native int rnd_to_mpfr(int jarg1);
  public final static native void fmpr_struct_man_set(long jarg1, fmpr_struct jarg1_, int jarg2);
  public final static native int fmpr_struct_man_get(long jarg1, fmpr_struct jarg1_);
  public final static native void fmpr_struct_exp_set(long jarg1, fmpr_struct jarg1_, int jarg2);
  public final static native int fmpr_struct_exp_get(long jarg1, fmpr_struct jarg1_);
  public final static native long new_fmpr_struct();
  public final static native void delete_fmpr_struct(long jarg1);
  public final static native void fmpr_init(long jarg1, fmpr_struct jarg1_);
  public final static native void fmpr_clear(long jarg1, fmpr_struct jarg1_);
  public final static native int FMPR_EXP_POS_INF_get();
  public final static native int FMPR_EXP_NEG_INF_get();
  public final static native int FMPR_EXP_NAN_get();
  public final static native void fmpr_zero(long jarg1, fmpr_struct jarg1_);
  public final static native int fmpr_is_zero(long jarg1, fmpr_struct jarg1_);
  public final static native int fmpr_is_special(long jarg1, fmpr_struct jarg1_);
  public final static native int fmpr_is_normal(long jarg1, fmpr_struct jarg1_);
  public final static native int fmpr_is_inf(long jarg1, fmpr_struct jarg1_);
  public final static native int fmpr_is_pos_inf(long jarg1, fmpr_struct jarg1_);
  public final static native int fmpr_is_neg_inf(long jarg1, fmpr_struct jarg1_);
  public final static native int fmpr_is_nan(long jarg1, fmpr_struct jarg1_);
  public final static native int fmpr_is_finite(long jarg1, fmpr_struct jarg1_);
  public final static native void fmpr_pos_inf(long jarg1, fmpr_struct jarg1_);
  public final static native void fmpr_neg_inf(long jarg1, fmpr_struct jarg1_);
  public final static native void fmpr_nan(long jarg1, fmpr_struct jarg1_);
  public final static native int fmpr_is_one(long jarg1, fmpr_struct jarg1_);
  public final static native void fmpr_one(long jarg1, fmpr_struct jarg1_);
  public final static native int _fmpr_normalise_naive(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpr_set(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_);
  public final static native void fmpr_swap(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_);
  public final static native int _fmpr_set_round(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native int _fmpr_normalise(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int fmpr_set_round_naive(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4);
  public final static native int fmpr_set_round(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4);
  public final static native int fmpr_set_round_fmpz_2exp(long jarg1, fmpr_struct jarg1_, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_set_round_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native int _fmpr_set_round_mpn(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native int fmpr_set_round_ui_2exp_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6);
  public final static native int fmpr_set_round_uiui_2exp_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void fmpr_ulp(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3);
  public final static native int fmpr_check_ulp(long jarg1, fmpr_struct jarg1_, int jarg2, int jarg3);
  public final static native int fmpr_equal(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_);
  public final static native int fmpr_sgn(long jarg1, fmpr_struct jarg1_);
  public final static native int fmpr_cmp(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_);
  public final static native int fmpr_cmpabs(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_);
  public final static native int fmpr_cmpabs_ui(long jarg1, fmpr_struct jarg1_, long jarg2);
  public final static native void fmpr_randtest(long jarg1, fmpr_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void fmpr_randtest_not_zero(long jarg1, fmpr_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void fmpr_randtest_special(long jarg1, fmpr_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native int fmpr_get_mpfr(long jarg1, __mpfr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3);
  public final static native void fmpr_set_mpfr(long jarg1, fmpr_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native double fmpr_get_d(long jarg1, fmpr_struct jarg1_, int jarg2);
  public final static native void fmpr_set_d(long jarg1, fmpr_struct jarg1_, double jarg2);
  public final static native void fmpr_set_ui(long jarg1, fmpr_struct jarg1_, long jarg2);
  public final static native void fmpr_set_si(long jarg1, fmpr_struct jarg1_, int jarg2);
  public final static native void fmpr_set_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2);
  public final static native int _fmpr_add_eps(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int _fmpr_add_mpn(long jarg1, fmpr_struct jarg1_, long jarg2, int jarg3, int jarg4, long jarg5, long jarg6, int jarg7, int jarg8, long jarg9, int jarg10, int jarg11, int jarg12);
  public final static native int _fmpr_add_1x1(long jarg1, fmpr_struct jarg1_, long jarg2, int jarg3, long jarg4, long jarg5, int jarg6, long jarg7, int jarg8, int jarg9, int jarg10);
  public final static native int fmpr_add_naive(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, fmpr_struct jarg3_, int jarg4, int jarg5);
  public final static native int _fmpr_mul_mpn(long jarg1, fmpr_struct jarg1_, long jarg2, int jarg3, long jarg4, long jarg5, int jarg6, long jarg7, int jarg8, int jarg9, int jarg10);
  public final static native int _fmpr_mul_1x1(long jarg1, fmpr_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7, int jarg8);
  public final static native int fmpr_mul_naive(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, fmpr_struct jarg3_, int jarg4, int jarg5);
  public final static native int fmpr_mul(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, fmpr_struct jarg3_, int jarg4, int jarg5);
  public final static native int fmpr_mul_ui(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_mul_si(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int fmpr_mul_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_add(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, fmpr_struct jarg3_, int jarg4, int jarg5);
  public final static native int fmpr_add_ui(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_add_si(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int fmpr_add_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_sub(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, fmpr_struct jarg3_, int jarg4, int jarg5);
  public final static native int fmpr_sub_ui(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_sub_si(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int fmpr_sub_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_div(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, fmpr_struct jarg3_, int jarg4, int jarg5);
  public final static native int fmpr_div_ui(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_ui_div(long jarg1, fmpr_struct jarg1_, long jarg2, long jarg3, fmpr_struct jarg3_, int jarg4, int jarg5);
  public final static native int fmpr_div_si(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int fmpr_si_div(long jarg1, fmpr_struct jarg1_, int jarg2, long jarg3, fmpr_struct jarg3_, int jarg4, int jarg5);
  public final static native int fmpr_div_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_fmpz_div(long jarg1, fmpr_struct jarg1_, long jarg2, long jarg3, fmpr_struct jarg3_, int jarg4, int jarg5);
  public final static native int fmpr_fmpz_div_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_addmul(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, fmpr_struct jarg3_, int jarg4, int jarg5);
  public final static native int fmpr_addmul_ui(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_addmul_si(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int fmpr_addmul_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_submul(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, fmpr_struct jarg3_, int jarg4, int jarg5);
  public final static native int fmpr_submul_ui(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_submul_si(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int fmpr_submul_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_sqrt(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4);
  public final static native int fmpr_sqrt_ui(long jarg1, fmpr_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native int fmpr_sqrt_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native int fmpr_rsqrt(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4);
  public final static native int fmpr_root(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int fmpr_log(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4);
  public final static native int fmpr_log1p(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4);
  public final static native int fmpr_exp(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4);
  public final static native int fmpr_expm1(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4);
  public final static native void fmpr_neg(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_);
  public final static native int fmpr_neg_round(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4);
  public final static native void fmpr_abs(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_);
  public final static native void fmpr_set_error_result(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3);
  public final static native void fmpr_add_error_result(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, fmpr_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void fmpr_print(long jarg1, fmpr_struct jarg1_);
  public final static native void fmpr_printd(long jarg1, fmpr_struct jarg1_, int jarg2);
  public final static native void fmpr_mul_2exp_si(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3);
  public final static native void fmpr_mul_2exp_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3);
  public final static native void fmpr_get_fmpq(long jarg1, fmpq jarg1_, long jarg2, fmpr_struct jarg2_);
  public final static native int fmpr_set_fmpq(long jarg1, fmpr_struct jarg1_, long jarg2, fmpq jarg2_, int jarg3, int jarg4);
  public final static native void fmpr_get_fmpz(long jarg1, long jarg2, fmpr_struct jarg2_, int jarg3);
  public final static native int fmpr_get_si(long jarg1, fmpr_struct jarg1_, int jarg2);
  public final static native void fmpr_set_fmpz_2exp(long jarg1, fmpr_struct jarg1_, long jarg2, long jarg3);
  public final static native void fmpr_get_fmpz_2exp(long jarg1, long jarg2, long jarg3, fmpr_struct jarg3_);
  public final static native int fmpr_get_fmpz_fixed_fmpz(long jarg1, long jarg2, fmpr_struct jarg2_, long jarg3);
  public final static native int fmpr_get_fmpz_fixed_si(long jarg1, long jarg2, fmpr_struct jarg2_, int jarg3);
  public final static native void fmpr_set_si_2exp_si(long jarg1, fmpr_struct jarg1_, int jarg2, int jarg3);
  public final static native void fmpr_set_ui_2exp_si(long jarg1, fmpr_struct jarg1_, long jarg2, int jarg3);
  public final static native int fmpr_cmp_2exp_si(long jarg1, fmpr_struct jarg1_, int jarg2);
  public final static native int fmpr_cmpabs_2exp_si(long jarg1, fmpr_struct jarg1_, int jarg2);
  public final static native void fmpr_min(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, fmpr_struct jarg3_);
  public final static native void fmpr_max(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, fmpr_struct jarg3_);
  public final static native int fmpr_bits(long jarg1, fmpr_struct jarg1_);
  public final static native int fmpr_is_int(long jarg1, fmpr_struct jarg1_);
  public final static native int fmpr_is_int_2exp_si(long jarg1, fmpr_struct jarg1_, int jarg2);
  public final static native void fmpr_pow_sloppy_fmpz(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native void fmpr_pow_sloppy_ui(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native void fmpr_pow_sloppy_si(long jarg1, fmpr_struct jarg1_, long jarg2, fmpr_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native long _fmpr_vec_init(int jarg1);
  public final static native void _fmpr_vec_clear(long jarg1, fmpr_struct jarg1_, int jarg2);
  public final static native int MAG_MAX_LAGOM_EXP_get();
  public final static native int MAG_MIN_LAGOM_EXP_get();
  public final static native int ADD2_FAST_MAX_get();
  public final static native int ADD2_FAST_MIN_get();
  public final static native void _fmpz_set_fast(long jarg1, long jarg2);
  public final static native void _fmpz_add_fast(long jarg1, long jarg2, int jarg3);
  public final static native void _fmpz_add2_fast(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void _fmpz_sub2_fast(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int MAG_EXP_POS_INF_get();
  public final static native int MAG_BITS_get();
  public final static native long MAG_ONE_HALF_get();
  public final static native long __mag_fixmul32(long jarg1, long jarg2);
  public final static native void mag_struct_exp_set(long jarg1, mag_struct jarg1_, int jarg2);
  public final static native int mag_struct_exp_get(long jarg1, mag_struct jarg1_);
  public final static native void mag_struct_man_set(long jarg1, mag_struct jarg1_, long jarg2);
  public final static native long mag_struct_man_get(long jarg1, mag_struct jarg1_);
  public final static native long new_mag_struct();
  public final static native void delete_mag_struct(long jarg1);
  public final static native void mag_init(long jarg1, mag_struct jarg1_);
  public final static native void mag_init_set(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_clear(long jarg1, mag_struct jarg1_);
  public final static native void mag_swap(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_set(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_zero(long jarg1, mag_struct jarg1_);
  public final static native void mag_one(long jarg1, mag_struct jarg1_);
  public final static native int mag_is_special(long jarg1, mag_struct jarg1_);
  public final static native int mag_is_zero(long jarg1, mag_struct jarg1_);
  public final static native void mag_inf(long jarg1, mag_struct jarg1_);
  public final static native int mag_is_inf(long jarg1, mag_struct jarg1_);
  public final static native int mag_is_finite(long jarg1, mag_struct jarg1_);
  public final static native int mag_equal(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_mul(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native void mag_mul_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native void mag_addmul(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native void mag_add_2exp_fmpz(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_add(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native void mag_add_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native void mag_add_ui(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_add_ui_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_add_ui_2exp_si(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, int jarg4);
  public final static native void mag_div(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native void mag_div_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native void mag_inv(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_inv_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_mul_2exp_si(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, int jarg3);
  public final static native void mag_mul_2exp_fmpz(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_sub(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native void mag_sub_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native void mag_fast_init_set(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_fast_zero(long jarg1, mag_struct jarg1_);
  public final static native int mag_fast_is_zero(long jarg1, mag_struct jarg1_);
  public final static native void mag_fast_mul(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native void mag_fast_mul_2exp_si(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, int jarg3);
  public final static native void mag_fast_addmul(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native void mag_fast_add_2exp_si(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, int jarg3);
  public final static native void mag_set_d(long jarg1, mag_struct jarg1_, double jarg2);
  public final static native void mag_set_d_lower(long jarg1, mag_struct jarg1_, double jarg2);
  public final static native void mag_set_d_2exp_fmpz(long jarg1, mag_struct jarg1_, double jarg2, long jarg3);
  public final static native void mag_set_d_2exp_fmpz_lower(long jarg1, mag_struct jarg1_, double jarg2, long jarg3);
  public final static native void mag_set_fmpz_2exp_fmpz(long jarg1, mag_struct jarg1_, long jarg2, long jarg3);
  public final static native void mag_set_fmpr(long jarg1, mag_struct jarg1_, long jarg2, fmpr_struct jarg2_);
  public final static native void mag_get_fmpr(long jarg1, fmpr_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_randtest_special(long jarg1, mag_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native void mag_randtest(long jarg1, mag_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native void mag_fprint(long jarg1, _IO_FILE jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_fprintd(long jarg1, _IO_FILE jarg1_, long jarg2, mag_struct jarg2_, int jarg3);
  public final static native void mag_print(long jarg1, mag_struct jarg1_);
  public final static native void mag_printd(long jarg1, mag_struct jarg1_, int jarg2);
  public final static native void mag_get_fmpq(long jarg1, fmpq jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_get_fmpz(long jarg1, long jarg2, mag_struct jarg2_);
  public final static native void mag_get_fmpz_lower(long jarg1, long jarg2, mag_struct jarg2_);
  public final static native int mag_cmp(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native int mag_cmp_2exp_si(long jarg1, mag_struct jarg1_, int jarg2);
  public final static native void mag_min(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native void mag_max(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native long _mag_vec_init(int jarg1);
  public final static native void _mag_vec_clear(long jarg1, mag_struct jarg1_, int jarg2);
  public final static native double mag_get_d(long jarg1, mag_struct jarg1_);
  public final static native double mag_get_d_log2_approx(long jarg1, mag_struct jarg1_);
  public final static native double mag_d_log_upper_bound(double jarg1);
  public final static native double mag_d_log_lower_bound(double jarg1);
  public final static native void mag_log1p(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_log_ui(long jarg1, mag_struct jarg1_, long jarg2);
  public final static native void mag_log(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_log_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_neg_log(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_neg_log_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_exp(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_exp_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_expinv(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_expinv_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_expm1(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_exp_tail(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_sinh(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_sinh_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_cosh(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_cosh_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_pow_ui(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_pow_ui_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_pow_fmpz(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_pow_fmpz_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_const_pi(long jarg1, mag_struct jarg1_);
  public final static native void mag_const_pi_lower(long jarg1, mag_struct jarg1_);
  public final static native void mag_atan(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_atan_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_fac_ui(long jarg1, mag_struct jarg1_, long jarg2);
  public final static native void mag_rfac_ui(long jarg1, mag_struct jarg1_, long jarg2);
  public final static native void mag_bin_uiui(long jarg1, mag_struct jarg1_, long jarg2, long jarg3);
  public final static native void mag_bernoulli_div_fac_ui(long jarg1, mag_struct jarg1_, long jarg2);
  public final static native void mag_set_fmpz_2exp_fmpz_lower(long jarg1, mag_struct jarg1_, long jarg2, long jarg3);
  public final static native void mag_sqrt(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_sqrt_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_rsqrt(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_rsqrt_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_root(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_hypot(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_);
  public final static native void mag_binpow_uiui(long jarg1, mag_struct jarg1_, long jarg2, long jarg3);
  public final static native void mag_polylog_tail(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, int jarg3, long jarg4, long jarg5);
  public final static native void mag_geom_series(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_hurwitz_zeta_uiui(long jarg1, mag_struct jarg1_, long jarg2, long jarg3);
  public final static native void mag_set_ui(long jarg1, mag_struct jarg1_, long jarg2);
  public final static native void mag_set_ui_lower(long jarg1, mag_struct jarg1_, long jarg2);
  public final static native void mag_set_ui_2exp_si(long jarg1, mag_struct jarg1_, long jarg2, int jarg3);
  public final static native void mag_set_fmpz(long jarg1, mag_struct jarg1_, long jarg2);
  public final static native void mag_set_fmpz_lower(long jarg1, mag_struct jarg1_, long jarg2);
  public final static native void mag_mul_ui(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_mul_ui_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_mul_fmpz(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_mul_fmpz_lower(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_div_ui(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native void mag_div_fmpz(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3);
  public final static native int mag_allocated_bytes(long jarg1, mag_struct jarg1_);
  public final static native int mag_load_str(long jarg1, mag_struct jarg1_, String jarg2);
  public final static native String mag_dump_str(long jarg1, mag_struct jarg1_);
  public final static native int mag_load_file(long jarg1, mag_struct jarg1_, long jarg2, _IO_FILE jarg2_);
  public final static native int mag_dump_file(long jarg1, _IO_FILE jarg1_, long jarg2, mag_struct jarg2_);
  public final static native int ARF_RND_DOWN_get();
  public final static native int ARF_RND_UP_get();
  public final static native int ARF_RND_FLOOR_get();
  public final static native int ARF_RND_CEIL_get();
  public final static native int ARF_RND_NEAR_get();
  public final static native int arf_rounds_down(int jarg1, int jarg2);
  public final static native int arf_rounds_up(int jarg1, int jarg2);
  public final static native int arf_rnd_to_mpfr(int jarg1);
  public final static native int ARF_RESULT_EXACT_get();
  public final static native int ARF_RESULT_INEXACT_get();
  public final static native int ARF_MAX_LAGOM_EXP_get();
  public final static native int ARF_MIN_LAGOM_EXP_get();
  public final static native int ARF_EXP_ZERO_get();
  public final static native int ARF_EXP_NAN_get();
  public final static native int ARF_EXP_POS_INF_get();
  public final static native int ARF_EXP_NEG_INF_get();
  public final static native int ARF_NOPTR_LIMBS_get();
  public final static native void mantissa_noptr_struct_d_set(long jarg1, mantissa_noptr_struct jarg1_, long jarg2);
  public final static native long mantissa_noptr_struct_d_get(long jarg1, mantissa_noptr_struct jarg1_);
  public final static native long new_mantissa_noptr_struct();
  public final static native void delete_mantissa_noptr_struct(long jarg1);
  public final static native void mantissa_ptr_struct_alloc_set(long jarg1, mantissa_ptr_struct jarg1_, int jarg2);
  public final static native int mantissa_ptr_struct_alloc_get(long jarg1, mantissa_ptr_struct jarg1_);
  public final static native void mantissa_ptr_struct_d_set(long jarg1, mantissa_ptr_struct jarg1_, long jarg2);
  public final static native long mantissa_ptr_struct_d_get(long jarg1, mantissa_ptr_struct jarg1_);
  public final static native long new_mantissa_ptr_struct();
  public final static native void delete_mantissa_ptr_struct(long jarg1);
  public final static native void mantissa_struct_noptr_set(long jarg1, mantissa_struct jarg1_, long jarg2, mantissa_noptr_struct jarg2_);
  public final static native long mantissa_struct_noptr_get(long jarg1, mantissa_struct jarg1_);
  public final static native void mantissa_struct_ptr_set(long jarg1, mantissa_struct jarg1_, long jarg2, mantissa_ptr_struct jarg2_);
  public final static native long mantissa_struct_ptr_get(long jarg1, mantissa_struct jarg1_);
  public final static native long new_mantissa_struct();
  public final static native void delete_mantissa_struct(long jarg1);
  public final static native void arf_struct_exp_set(long jarg1, arf_struct jarg1_, int jarg2);
  public final static native int arf_struct_exp_get(long jarg1, arf_struct jarg1_);
  public final static native void arf_struct_size_set(long jarg1, arf_struct jarg1_, int jarg2);
  public final static native int arf_struct_size_get(long jarg1, arf_struct jarg1_);
  public final static native void arf_struct_d_set(long jarg1, arf_struct jarg1_, long jarg2, mantissa_struct jarg2_);
  public final static native long arf_struct_d_get(long jarg1, arf_struct jarg1_);
  public final static native long new_arf_struct();
  public final static native void delete_arf_struct(long jarg1);
  public final static native void _arf_promote(long jarg1, arf_struct jarg1_, int jarg2);
  public final static native void _arf_demote(long jarg1, arf_struct jarg1_);
  public final static native void arf_init(long jarg1, arf_struct jarg1_);
  public final static native void arf_clear(long jarg1, arf_struct jarg1_);
  public final static native void arf_zero(long jarg1, arf_struct jarg1_);
  public final static native void arf_pos_inf(long jarg1, arf_struct jarg1_);
  public final static native void arf_neg_inf(long jarg1, arf_struct jarg1_);
  public final static native void arf_nan(long jarg1, arf_struct jarg1_);
  public final static native int arf_is_special(long jarg1, arf_struct jarg1_);
  public final static native int arf_is_zero(long jarg1, arf_struct jarg1_);
  public final static native int arf_is_pos_inf(long jarg1, arf_struct jarg1_);
  public final static native int arf_is_neg_inf(long jarg1, arf_struct jarg1_);
  public final static native int arf_is_nan(long jarg1, arf_struct jarg1_);
  public final static native int arf_is_normal(long jarg1, arf_struct jarg1_);
  public final static native int arf_is_finite(long jarg1, arf_struct jarg1_);
  public final static native int arf_is_inf(long jarg1, arf_struct jarg1_);
  public final static native void arf_one(long jarg1, arf_struct jarg1_);
  public final static native int arf_is_one(long jarg1, arf_struct jarg1_);
  public final static native int arf_sgn(long jarg1, arf_struct jarg1_);
  public final static native int arf_cmp(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native int arf_cmpabs(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native int arf_cmpabs_ui(long jarg1, arf_struct jarg1_, long jarg2);
  public final static native int arf_cmpabs_d(long jarg1, arf_struct jarg1_, double jarg2);
  public final static native int arf_cmp_si(long jarg1, arf_struct jarg1_, int jarg2);
  public final static native int arf_cmp_ui(long jarg1, arf_struct jarg1_, long jarg2);
  public final static native int arf_cmp_d(long jarg1, arf_struct jarg1_, double jarg2);
  public final static native void arf_swap(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arf_set(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arf_neg(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arf_init_set_ui(long jarg1, arf_struct jarg1_, long jarg2);
  public final static native void arf_init_set_si(long jarg1, arf_struct jarg1_, int jarg2);
  public final static native void arf_set_ui(long jarg1, arf_struct jarg1_, long jarg2);
  public final static native void arf_set_si(long jarg1, arf_struct jarg1_, int jarg2);
  public final static native void arf_init_set_shallow(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arf_init_neg_shallow(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arf_init_set_mag_shallow(long jarg1, arf_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void arf_init_neg_mag_shallow(long jarg1, arf_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native int arf_cmpabs_mag(long jarg1, arf_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native int arf_mag_cmpabs(long jarg1, mag_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arf_set_mpn(long jarg1, arf_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void arf_set_mpz(long jarg1, arf_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native void arf_set_fmpz(long jarg1, arf_struct jarg1_, long jarg2);
  public final static native int _arf_set_round_ui(long jarg1, arf_struct jarg1_, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native int _arf_set_round_uiui(long jarg1, arf_struct jarg1_, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6, int jarg7);
  public final static native int _arf_set_round_mpn(long jarg1, arf_struct jarg1_, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native int arf_set_round_ui(long jarg1, arf_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native int arf_set_round_si(long jarg1, arf_struct jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int arf_set_round_mpz(long jarg1, arf_struct jarg1_, long jarg2, __mpz_struct jarg2_, int jarg3, int jarg4);
  public final static native int arf_set_round_fmpz(long jarg1, arf_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native int arf_set_round(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3, int jarg4);
  public final static native int arf_neg_round(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3, int jarg4);
  public final static native void arf_get_fmpr(long jarg1, fmpr_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arf_set_fmpr(long jarg1, arf_struct jarg1_, long jarg2, fmpr_struct jarg2_);
  public final static native int arf_get_mpfr(long jarg1, __mpfr_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3);
  public final static native void arf_set_mpfr(long jarg1, arf_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int arf_equal(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native int arf_equal_si(long jarg1, arf_struct jarg1_, int jarg2);
  public final static native void arf_min(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_);
  public final static native void arf_max(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_);
  public final static native void arf_abs(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native int arf_bits(long jarg1, arf_struct jarg1_);
  public final static native void arf_bot(long jarg1, long jarg2, arf_struct jarg2_);
  public final static native int arf_is_int(long jarg1, arf_struct jarg1_);
  public final static native int arf_is_int_2exp_si(long jarg1, arf_struct jarg1_, int jarg2);
  public final static native int arf_cmp_2exp_si(long jarg1, arf_struct jarg1_, int jarg2);
  public final static native int arf_cmpabs_2exp_si(long jarg1, arf_struct jarg1_, int jarg2);
  public final static native void arf_set_si_2exp_si(long jarg1, arf_struct jarg1_, int jarg2, int jarg3);
  public final static native void arf_set_ui_2exp_si(long jarg1, arf_struct jarg1_, long jarg2, int jarg3);
  public final static native void arf_mul_2exp_si(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3);
  public final static native void arf_mul_2exp_fmpz(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3);
  public final static native int arf_set_round_fmpz_2exp(long jarg1, arf_struct jarg1_, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void arf_abs_bound_lt_2exp_fmpz(long jarg1, long jarg2, arf_struct jarg2_);
  public final static native void arf_abs_bound_le_2exp_fmpz(long jarg1, long jarg2, arf_struct jarg2_);
  public final static native int arf_abs_bound_lt_2exp_si(long jarg1, arf_struct jarg1_);
  public final static native void arf_frexp(long jarg1, arf_struct jarg1_, long jarg2, long jarg3, arf_struct jarg3_);
  public final static native void arf_get_fmpz_2exp(long jarg1, long jarg2, long jarg3, arf_struct jarg3_);
  public final static native int _arf_get_integer_mpn(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int _arf_set_mpn_fixed(long jarg1, arf_struct jarg1_, long jarg2, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native int arf_get_fmpz(long jarg1, long jarg2, arf_struct jarg2_, int jarg3);
  public final static native int arf_get_si(long jarg1, arf_struct jarg1_, int jarg2);
  public final static native int arf_get_fmpz_fixed_fmpz(long jarg1, long jarg2, arf_struct jarg2_, long jarg3);
  public final static native int arf_get_fmpz_fixed_si(long jarg1, long jarg2, arf_struct jarg2_, int jarg3);
  public final static native void arf_set_fmpz_2exp(long jarg1, arf_struct jarg1_, long jarg2, long jarg3);
  public final static native void arf_floor(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arf_ceil(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arf_debug(long jarg1, arf_struct jarg1_);
  public final static native void arf_fprint(long jarg1, _IO_FILE jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arf_fprintd(long jarg1, _IO_FILE jarg1_, long jarg2, arf_struct jarg2_, int jarg3);
  public final static native void arf_print(long jarg1, arf_struct jarg1_);
  public final static native void arf_printd(long jarg1, arf_struct jarg1_, int jarg2);
  public final static native void arf_randtest(long jarg1, arf_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void arf_randtest_not_zero(long jarg1, arf_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void arf_randtest_special(long jarg1, arf_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native int MUL_MPFR_MIN_LIMBS_get();
  public final static native int MUL_MPFR_MAX_LIMBS_get();
  public final static native int ARF_MUL_STACK_ALLOC_get();
  public final static native int ARF_MUL_TLS_ALLOC_get();
  public final static native void __arf_mul_tmp_set(long jarg1);
  public final static native long __arf_mul_tmp_get();
  public final static native void __arf_mul_alloc_set(int jarg1);
  public final static native int __arf_mul_alloc_get();
  public final static native void _arf_mul_tmp_cleanup();
  public final static native void arf_mul_special(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_);
  public final static native int arf_mul_via_mpfr(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_mul_rnd_any(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_mul_rnd_down(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native int arf_neg_mul(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_mul_ui(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int arf_mul_si(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int arf_mul_mpz(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, __mpz_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_mul_fmpz(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int ARF_ADD_STACK_ALLOC_get();
  public final static native int ARF_ADD_TLS_ALLOC_get();
  public final static native void __arf_add_tmp_set(long jarg1);
  public final static native long __arf_add_tmp_get();
  public final static native void __arf_add_alloc_set(int jarg1);
  public final static native int __arf_add_alloc_get();
  public final static native void _arf_add_tmp_cleanup();
  public final static native int _arf_add_mpn(long jarg1, arf_struct jarg1_, long jarg2, int jarg3, int jarg4, long jarg5, long jarg6, int jarg7, int jarg8, long jarg9, int jarg10, int jarg11);
  public final static native int arf_add(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_add_si(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int arf_add_ui(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int arf_add_fmpz(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int arf_add_fmpz_2exp(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native int arf_sub(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_sub_si(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int arf_sub_ui(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int arf_sub_fmpz(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int arf_addmul(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_addmul_ui(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int arf_addmul_si(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int arf_addmul_mpz(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, __mpz_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_addmul_fmpz(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int arf_submul(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_submul_ui(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int arf_submul_si(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int arf_submul_mpz(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, __mpz_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_submul_fmpz(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int arf_sosq(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_div(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_div_ui(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int arf_ui_div(long jarg1, arf_struct jarg1_, long jarg2, long jarg3, arf_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_div_si(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int arf_si_div(long jarg1, arf_struct jarg1_, int jarg2, long jarg3, arf_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_div_fmpz(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native int arf_fmpz_div(long jarg1, arf_struct jarg1_, long jarg2, long jarg3, arf_struct jarg3_, int jarg4, int jarg5);
  public final static native int arf_fmpz_div_fmpz(long jarg1, arf_struct jarg1_, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native int arf_sqrt(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3, int jarg4);
  public final static native int arf_sqrt_ui(long jarg1, arf_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native int arf_sqrt_fmpz(long jarg1, arf_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native int arf_rsqrt(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3, int jarg4);
  public final static native int arf_root(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native void arf_get_mag(long jarg1, mag_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arf_get_mag_lower(long jarg1, mag_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arf_set_mag(long jarg1, arf_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void mag_init_set_arf(long jarg1, mag_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void mag_fast_init_set_arf(long jarg1, mag_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arf_mag_fast_add_ulp(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native void arf_mag_add_ulp(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native void arf_mag_set_ulp(long jarg1, mag_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3);
  public final static native void arf_get_fmpq(long jarg1, fmpq jarg1_, long jarg2, arf_struct jarg2_);
  public final static native int arf_set_fmpq(long jarg1, arf_struct jarg1_, long jarg2, fmpq jarg2_, int jarg3, int jarg4);
  public final static native int arf_complex_mul(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, long jarg4, arf_struct jarg4_, long jarg5, arf_struct jarg5_, long jarg6, arf_struct jarg6_, int jarg7, int jarg8);
  public final static native int arf_complex_mul_fallback(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, long jarg4, arf_struct jarg4_, long jarg5, arf_struct jarg5_, long jarg6, arf_struct jarg6_, int jarg7, int jarg8);
  public final static native int arf_complex_sqr(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, long jarg4, arf_struct jarg4_, int jarg5, int jarg6);
  public final static native int arf_sum(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native double arf_get_d(long jarg1, arf_struct jarg1_, int jarg2);
  public final static native void arf_set_d(long jarg1, arf_struct jarg1_, double jarg2);
  public final static native int arf_allocated_bytes(long jarg1, arf_struct jarg1_);
  public final static native int arf_load_str(long jarg1, arf_struct jarg1_, String jarg2);
  public final static native String arf_dump_str(long jarg1, arf_struct jarg1_);
  public final static native int arf_load_file(long jarg1, arf_struct jarg1_, long jarg2, _IO_FILE jarg2_);
  public final static native int arf_dump_file(long jarg1, _IO_FILE jarg1_, long jarg2, arf_struct jarg2_);
  public final static native int __ARB_VERSION_get();
  public final static native int __ARB_VERSION_MINOR_get();
  public final static native int __ARB_VERSION_PATCHLEVEL_get();
  public final static native String ARB_VERSION_get();
  public final static native int __ARB_RELEASE_get();
  public final static native void arb_version_set(String jarg1);
  public final static native String arb_version_get();
  public final static native void arb_struct_mid_set(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native long arb_struct_mid_get(long jarg1, arb_struct jarg1_);
  public final static native void arb_struct_rad_set(long jarg1, arb_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native long arb_struct_rad_get(long jarg1, arb_struct jarg1_);
  public final static native long new_arb_struct();
  public final static native void delete_arb_struct(long jarg1);
  public final static native int ARB_RND_get();
  public final static native void arb_init(long jarg1, arb_struct jarg1_);
  public final static native void arb_clear(long jarg1, arb_struct jarg1_);
  public final static native long _arb_vec_init(int jarg1);
  public final static native void _arb_vec_clear(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native long arb_mid_ptr(long jarg1, arb_struct jarg1_);
  public final static native long arb_rad_ptr(long jarg1, arb_struct jarg1_);
  public final static native int arb_is_exact(long jarg1, arb_struct jarg1_);
  public final static native int arb_equal(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native int arb_equal_si(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native int arb_eq(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native int arb_ne(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native int arb_lt(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native int arb_le(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native int arb_gt(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native int arb_ge(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_zero(long jarg1, arb_struct jarg1_);
  public final static native int arb_is_zero(long jarg1, arb_struct jarg1_);
  public final static native void arb_pos_inf(long jarg1, arb_struct jarg1_);
  public final static native void arb_neg_inf(long jarg1, arb_struct jarg1_);
  public final static native void arb_zero_pm_inf(long jarg1, arb_struct jarg1_);
  public final static native void arb_zero_pm_one(long jarg1, arb_struct jarg1_);
  public final static native void arb_unit_interval(long jarg1, arb_struct jarg1_);
  public final static native void arb_indeterminate(long jarg1, arb_struct jarg1_);
  public final static native int arb_is_finite(long jarg1, arb_struct jarg1_);
  public final static native void arb_set(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_swap(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_set_round(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_trim(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_neg(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_neg_round(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_abs(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_sgn(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native int arb_sgn_nonzero(long jarg1, arb_struct jarg1_);
  public final static native void _arb_digits_round_inplace(String jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native int arb_set_str(long jarg1, arb_struct jarg1_, String jarg2, int jarg3);
  public final static native long ARB_STR_MORE_get();
  public final static native long ARB_STR_NO_RADIUS_get();
  public final static native long ARB_STR_CONDENSE_get();
  public final static native String arb_get_str(long jarg1, arb_struct jarg1_, int jarg2, long jarg3);
  public final static native void arb_set_arf(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arb_set_si(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_set_ui(long jarg1, arb_struct jarg1_, long jarg2);
  public final static native void arb_set_d(long jarg1, arb_struct jarg1_, double jarg2);
  public final static native void arb_set_fmpz(long jarg1, arb_struct jarg1_, long jarg2);
  public final static native void arb_set_fmpz_2exp(long jarg1, arb_struct jarg1_, long jarg2, long jarg3);
  public final static native void arb_set_round_fmpz_2exp(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void arb_set_round_fmpz(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native int arb_is_one(long jarg1, arb_struct jarg1_);
  public final static native void arb_one(long jarg1, arb_struct jarg1_);
  public final static native void arb_fprint(long jarg1, _IO_FILE jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_fprintd(long jarg1, _IO_FILE jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_fprintn(long jarg1, _IO_FILE jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4);
  public final static native void arb_print(long jarg1, arb_struct jarg1_);
  public final static native void arb_printd(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_printn(long jarg1, arb_struct jarg1_, int jarg2, long jarg3);
  public final static native void arb_mul_2exp_si(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_mul_2exp_fmpz(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3);
  public final static native int arb_is_int(long jarg1, arb_struct jarg1_);
  public final static native int arb_is_int_2exp_si(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native int arb_contains_zero(long jarg1, arb_struct jarg1_);
  public final static native int arb_is_nonzero(long jarg1, arb_struct jarg1_);
  public final static native int arb_is_positive(long jarg1, arb_struct jarg1_);
  public final static native int arb_is_nonnegative(long jarg1, arb_struct jarg1_);
  public final static native int arb_is_negative(long jarg1, arb_struct jarg1_);
  public final static native int arb_is_nonpositive(long jarg1, arb_struct jarg1_);
  public final static native int arb_contains_negative(long jarg1, arb_struct jarg1_);
  public final static native int arb_contains_nonpositive(long jarg1, arb_struct jarg1_);
  public final static native int arb_contains_positive(long jarg1, arb_struct jarg1_);
  public final static native int arb_contains_nonnegative(long jarg1, arb_struct jarg1_);
  public final static native void arb_get_mag_lower(long jarg1, mag_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_get_mag_lower_nonnegative(long jarg1, mag_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_get_mag(long jarg1, mag_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_get_mid_arb(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_get_rad_arb(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_get_abs_ubound_arf(long jarg1, arf_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_get_abs_lbound_arf(long jarg1, arf_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_get_ubound_arf(long jarg1, arf_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_get_lbound_arf(long jarg1, arf_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_nonnegative_part(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native int arb_rel_error_bits(long jarg1, arb_struct jarg1_);
  public final static native int arb_rel_accuracy_bits(long jarg1, arb_struct jarg1_);
  public final static native int arb_rel_one_accuracy_bits(long jarg1, arb_struct jarg1_);
  public final static native int arb_bits(long jarg1, arb_struct jarg1_);
  public final static native void arb_randtest_exact(long jarg1, arb_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void arb_randtest_wide(long jarg1, arb_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void arb_randtest_precise(long jarg1, arb_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void arb_randtest(long jarg1, arb_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void arb_randtest_special(long jarg1, arb_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void arb_add_error_arf(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void arb_add_error_2exp_si(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_add_error_2exp_fmpz(long jarg1, arb_struct jarg1_, long jarg2);
  public final static native void arb_add_error(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_add_error_mag(long jarg1, arb_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native int arb_contains_arf(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native int arb_contains_fmpq(long jarg1, arb_struct jarg1_, long jarg2, fmpq jarg2_);
  public final static native int arb_contains_fmpz(long jarg1, arb_struct jarg1_, long jarg2);
  public final static native int arb_contains_si(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native int arb_contains_mpfr(long jarg1, arb_struct jarg1_, long jarg2, __mpfr_struct jarg2_);
  public final static native int arb_overlaps(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native int arb_contains(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native int arb_contains_interior(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native int arb_contains_int(long jarg1, arb_struct jarg1_);
  public final static native void arb_get_interval_fmpz_2exp(long jarg1, long jarg2, long jarg3, long jarg4, arb_struct jarg4_);
  public final static native int arb_get_unique_fmpz(long jarg1, long jarg2, arb_struct jarg2_);
  public final static native void arb_get_fmpz_mid_rad_10exp(long jarg1, long jarg2, long jarg3, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void arb_floor(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_ceil(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_set_interval_arf(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native void arb_set_interval_mpfr(long jarg1, arb_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, __mpfr_struct jarg3_, int jarg4);
  public final static native void arb_get_interval_arf(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_get_interval_mpfr(long jarg1, __mpfr_struct jarg1_, long jarg2, __mpfr_struct jarg2_, long jarg3, arb_struct jarg3_);
  public final static native void arb_set_interval_mag(long jarg1, arb_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_, int jarg4);
  public final static native void arb_set_interval_neg_pos_mag(long jarg1, arb_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, mag_struct jarg3_, int jarg4);
  public final static native void arb_union(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native int arb_intersection(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_get_rand_fmpq(long jarg1, fmpq jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_min(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_max(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native int arb_can_round_arf(long jarg1, arb_struct jarg1_, int jarg2, int jarg3);
  public final static native int arb_can_round_mpfr(long jarg1, arb_struct jarg1_, int jarg2, int jarg3);
  public final static native void arb_add(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_add_arf(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native void arb_add_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_add_si(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_add_fmpz(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_add_fmpz_2exp(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, long jarg4, int jarg5);
  public final static native void arb_sub(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_sub_arf(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native void arb_sub_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_sub_si(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_sub_fmpz(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_mul(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_mul_arf(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native void arb_mul_si(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_mul_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_mul_fmpz(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_addmul(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_addmul_arf(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native void arb_addmul_si(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_addmul_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_addmul_fmpz(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_submul(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_submul_arf(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native void arb_submul_si(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_submul_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_submul_fmpz(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_dot_simple(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, long jarg6, arb_struct jarg6_, int jarg7, int jarg8, int jarg9);
  public final static native void arb_dot_precise(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, long jarg6, arb_struct jarg6_, int jarg7, int jarg8, int jarg9);
  public final static native void arb_dot(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, long jarg6, arb_struct jarg6_, int jarg7, int jarg8, int jarg9);
  public final static native void arb_approx_dot(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, long jarg6, arb_struct jarg6_, int jarg7, int jarg8, int jarg9);
  public final static native void arb_div(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_div_arf(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native void arb_div_si(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_div_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_div_fmpz(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_fmpz_div_fmpz(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void arb_ui_div(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_inv(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_set_fmpq(long jarg1, arb_struct jarg1_, long jarg2, fmpq jarg2_, int jarg3);
  public final static native void arb_sqrt(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_sqrt_arf(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3);
  public final static native void arb_sqrt_fmpz(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_sqrt_ui(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_sqrtpos(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_hypot(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_rsqrt(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_rsqrt_ui(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_sqrt1pm1(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_pow_fmpz_binexp(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_pow_fmpz(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_pow_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_ui_pow_ui(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void arb_si_pow_ui(long jarg1, arb_struct jarg1_, int jarg2, long jarg3, int jarg4);
  public final static native void arb_pow_fmpq(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, fmpq jarg3_, int jarg4);
  public final static native void arb_div_2expm1_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_pow(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_root_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_root(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_log(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_log_arf(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3);
  public final static native void arb_log_ui(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_log_fmpz(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_log1p(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_log_base_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_log_hypot(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_exp(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_expm1(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_exp_invexp(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_sin(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_cos(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_sin_cos(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_sin_pi(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_cos_pi(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_sin_cos_pi(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_tan(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_cot(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_tan_pi(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_cot_pi(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void _arb_sin_pi_fmpq_algebraic(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void _arb_cos_pi_fmpq_algebraic(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void _arb_sin_cos_pi_fmpq_algebraic(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, long jarg4, int jarg5);
  public final static native void arb_sin_cos_pi_fmpq(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, fmpq jarg3_, int jarg4);
  public final static native void arb_sin_pi_fmpq(long jarg1, arb_struct jarg1_, long jarg2, fmpq jarg2_, int jarg3);
  public final static native void arb_cos_pi_fmpq(long jarg1, arb_struct jarg1_, long jarg2, fmpq jarg2_, int jarg3);
  public final static native void arb_sinc(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_sinc_pi(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_sinh(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_cosh(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_sinh_cosh(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_tanh(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_coth(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_atan_arf(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3);
  public final static native void arb_atan(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_atan2(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_asin(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_acos(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_atanh(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_asinh(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_acosh(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_sec(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_csc(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_sech(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_csch(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_fac_ui(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_doublefac_ui(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_bin_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_bin_uiui(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void arb_fib_fmpz(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_fib_ui(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_const_pi(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_const_sqrt_pi(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_const_log_sqrt2pi(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_const_log2(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_const_log10(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_const_euler(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_const_catalan(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_const_e(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_const_khinchin(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_const_glaisher(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_agm(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_lgamma(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_rgamma(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_gamma(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_gamma_fmpq(long jarg1, arb_struct jarg1_, long jarg2, fmpq jarg2_, int jarg3);
  public final static native void arb_gamma_fmpz(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_digamma(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_zeta(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_hurwitz_zeta(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_rising_ui_bs(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_rising_ui_rs(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, long jarg4, int jarg5);
  public final static native void arb_rising_ui_rec(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_rising_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, int jarg4);
  public final static native void arb_rising_fmpq_ui(long jarg1, arb_struct jarg1_, long jarg2, fmpq jarg2_, long jarg3, int jarg4);
  public final static native void arb_rising(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_rising2_ui_rs(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, long jarg4, long jarg5, int jarg6);
  public final static native void arb_rising2_ui_bs(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, long jarg4, int jarg5);
  public final static native void arb_rising2_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, long jarg4, int jarg5);
  public final static native void arb_log_ui_from_prev(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, arb_struct jarg3_, long jarg4, int jarg5);
  public final static native void arb_const_apery(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void arb_zeta_ui_asymp(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_zeta_ui_borwein_bsplit(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_zeta_ui_euler_product(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_zeta_ui_bernoulli(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_zeta_ui_vec_borwein(long jarg1, arb_struct jarg1_, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void arb_zeta_ui(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_zeta_ui_vec_even(long jarg1, arb_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void arb_zeta_ui_vec_odd(long jarg1, arb_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void arb_zeta_ui_vec(long jarg1, arb_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void arb_bernoulli_ui(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_bernoulli_ui_zeta(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_bernoulli_fmpz(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_bernoulli_poly_ui(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_polylog(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_polylog_si(long jarg1, arb_struct jarg1_, int jarg2, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_chebyshev_t_ui(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_chebyshev_t2_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void arb_chebyshev_u_ui(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_chebyshev_u2_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void arb_power_sum_vec(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void arb_bell_sum_taylor(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void arb_bell_sum_bsplit(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void arb_bell_fmpz(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_bell_ui(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_euler_number_fmpz(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_euler_number_ui(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_partitions_fmpz(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_partitions_ui(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void arb_lambertw(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_sqr(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native long _arb_vec_entry_ptr(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void _arb_vec_zero(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native int _arb_vec_is_zero(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native int _arb_vec_is_finite(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void _arb_vec_set(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void _arb_vec_set_round(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_vec_swap(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void _arb_vec_neg(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void _arb_vec_sub(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_vec_add(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_vec_scalar_mul(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void _arb_vec_scalar_div(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void _arb_vec_scalar_mul_fmpz(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, int jarg5);
  public final static native void _arb_vec_scalar_mul_2exp_si(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_vec_scalar_addmul(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void _arb_vec_get_mag(long jarg1, mag_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native int _arb_vec_bits(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void _arb_vec_set_powers(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_vec_add_error_arf_vec(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3);
  public final static native void _arb_vec_add_error_mag_vec(long jarg1, arb_struct jarg1_, long jarg2, mag_struct jarg2_, int jarg3);
  public final static native void _arb_vec_indeterminate(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native void _arb_vec_trim(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native int _arb_vec_get_unique_fmpz_vec(long jarg1, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native int ARB_ATAN_TAB1_BITS_get();
  public final static native int ARB_ATAN_TAB1_PREC_get();
  public final static native int ARB_ATAN_TAB1_LIMBS_get();
  public final static native int ARB_ATAN_TAB21_BITS_get();
  public final static native int ARB_ATAN_TAB22_BITS_get();
  public final static native int ARB_ATAN_TAB2_PREC_get();
  public final static native int ARB_ATAN_TAB2_LIMBS_get();
  public final static native long arb_atan_tab1_get();
  public final static native long arb_atan_tab21_get();
  public final static native long arb_atan_tab22_get();
  public final static native long arb_atan_pi2_minus_one_get();
  public final static native void _arb_atan_taylor_naive(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6);
  public final static native void _arb_atan_taylor_rs(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6);
  public final static native int ARB_LOG_TAB11_BITS_get();
  public final static native int ARB_LOG_TAB12_BITS_get();
  public final static native int ARB_LOG_TAB1_PREC_get();
  public final static native int ARB_LOG_TAB1_LIMBS_get();
  public final static native int ARB_LOG_TAB21_BITS_get();
  public final static native int ARB_LOG_TAB22_BITS_get();
  public final static native int ARB_LOG_TAB2_PREC_get();
  public final static native int ARB_LOG_TAB2_LIMBS_get();
  public final static native long arb_log_tab11_get();
  public final static native long arb_log_tab12_get();
  public final static native long arb_log_tab21_get();
  public final static native long arb_log_tab22_get();
  public final static native long arb_log_log2_tab_get();
  public final static native int ARB_EXP_TAB1_NUM_get();
  public final static native int ARB_EXP_TAB1_BITS_get();
  public final static native int ARB_EXP_TAB1_PREC_get();
  public final static native int ARB_EXP_TAB1_LIMBS_get();
  public final static native int ARB_EXP_TAB21_NUM_get();
  public final static native int ARB_EXP_TAB21_BITS_get();
  public final static native int ARB_EXP_TAB22_BITS_get();
  public final static native int ARB_EXP_TAB2_PREC_get();
  public final static native int ARB_EXP_TAB2_LIMBS_get();
  public final static native long arb_exp_tab1_get();
  public final static native long arb_exp_tab21_get();
  public final static native long arb_exp_tab22_get();
  public final static native void _arb_exp_taylor_naive(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5);
  public final static native void _arb_exp_taylor_rs(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5);
  public final static native void arb_exp_arf_bb(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_exp_arf_rs_generic(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3, int jarg4);
  public final static native int _arb_get_mpn_fixed_mod_log2(long jarg1, long jarg2, long jarg3, long jarg4, arf_struct jarg4_, int jarg5);
  public final static native int _arb_exp_taylor_bound(int jarg1, int jarg2);
  public final static native void _arb_exp_sum_bs_powtab(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void _arb_exp_sum_bs_simple(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native int ARB_SIN_COS_TAB1_NUM_get();
  public final static native int ARB_SIN_COS_TAB1_BITS_get();
  public final static native int ARB_SIN_COS_TAB1_PREC_get();
  public final static native int ARB_SIN_COS_TAB1_LIMBS_get();
  public final static native int ARB_SIN_COS_TAB21_NUM_get();
  public final static native int ARB_SIN_COS_TAB21_BITS_get();
  public final static native int ARB_SIN_COS_TAB22_BITS_get();
  public final static native int ARB_SIN_COS_TAB2_PREC_get();
  public final static native int ARB_SIN_COS_TAB2_LIMBS_get();
  public final static native long arb_sin_cos_tab1_get();
  public final static native long arb_sin_cos_tab21_get();
  public final static native long arb_sin_cos_tab22_get();
  public final static native int ARB_PI4_TAB_LIMBS_get();
  public final static native long arb_pi4_tab_get();
  public final static native void _arb_sin_cos_taylor_naive(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6);
  public final static native void _arb_sin_cos_taylor_rs(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7, int jarg8);
  public final static native int _arb_get_mpn_fixed_mod_pi4(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, arf_struct jarg5_, int jarg6);
  public final static native void arb_sin_cos_arf_bb(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native void arb_sin_cos_arf_rs_generic(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native void arb_sin_cos_arf_generic(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native void _arb_sin_cos_wide(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arf_struct jarg3_, long jarg4, mag_struct jarg4_, int jarg5);
  public final static native void arb_sin_cos_wide(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void _arb_sin_cos_generic(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arf_struct jarg3_, long jarg4, mag_struct jarg4_, int jarg5);
  public final static native void arb_sin_cos_generic(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native long _arb_mpn_leading_zeros(long jarg1, int jarg2);
  public final static native void _arb_atan_sum_bs_simple(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void _arb_atan_sum_bs_powtab(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void arb_atan_arf_bb(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3);
  public final static native int arb_allocated_bytes(long jarg1, arb_struct jarg1_);
  public final static native int _arb_vec_allocated_bytes(long jarg1, arb_struct jarg1_, int jarg2);
  public final static native double _arb_vec_estimate_allocated_bytes(int jarg1, int jarg2);
  public final static native int arb_load_str(long jarg1, arb_struct jarg1_, String jarg2);
  public final static native String arb_dump_str(long jarg1, arb_struct jarg1_);
  public final static native int arb_load_file(long jarg1, arb_struct jarg1_, long jarg2, _IO_FILE jarg2_);
  public final static native int arb_dump_file(long jarg1, _IO_FILE jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void acb_struct_real_set(long jarg1, acb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native long acb_struct_real_get(long jarg1, acb_struct jarg1_);
  public final static native void acb_struct_imag_set(long jarg1, acb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native long acb_struct_imag_get(long jarg1, acb_struct jarg1_);
  public final static native long new_acb_struct();
  public final static native void delete_acb_struct(long jarg1);
  public final static native void acb_init(long jarg1, acb_struct jarg1_);
  public final static native void acb_clear(long jarg1, acb_struct jarg1_);
  public final static native long _acb_vec_init(int jarg1);
  public final static native void _acb_vec_clear(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native long acb_real_ptr(long jarg1, acb_struct jarg1_);
  public final static native long acb_imag_ptr(long jarg1, acb_struct jarg1_);
  public final static native void acb_get_real(long jarg1, arb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_get_imag(long jarg1, arb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_get_mid(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native int acb_is_zero(long jarg1, acb_struct jarg1_);
  public final static native int acb_is_one(long jarg1, acb_struct jarg1_);
  public final static native int acb_is_exact(long jarg1, acb_struct jarg1_);
  public final static native int acb_is_int(long jarg1, acb_struct jarg1_);
  public final static native int acb_is_int_2exp_si(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native void acb_zero(long jarg1, acb_struct jarg1_);
  public final static native void acb_one(long jarg1, acb_struct jarg1_);
  public final static native void acb_onei(long jarg1, acb_struct jarg1_);
  public final static native void acb_set(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_set_round(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_neg_round(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_swap(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native int acb_equal(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native int acb_equal_si(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native int acb_eq(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native int acb_ne(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native int acb_overlaps(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native int acb_contains_zero(long jarg1, acb_struct jarg1_);
  public final static native int acb_contains_fmpq(long jarg1, acb_struct jarg1_, long jarg2, fmpq jarg2_);
  public final static native int acb_contains_fmpz(long jarg1, acb_struct jarg1_, long jarg2);
  public final static native int acb_contains(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native int acb_contains_interior(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_set_ui(long jarg1, acb_struct jarg1_, long jarg2);
  public final static native void acb_set_d(long jarg1, acb_struct jarg1_, double jarg2);
  public final static native void acb_set_si(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native void acb_set_si_si(long jarg1, acb_struct jarg1_, int jarg2, int jarg3);
  public final static native void acb_set_d_d(long jarg1, acb_struct jarg1_, double jarg2, double jarg3);
  public final static native void acb_set_fmpz(long jarg1, acb_struct jarg1_, long jarg2);
  public final static native void acb_set_fmpz_fmpz(long jarg1, acb_struct jarg1_, long jarg2, long jarg3);
  public final static native void acb_set_round_fmpz(long jarg1, acb_struct jarg1_, long jarg2, int jarg3);
  public final static native int acb_contains_int(long jarg1, acb_struct jarg1_);
  public final static native int acb_get_unique_fmpz(long jarg1, long jarg2, acb_struct jarg2_);
  public final static native void acb_set_fmpq(long jarg1, acb_struct jarg1_, long jarg2, fmpq jarg2_, int jarg3);
  public final static native void acb_set_arb(long jarg1, acb_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void acb_set_arb_arb(long jarg1, acb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_);
  public final static native void acb_set_round_arb(long jarg1, acb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void acb_trim(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_add_error_arf(long jarg1, acb_struct jarg1_, long jarg2, arf_struct jarg2_);
  public final static native void acb_add_error_mag(long jarg1, acb_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native void acb_get_mag(long jarg1, mag_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_get_mag_lower(long jarg1, mag_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_get_abs_ubound_arf(long jarg1, arf_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_get_abs_lbound_arf(long jarg1, arf_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_get_rad_ubound_arf(long jarg1, arf_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_union(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_arg(long jarg1, arb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_sgn(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_csgn(long jarg1, arb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_real_abs(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_real_sgn(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_real_heaviside(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_real_floor(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_real_ceil(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_real_max(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_real_min(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_real_sqrtpos(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_sqrt_analytic(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_rsqrt_analytic(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_log_analytic(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_pow_analytic(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_add(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_sub(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_add_si(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_add_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_sub_si(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_sub_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_add_fmpz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_add_arb(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void acb_sub_fmpz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_sub_arb(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void acb_neg(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_conj(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_abs(long jarg1, arb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_mul_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_mul_si(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_mul_fmpz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_mul_arb(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void acb_mul_onei(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_div_onei(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_mul(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_mul_naive(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_mul_2exp_si(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_mul_2exp_fmpz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3);
  public final static native void acb_addmul(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_submul(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_addmul_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_addmul_si(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_submul_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_submul_si(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_addmul_fmpz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_submul_fmpz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_addmul_arb(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void acb_submul_arb(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void acb_dot_simple(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, long jarg6, acb_struct jarg6_, int jarg7, int jarg8, int jarg9);
  public final static native void acb_dot_precise(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, long jarg6, acb_struct jarg6_, int jarg7, int jarg8, int jarg9);
  public final static native void acb_dot(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, long jarg6, acb_struct jarg6_, int jarg7, int jarg8, int jarg9);
  public final static native void acb_approx_dot(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, long jarg6, acb_struct jarg6_, int jarg7, int jarg8, int jarg9);
  public final static native void acb_inv(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_div(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_div_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_div_si(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_div_arb(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void acb_div_fmpz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_cube(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_pow_fmpz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_pow_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_pow_si(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_const_pi(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native void acb_log(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_log1p(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_exp(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_exp_pi_i(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_exp_invexp(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_expm1(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_sin(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_cos(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_sin_cos(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_tan(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_cot(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_asin(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_acos(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_atan(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_asinh(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_acosh(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_atanh(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_sinh(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_cosh(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_sinh_cosh(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_tanh(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_coth(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_sech(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_csch(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_sec(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_csc(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_sin_pi(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_cos_pi(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_sin_cos_pi(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_tan_pi(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_cot_pi(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_sinc(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_sinc_pi(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_pow_arb(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void acb_pow(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_sqrt(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_rsqrt(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_root_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_quadratic_roots_fmpz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void acb_chebyshev_t_ui(long jarg1, acb_struct jarg1_, long jarg2, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_chebyshev_t2_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void acb_chebyshev_u_ui(long jarg1, acb_struct jarg1_, long jarg2, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_chebyshev_u2_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void acb_rising_ui_bs(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_rising_ui_rs(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, long jarg4, int jarg5);
  public final static native void acb_rising_ui_rec(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_rising_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_rising(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_rising2_ui_bs(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, long jarg4, int jarg5);
  public final static native void acb_rising2_ui_rs(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, long jarg4, long jarg5, int jarg6);
  public final static native void acb_rising2_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, long jarg4, int jarg5);
  public final static native void acb_rising_ui_get_mag(long jarg1, mag_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3);
  public final static native void acb_gamma(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_rgamma(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_lgamma(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_log_sin_pi(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_digamma(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_zeta(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_hurwitz_zeta(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_polygamma(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_bernoulli_poly_ui(long jarg1, acb_struct jarg1_, long jarg2, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_log_barnes_g(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_barnes_g(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_polylog(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_polylog_si(long jarg1, acb_struct jarg1_, int jarg2, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_agm1(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_agm1_cpx(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_agm(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native int ACB_LAMBERTW_LEFT_get();
  public final static native int ACB_LAMBERTW_MIDDLE_get();
  public final static native void acb_lambertw_asymp(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4, int jarg5, int jarg6);
  public final static native int acb_lambertw_check_branch(long jarg1, acb_struct jarg1_, long jarg2, int jarg3);
  public final static native void acb_lambertw_bound_deriv(long jarg1, mag_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, long jarg4);
  public final static native void acb_lambertw(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native void acb_sqr(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native int acb_is_finite(long jarg1, acb_struct jarg1_);
  public final static native void acb_indeterminate(long jarg1, acb_struct jarg1_);
  public final static native long _acb_vec_entry_ptr(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native void _acb_vec_zero(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native int _acb_vec_is_zero(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native void _acb_vec_set(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void _acb_vec_set_round(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_vec_neg(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void _acb_vec_add(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_vec_sub(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_vec_scalar_submul(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void _acb_vec_scalar_addmul(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void _acb_vec_scalar_mul(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void _acb_vec_scalar_mul_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, int jarg5);
  public final static native void _acb_vec_scalar_mul_2exp_si(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_vec_scalar_mul_onei(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void _acb_vec_scalar_div_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, int jarg5);
  public final static native void _acb_vec_scalar_div(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void _acb_vec_scalar_mul_arb(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void _acb_vec_scalar_div_arb(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void _acb_vec_scalar_mul_fmpz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, int jarg5);
  public final static native void _acb_vec_scalar_div_fmpz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, int jarg5);
  public final static native void acb_fprint(long jarg1, _IO_FILE jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_print(long jarg1, acb_struct jarg1_);
  public final static native void acb_fprintd(long jarg1, _IO_FILE jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_printd(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native void acb_fprintn(long jarg1, _IO_FILE jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4);
  public final static native void acb_printn(long jarg1, acb_struct jarg1_, int jarg2, long jarg3);
  public final static native void acb_randtest(long jarg1, acb_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void acb_randtest_special(long jarg1, acb_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void acb_randtest_precise(long jarg1, acb_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void acb_randtest_param(long jarg1, acb_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native int acb_rel_error_bits(long jarg1, acb_struct jarg1_);
  public final static native int acb_rel_accuracy_bits(long jarg1, acb_struct jarg1_);
  public final static native int acb_rel_one_accuracy_bits(long jarg1, acb_struct jarg1_);
  public final static native int acb_bits(long jarg1, acb_struct jarg1_);
  public final static native int acb_is_real(long jarg1, acb_struct jarg1_);
  public final static native int _acb_vec_is_real(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native int _acb_vec_bits(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native void _acb_vec_set_powers(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_vec_add_error_arf_vec(long jarg1, acb_struct jarg1_, long jarg2, arf_struct jarg2_, int jarg3);
  public final static native void _acb_vec_add_error_mag_vec(long jarg1, acb_struct jarg1_, long jarg2, mag_struct jarg2_, int jarg3);
  public final static native void _acb_vec_indeterminate(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native void _acb_vec_trim(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native int _acb_vec_get_unique_fmpz_vec(long jarg1, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void _acb_vec_sort_pretty(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native void acb_unit_root(long jarg1, acb_struct jarg1_, long jarg2, int jarg3);
  public final static native void _acb_vec_unit_roots(long jarg1, acb_struct jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int acb_allocated_bytes(long jarg1, acb_struct jarg1_);
  public final static native int _acb_vec_allocated_bytes(long jarg1, acb_struct jarg1_, int jarg2);
  public final static native double _acb_vec_estimate_allocated_bytes(int jarg1, int jarg2);
  public final static native void thread_pool_entry_struct_pth_set(long jarg1, thread_pool_entry_struct jarg1_, long jarg2);
  public final static native long thread_pool_entry_struct_pth_get(long jarg1, thread_pool_entry_struct jarg1_);
  public final static native void thread_pool_entry_struct_mutex_set(long jarg1, thread_pool_entry_struct jarg1_, long jarg2, pthread_mutex_t jarg2_);
  public final static native long thread_pool_entry_struct_mutex_get(long jarg1, thread_pool_entry_struct jarg1_);
  public final static native void thread_pool_entry_struct_sleep1_set(long jarg1, thread_pool_entry_struct jarg1_, long jarg2, pthread_cond_t jarg2_);
  public final static native long thread_pool_entry_struct_sleep1_get(long jarg1, thread_pool_entry_struct jarg1_);
  public final static native void thread_pool_entry_struct_sleep2_set(long jarg1, thread_pool_entry_struct jarg1_, long jarg2, pthread_cond_t jarg2_);
  public final static native long thread_pool_entry_struct_sleep2_get(long jarg1, thread_pool_entry_struct jarg1_);
  public final static native void thread_pool_entry_struct_idx_set(long jarg1, thread_pool_entry_struct jarg1_, int jarg2);
  public final static native int thread_pool_entry_struct_idx_get(long jarg1, thread_pool_entry_struct jarg1_);
  public final static native void thread_pool_entry_struct_available_set(long jarg1, thread_pool_entry_struct jarg1_, int jarg2);
  public final static native int thread_pool_entry_struct_available_get(long jarg1, thread_pool_entry_struct jarg1_);
  public final static native void thread_pool_entry_struct_max_workers_set(long jarg1, thread_pool_entry_struct jarg1_, int jarg2);
  public final static native int thread_pool_entry_struct_max_workers_get(long jarg1, thread_pool_entry_struct jarg1_);
  public final static native void thread_pool_entry_struct_fxn_set(long jarg1, thread_pool_entry_struct jarg1_, long jarg2);
  public final static native long thread_pool_entry_struct_fxn_get(long jarg1, thread_pool_entry_struct jarg1_);
  public final static native void thread_pool_entry_struct_fxnarg_set(long jarg1, thread_pool_entry_struct jarg1_, long jarg2);
  public final static native long thread_pool_entry_struct_fxnarg_get(long jarg1, thread_pool_entry_struct jarg1_);
  public final static native void thread_pool_entry_struct_working_set(long jarg1, thread_pool_entry_struct jarg1_, int jarg2);
  public final static native int thread_pool_entry_struct_working_get(long jarg1, thread_pool_entry_struct jarg1_);
  public final static native void thread_pool_entry_struct_exit_set(long jarg1, thread_pool_entry_struct jarg1_, int jarg2);
  public final static native int thread_pool_entry_struct_exit_get(long jarg1, thread_pool_entry_struct jarg1_);
  public final static native long new_thread_pool_entry_struct();
  public final static native void delete_thread_pool_entry_struct(long jarg1);
  public final static native void thread_pool_struct_original_affinity_set(long jarg1, thread_pool_struct jarg1_, long jarg2);
  public final static native long thread_pool_struct_original_affinity_get(long jarg1, thread_pool_struct jarg1_);
  public final static native void thread_pool_struct_mutex_set(long jarg1, thread_pool_struct jarg1_, long jarg2, pthread_mutex_t jarg2_);
  public final static native long thread_pool_struct_mutex_get(long jarg1, thread_pool_struct jarg1_);
  public final static native void thread_pool_struct_tdata_set(long jarg1, thread_pool_struct jarg1_, long jarg2, thread_pool_entry_struct jarg2_);
  public final static native long thread_pool_struct_tdata_get(long jarg1, thread_pool_struct jarg1_);
  public final static native void thread_pool_struct_length_set(long jarg1, thread_pool_struct jarg1_, int jarg2);
  public final static native int thread_pool_struct_length_get(long jarg1, thread_pool_struct jarg1_);
  public final static native long new_thread_pool_struct();
  public final static native void delete_thread_pool_struct(long jarg1);
  public final static native void global_thread_pool_set(long jarg1, thread_pool_struct jarg1_);
  public final static native long global_thread_pool_get();
  public final static native void global_thread_pool_initialized_set(int jarg1);
  public final static native int global_thread_pool_initialized_get();
  public final static native long thread_pool_idle_loop(long jarg1);
  public final static native void thread_pool_init(long jarg1, thread_pool_struct jarg1_, int jarg2);
  public final static native int thread_pool_set_affinity(long jarg1, thread_pool_struct jarg1_, long jarg2, int jarg3);
  public final static native int thread_pool_restore_affinity(long jarg1, thread_pool_struct jarg1_);
  public final static native int thread_pool_get_size(long jarg1, thread_pool_struct jarg1_);
  public final static native int thread_pool_set_size(long jarg1, thread_pool_struct jarg1_, int jarg2);
  public final static native int thread_pool_request(long jarg1, thread_pool_struct jarg1_, long jarg2, int jarg3);
  public final static native void thread_pool_wake(long jarg1, thread_pool_struct jarg1_, int jarg2, int jarg3, long jarg4, long jarg5);
  public final static native void thread_pool_wait(long jarg1, thread_pool_struct jarg1_, int jarg2);
  public final static native void thread_pool_give_back(long jarg1, thread_pool_struct jarg1_, int jarg2);
  public final static native void thread_pool_clear(long jarg1, thread_pool_struct jarg1_);
  public final static native int FLINT_DEFAULT_THREAD_LIMIT_get();
  public final static native int flint_request_threads(long jarg1, int jarg2);
  public final static native void flint_give_back_threads(long jarg1, int jarg2);
  public final static native void nmod_mat_struct_entries_set(long jarg1, nmod_mat_struct jarg1_, long jarg2);
  public final static native long nmod_mat_struct_entries_get(long jarg1, nmod_mat_struct jarg1_);
  public final static native void nmod_mat_struct_r_set(long jarg1, nmod_mat_struct jarg1_, int jarg2);
  public final static native int nmod_mat_struct_r_get(long jarg1, nmod_mat_struct jarg1_);
  public final static native void nmod_mat_struct_c_set(long jarg1, nmod_mat_struct jarg1_, int jarg2);
  public final static native int nmod_mat_struct_c_get(long jarg1, nmod_mat_struct jarg1_);
  public final static native void nmod_mat_struct_rows_set(long jarg1, nmod_mat_struct jarg1_, long jarg2);
  public final static native long nmod_mat_struct_rows_get(long jarg1, nmod_mat_struct jarg1_);
  public final static native void nmod_mat_struct_mod_set(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long nmod_mat_struct_mod_get(long jarg1, nmod_mat_struct jarg1_);
  public final static native long new_nmod_mat_struct();
  public final static native void delete_nmod_mat_struct(long jarg1);
  public final static native long nmod_mat_get_entry(long jarg1, nmod_mat_struct jarg1_, int jarg2, int jarg3);
  public final static native long nmod_mat_entry_ptr(long jarg1, nmod_mat_struct jarg1_, int jarg2, int jarg3);
  public final static native void nmod_mat_set_entry(long jarg1, nmod_mat_struct jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native int nmod_mat_nrows(long jarg1, nmod_mat_struct jarg1_);
  public final static native int nmod_mat_ncols(long jarg1, nmod_mat_struct jarg1_);
  public final static native void _nmod_mat_set_mod(long jarg1, nmod_mat_struct jarg1_, long jarg2);
  public final static native void nmod_mat_init(long jarg1, nmod_mat_struct jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native void nmod_mat_init_set(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native void nmod_mat_clear(long jarg1, nmod_mat_struct jarg1_);
  public final static native void nmod_mat_one(long jarg1, nmod_mat_struct jarg1_);
  public final static native void nmod_mat_swap(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native void nmod_mat_window_init(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void nmod_mat_window_clear(long jarg1, nmod_mat_struct jarg1_);
  public final static native void nmod_mat_concat_horizontal(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_);
  public final static native void nmod_mat_concat_vertical(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_);
  public final static native void nmod_mat_randtest(long jarg1, nmod_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_);
  public final static native void nmod_mat_randfull(long jarg1, nmod_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_);
  public final static native int nmod_mat_randpermdiag(long jarg1, nmod_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3, int jarg4);
  public final static native void nmod_mat_randrank(long jarg1, nmod_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native void nmod_mat_randops(long jarg1, nmod_mat_struct jarg1_, int jarg2, long jarg3, flint_rand_s jarg3_);
  public final static native void nmod_mat_randtril(long jarg1, nmod_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native void nmod_mat_randtriu(long jarg1, nmod_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native void nmod_mat_print_pretty(long jarg1, nmod_mat_struct jarg1_);
  public final static native int nmod_mat_equal(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native void nmod_mat_zero(long jarg1, nmod_mat_struct jarg1_);
  public final static native int nmod_mat_is_zero(long jarg1, nmod_mat_struct jarg1_);
  public final static native int nmod_mat_is_zero_row(long jarg1, nmod_mat_struct jarg1_, int jarg2);
  public final static native int nmod_mat_is_empty(long jarg1, nmod_mat_struct jarg1_);
  public final static native int nmod_mat_is_square(long jarg1, nmod_mat_struct jarg1_);
  public final static native void nmod_mat_set(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native void nmod_mat_transpose(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native void nmod_mat_add(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_);
  public final static native void nmod_mat_sub(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_);
  public final static native void nmod_mat_neg(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native void nmod_mat_scalar_mul(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3);
  public final static native void nmod_mat_scalar_mul_add(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, long jarg4, nmod_mat_struct jarg4_);
  public final static native void nmod_mat_scalar_mul_fmpz(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3);
  public final static native void nmod_mat_mul(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_);
  public final static native void nmod_mat_mul_classical(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_);
  public final static native void _nmod_mat_mul_classical_threaded_pool_op(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_, long jarg4, nmod_mat_struct jarg4_, int jarg5, long jarg6, int jarg7);
  public final static native void nmod_mat_mul_classical_threaded(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_);
  public final static native void nmod_mat_mul_strassen(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_);
  public final static native void _nmod_mat_mul_classical_op(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_, long jarg4, nmod_mat_struct jarg4_, int jarg5);
  public final static native void nmod_mat_addmul(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_, long jarg4, nmod_mat_struct jarg4_);
  public final static native void nmod_mat_submul(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_, long jarg4, nmod_mat_struct jarg4_);
  public final static native void _nmod_mat_pow(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3);
  public final static native void nmod_mat_pow(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3);
  public final static native long nmod_mat_trace(long jarg1, nmod_mat_struct jarg1_);
  public final static native long _nmod_mat_det(long jarg1, nmod_mat_struct jarg1_);
  public final static native long nmod_mat_det(long jarg1, nmod_mat_struct jarg1_);
  public final static native int nmod_mat_rank(long jarg1, nmod_mat_struct jarg1_);
  public final static native int nmod_mat_inv(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native void nmod_mat_swap_rows(long jarg1, nmod_mat_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void nmod_mat_invert_rows(long jarg1, nmod_mat_struct jarg1_, long jarg2);
  public final static native void nmod_mat_swap_cols(long jarg1, nmod_mat_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void nmod_mat_invert_cols(long jarg1, nmod_mat_struct jarg1_, long jarg2);
  public final static native void nmod_mat_apply_permutation(long jarg1, nmod_mat_struct jarg1_, long jarg2, int jarg3);
  public final static native void nmod_mat_solve_tril(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_, int jarg4);
  public final static native void nmod_mat_solve_tril_recursive(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_, int jarg4);
  public final static native void nmod_mat_solve_tril_classical(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_, int jarg4);
  public final static native void nmod_mat_solve_triu(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_, int jarg4);
  public final static native void nmod_mat_solve_triu_recursive(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_, int jarg4);
  public final static native void nmod_mat_solve_triu_classical(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_, int jarg4);
  public final static native int nmod_mat_lu(long jarg1, long jarg2, nmod_mat_struct jarg2_, int jarg3);
  public final static native int nmod_mat_lu_classical(long jarg1, long jarg2, nmod_mat_struct jarg2_, int jarg3);
  public final static native int nmod_mat_lu_recursive(long jarg1, long jarg2, nmod_mat_struct jarg2_, int jarg3);
  public final static native int nmod_mat_solve(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_mat_struct jarg3_);
  public final static native int nmod_mat_solve_vec(long jarg1, long jarg2, nmod_mat_struct jarg2_, long jarg3);
  public final static native int nmod_mat_rref(long jarg1, nmod_mat_struct jarg1_);
  public final static native int _nmod_mat_rref(long jarg1, nmod_mat_struct jarg1_, long jarg2, long jarg3);
  public final static native int nmod_mat_rref_classical(long jarg1, nmod_mat_struct jarg1_);
  public final static native int _nmod_mat_rref_classical(long jarg1, nmod_mat_struct jarg1_, long jarg2);
  public final static native int nmod_mat_rref_storjohann(long jarg1, nmod_mat_struct jarg1_);
  public final static native int _nmod_mat_rref_storjohann(long jarg1, nmod_mat_struct jarg1_, long jarg2);
  public final static native int nmod_mat_reduce_row(long jarg1, nmod_mat_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native int nmod_mat_nullspace(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native void nmod_mat_strong_echelon_form(long jarg1, nmod_mat_struct jarg1_);
  public final static native int nmod_mat_howell_form(long jarg1, nmod_mat_struct jarg1_);
  public final static native void nmod_mat_similarity(long jarg1, nmod_mat_struct jarg1_, int jarg2, long jarg3);
  public final static native int NMOD_MAT_MUL_TRANSPOSE_CUTOFF_get();
  public final static native int NMOD_MAT_SOLVE_TRI_ROWS_CUTOFF_get();
  public final static native int NMOD_MAT_SOLVE_TRI_COLS_CUTOFF_get();
  public final static native int NMOD_MAT_LU_RECURSIVE_CUTOFF_get();
  public final static native int NMOD_MAT_OPTIMAL_MODULUS_BITS_get();
  public final static native int NMOD_DIVREM_DIVCONQUER_CUTOFF_get();
  public final static native int NMOD_DIV_DIVCONQUER_CUTOFF_get();
  public final static native int NMOD_POLY_HGCD_CUTOFF_get();
  public final static native int NMOD_POLY_GCD_CUTOFF_get();
  public final static native int NMOD_POLY_SMALL_GCD_CUTOFF_get();
  public final static native int NMOD_DIVREM_BC_ITCH(int jarg1, int jarg2, long jarg3, nmod_t jarg3_);
  public final static native int NMOD_DIV_BC_ITCH(int jarg1, int jarg2, long jarg3, nmod_t jarg3_);
  public final static native int NMOD_DIVREM_DC_ITCH(int jarg1, long jarg2, nmod_t jarg2_);
  public final static native void nmod_poly_struct_coeffs_set(long jarg1, nmod_poly_struct jarg1_, long jarg2);
  public final static native long nmod_poly_struct_coeffs_get(long jarg1, nmod_poly_struct jarg1_);
  public final static native void nmod_poly_struct_alloc_set(long jarg1, nmod_poly_struct jarg1_, int jarg2);
  public final static native int nmod_poly_struct_alloc_get(long jarg1, nmod_poly_struct jarg1_);
  public final static native void nmod_poly_struct_length_set(long jarg1, nmod_poly_struct jarg1_, int jarg2);
  public final static native int nmod_poly_struct_length_get(long jarg1, nmod_poly_struct jarg1_);
  public final static native void nmod_poly_struct_mod_set(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long nmod_poly_struct_mod_get(long jarg1, nmod_poly_struct jarg1_);
  public final static native long new_nmod_poly_struct();
  public final static native void delete_nmod_poly_struct(long jarg1);
  public final static native void nmod_poly_res_struct_res_set(long jarg1, nmod_poly_res_struct jarg1_, long jarg2);
  public final static native long nmod_poly_res_struct_res_get(long jarg1, nmod_poly_res_struct jarg1_);
  public final static native void nmod_poly_res_struct_lc_set(long jarg1, nmod_poly_res_struct jarg1_, long jarg2);
  public final static native long nmod_poly_res_struct_lc_get(long jarg1, nmod_poly_res_struct jarg1_);
  public final static native void nmod_poly_res_struct_len0_set(long jarg1, nmod_poly_res_struct jarg1_, int jarg2);
  public final static native int nmod_poly_res_struct_len0_get(long jarg1, nmod_poly_res_struct jarg1_);
  public final static native void nmod_poly_res_struct_len1_set(long jarg1, nmod_poly_res_struct jarg1_, int jarg2);
  public final static native int nmod_poly_res_struct_len1_get(long jarg1, nmod_poly_res_struct jarg1_);
  public final static native void nmod_poly_res_struct_off_set(long jarg1, nmod_poly_res_struct jarg1_, int jarg2);
  public final static native int nmod_poly_res_struct_off_get(long jarg1, nmod_poly_res_struct jarg1_);
  public final static native long new_nmod_poly_res_struct();
  public final static native void delete_nmod_poly_res_struct(long jarg1);
  public final static native void nmod_poly_matrix_precompute_arg_t_A_set(long jarg1, nmod_poly_matrix_precompute_arg_t jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native long nmod_poly_matrix_precompute_arg_t_A_get(long jarg1, nmod_poly_matrix_precompute_arg_t jarg1_);
  public final static native void nmod_poly_matrix_precompute_arg_t_poly1_set(long jarg1, nmod_poly_matrix_precompute_arg_t jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_matrix_precompute_arg_t_poly1_get(long jarg1, nmod_poly_matrix_precompute_arg_t jarg1_);
  public final static native void nmod_poly_matrix_precompute_arg_t_poly2_set(long jarg1, nmod_poly_matrix_precompute_arg_t jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_matrix_precompute_arg_t_poly2_get(long jarg1, nmod_poly_matrix_precompute_arg_t jarg1_);
  public final static native void nmod_poly_matrix_precompute_arg_t_poly2inv_set(long jarg1, nmod_poly_matrix_precompute_arg_t jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_matrix_precompute_arg_t_poly2inv_get(long jarg1, nmod_poly_matrix_precompute_arg_t jarg1_);
  public final static native long new_nmod_poly_matrix_precompute_arg_t();
  public final static native void delete_nmod_poly_matrix_precompute_arg_t(long jarg1);
  public final static native void nmod_poly_compose_mod_precomp_preinv_arg_t_A_set(long jarg1, nmod_poly_compose_mod_precomp_preinv_arg_t jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native long nmod_poly_compose_mod_precomp_preinv_arg_t_A_get(long jarg1, nmod_poly_compose_mod_precomp_preinv_arg_t jarg1_);
  public final static native void nmod_poly_compose_mod_precomp_preinv_arg_t_res_set(long jarg1, nmod_poly_compose_mod_precomp_preinv_arg_t jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_compose_mod_precomp_preinv_arg_t_res_get(long jarg1, nmod_poly_compose_mod_precomp_preinv_arg_t jarg1_);
  public final static native void nmod_poly_compose_mod_precomp_preinv_arg_t_poly1_set(long jarg1, nmod_poly_compose_mod_precomp_preinv_arg_t jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_compose_mod_precomp_preinv_arg_t_poly1_get(long jarg1, nmod_poly_compose_mod_precomp_preinv_arg_t jarg1_);
  public final static native void nmod_poly_compose_mod_precomp_preinv_arg_t_poly3_set(long jarg1, nmod_poly_compose_mod_precomp_preinv_arg_t jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_compose_mod_precomp_preinv_arg_t_poly3_get(long jarg1, nmod_poly_compose_mod_precomp_preinv_arg_t jarg1_);
  public final static native void nmod_poly_compose_mod_precomp_preinv_arg_t_poly3inv_set(long jarg1, nmod_poly_compose_mod_precomp_preinv_arg_t jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_compose_mod_precomp_preinv_arg_t_poly3inv_get(long jarg1, nmod_poly_compose_mod_precomp_preinv_arg_t jarg1_);
  public final static native long new_nmod_poly_compose_mod_precomp_preinv_arg_t();
  public final static native void delete_nmod_poly_compose_mod_precomp_preinv_arg_t(long jarg1);
  public final static native int signed_mpn_sub_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void nmod_poly_init(long jarg1, nmod_poly_struct jarg1_, long jarg2);
  public final static native void nmod_poly_init_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, long jarg3);
  public final static native void nmod_poly_init2(long jarg1, nmod_poly_struct jarg1_, long jarg2, int jarg3);
  public final static native void nmod_poly_init2_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void nmod_poly_realloc(long jarg1, nmod_poly_struct jarg1_, int jarg2);
  public final static native void nmod_poly_clear(long jarg1, nmod_poly_struct jarg1_);
  public final static native void nmod_poly_fit_length(long jarg1, nmod_poly_struct jarg1_, int jarg2);
  public final static native void nmod_poly_init_mod(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native void nmod_poly_set_mod(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native void _nmod_poly_set_length(long jarg1, nmod_poly_struct jarg1_, int jarg2);
  public final static native void _nmod_poly_normalise(long jarg1, nmod_poly_struct jarg1_);
  public final static native int nmod_poly_length(long jarg1, nmod_poly_struct jarg1_);
  public final static native int nmod_poly_degree(long jarg1, nmod_poly_struct jarg1_);
  public final static native long nmod_poly_modulus(long jarg1, nmod_poly_struct jarg1_);
  public final static native long nmod_poly_max_bits(long jarg1, nmod_poly_struct jarg1_);
  public final static native long nmod_poly_lead(long jarg1, nmod_poly_struct jarg1_);
  public final static native void nmod_poly_set(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void nmod_poly_swap(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void nmod_poly_zero(long jarg1, nmod_poly_struct jarg1_);
  public final static native void nmod_poly_one(long jarg1, nmod_poly_struct jarg1_);
  public final static native void nmod_poly_truncate(long jarg1, nmod_poly_struct jarg1_, int jarg2);
  public final static native void nmod_poly_set_trunc(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_reverse(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void nmod_poly_reverse(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native int nmod_poly_equal(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native int nmod_poly_equal_trunc(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native int nmod_poly_is_zero(long jarg1, nmod_poly_struct jarg1_);
  public final static native int nmod_poly_is_one(long jarg1, nmod_poly_struct jarg1_);
  public final static native void nmod_poly_randtest(long jarg1, nmod_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native void nmod_poly_randtest_not_zero(long jarg1, nmod_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native void nmod_poly_randtest_irreducible(long jarg1, nmod_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native void nmod_poly_randtest_monic(long jarg1, nmod_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native void nmod_poly_randtest_monic_irreducible(long jarg1, nmod_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native void nmod_poly_randtest_monic_primitive(long jarg1, nmod_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native void nmod_poly_randtest_trinomial(long jarg1, nmod_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native int nmod_poly_randtest_trinomial_irreducible(long jarg1, nmod_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void nmod_poly_randtest_pentomial(long jarg1, nmod_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native int nmod_poly_randtest_pentomial_irreducible(long jarg1, nmod_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void nmod_poly_randtest_sparse_irreducible(long jarg1, nmod_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native long nmod_poly_get_coeff_ui(long jarg1, nmod_poly_struct jarg1_, int jarg2);
  public final static native void nmod_poly_set_coeff_ui(long jarg1, nmod_poly_struct jarg1_, int jarg2, long jarg3);
  public final static native String nmod_poly_get_str(long jarg1, nmod_poly_struct jarg1_);
  public final static native String nmod_poly_get_str_pretty(long jarg1, nmod_poly_struct jarg1_, String jarg2);
  public final static native int nmod_poly_set_str(long jarg1, nmod_poly_struct jarg1_, String jarg2);
  public final static native int nmod_poly_fread(long jarg1, _IO_FILE jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native int nmod_poly_fprint(long jarg1, _IO_FILE jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native int nmod_poly_fprint_pretty(long jarg1, _IO_FILE jarg1_, long jarg2, nmod_poly_struct jarg2_, String jarg3);
  public final static native int nmod_poly_print(long jarg1, nmod_poly_struct jarg1_);
  public final static native int nmod_poly_print_pretty(long jarg1, nmod_poly_struct jarg1_, String jarg2);
  public final static native int nmod_poly_read(long jarg1, nmod_poly_struct jarg1_);
  public final static native void _nmod_poly_shift_left(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void nmod_poly_shift_left(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_shift_right(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void nmod_poly_shift_right(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_add(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_add(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void nmod_poly_add_ui(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native void nmod_poly_add_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native void _nmod_poly_sub(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_sub(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void nmod_poly_sub_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native void nmod_poly_sub_ui(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native void nmod_poly_neg(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void nmod_poly_scalar_mul_nmod(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native void _nmod_poly_make_monic(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_make_monic(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void _nmod_poly_KS2_pack1(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, long jarg6, int jarg7);
  public final static native void _nmod_poly_KS2_pack(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, long jarg6, int jarg7);
  public final static native void _nmod_poly_KS2_unpack1(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5);
  public final static native void _nmod_poly_KS2_unpack2(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5);
  public final static native void _nmod_poly_KS2_unpack3(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5);
  public final static native void _nmod_poly_KS2_unpack(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5);
  public final static native void _nmod_poly_KS2_reduce(long jarg1, int jarg2, long jarg3, int jarg4, long jarg5, long jarg6, nmod_t jarg6_);
  public final static native void _nmod_poly_KS2_recover_reduce1(long jarg1, int jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void _nmod_poly_KS2_recover_reduce2(long jarg1, int jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void _nmod_poly_KS2_recover_reduce2b(long jarg1, int jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void _nmod_poly_KS2_recover_reduce3(long jarg1, int jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void _nmod_poly_KS2_recover_reduce(long jarg1, int jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void _nmod_poly_bit_pack(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _nmod_poly_bit_unpack(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_bit_pack(long jarg1, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native void nmod_poly_bit_unpack(long jarg1, nmod_poly_struct jarg1_, long jarg2, long jarg3);
  public final static native void _nmod_poly_mul_classical(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_mul_classical(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_mullow_classical(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_mullow_classical(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native void _nmod_poly_mulhigh_classical(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_mulhigh_classical(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native void _nmod_poly_mul_KS(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_mul_KS(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4);
  public final static native void _nmod_poly_mul_KS2(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_mul_KS2(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_mul_KS4(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_mul_KS4(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_mullow_KS(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, nmod_t jarg8_);
  public final static native void nmod_poly_mullow_KS(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, int jarg5);
  public final static native void _nmod_poly_mul(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_mul(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_mullow(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_mullow(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native void _nmod_poly_mulhigh(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_mulhigh(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native void _nmod_poly_mulmod(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, nmod_t jarg8_);
  public final static native void nmod_poly_mulmod(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_mulmod_preinv(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, int jarg9, long jarg10, nmod_t jarg10_);
  public final static native void nmod_poly_mulmod_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_, long jarg5, nmod_poly_struct jarg5_);
  public final static native int _nmod_poly_invmod(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native int nmod_poly_invmod(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_pow_binexp(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_pow_binexp(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native void _nmod_poly_pow(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_pow(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native void _nmod_poly_pow_trunc_binexp(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_pow_trunc_binexp(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, int jarg4);
  public final static native void _nmod_poly_pow_trunc(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_pow_trunc(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, int jarg4);
  public final static native void nmod_poly_powmod_ui_binexp(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_powmod_ui_binexp(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_powmod_fmpz_binexp(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_powmod_fmpz_binexp(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void _nmod_poly_powmod_mpz_binexp(long jarg1, long jarg2, long jarg3, __mpz_struct jarg3_, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_powmod_mpz_binexp(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, __mpz_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_powmod_ui_binexp_preinv(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, nmod_t jarg8_);
  public final static native void nmod_poly_powmod_ui_binexp_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, long jarg4, nmod_poly_struct jarg4_, long jarg5, nmod_poly_struct jarg5_);
  public final static native void _nmod_poly_powmod_fmpz_binexp_preinv(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, nmod_t jarg8_);
  public final static native void nmod_poly_powmod_fmpz_binexp_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, long jarg4, nmod_poly_struct jarg4_, long jarg5, nmod_poly_struct jarg5_);
  public final static native void _nmod_poly_powmod_x_ui_preinv(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_powmod_x_ui_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_powmod_mpz_binexp_preinv(long jarg1, long jarg2, long jarg3, __mpz_struct jarg3_, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, nmod_t jarg8_);
  public final static native void nmod_poly_powmod_mpz_binexp_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, __mpz_struct jarg3_, long jarg4, nmod_poly_struct jarg4_, long jarg5, nmod_poly_struct jarg5_);
  public final static native void _nmod_poly_powmod_x_fmpz_preinv(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_powmod_x_fmpz_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_powers_mod_preinv_naive(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, int jarg6, long jarg7, int jarg8, long jarg9, nmod_t jarg9_);
  public final static native void nmod_poly_powers_mod_naive(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_powers_mod_preinv_threaded_pool(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, int jarg6, long jarg7, int jarg8, long jarg9, nmod_t jarg9_, long jarg10, int jarg11);
  public final static native void _nmod_poly_powers_mod_preinv_threaded(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, int jarg6, long jarg7, int jarg8, long jarg9, nmod_t jarg9_);
  public final static native void nmod_poly_powers_mod_bsgs(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_divrem_basecase(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, nmod_t jarg8_);
  public final static native void nmod_poly_divrem_basecase(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_divrem_divconquer_recursive(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7, long jarg8, nmod_t jarg8_);
  public final static native void _nmod_poly_divrem_divconquer(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_divrem_divconquer(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_divrem_q0(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void _nmod_poly_divrem_q1(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void _nmod_poly_divrem(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_divrem(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_div_basecase(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_div_basecase(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_div_divconquer_recursive(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void _nmod_poly_div_divconquer(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_div_divconquer(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_div(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_div(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_rem_basecase(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_rem_basecase(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_rem_q1(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void _nmod_poly_rem(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_rem(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_inv_series_basecase(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_inv_series_basecase(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_inv_series_newton(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_inv_series_newton(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_inv_series(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_inv_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_div_series_basecase(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_div_series_basecase(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native void _nmod_poly_div_series(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_div_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native void _nmod_poly_div_newton(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_div_newton(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_divrem_newton(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_divrem_newton(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_div_newton_n_preinv(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, nmod_t jarg8_);
  public final static native void nmod_poly_div_newton_n_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_divrem_newton_n_preinv(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, int jarg8, long jarg9, nmod_t jarg9_);
  public final static native void nmod_poly_divrem_newton_n_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_, long jarg5, nmod_poly_struct jarg5_);
  public final static native long _nmod_poly_div_root(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, nmod_t jarg5_);
  public final static native long nmod_poly_div_root(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native void _nmod_poly_derivative(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_derivative(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void _nmod_poly_integral(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_integral(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void _nmod_poly_evaluate_fmpz(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void nmod_poly_evaluate_fmpz(long jarg1, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native long _nmod_poly_evaluate_nmod(long jarg1, int jarg2, long jarg3, long jarg4, nmod_t jarg4_);
  public final static native long nmod_poly_evaluate_nmod(long jarg1, nmod_poly_struct jarg1_, long jarg2);
  public final static native void _nmod_poly_evaluate_nmod_vec(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_evaluate_nmod_vec(long jarg1, long jarg2, nmod_poly_struct jarg2_, long jarg3, int jarg4);
  public final static native void _nmod_poly_evaluate_nmod_vec_iter(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_evaluate_nmod_vec_iter(long jarg1, long jarg2, nmod_poly_struct jarg2_, long jarg3, int jarg4);
  public final static native void _nmod_poly_evaluate_nmod_vec_fast_precomp(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void _nmod_poly_evaluate_nmod_vec_fast(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_evaluate_nmod_vec_fast(long jarg1, long jarg2, nmod_poly_struct jarg2_, long jarg3, int jarg4);
  public final static native void nmod_mat_one_addmul(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3);
  public final static native void nmod_poly_evaluate_mat_horner(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_mat_struct jarg3_);
  public final static native void nmod_poly_evaluate_mat_paterson_stockmeyer(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_mat_struct jarg3_);
  public final static native void nmod_poly_evaluate_mat(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_mat_struct jarg3_);
  public final static native long _nmod_poly_tree_alloc(int jarg1);
  public final static native void _nmod_poly_tree_free(long jarg1, int jarg2);
  public final static native void _nmod_poly_tree_build(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void _nmod_poly_interpolate_nmod_vec_newton(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_interpolate_nmod_vec_newton(long jarg1, nmod_poly_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void _nmod_poly_interpolate_nmod_vec_barycentric(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_interpolate_nmod_vec_barycentric(long jarg1, nmod_poly_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void _nmod_poly_interpolate_nmod_vec(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_interpolate_nmod_vec(long jarg1, nmod_poly_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void nmod_poly_interpolate_nmod_vec_fast(long jarg1, nmod_poly_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void _nmod_poly_interpolate_nmod_vec_fast(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void _nmod_poly_interpolate_nmod_vec_fast_precomp(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void _nmod_poly_interpolation_weights(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void _nmod_poly_compose_horner(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_compose_horner(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_compose_divconquer(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_compose_divconquer(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_compose(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_compose(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_taylor_shift_horner(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_taylor_shift_horner(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native void _nmod_poly_taylor_shift_convolution(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_taylor_shift_convolution(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native void _nmod_poly_taylor_shift(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_taylor_shift(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native void _nmod_poly_compose_mod_brent_kung(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_compose_mod_brent_kung(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_reduce_matrix_mod_poly(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_precompute_matrix(long jarg1, nmod_mat_struct jarg1_, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void _nmod_poly_precompute_matrix_worker(long jarg1);
  public final static native void nmod_poly_precompute_matrix(long jarg1, nmod_mat_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_compose_mod_brent_kung_precomp_preinv(long jarg1, long jarg2, int jarg3, long jarg4, nmod_mat_struct jarg4_, long jarg5, int jarg6, long jarg7, int jarg8, long jarg9, nmod_t jarg9_);
  public final static native void _nmod_poly_compose_mod_brent_kung_precomp_preinv_worker(long jarg1);
  public final static native void nmod_poly_compose_mod_brent_kung_precomp_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_mat_struct jarg3_, long jarg4, nmod_poly_struct jarg4_, long jarg5, nmod_poly_struct jarg5_);
  public final static native void _nmod_poly_compose_mod_brent_kung_preinv(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, int jarg6, long jarg7, int jarg8, long jarg9, nmod_t jarg9_);
  public final static native void nmod_poly_compose_mod_brent_kung_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_, long jarg5, nmod_poly_struct jarg5_);
  public final static native void _nmod_poly_compose_mod_brent_kung_vec_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3, int jarg4, long jarg5, int jarg6, long jarg7, int jarg8, long jarg9, int jarg10, long jarg11, nmod_t jarg11_);
  public final static native void nmod_poly_compose_mod_brent_kung_vec_preinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3, int jarg4, long jarg5, nmod_poly_struct jarg5_, long jarg6, nmod_poly_struct jarg6_, long jarg7, nmod_poly_struct jarg7_);
  public final static native void _nmod_poly_compose_mod_brent_kung_vec_preinv_worker(long jarg1);
  public final static native void nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3, int jarg4, long jarg5, nmod_poly_struct jarg5_, long jarg6, nmod_poly_struct jarg6_, long jarg7, nmod_poly_struct jarg7_, long jarg8, int jarg9);
  public final static native void _nmod_poly_compose_mod_brent_kung_vec_preinv_threaded_pool(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3, int jarg4, long jarg5, int jarg6, long jarg7, int jarg8, long jarg9, int jarg10, long jarg11, nmod_t jarg11_, long jarg12, int jarg13);
  public final static native void nmod_poly_compose_mod_brent_kung_vec_preinv_threaded(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3, int jarg4, long jarg5, nmod_poly_struct jarg5_, long jarg6, nmod_poly_struct jarg6_, long jarg7, nmod_poly_struct jarg7_);
  public final static native void _nmod_poly_compose_mod_horner(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_compose_mod_horner(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_compose_mod(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_compose_mod(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native void _nmod_poly_compose_series_horner(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_compose_series_horner(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native void _nmod_poly_compose_series_brent_kung(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_compose_series_brent_kung(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native void _nmod_poly_compose_series(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_compose_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native void _nmod_poly_revert_series_lagrange(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_revert_series_lagrange(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_revert_series_lagrange_fast(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_revert_series_lagrange_fast(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_revert_series_newton(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_revert_series_newton(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_revert_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_revert_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_compose_series_divconquer(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_compose_series_divconquer(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native int _nmod_poly_gcd_euclidean(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_gcd_euclidean(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native int _nmod_poly_hgcd_recursive(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, long jarg9, int jarg10, long jarg11, long jarg12, nmod_t jarg12_, int jarg13, long jarg14, nmod_poly_res_struct jarg14_);
  public final static native int _nmod_poly_hgcd(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, int jarg8, long jarg9, int jarg10, long jarg11, nmod_t jarg11_);
  public final static native int nmod_poly_hgcd_ref(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_, long jarg5, nmod_poly_struct jarg5_, long jarg6, nmod_poly_struct jarg6_, long jarg7, nmod_poly_struct jarg7_, long jarg8, nmod_poly_struct jarg8_);
  public final static native int nmod_poly_hgcd(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_, long jarg5, nmod_poly_struct jarg5_, long jarg6, nmod_poly_struct jarg6_, long jarg7, nmod_poly_struct jarg7_, long jarg8, nmod_poly_struct jarg8_);
  public final static native int _nmod_poly_gcd_hgcd(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_gcd_hgcd(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native int _nmod_poly_gcd(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, nmod_t jarg6_);
  public final static native void nmod_poly_gcd(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native int _nmod_poly_xgcd_euclidean(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, nmod_t jarg8_);
  public final static native void nmod_poly_xgcd_euclidean(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_, long jarg5, nmod_poly_struct jarg5_);
  public final static native int _nmod_poly_xgcd_hgcd(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, nmod_t jarg8_);
  public final static native void nmod_poly_xgcd_hgcd(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_, long jarg5, nmod_poly_struct jarg5_);
  public final static native int _nmod_poly_xgcd(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, nmod_t jarg8_);
  public final static native void nmod_poly_xgcd(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_, long jarg5, nmod_poly_struct jarg5_);
  public final static native long _nmod_poly_resultant_euclidean(long jarg1, int jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native long nmod_poly_resultant_euclidean(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long _nmod_poly_resultant_hgcd(long jarg1, int jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native long nmod_poly_resultant_hgcd(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long _nmod_poly_resultant(long jarg1, int jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native long nmod_poly_resultant(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native int _nmod_poly_gcdinv(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, nmod_t jarg7_);
  public final static native void nmod_poly_gcdinv(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_);
  public final static native long _nmod_poly_discriminant(long jarg1, int jarg2, long jarg3, nmod_t jarg3_);
  public final static native long nmod_poly_discriminant(long jarg1, nmod_poly_struct jarg1_);
  public final static native void _nmod_poly_invsqrt_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_invsqrt_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_sqrt_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_sqrt_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native int _nmod_poly_sqrt(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native int nmod_poly_sqrt(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void _nmod_poly_power_sums_naive(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_power_sums_naive(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_power_sums_schoenhage(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_power_sums_schoenhage(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_power_sums(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_power_sums(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_power_sums_to_poly_naive(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_power_sums_to_poly_naive(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void _nmod_poly_power_sums_to_poly_schoenhage(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_power_sums_to_poly_schoenhage(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void _nmod_poly_power_sums_to_poly(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_power_sums_to_poly(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void _nmod_poly_atan_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_atan_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_tan_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_tan_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_asin_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_asin_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_sin_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_sin_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_cos_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_cos_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_asinh_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_asinh_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_atanh_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_atanh_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_sinh_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_sinh_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_cosh_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_cosh_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_tanh_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void nmod_poly_tanh_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_log_series_monomial_ui(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_log_series_monomial_ui(long jarg1, nmod_poly_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void _nmod_poly_log_series(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_log_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_exp_series_monomial_ui(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_exp_series_monomial_ui(long jarg1, nmod_poly_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void _nmod_poly_exp_series_basecase(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_exp_series_basecase(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void _nmod_poly_exp_expinv_series(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void _nmod_poly_exp_series(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void _nmod_poly_exp_series2(long jarg1, long jarg2, int jarg3, int jarg4, long jarg5, nmod_t jarg5_);
  public final static native void nmod_poly_exp_series(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void nmod_poly_product_roots_nmod_vec(long jarg1, nmod_poly_struct jarg1_, long jarg2, int jarg3);
  public final static native void _nmod_poly_product_roots_nmod_vec(long jarg1, long jarg2, int jarg3, long jarg4, nmod_t jarg4_);
  public final static native void _nmod_poly_split_rabin(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, long jarg4, nmod_poly_struct jarg4_, long jarg5, nmod_poly_struct jarg5_, long jarg6, flint_rand_s jarg6_);
  public final static native int nmod_poly_find_distinct_nonzero_roots(long jarg1, long jarg2, nmod_poly_struct jarg2_);
  public final static native void _nmod_poly_multi_crt_prog_instr_a_idx_set(long jarg1, _nmod_poly_multi_crt_prog_instr jarg1_, int jarg2);
  public final static native int _nmod_poly_multi_crt_prog_instr_a_idx_get(long jarg1, _nmod_poly_multi_crt_prog_instr jarg1_);
  public final static native void _nmod_poly_multi_crt_prog_instr_b_idx_set(long jarg1, _nmod_poly_multi_crt_prog_instr jarg1_, int jarg2);
  public final static native int _nmod_poly_multi_crt_prog_instr_b_idx_get(long jarg1, _nmod_poly_multi_crt_prog_instr jarg1_);
  public final static native void _nmod_poly_multi_crt_prog_instr_c_idx_set(long jarg1, _nmod_poly_multi_crt_prog_instr jarg1_, int jarg2);
  public final static native int _nmod_poly_multi_crt_prog_instr_c_idx_get(long jarg1, _nmod_poly_multi_crt_prog_instr jarg1_);
  public final static native void _nmod_poly_multi_crt_prog_instr_idem_set(long jarg1, _nmod_poly_multi_crt_prog_instr jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long _nmod_poly_multi_crt_prog_instr_idem_get(long jarg1, _nmod_poly_multi_crt_prog_instr jarg1_);
  public final static native void _nmod_poly_multi_crt_prog_instr_modulus_set(long jarg1, _nmod_poly_multi_crt_prog_instr jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long _nmod_poly_multi_crt_prog_instr_modulus_get(long jarg1, _nmod_poly_multi_crt_prog_instr jarg1_);
  public final static native long new__nmod_poly_multi_crt_prog_instr();
  public final static native void delete__nmod_poly_multi_crt_prog_instr(long jarg1);
  public final static native void nmod_poly_multi_crt_struct_prog_set(long jarg1, nmod_poly_multi_crt_struct jarg1_, long jarg2, _nmod_poly_multi_crt_prog_instr jarg2_);
  public final static native long nmod_poly_multi_crt_struct_prog_get(long jarg1, nmod_poly_multi_crt_struct jarg1_);
  public final static native void nmod_poly_multi_crt_struct_length_set(long jarg1, nmod_poly_multi_crt_struct jarg1_, int jarg2);
  public final static native int nmod_poly_multi_crt_struct_length_get(long jarg1, nmod_poly_multi_crt_struct jarg1_);
  public final static native void nmod_poly_multi_crt_struct_alloc_set(long jarg1, nmod_poly_multi_crt_struct jarg1_, int jarg2);
  public final static native int nmod_poly_multi_crt_struct_alloc_get(long jarg1, nmod_poly_multi_crt_struct jarg1_);
  public final static native void nmod_poly_multi_crt_struct_localsize_set(long jarg1, nmod_poly_multi_crt_struct jarg1_, int jarg2);
  public final static native int nmod_poly_multi_crt_struct_localsize_get(long jarg1, nmod_poly_multi_crt_struct jarg1_);
  public final static native void nmod_poly_multi_crt_struct_temp1loc_set(long jarg1, nmod_poly_multi_crt_struct jarg1_, int jarg2);
  public final static native int nmod_poly_multi_crt_struct_temp1loc_get(long jarg1, nmod_poly_multi_crt_struct jarg1_);
  public final static native void nmod_poly_multi_crt_struct_temp2loc_set(long jarg1, nmod_poly_multi_crt_struct jarg1_, int jarg2);
  public final static native int nmod_poly_multi_crt_struct_temp2loc_get(long jarg1, nmod_poly_multi_crt_struct jarg1_);
  public final static native void nmod_poly_multi_crt_struct_good_set(long jarg1, nmod_poly_multi_crt_struct jarg1_, int jarg2);
  public final static native int nmod_poly_multi_crt_struct_good_get(long jarg1, nmod_poly_multi_crt_struct jarg1_);
  public final static native long new_nmod_poly_multi_crt_struct();
  public final static native void delete_nmod_poly_multi_crt_struct(long jarg1);
  public final static native void nmod_poly_multi_crt_init(long jarg1, nmod_poly_multi_crt_struct jarg1_);
  public final static native int nmod_poly_multi_crt_precompute(long jarg1, nmod_poly_multi_crt_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native int nmod_poly_multi_crt_precompute_p(long jarg1, nmod_poly_multi_crt_struct jarg1_, long jarg2, int jarg3);
  public final static native void nmod_poly_multi_crt_precomp(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_multi_crt_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void nmod_poly_multi_crt_precomp_p(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_multi_crt_struct jarg2_, long jarg3);
  public final static native int nmod_poly_multi_crt(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native void nmod_poly_multi_crt_clear(long jarg1, nmod_poly_multi_crt_struct jarg1_);
  public final static native int _nmod_poly_multi_crt_local_size(long jarg1, nmod_poly_multi_crt_struct jarg1_);
  public final static native void _nmod_poly_multi_crt_run(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_multi_crt_struct jarg2_, long jarg3, nmod_poly_struct jarg3_);
  public final static native void _nmod_poly_multi_crt_run_p(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_multi_crt_struct jarg2_, long jarg3);
  public final static native long nmod_poly_deflation(long jarg1, nmod_poly_struct jarg1_);
  public final static native void nmod_poly_deflate(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native void nmod_poly_inflate(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native void nmod_mat_charpoly_danilevsky(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native void nmod_mat_charpoly(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native void nmod_mat_minpoly_with_gens(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3);
  public final static native void nmod_mat_minpoly(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native void nmod_berlekamp_massey_struct_npoints_set(long jarg1, nmod_berlekamp_massey_struct jarg1_, int jarg2);
  public final static native int nmod_berlekamp_massey_struct_npoints_get(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native void nmod_berlekamp_massey_struct_R0_set(long jarg1, nmod_berlekamp_massey_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_berlekamp_massey_struct_R0_get(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native void nmod_berlekamp_massey_struct_R1_set(long jarg1, nmod_berlekamp_massey_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_berlekamp_massey_struct_R1_get(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native void nmod_berlekamp_massey_struct_V0_set(long jarg1, nmod_berlekamp_massey_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_berlekamp_massey_struct_V0_get(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native void nmod_berlekamp_massey_struct_V1_set(long jarg1, nmod_berlekamp_massey_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_berlekamp_massey_struct_V1_get(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native void nmod_berlekamp_massey_struct_qt_set(long jarg1, nmod_berlekamp_massey_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_berlekamp_massey_struct_qt_get(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native void nmod_berlekamp_massey_struct_rt_set(long jarg1, nmod_berlekamp_massey_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_berlekamp_massey_struct_rt_get(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native void nmod_berlekamp_massey_struct_points_set(long jarg1, nmod_berlekamp_massey_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_berlekamp_massey_struct_points_get(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native long new_nmod_berlekamp_massey_struct();
  public final static native void delete_nmod_berlekamp_massey_struct(long jarg1);
  public final static native void nmod_berlekamp_massey_init(long jarg1, nmod_berlekamp_massey_struct jarg1_, long jarg2);
  public final static native void nmod_berlekamp_massey_start_over(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native void nmod_berlekamp_massey_clear(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native void nmod_berlekamp_massey_set_prime(long jarg1, nmod_berlekamp_massey_struct jarg1_, long jarg2);
  public final static native void nmod_berlekamp_massey_print(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native void nmod_berlekamp_massey_add_points(long jarg1, nmod_berlekamp_massey_struct jarg1_, long jarg2, int jarg3);
  public final static native void nmod_berlekamp_massey_add_zeros(long jarg1, nmod_berlekamp_massey_struct jarg1_, int jarg2);
  public final static native void nmod_berlekamp_massey_add_point(long jarg1, nmod_berlekamp_massey_struct jarg1_, long jarg2);
  public final static native int nmod_berlekamp_massey_reduce(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native long nmod_berlekamp_massey_points(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native int nmod_berlekamp_massey_point_count(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native long nmod_berlekamp_massey_V_poly(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native long nmod_berlekamp_massey_R_poly(long jarg1, nmod_berlekamp_massey_struct jarg1_);
  public final static native void nmod_poly_factor_struct_p_set(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_factor_struct_p_get(long jarg1, nmod_poly_factor_struct jarg1_);
  public final static native void nmod_poly_factor_struct_exp_set(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2);
  public final static native long nmod_poly_factor_struct_exp_get(long jarg1, nmod_poly_factor_struct jarg1_);
  public final static native void nmod_poly_factor_struct_num_set(long jarg1, nmod_poly_factor_struct jarg1_, int jarg2);
  public final static native int nmod_poly_factor_struct_num_get(long jarg1, nmod_poly_factor_struct jarg1_);
  public final static native void nmod_poly_factor_struct_alloc_set(long jarg1, nmod_poly_factor_struct jarg1_, int jarg2);
  public final static native int nmod_poly_factor_struct_alloc_get(long jarg1, nmod_poly_factor_struct jarg1_);
  public final static native long new_nmod_poly_factor_struct();
  public final static native void delete_nmod_poly_factor_struct(long jarg1);
  public final static native void nmod_poly_interval_poly_arg_t_baby_set(long jarg1, nmod_poly_interval_poly_arg_t jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_interval_poly_arg_t_baby_get(long jarg1, nmod_poly_interval_poly_arg_t jarg1_);
  public final static native void nmod_poly_interval_poly_arg_t_res_set(long jarg1, nmod_poly_interval_poly_arg_t jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_interval_poly_arg_t_res_get(long jarg1, nmod_poly_interval_poly_arg_t jarg1_);
  public final static native void nmod_poly_interval_poly_arg_t_H_set(long jarg1, nmod_poly_interval_poly_arg_t jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_interval_poly_arg_t_H_get(long jarg1, nmod_poly_interval_poly_arg_t jarg1_);
  public final static native void nmod_poly_interval_poly_arg_t_v_set(long jarg1, nmod_poly_interval_poly_arg_t jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_interval_poly_arg_t_v_get(long jarg1, nmod_poly_interval_poly_arg_t jarg1_);
  public final static native void nmod_poly_interval_poly_arg_t_vinv_set(long jarg1, nmod_poly_interval_poly_arg_t jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_interval_poly_arg_t_vinv_get(long jarg1, nmod_poly_interval_poly_arg_t jarg1_);
  public final static native void nmod_poly_interval_poly_arg_t_tmp_set(long jarg1, nmod_poly_interval_poly_arg_t jarg1_, long jarg2);
  public final static native long nmod_poly_interval_poly_arg_t_tmp_get(long jarg1, nmod_poly_interval_poly_arg_t jarg1_);
  public final static native void nmod_poly_interval_poly_arg_t_m_set(long jarg1, nmod_poly_interval_poly_arg_t jarg1_, int jarg2);
  public final static native int nmod_poly_interval_poly_arg_t_m_get(long jarg1, nmod_poly_interval_poly_arg_t jarg1_);
  public final static native long new_nmod_poly_interval_poly_arg_t();
  public final static native void delete_nmod_poly_interval_poly_arg_t(long jarg1);
  public final static native void nmod_poly_factor_init(long jarg1, nmod_poly_factor_struct jarg1_);
  public final static native void nmod_poly_factor_clear(long jarg1, nmod_poly_factor_struct jarg1_);
  public final static native void nmod_poly_factor_realloc(long jarg1, nmod_poly_factor_struct jarg1_, int jarg2);
  public final static native void nmod_poly_factor_fit_length(long jarg1, nmod_poly_factor_struct jarg1_, int jarg2);
  public final static native void nmod_poly_factor_set(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_factor_struct jarg2_);
  public final static native void nmod_poly_factor_swap(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_factor_struct jarg2_);
  public final static native void nmod_poly_factor_insert(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native void nmod_poly_factor_print(long jarg1, nmod_poly_factor_struct jarg1_);
  public final static native void nmod_poly_factor_concat(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_factor_struct jarg2_);
  public final static native void nmod_poly_factor_pow(long jarg1, nmod_poly_factor_struct jarg1_, int jarg2);
  public final static native void nmod_poly_factor_equal_deg(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native int nmod_poly_factor_equal_deg_prob(long jarg1, nmod_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3, nmod_poly_struct jarg3_, int jarg4);
  public final static native void nmod_poly_factor_distinct_deg(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native long nmod_poly_remove(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void nmod_poly_factor_distinct_deg_threaded(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, long jarg3);
  public final static native int nmod_poly_is_irreducible(long jarg1, nmod_poly_struct jarg1_);
  public final static native int nmod_poly_is_irreducible_rabin(long jarg1, nmod_poly_struct jarg1_);
  public final static native int nmod_poly_is_irreducible_ddf(long jarg1, nmod_poly_struct jarg1_);
  public final static native int _nmod_poly_is_squarefree(long jarg1, int jarg2, long jarg3, nmod_t jarg3_);
  public final static native int nmod_poly_is_squarefree(long jarg1, nmod_poly_struct jarg1_);
  public final static native void nmod_poly_factor_cantor_zassenhaus(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void nmod_poly_factor_berlekamp(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void nmod_poly_factor_kaltofen_shoup(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void nmod_poly_factor_squarefree(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_factor_with_berlekamp(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_factor_with_cantor_zassenhaus(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_factor_with_kaltofen_shoup(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native long nmod_poly_factor(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void _nmod_poly_interval_poly_worker(long jarg1);
  public final static native void nmod_poly_roots(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3);
  public final static native int nmod_poly_roots_factored(long jarg1, nmod_poly_factor_struct jarg1_, long jarg2, nmod_poly_struct jarg2_, int jarg3, long jarg4, n_factor_t jarg4_);
  public final static native void nmod_poly_factor_get_nmod_poly(long jarg1, nmod_poly_struct jarg1_, long jarg2, nmod_poly_factor_struct jarg2_, int jarg3);
  public final static native int FMPZ_POLY_INV_NEWTON_CUTOFF_get();
  public final static native int FMPZ_POLY_SQRT_DIVCONQUER_CUTOFF_get();
  public final static native int FMPZ_POLY_SQRTREM_DIVCONQUER_CUTOFF_get();
  public final static native void fmpz_poly_struct_coeffs_set(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native long fmpz_poly_struct_coeffs_get(long jarg1, fmpz_poly_struct jarg1_);
  public final static native void fmpz_poly_struct_alloc_set(long jarg1, fmpz_poly_struct jarg1_, int jarg2);
  public final static native int fmpz_poly_struct_alloc_get(long jarg1, fmpz_poly_struct jarg1_);
  public final static native void fmpz_poly_struct_length_set(long jarg1, fmpz_poly_struct jarg1_, int jarg2);
  public final static native int fmpz_poly_struct_length_get(long jarg1, fmpz_poly_struct jarg1_);
  public final static native long new_fmpz_poly_struct();
  public final static native void delete_fmpz_poly_struct(long jarg1);
  public final static native void fmpz_poly_powers_precomp_struct_powers_set(long jarg1, fmpz_poly_powers_precomp_struct jarg1_, long jarg2);
  public final static native long fmpz_poly_powers_precomp_struct_powers_get(long jarg1, fmpz_poly_powers_precomp_struct jarg1_);
  public final static native void fmpz_poly_powers_precomp_struct_len_set(long jarg1, fmpz_poly_powers_precomp_struct jarg1_, int jarg2);
  public final static native int fmpz_poly_powers_precomp_struct_len_get(long jarg1, fmpz_poly_powers_precomp_struct jarg1_);
  public final static native long new_fmpz_poly_powers_precomp_struct();
  public final static native void delete_fmpz_poly_powers_precomp_struct(long jarg1);
  public final static native void fmpz_poly_factor_struct_c_set(long jarg1, fmpz_poly_factor_struct jarg1_, int jarg2);
  public final static native int fmpz_poly_factor_struct_c_get(long jarg1, fmpz_poly_factor_struct jarg1_);
  public final static native void fmpz_poly_factor_struct_p_set(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native long fmpz_poly_factor_struct_p_get(long jarg1, fmpz_poly_factor_struct jarg1_);
  public final static native void fmpz_poly_factor_struct_exp_set(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2);
  public final static native long fmpz_poly_factor_struct_exp_get(long jarg1, fmpz_poly_factor_struct jarg1_);
  public final static native void fmpz_poly_factor_struct_num_set(long jarg1, fmpz_poly_factor_struct jarg1_, int jarg2);
  public final static native int fmpz_poly_factor_struct_num_get(long jarg1, fmpz_poly_factor_struct jarg1_);
  public final static native void fmpz_poly_factor_struct_alloc_set(long jarg1, fmpz_poly_factor_struct jarg1_, int jarg2);
  public final static native int fmpz_poly_factor_struct_alloc_get(long jarg1, fmpz_poly_factor_struct jarg1_);
  public final static native long new_fmpz_poly_factor_struct();
  public final static native void delete_fmpz_poly_factor_struct(long jarg1);
  public final static native void fmpz_poly_mul_precache_struct_jj_set(long jarg1, fmpz_poly_mul_precache_struct jarg1_, long jarg2);
  public final static native long fmpz_poly_mul_precache_struct_jj_get(long jarg1, fmpz_poly_mul_precache_struct jarg1_);
  public final static native void fmpz_poly_mul_precache_struct_n_set(long jarg1, fmpz_poly_mul_precache_struct jarg1_, int jarg2);
  public final static native int fmpz_poly_mul_precache_struct_n_get(long jarg1, fmpz_poly_mul_precache_struct jarg1_);
  public final static native void fmpz_poly_mul_precache_struct_len2_set(long jarg1, fmpz_poly_mul_precache_struct jarg1_, int jarg2);
  public final static native int fmpz_poly_mul_precache_struct_len2_get(long jarg1, fmpz_poly_mul_precache_struct jarg1_);
  public final static native void fmpz_poly_mul_precache_struct_loglen_set(long jarg1, fmpz_poly_mul_precache_struct jarg1_, int jarg2);
  public final static native int fmpz_poly_mul_precache_struct_loglen_get(long jarg1, fmpz_poly_mul_precache_struct jarg1_);
  public final static native void fmpz_poly_mul_precache_struct_bits2_set(long jarg1, fmpz_poly_mul_precache_struct jarg1_, int jarg2);
  public final static native int fmpz_poly_mul_precache_struct_bits2_get(long jarg1, fmpz_poly_mul_precache_struct jarg1_);
  public final static native void fmpz_poly_mul_precache_struct_limbs_set(long jarg1, fmpz_poly_mul_precache_struct jarg1_, int jarg2);
  public final static native int fmpz_poly_mul_precache_struct_limbs_get(long jarg1, fmpz_poly_mul_precache_struct jarg1_);
  public final static native void fmpz_poly_mul_precache_struct_poly2_set(long jarg1, fmpz_poly_mul_precache_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native long fmpz_poly_mul_precache_struct_poly2_get(long jarg1, fmpz_poly_mul_precache_struct jarg1_);
  public final static native long new_fmpz_poly_mul_precache_struct();
  public final static native void delete_fmpz_poly_mul_precache_struct(long jarg1);
  public final static native void fmpz_poly_init(long jarg1, fmpz_poly_struct jarg1_);
  public final static native void fmpz_poly_init2(long jarg1, fmpz_poly_struct jarg1_, int jarg2);
  public final static native void fmpz_poly_realloc(long jarg1, fmpz_poly_struct jarg1_, int jarg2);
  public final static native void fmpz_poly_fit_length(long jarg1, fmpz_poly_struct jarg1_, int jarg2);
  public final static native void fmpz_poly_clear(long jarg1, fmpz_poly_struct jarg1_);
  public final static native void _fmpz_poly_normalise(long jarg1, fmpz_poly_struct jarg1_);
  public final static native void _fmpz_poly_set_length(long jarg1, fmpz_poly_struct jarg1_, int jarg2);
  public final static native void fmpz_poly_attach_truncate(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void fmpz_poly_attach_shift(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native int fmpz_poly_length(long jarg1, fmpz_poly_struct jarg1_);
  public final static native int fmpz_poly_degree(long jarg1, fmpz_poly_struct jarg1_);
  public final static native void fmpz_poly_set(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void fmpz_poly_set_ui(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native void fmpz_poly_set_si(long jarg1, fmpz_poly_struct jarg1_, int jarg2);
  public final static native void fmpz_poly_set_fmpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native void fmpz_poly_set_mpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native int _fmpz_poly_set_str(long jarg1, String jarg2);
  public final static native int fmpz_poly_set_str(long jarg1, fmpz_poly_struct jarg1_, String jarg2);
  public final static native String _fmpz_poly_get_str(long jarg1, int jarg2);
  public final static native String fmpz_poly_get_str(long jarg1, fmpz_poly_struct jarg1_);
  public final static native String _fmpz_poly_get_str_pretty(long jarg1, int jarg2, String jarg3);
  public final static native String fmpz_poly_get_str_pretty(long jarg1, fmpz_poly_struct jarg1_, String jarg2);
  public final static native void fmpz_poly_zero(long jarg1, fmpz_poly_struct jarg1_);
  public final static native void fmpz_poly_one(long jarg1, fmpz_poly_struct jarg1_);
  public final static native void fmpz_poly_zero_coeffs(long jarg1, fmpz_poly_struct jarg1_, int jarg2, int jarg3);
  public final static native void fmpz_poly_swap(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_reverse(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_poly_reverse(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native long fmpz_poly_deflation(long jarg1, fmpz_poly_struct jarg1_);
  public final static native void fmpz_poly_deflate(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_inflate(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_truncate(long jarg1, fmpz_poly_struct jarg1_, int jarg2);
  public final static native void fmpz_poly_set_trunc(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void fmpz_poly_randtest(long jarg1, fmpz_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, long jarg4);
  public final static native void fmpz_poly_randtest_unsigned(long jarg1, fmpz_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, long jarg4);
  public final static native void fmpz_poly_randtest_not_zero(long jarg1, fmpz_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, long jarg4);
  public final static native void fmpz_poly_randtest_no_real_root(long jarg1, fmpz_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, long jarg4);
  public final static native int fmpz_poly_get_coeff_si(long jarg1, fmpz_poly_struct jarg1_, int jarg2);
  public final static native void fmpz_poly_set_coeff_si(long jarg1, fmpz_poly_struct jarg1_, int jarg2, int jarg3);
  public final static native long fmpz_poly_get_coeff_ui(long jarg1, fmpz_poly_struct jarg1_, int jarg2);
  public final static native void fmpz_poly_set_coeff_ui(long jarg1, fmpz_poly_struct jarg1_, int jarg2, long jarg3);
  public final static native void fmpz_poly_set_coeff_fmpz(long jarg1, fmpz_poly_struct jarg1_, int jarg2, long jarg3);
  public final static native void fmpz_poly_get_coeff_fmpz(long jarg1, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native int fmpz_poly_equal(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native int fmpz_poly_equal_trunc(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native int _fmpz_poly_is_one(long jarg1, int jarg2);
  public final static native int fmpz_poly_is_one(long jarg1, fmpz_poly_struct jarg1_);
  public final static native int fmpz_poly_is_unit(long jarg1, fmpz_poly_struct jarg1_);
  public final static native int fmpz_poly_is_gen(long jarg1, fmpz_poly_struct jarg1_);
  public final static native int fmpz_poly_equal_fmpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native void _fmpz_poly_add(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_add(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void fmpz_poly_add_series(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void _fmpz_poly_sub(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_sub(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void fmpz_poly_sub_series(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void fmpz_poly_neg(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void fmpz_poly_scalar_abs(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void fmpz_poly_scalar_mul_ui(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_mul_si(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void fmpz_poly_scalar_mul_fmpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_addmul_fmpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_submul_fmpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_fdiv_ui(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_fdiv_si(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void fmpz_poly_scalar_fdiv_fmpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_tdiv_ui(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_tdiv_si(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void fmpz_poly_scalar_tdiv_fmpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_divexact_ui(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_divexact_si(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void fmpz_poly_scalar_divexact_fmpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_fdiv_2exp(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_tdiv_2exp(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_mul_2exp(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_mod_fmpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_scalar_smod_fmpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native int _fmpz_poly_remove_content_2exp(long jarg1, int jarg2);
  public final static native void _fmpz_poly_scale_2exp(long jarg1, int jarg2, int jarg3);
  public final static native void _fmpz_poly_bit_pack(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native int _fmpz_poly_bit_unpack(long jarg1, int jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void _fmpz_poly_bit_unpack_unsigned(long jarg1, int jarg2, long jarg3, long jarg4);
  public final static native void fmpz_poly_bit_pack(long jarg1, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_bit_unpack(long jarg1, fmpz_poly_struct jarg1_, long jarg2, long jarg3);
  public final static native void fmpz_poly_bit_unpack_unsigned(long jarg1, fmpz_poly_struct jarg1_, long jarg2, long jarg3);
  public final static native void _fmpz_poly_mul_classical(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_mul_classical(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_mullow_classical(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpz_poly_mullow_classical(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void _fmpz_poly_mulhigh_classical(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpz_poly_mulhigh_classical(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void _fmpz_poly_mulmid_classical(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_mulmid_classical(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void fmpz_poly_mul_karatsuba(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_mul_karatsuba(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void _fmpz_poly_mullow_karatsuba_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void fmpz_poly_mullow_karatsuba_n(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void _fmpz_poly_mulhigh_karatsuba_n(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void fmpz_poly_mulhigh_karatsuba_n(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void _fmpz_poly_mul_KS(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_mul_KS(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_mullow_KS(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpz_poly_mullow_KS(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void _fmpz_poly_mul_SS(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_mul_SS(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_mullow_SS(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpz_poly_mullow_SS(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void _fmpz_poly_mul(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_mul(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_mullow(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpz_poly_mullow(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void fmpz_poly_mulhigh_n(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void fmpz_poly_mul_SS_precache_init(long jarg1, fmpz_poly_mul_precache_struct jarg1_, int jarg2, int jarg3, long jarg4, fmpz_poly_struct jarg4_);
  public final static native void fmpz_poly_mul_precache_clear(long jarg1, fmpz_poly_mul_precache_struct jarg1_);
  public final static native void _fmpz_poly_mullow_SS_precache(long jarg1, long jarg2, int jarg3, long jarg4, fmpz_poly_mul_precache_struct jarg4_, int jarg5);
  public final static native void fmpz_poly_mullow_SS_precache(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_mul_precache_struct jarg3_, int jarg4);
  public final static native void fmpz_poly_mul_SS_precache(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_mul_precache_struct jarg3_);
  public final static native void _fmpz_poly_sqr_KS(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_sqr_KS(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void fmpz_poly_sqr_karatsuba(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_sqr_karatsuba(long jarg1, long jarg2, int jarg3);
  public final static native void _fmpz_poly_sqr_classical(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_sqr_classical(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_sqr(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_sqr(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_sqrlow_KS(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_poly_sqrlow_KS(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_sqrlow_karatsuba_n(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_sqrlow_karatsuba_n(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_sqrlow_classical(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_poly_sqrlow_classical(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_sqrlow(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_poly_sqrlow(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_pow_multinomial(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void fmpz_poly_pow_multinomial(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void _fmpz_poly_pow_binomial(long jarg1, long jarg2, long jarg3);
  public final static native void fmpz_poly_pow_binomial(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void _fmpz_poly_pow_binexp(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void fmpz_poly_pow_binexp(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void _fmpz_poly_pow_addchains(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_pow_addchains(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void _fmpz_poly_pow_small(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_poly_pow(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void fmpz_poly_pow(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void _fmpz_poly_pow_trunc(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void fmpz_poly_pow_trunc(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, int jarg4);
  public final static native void _fmpz_poly_shift_left(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void _fmpz_poly_shift_right(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_poly_shift_left(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void fmpz_poly_shift_right(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_2norm(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_2norm(long jarg1, long jarg2, fmpz_poly_struct jarg2_);
  public final static native long _fmpz_poly_2norm_normalised_bits(long jarg1, int jarg2);
  public final static native long fmpz_poly_max_limbs(long jarg1, fmpz_poly_struct jarg1_);
  public final static native int fmpz_poly_max_bits(long jarg1, fmpz_poly_struct jarg1_);
  public final static native void fmpz_poly_height(long jarg1, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_gcd_subresultant(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_gcd_subresultant(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native int _fmpz_poly_gcd_heuristic(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native int fmpz_poly_gcd_heuristic(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_gcd_modular(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_gcd_modular(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_gcd(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_gcd(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_lcm(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_lcm(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_resultant_euclidean(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_resultant_euclidean(long jarg1, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_resultant_modular(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_resultant_modular(long jarg1, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_resultant(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_resultant(long jarg1, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_resultant_modular_div(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, long jarg6, int jarg7);
  public final static native void fmpz_poly_resultant_modular_div(long jarg1, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, int jarg5);
  public final static native void _fmpz_poly_xgcd_modular(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7);
  public final static native void fmpz_poly_xgcd_modular(long jarg1, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_, long jarg5, fmpz_poly_struct jarg5_);
  public final static native void _fmpz_poly_xgcd(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7);
  public final static native void fmpz_poly_xgcd(long jarg1, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_, long jarg5, fmpz_poly_struct jarg5_);
  public final static native void _fmpz_poly_discriminant(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_discriminant(long jarg1, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_content(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_content(long jarg1, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_primitive_part(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_primitive_part(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native int _fmpz_poly_is_squarefree(long jarg1, int jarg2);
  public final static native int fmpz_poly_is_squarefree(long jarg1, fmpz_poly_struct jarg1_);
  public final static native int _fmpz_poly_divrem_basecase(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void fmpz_poly_divrem_basecase(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_);
  public final static native int _fmpz_poly_divrem_divconquer_recursive(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native int _fmpz_poly_divrem_divconquer(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void fmpz_poly_divrem_divconquer(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_);
  public final static native int _fmpz_poly_divrem(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void fmpz_poly_divrem(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_);
  public final static native int _fmpz_poly_div_basecase(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void fmpz_poly_div_basecase(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native int _fmpz_poly_divremlow_divconquer_recursive(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native int _fmpz_poly_div_divconquer_recursive(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native int _fmpz_poly_div_divconquer(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpz_poly_div_divconquer(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native int _fmpz_poly_div(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpz_poly_div(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_preinvert(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_preinvert(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_div_preinv(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void fmpz_poly_div_preinv(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_);
  public final static native void _fmpz_poly_divrem_preinv(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, int jarg6);
  public final static native void fmpz_poly_divrem_preinv(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_, long jarg5, fmpz_poly_struct jarg5_);
  public final static native long _fmpz_poly_powers_precompute(long jarg1, int jarg2);
  public final static native void fmpz_poly_powers_precompute(long jarg1, fmpz_poly_powers_precomp_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_powers_clear(long jarg1, int jarg2);
  public final static native void fmpz_poly_powers_clear(long jarg1, fmpz_poly_powers_precomp_struct jarg1_);
  public final static native void _fmpz_poly_rem_powers_precomp(long jarg1, int jarg2, long jarg3, int jarg4, long jarg5);
  public final static native void fmpz_poly_rem_powers_precomp(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_powers_precomp_struct jarg4_);
  public final static native void _fmpz_poly_rem_basecase(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_rem_basecase(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_rem(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_rem(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void fmpz_poly_div_root(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void _fmpz_poly_div_root(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void _fmpz_poly_inv_series_basecase(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_poly_inv_series_basecase(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_inv_series_newton(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_poly_inv_series_newton(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_inv_series(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_poly_inv_series(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_div_series_basecase(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void _fmpz_poly_div_series_divconquer(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void _fmpz_poly_div_series(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpz_poly_div_series_basecase(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void fmpz_poly_div_series_divconquer(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void fmpz_poly_div_series(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native int _fmpz_poly_divides(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native int fmpz_poly_divides(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native int fmpz_poly_remove(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_pseudo_divrem_basecase(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, fmpz_preinvn_struct jarg8_);
  public final static native void fmpz_poly_pseudo_divrem_basecase(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, long jarg4, fmpz_poly_struct jarg4_, long jarg5, fmpz_poly_struct jarg5_);
  public final static native void _fmpz_poly_pseudo_divrem_divconquer(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, fmpz_preinvn_struct jarg8_);
  public final static native void fmpz_poly_pseudo_divrem_divconquer(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, long jarg4, fmpz_poly_struct jarg4_, long jarg5, fmpz_poly_struct jarg5_);
  public final static native void _fmpz_poly_pseudo_divrem_cohen(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6);
  public final static native void fmpz_poly_pseudo_divrem_cohen(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_);
  public final static native void _fmpz_poly_pseudo_rem_cohen(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_pseudo_rem_cohen(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_pseudo_divrem(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7, long jarg8, fmpz_preinvn_struct jarg8_);
  public final static native void fmpz_poly_pseudo_divrem(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, long jarg4, fmpz_poly_struct jarg4_, long jarg5, fmpz_poly_struct jarg5_);
  public final static native void _fmpz_poly_pseudo_div(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, fmpz_preinvn_struct jarg7_);
  public final static native void fmpz_poly_pseudo_div(long jarg1, fmpz_poly_struct jarg1_, long jarg2, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_);
  public final static native void _fmpz_poly_pseudo_rem(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, fmpz_preinvn_struct jarg7_);
  public final static native void fmpz_poly_pseudo_rem(long jarg1, fmpz_poly_struct jarg1_, long jarg2, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_);
  public final static native void fmpz_poly_divlow_smodp(long jarg1, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, int jarg5);
  public final static native void fmpz_poly_divhigh_smodp(long jarg1, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, int jarg5);
  public final static native void _fmpz_poly_derivative(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_derivative(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_evaluate_divconquer_fmpz(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void fmpz_poly_evaluate_divconquer_fmpz(long jarg1, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void _fmpz_poly_evaluate_horner_fmpz(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void fmpz_poly_evaluate_horner_fmpz(long jarg1, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void _fmpz_poly_evaluate_fmpz(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void fmpz_poly_evaluate_fmpz(long jarg1, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void _fmpz_poly_evaluate_horner_fmpq(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6);
  public final static native void fmpz_poly_evaluate_horner_fmpq(long jarg1, fmpq jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpq jarg3_);
  public final static native void _fmpz_poly_evaluate_divconquer_fmpq(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6);
  public final static native void fmpz_poly_evaluate_divconquer_fmpq(long jarg1, fmpq jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpq jarg3_);
  public final static native void _fmpz_poly_evaluate_fmpq(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, long jarg6);
  public final static native void fmpz_poly_evaluate_fmpq(long jarg1, fmpq jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpq jarg3_);
  public final static native void fmpz_poly_evaluate_mpq(long jarg1, __mpq_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, __mpq_struct jarg3_);
  public final static native long _fmpz_poly_evaluate_mod(long jarg1, int jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long fmpz_poly_evaluate_mod(long jarg1, fmpz_poly_struct jarg1_, long jarg2, long jarg3);
  public final static native double _fmpz_poly_evaluate_horner_d(long jarg1, int jarg2, double jarg3);
  public final static native double fmpz_poly_evaluate_horner_d(long jarg1, fmpz_poly_struct jarg1_, double jarg2);
  public final static native double _fmpz_poly_evaluate_horner_d_2exp(long jarg1, long jarg2, int jarg3, double jarg4);
  public final static native double fmpz_poly_evaluate_horner_d_2exp(long jarg1, long jarg2, fmpz_poly_struct jarg2_, double jarg3);
  public final static native double _fmpz_poly_evaluate_horner_d_2exp2(long jarg1, long jarg2, int jarg3, double jarg4, int jarg5, long jarg6);
  public final static native double fmpz_poly_evaluate_horner_d_2exp2(long jarg1, long jarg2, fmpz_poly_struct jarg2_, double jarg3, int jarg4, long jarg5);
  public final static native void _fmpz_poly_compose_horner(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_compose_horner(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_compose_divconquer(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_compose_divconquer(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_compose(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5);
  public final static native void fmpz_poly_compose(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void _fmpz_poly_taylor_shift_horner(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_taylor_shift_horner(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void _fmpz_poly_taylor_shift_divconquer(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_taylor_shift_divconquer(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void _fmpz_poly_taylor_shift_multi_mod(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_taylor_shift_multi_mod(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void _fmpz_poly_taylor_shift(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_taylor_shift(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void _fmpz_poly_compose_series_brent_kung(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpz_poly_compose_series_brent_kung(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void _fmpz_poly_compose_series_horner(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpz_poly_compose_series_horner(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void _fmpz_poly_compose_series(long jarg1, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpz_poly_compose_series(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native void _fmpz_poly_revert_series_lagrange(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_poly_revert_series_lagrange(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_revert_series_lagrange_fast(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_poly_revert_series_lagrange_fast(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_revert_series_newton(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_poly_revert_series_newton(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_revert_series(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_poly_revert_series(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native int _fmpz_poly_sqrtrem_classical(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int fmpz_poly_sqrtrem_classical(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native int _fmpz_poly_sqrtrem_divconquer(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5);
  public final static native int fmpz_poly_sqrtrem_divconquer(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_);
  public final static native int _fmpz_poly_sqrt_classical(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int fmpz_poly_sqrt_classical(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native int _fmpz_poly_sqrt_divconquer(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int fmpz_poly_sqrt_divconquer(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native int _fmpz_poly_sqrt_KS(long jarg1, long jarg2, int jarg3);
  public final static native int fmpz_poly_sqrt_KS(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native int _fmpz_poly_sqrt(long jarg1, long jarg2, int jarg3);
  public final static native int fmpz_poly_sqrt(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native int _fmpz_poly_sqrt_series(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native int fmpz_poly_sqrt_series(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_power_sums_naive(long jarg1, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_poly_power_sums_naive(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void fmpz_poly_power_sums(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_power_sums_to_poly(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_power_sums_to_poly(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_signature(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void fmpz_poly_signature(long jarg1, long jarg2, long jarg3, fmpz_poly_struct jarg3_);
  public final static native int _fmpz_poly_fprint(long jarg1, _IO_FILE jarg1_, long jarg2, int jarg3);
  public final static native int fmpz_poly_fprint(long jarg1, _IO_FILE jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native int _fmpz_poly_fprint_pretty(long jarg1, _IO_FILE jarg1_, long jarg2, int jarg3, String jarg4);
  public final static native int fmpz_poly_fprint_pretty(long jarg1, _IO_FILE jarg1_, long jarg2, fmpz_poly_struct jarg2_, String jarg3);
  public final static native int _fmpz_poly_print_pretty(long jarg1, int jarg2, String jarg3);
  public final static native int _fmpz_poly_print(long jarg1, int jarg2);
  public final static native int fmpz_poly_print(long jarg1, fmpz_poly_struct jarg1_);
  public final static native int fmpz_poly_print_pretty(long jarg1, fmpz_poly_struct jarg1_, String jarg2);
  public final static native int fmpz_poly_fread(long jarg1, _IO_FILE jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native int fmpz_poly_fread_pretty(long jarg1, _IO_FILE jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native int fmpz_poly_read(long jarg1, fmpz_poly_struct jarg1_);
  public final static native int fmpz_poly_read_pretty(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native void fmpz_poly_debug(long jarg1, fmpz_poly_struct jarg1_);
  public final static native void fmpz_poly_get_nmod_poly(long jarg1, nmod_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void fmpz_poly_set_nmod_poly(long jarg1, fmpz_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void fmpz_poly_set_nmod_poly_unsigned(long jarg1, fmpz_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void _fmpz_poly_CRT_ui_precomp(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, int jarg6, long jarg7, long jarg8, long jarg9, long jarg10, int jarg11);
  public final static native void _fmpz_poly_CRT_ui(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, int jarg6, long jarg7, long jarg8, int jarg9);
  public final static native void fmpz_poly_CRT_ui(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, long jarg4, nmod_poly_struct jarg4_, int jarg5);
  public final static native void _fmpz_poly_product_roots_fmpz_vec(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_product_roots_fmpz_vec(long jarg1, fmpz_poly_struct jarg1_, long jarg2, int jarg3);
  public final static native void _fmpz_poly_product_roots_fmpq_vec(long jarg1, long jarg2, fmpq jarg2_, int jarg3);
  public final static native void fmpz_poly_product_roots_fmpq_vec(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpq jarg2_, int jarg3);
  public final static native void _fmpz_poly_monomial_to_newton(long jarg1, long jarg2, int jarg3);
  public final static native void _fmpz_poly_newton_to_monomial(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_evaluate_fmpz_vec(long jarg1, long jarg2, fmpz_poly_struct jarg2_, long jarg3, int jarg4);
  public final static native void fmpz_poly_interpolate_fmpz_vec(long jarg1, fmpz_poly_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void fmpz_poly_hensel_build_tree(long jarg1, long jarg2, long jarg3, long jarg4, nmod_poly_factor_struct jarg4_);
  public final static native void fmpz_poly_hensel_lift(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_, long jarg5, fmpz_poly_struct jarg5_, long jarg6, fmpz_poly_struct jarg6_, long jarg7, fmpz_poly_struct jarg7_, long jarg8, fmpz_poly_struct jarg8_, long jarg9, fmpz_poly_struct jarg9_, long jarg10, long jarg11);
  public final static native void _fmpz_poly_hensel_lift_without_inverse(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, int jarg8, long jarg9, int jarg10, long jarg11, int jarg12, long jarg13, long jarg14);
  public final static native void fmpz_poly_hensel_lift_without_inverse(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_, long jarg5, fmpz_poly_struct jarg5_, long jarg6, fmpz_poly_struct jarg6_, long jarg7, fmpz_poly_struct jarg7_, long jarg8, long jarg9);
  public final static native void _fmpz_poly_hensel_lift_only_inverse(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6, long jarg7, int jarg8, long jarg9, int jarg10, long jarg11, long jarg12);
  public final static native void fmpz_poly_hensel_lift_only_inverse(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_, long jarg5, fmpz_poly_struct jarg5_, long jarg6, fmpz_poly_struct jarg6_, long jarg7, long jarg8);
  public final static native void fmpz_poly_hensel_lift_tree_recursive(long jarg1, long jarg2, long jarg3, long jarg4, fmpz_poly_struct jarg4_, int jarg5, int jarg6, long jarg7, long jarg8);
  public final static native void fmpz_poly_hensel_lift_tree(long jarg1, long jarg2, long jarg3, long jarg4, fmpz_poly_struct jarg4_, int jarg5, long jarg6, int jarg7, int jarg8, int jarg9);
  public final static native int _fmpz_poly_hensel_start_lift(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, fmpz_poly_struct jarg5_, long jarg6, nmod_poly_factor_struct jarg6_, int jarg7);
  public final static native int _fmpz_poly_hensel_continue_lift(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, fmpz_poly_struct jarg5_, int jarg6, int jarg7, int jarg8, long jarg9);
  public final static native void fmpz_poly_hensel_lift_once(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, nmod_poly_factor_struct jarg3_, int jarg4);
  public final static native void fmpz_poly_scalar_mul_mpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void fmpz_poly_scalar_divexact_mpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void fmpz_poly_scalar_fdiv_mpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void fmpz_poly_set_coeff_mpz(long jarg1, fmpz_poly_struct jarg1_, int jarg2, long jarg3, __mpz_struct jarg3_);
  public final static native void fmpz_poly_get_coeff_mpz(long jarg1, __mpz_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_bound_roots(long jarg1, long jarg2, int jarg3);
  public final static native void fmpz_poly_bound_roots(long jarg1, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_num_real_roots_sturm(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native int fmpz_poly_num_real_roots_sturm(long jarg1, fmpz_poly_struct jarg1_);
  public final static native int _fmpz_poly_num_real_roots(long jarg1, int jarg2);
  public final static native int fmpz_poly_num_real_roots(long jarg1, fmpz_poly_struct jarg1_);
  public final static native void fmpz_poly_CLD_bound(long jarg1, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void _fmpz_poly_cyclotomic(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5);
  public final static native void fmpz_poly_cyclotomic(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native long _fmpz_poly_is_cyclotomic(long jarg1, int jarg2);
  public final static native long fmpz_poly_is_cyclotomic(long jarg1, fmpz_poly_struct jarg1_);
  public final static native void _fmpz_poly_cos_minpoly(long jarg1, long jarg2);
  public final static native void fmpz_poly_cos_minpoly(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native void _fmpz_poly_swinnerton_dyer(long jarg1, long jarg2);
  public final static native void fmpz_poly_swinnerton_dyer(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native void _fmpz_poly_chebyshev_t(long jarg1, long jarg2);
  public final static native void fmpz_poly_chebyshev_t(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native void _fmpz_poly_chebyshev_u(long jarg1, long jarg2);
  public final static native void fmpz_poly_chebyshev_u(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native void _fmpz_poly_legendre_pt(long jarg1, long jarg2);
  public final static native void fmpz_poly_legendre_pt(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native void _fmpz_poly_hermite_h(long jarg1, long jarg2);
  public final static native void fmpz_poly_hermite_h(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native void _fmpz_poly_hermite_he(long jarg1, long jarg2);
  public final static native void fmpz_poly_hermite_he(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native void _fmpz_poly_fibonacci(long jarg1, long jarg2);
  public final static native void fmpz_poly_fibonacci(long jarg1, fmpz_poly_struct jarg1_, long jarg2);
  public final static native void _fmpz_poly_eta_qexp(long jarg1, int jarg2, int jarg3);
  public final static native void fmpz_poly_eta_qexp(long jarg1, fmpz_poly_struct jarg1_, int jarg2, int jarg3);
  public final static native void _fmpz_poly_theta_qexp(long jarg1, int jarg2, int jarg3);
  public final static native void fmpz_poly_theta_qexp(long jarg1, fmpz_poly_struct jarg1_, int jarg2, int jarg3);
  public final static native void fmpz_poly_add_si(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void fmpz_poly_sub_si(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void fmpz_poly_si_sub(long jarg1, fmpz_poly_struct jarg1_, int jarg2, long jarg3, fmpz_poly_struct jarg3_);
  public final static native void fmpz_poly_add_fmpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_sub_fmpz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3);
  public final static native void fmpz_poly_fmpz_sub(long jarg1, fmpz_poly_struct jarg1_, long jarg2, long jarg3, fmpz_poly_struct jarg3_);
  public final static native int FLT_ROUNDS_get();
  public final static native int D_BITS_get();
  public final static native double D_EPS_get();
  public final static native double D_INF_get();
  public final static native double D_NAN_get();
  public final static native double d_randtest(long jarg1, flint_rand_s jarg1_);
  public final static native double d_randtest_signed(long jarg1, flint_rand_s jarg1_, int jarg2, int jarg3);
  public final static native double d_randtest_special(long jarg1, flint_rand_s jarg1_, int jarg2, int jarg3);
  public final static native double d_polyval(long jarg1, int jarg2, double jarg3);
  public final static native double d_lambertw(double jarg1);
  public final static native int d_is_nan(double jarg1);
  public final static native double d_log2(double jarg1);
  public final static native long _d_vec_init(int jarg1);
  public final static native void _d_vec_clear(long jarg1);
  public final static native void _d_vec_randtest(long jarg1, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void _d_vec_set(long jarg1, long jarg2, int jarg3);
  public final static native void _d_vec_zero(long jarg1, int jarg2);
  public final static native int _d_vec_equal(long jarg1, long jarg2, int jarg3);
  public final static native int _d_vec_approx_equal(long jarg1, long jarg2, int jarg3, double jarg4);
  public final static native int _d_vec_is_zero(long jarg1, int jarg2);
  public final static native int _d_vec_is_approx_zero(long jarg1, int jarg2, double jarg3);
  public final static native void _d_vec_add(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void _d_vec_sub(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native double _d_vec_dot(long jarg1, long jarg2, int jarg3);
  public final static native double _d_vec_norm(long jarg1, int jarg2);
  public final static native double _d_vec_dot_heuristic(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native double _d_vec_dot_thrice(long jarg1, long jarg2, int jarg3, long jarg4);
  public final static native void d_mat_struct_entries_set(long jarg1, d_mat_struct jarg1_, long jarg2);
  public final static native long d_mat_struct_entries_get(long jarg1, d_mat_struct jarg1_);
  public final static native void d_mat_struct_r_set(long jarg1, d_mat_struct jarg1_, int jarg2);
  public final static native int d_mat_struct_r_get(long jarg1, d_mat_struct jarg1_);
  public final static native void d_mat_struct_c_set(long jarg1, d_mat_struct jarg1_, int jarg2);
  public final static native int d_mat_struct_c_get(long jarg1, d_mat_struct jarg1_);
  public final static native void d_mat_struct_rows_set(long jarg1, d_mat_struct jarg1_, long jarg2);
  public final static native long d_mat_struct_rows_get(long jarg1, d_mat_struct jarg1_);
  public final static native long new_d_mat_struct();
  public final static native void delete_d_mat_struct(long jarg1);
  public final static native long d_mat_entry_ptr(long jarg1, d_mat_struct jarg1_, int jarg2, int jarg3);
  public final static native double d_mat_get_entry(long jarg1, d_mat_struct jarg1_, int jarg2, int jarg3);
  public final static native void d_mat_init(long jarg1, d_mat_struct jarg1_, int jarg2, int jarg3);
  public final static native void d_mat_swap(long jarg1, d_mat_struct jarg1_, long jarg2, d_mat_struct jarg2_);
  public final static native void d_mat_set(long jarg1, d_mat_struct jarg1_, long jarg2, d_mat_struct jarg2_);
  public final static native void d_mat_clear(long jarg1, d_mat_struct jarg1_);
  public final static native int d_mat_equal(long jarg1, d_mat_struct jarg1_, long jarg2, d_mat_struct jarg2_);
  public final static native int d_mat_approx_equal(long jarg1, d_mat_struct jarg1_, long jarg2, d_mat_struct jarg2_, double jarg3);
  public final static native int d_mat_is_zero(long jarg1, d_mat_struct jarg1_);
  public final static native int d_mat_is_approx_zero(long jarg1, d_mat_struct jarg1_, double jarg2);
  public final static native int d_mat_is_empty(long jarg1, d_mat_struct jarg1_);
  public final static native int d_mat_is_square(long jarg1, d_mat_struct jarg1_);
  public final static native void d_mat_zero(long jarg1, d_mat_struct jarg1_);
  public final static native void d_mat_one(long jarg1, d_mat_struct jarg1_);
  public final static native void d_mat_print(long jarg1, d_mat_struct jarg1_);
  public final static native void d_mat_randtest(long jarg1, d_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4);
  public final static native void d_mat_transpose(long jarg1, d_mat_struct jarg1_, long jarg2, d_mat_struct jarg2_);
  public final static native void d_mat_mul_classical(long jarg1, d_mat_struct jarg1_, long jarg2, d_mat_struct jarg2_, long jarg3, d_mat_struct jarg3_);
  public final static native void d_mat_swap_rows(long jarg1, d_mat_struct jarg1_, int jarg2, int jarg3);
  public final static native void d_mat_gso(long jarg1, d_mat_struct jarg1_, long jarg2, d_mat_struct jarg2_);
  public final static native void d_mat_qr(long jarg1, d_mat_struct jarg1_, long jarg2, d_mat_struct jarg2_, long jarg3, d_mat_struct jarg3_);
  public final static native void mpf_mat_struct_entries_set(long jarg1, mpf_mat_struct jarg1_, long jarg2, __mpf_struct jarg2_);
  public final static native long mpf_mat_struct_entries_get(long jarg1, mpf_mat_struct jarg1_);
  public final static native void mpf_mat_struct_r_set(long jarg1, mpf_mat_struct jarg1_, int jarg2);
  public final static native int mpf_mat_struct_r_get(long jarg1, mpf_mat_struct jarg1_);
  public final static native void mpf_mat_struct_c_set(long jarg1, mpf_mat_struct jarg1_, int jarg2);
  public final static native int mpf_mat_struct_c_get(long jarg1, mpf_mat_struct jarg1_);
  public final static native void mpf_mat_struct_prec_set(long jarg1, mpf_mat_struct jarg1_, long jarg2);
  public final static native long mpf_mat_struct_prec_get(long jarg1, mpf_mat_struct jarg1_);
  public final static native void mpf_mat_struct_rows_set(long jarg1, mpf_mat_struct jarg1_, long jarg2);
  public final static native long mpf_mat_struct_rows_get(long jarg1, mpf_mat_struct jarg1_);
  public final static native long new_mpf_mat_struct();
  public final static native void delete_mpf_mat_struct(long jarg1);
  public final static native long mpf_mat_entry(long jarg1, mpf_mat_struct jarg1_, int jarg2, int jarg3);
  public final static native void mpf_mat_init(long jarg1, mpf_mat_struct jarg1_, int jarg2, int jarg3, long jarg4);
  public final static native void mpf_mat_swap(long jarg1, mpf_mat_struct jarg1_, long jarg2, mpf_mat_struct jarg2_);
  public final static native void mpf_mat_set(long jarg1, mpf_mat_struct jarg1_, long jarg2, mpf_mat_struct jarg2_);
  public final static native void mpf_mat_clear(long jarg1, mpf_mat_struct jarg1_);
  public final static native int mpf_mat_equal(long jarg1, mpf_mat_struct jarg1_, long jarg2, mpf_mat_struct jarg2_);
  public final static native int mpf_mat_approx_equal(long jarg1, mpf_mat_struct jarg1_, long jarg2, mpf_mat_struct jarg2_, long jarg3);
  public final static native int mpf_mat_is_zero(long jarg1, mpf_mat_struct jarg1_);
  public final static native int mpf_mat_is_empty(long jarg1, mpf_mat_struct jarg1_);
  public final static native int mpf_mat_is_square(long jarg1, mpf_mat_struct jarg1_);
  public final static native void mpf_mat_zero(long jarg1, mpf_mat_struct jarg1_);
  public final static native void mpf_mat_one(long jarg1, mpf_mat_struct jarg1_);
  public final static native void mpf_mat_print(long jarg1, mpf_mat_struct jarg1_);
  public final static native void mpf_mat_randtest(long jarg1, mpf_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void mpf_mat_mul(long jarg1, mpf_mat_struct jarg1_, long jarg2, mpf_mat_struct jarg2_, long jarg3, mpf_mat_struct jarg3_);
  public final static native void mpf_mat_swap_rows(long jarg1, mpf_mat_struct jarg1_, int jarg2, int jarg3);
  public final static native void mpf_mat_gso(long jarg1, mpf_mat_struct jarg1_, long jarg2, mpf_mat_struct jarg2_);
  public final static native void mpf_mat_qr(long jarg1, mpf_mat_struct jarg1_, long jarg2, mpf_mat_struct jarg2_, long jarg3, mpf_mat_struct jarg3_);
  public final static native void fmpz_mat_struct_entries_set(long jarg1, fmpz_mat_struct jarg1_, long jarg2);
  public final static native long fmpz_mat_struct_entries_get(long jarg1, fmpz_mat_struct jarg1_);
  public final static native void fmpz_mat_struct_r_set(long jarg1, fmpz_mat_struct jarg1_, int jarg2);
  public final static native int fmpz_mat_struct_r_get(long jarg1, fmpz_mat_struct jarg1_);
  public final static native void fmpz_mat_struct_c_set(long jarg1, fmpz_mat_struct jarg1_, int jarg2);
  public final static native int fmpz_mat_struct_c_get(long jarg1, fmpz_mat_struct jarg1_);
  public final static native void fmpz_mat_struct_rows_set(long jarg1, fmpz_mat_struct jarg1_, long jarg2);
  public final static native long fmpz_mat_struct_rows_get(long jarg1, fmpz_mat_struct jarg1_);
  public final static native long new_fmpz_mat_struct();
  public final static native void delete_fmpz_mat_struct(long jarg1);
  public final static native void col_hash_t_col_set(long jarg1, col_hash_t jarg1_, long jarg2);
  public final static native long col_hash_t_col_get(long jarg1, col_hash_t jarg1_);
  public final static native void col_hash_t_hash_set(long jarg1, col_hash_t jarg1_, long jarg2);
  public final static native long col_hash_t_hash_get(long jarg1, col_hash_t jarg1_);
  public final static native long new_col_hash_t();
  public final static native void delete_col_hash_t(long jarg1);
  public final static native long fmpz_mat_entry(long jarg1, fmpz_mat_struct jarg1_, int jarg2, int jarg3);
  public final static native int fmpz_mat_nrows(long jarg1, fmpz_mat_struct jarg1_);
  public final static native int fmpz_mat_ncols(long jarg1, fmpz_mat_struct jarg1_);
  public final static native void fmpz_mat_init(long jarg1, fmpz_mat_struct jarg1_, int jarg2, int jarg3);
  public final static native void fmpz_mat_init_set(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_swap(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_set(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_clear(long jarg1, fmpz_mat_struct jarg1_);
  public final static native int fmpz_mat_equal(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native int fmpz_mat_is_zero(long jarg1, fmpz_mat_struct jarg1_);
  public final static native int fmpz_mat_is_one(long jarg1, fmpz_mat_struct jarg1_);
  public final static native int fmpz_mat_is_zero_row(long jarg1, fmpz_mat_struct jarg1_, int jarg2);
  public final static native int fmpz_mat_col_equal(long jarg1, fmpz_mat_struct jarg1_, int jarg2, int jarg3);
  public final static native int fmpz_mat_row_equal(long jarg1, fmpz_mat_struct jarg1_, int jarg2, int jarg3);
  public final static native int fmpz_mat_is_empty(long jarg1, fmpz_mat_struct jarg1_);
  public final static native int fmpz_mat_is_square(long jarg1, fmpz_mat_struct jarg1_);
  public final static native void fmpz_mat_zero(long jarg1, fmpz_mat_struct jarg1_);
  public final static native void fmpz_mat_one(long jarg1, fmpz_mat_struct jarg1_);
  public final static native void fmpz_mat_window_init(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void fmpz_mat_window_clear(long jarg1, fmpz_mat_struct jarg1_);
  public final static native void fmpz_mat_concat_horizontal(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, fmpz_mat_struct jarg3_);
  public final static native void fmpz_mat_concat_vertical(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, fmpz_mat_struct jarg3_);
  public final static native int fmpz_mat_fprint(long jarg1, _IO_FILE jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native int fmpz_mat_fprint_pretty(long jarg1, _IO_FILE jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native int fmpz_mat_print(long jarg1, fmpz_mat_struct jarg1_);
  public final static native int fmpz_mat_print_pretty(long jarg1, fmpz_mat_struct jarg1_);
  public final static native int fmpz_mat_fread(long jarg1, _IO_FILE jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native int fmpz_mat_read(long jarg1, fmpz_mat_struct jarg1_);
  public final static native void fmpz_mat_randbits(long jarg1, fmpz_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void fmpz_mat_randtest(long jarg1, fmpz_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void fmpz_mat_randtest_unsigned(long jarg1, fmpz_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void fmpz_mat_randintrel(long jarg1, fmpz_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void fmpz_mat_randsimdioph(long jarg1, fmpz_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3, long jarg4);
  public final static native void fmpz_mat_randntrulike(long jarg1, fmpz_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3, long jarg4);
  public final static native void fmpz_mat_randntrulike2(long jarg1, fmpz_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3, long jarg4);
  public final static native void fmpz_mat_randajtai(long jarg1, fmpz_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, double jarg3);
  public final static native void fmpz_mat_randrank(long jarg1, fmpz_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, long jarg4);
  public final static native void fmpz_mat_randdet(long jarg1, fmpz_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3);
  public final static native void fmpz_mat_randops(long jarg1, fmpz_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3);
  public final static native int fmpz_mat_randpermdiag(long jarg1, fmpz_mat_struct jarg1_, long jarg2, flint_rand_s jarg2_, long jarg3, int jarg4);
  public final static native int fmpz_mat_max_bits(long jarg1, fmpz_mat_struct jarg1_);
  public final static native void fmpz_mat_transpose(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_add(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, fmpz_mat_struct jarg3_);
  public final static native void fmpz_mat_sub(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, fmpz_mat_struct jarg3_);
  public final static native void fmpz_mat_neg(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_scalar_mul_fmpz(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_scalar_mul_si(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, int jarg3);
  public final static native void fmpz_mat_scalar_mul_ui(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_scalar_addmul_fmpz(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_scalar_addmul_si(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, int jarg3);
  public final static native void fmpz_mat_scalar_addmul_ui(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_scalar_submul_fmpz(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_scalar_submul_si(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, int jarg3);
  public final static native void fmpz_mat_scalar_submul_ui(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_scalar_addmul_nmod_mat_fmpz(long jarg1, fmpz_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_scalar_addmul_nmod_mat_ui(long jarg1, fmpz_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_scalar_divexact_fmpz(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_scalar_divexact_si(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, int jarg3);
  public final static native void fmpz_mat_scalar_divexact_ui(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_scalar_mul_2exp(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_scalar_tdiv_q_2exp(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_scalar_smod(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_scalar_mod_fmpz(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_mul(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, fmpz_mat_struct jarg3_);
  public final static native void fmpz_mat_mul_classical(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, fmpz_mat_struct jarg3_);
  public final static native void fmpz_mat_mul_strassen(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, fmpz_mat_struct jarg3_);
  public final static native void fmpz_mat_mul_classical_inline(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, fmpz_mat_struct jarg3_);
  public final static native void _fmpz_mat_mul_multi_mod(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, fmpz_mat_struct jarg3_, long jarg4);
  public final static native void fmpz_mat_mul_multi_mod(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, fmpz_mat_struct jarg3_);
  public final static native void fmpz_mat_sqr_bodrato(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_sqr(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_pow(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_kronecker_product(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, fmpz_mat_struct jarg3_);
  public final static native void fmpz_mat_content(long jarg1, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_swap_rows(long jarg1, fmpz_mat_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_mat_invert_rows(long jarg1, fmpz_mat_struct jarg1_, long jarg2);
  public final static native void fmpz_mat_swap_cols(long jarg1, fmpz_mat_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_mat_invert_cols(long jarg1, fmpz_mat_struct jarg1_, long jarg2);
  public final static native int fmpz_mat_find_pivot_any(long jarg1, fmpz_mat_struct jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int fmpz_mat_find_pivot_smallest(long jarg1, fmpz_mat_struct jarg1_, int jarg2, int jarg3, int jarg4);
  public final static native int fmpz_mat_fflu(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, long jarg4, fmpz_mat_struct jarg4_, int jarg5);
  public final static native int fmpz_mat_rank_small_inplace(long jarg1, fmpz_mat_struct jarg1_);
  public final static native int fmpz_mat_rref(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_);
  public final static native int fmpz_mat_rref_fflu(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_);
  public final static native int fmpz_mat_rref_mul(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_);
  public final static native int fmpz_mat_is_in_rref_with_rank(long jarg1, fmpz_mat_struct jarg1_, long jarg2, int jarg3);
  public final static native int fmpz_mat_rref_mod(long jarg1, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native int fmpz_mat_howell_form_mod(long jarg1, fmpz_mat_struct jarg1_, long jarg2);
  public final static native void fmpz_mat_strong_echelon_form_mod(long jarg1, fmpz_mat_struct jarg1_, long jarg2);
  public final static native void fmpz_mat_trace(long jarg1, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_det(long jarg1, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_det_cofactor(long jarg1, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_det_bareiss(long jarg1, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_det_modular(long jarg1, long jarg2, fmpz_mat_struct jarg2_, int jarg3);
  public final static native void fmpz_mat_det_modular_accelerated(long jarg1, long jarg2, fmpz_mat_struct jarg2_, int jarg3);
  public final static native void fmpz_mat_det_modular_given_divisor(long jarg1, long jarg2, fmpz_mat_struct jarg2_, long jarg3, int jarg4);
  public final static native void fmpz_mat_det_bound(long jarg1, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_det_divisor(long jarg1, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_similarity(long jarg1, fmpz_mat_struct jarg1_, int jarg2, long jarg3);
  public final static native void _fmpz_mat_charpoly_berkowitz(long jarg1, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_charpoly_berkowitz(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void _fmpz_mat_charpoly_modular(long jarg1, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_charpoly_modular(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void _fmpz_mat_charpoly(long jarg1, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_charpoly(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native int _fmpz_mat_minpoly_modular(long jarg1, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_minpoly_modular(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native int _fmpz_mat_minpoly(long jarg1, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_minpoly(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native int fmpz_mat_rank(long jarg1, fmpz_mat_struct jarg1_);
  public final static native void fmpz_mat_solve_bound(long jarg1, long jarg2, long jarg3, fmpz_mat_struct jarg3_, long jarg4, fmpz_mat_struct jarg4_);
  public final static native int fmpz_mat_solve(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_, long jarg4, fmpz_mat_struct jarg4_);
  public final static native int fmpz_mat_solve_cramer(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_, long jarg4, fmpz_mat_struct jarg4_);
  public final static native int fmpz_mat_solve_fflu(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_, long jarg4, fmpz_mat_struct jarg4_);
  public final static native void fmpz_mat_solve_fflu_precomp(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_, long jarg4, fmpz_mat_struct jarg4_);
  public final static native long fmpz_mat_find_good_prime_and_invert(long jarg1, nmod_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native long fmpz_mat_dixon_get_crt_primes(long jarg1, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void _fmpz_mat_solve_dixon(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_, long jarg4, fmpz_mat_struct jarg4_, long jarg5, nmod_mat_struct jarg5_, long jarg6, long jarg7, long jarg8);
  public final static native int fmpz_mat_solve_dixon(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_, long jarg4, fmpz_mat_struct jarg4_);
  public final static native void _fmpz_mat_solve_dixon_den(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_, long jarg4, fmpz_mat_struct jarg4_, long jarg5, nmod_mat_struct jarg5_, long jarg6, long jarg7, long jarg8);
  public final static native int fmpz_mat_solve_dixon_den(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_, long jarg4, fmpz_mat_struct jarg4_);
  public final static native int fmpz_mat_solve_multi_mod_den(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_, long jarg4, fmpz_mat_struct jarg4_);
  public final static native int fmpz_mat_nullspace(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native int fmpz_mat_inv(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_);
  public final static native void fmpz_mat_set_nmod_mat(long jarg1, fmpz_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native void fmpz_mat_set_nmod_mat_unsigned(long jarg1, fmpz_mat_struct jarg1_, long jarg2, nmod_mat_struct jarg2_);
  public final static native void fmpz_mat_get_nmod_mat(long jarg1, nmod_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_CRT_ui(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, long jarg4, nmod_mat_struct jarg4_, int jarg5);
  public final static native void fmpz_mat_multi_mod_ui_precomp(long jarg1, int jarg2, long jarg3, fmpz_mat_struct jarg3_, long jarg4, fmpz_comb_struct jarg4_, long jarg5, fmpz_comb_temp_struct jarg5_);
  public final static native void fmpz_mat_multi_mod_ui(long jarg1, int jarg2, long jarg3, fmpz_mat_struct jarg3_);
  public final static native void fmpz_mat_multi_CRT_ui_precomp(long jarg1, fmpz_mat_struct jarg1_, long jarg2, int jarg3, long jarg4, fmpz_comb_struct jarg4_, long jarg5, fmpz_comb_temp_struct jarg5_, int jarg6);
  public final static native void fmpz_mat_multi_CRT_ui(long jarg1, fmpz_mat_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void fmpz_mat_hnf(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_hnf_transform(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, fmpz_mat_struct jarg3_);
  public final static native void fmpz_mat_hnf_classical(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_hnf_xgcd(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_hnf_minors(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_hnf_minors_transform(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, fmpz_mat_struct jarg3_);
  public final static native void fmpz_mat_hnf_modular(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native void fmpz_mat_hnf_modular_eldiv(long jarg1, fmpz_mat_struct jarg1_, long jarg2);
  public final static native void fmpz_mat_hnf_pernet_stein(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3, flint_rand_s jarg3_);
  public final static native int fmpz_mat_is_in_hnf(long jarg1, fmpz_mat_struct jarg1_);
  public final static native void fmpz_mat_snf(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_snf_diagonal(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_snf_kannan_bachem(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_snf_iliopoulos(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_, long jarg3);
  public final static native int fmpz_mat_is_in_snf(long jarg1, fmpz_mat_struct jarg1_);
  public final static native int fmpz_mat_is_hadamard(long jarg1, fmpz_mat_struct jarg1_);
  public final static native int fmpz_mat_hadamard(long jarg1, fmpz_mat_struct jarg1_);
  public final static native void fmpz_mat_gram(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native int fmpz_mat_get_d_mat(long jarg1, d_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native int fmpz_mat_get_d_mat_transpose(long jarg1, d_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_get_mpf_mat(long jarg1, mpf_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native void fmpz_mat_chol_d(long jarg1, d_mat_struct jarg1_, long jarg2, fmpz_mat_struct jarg2_);
  public final static native int fmpz_mat_is_reduced(long jarg1, fmpz_mat_struct jarg1_, double jarg2, double jarg3);
  public final static native int fmpz_mat_is_reduced_gram(long jarg1, fmpz_mat_struct jarg1_, double jarg2, double jarg3);
  public final static native int fmpz_mat_is_reduced_with_removal(long jarg1, fmpz_mat_struct jarg1_, double jarg2, double jarg3, long jarg4, int jarg5);
  public final static native int fmpz_mat_is_reduced_gram_with_removal(long jarg1, fmpz_mat_struct jarg1_, double jarg2, double jarg3, long jarg4, int jarg5);
  public final static native void fmpz_mat_lll_original(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpq jarg2_, long jarg3, fmpq jarg3_);
  public final static native void fmpz_mat_lll_storjohann(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpq jarg2_, long jarg3, fmpq jarg3_);
  public final static native int fmpz_mat_col_partition(long jarg1, long jarg2, fmpz_mat_struct jarg2_, int jarg3);
  public final static native int fmpz_mat_next_col_van_hoeij(long jarg1, fmpz_mat_struct jarg1_, long jarg2, long jarg3, fmpz_mat_struct jarg3_, int jarg4, int jarg5);
  public final static native void fmpz_poly_factor_init(long jarg1, fmpz_poly_factor_struct jarg1_);
  public final static native void fmpz_poly_factor_init2(long jarg1, fmpz_poly_factor_struct jarg1_, int jarg2);
  public final static native void fmpz_poly_factor_realloc(long jarg1, fmpz_poly_factor_struct jarg1_, int jarg2);
  public final static native void fmpz_poly_factor_fit_length(long jarg1, fmpz_poly_factor_struct jarg1_, int jarg2);
  public final static native void fmpz_poly_factor_clear(long jarg1, fmpz_poly_factor_struct jarg1_);
  public final static native void fmpz_poly_factor_set(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2, fmpz_poly_factor_struct jarg2_);
  public final static native void fmpz_poly_factor_insert(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void fmpz_poly_factor_concat(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2, fmpz_poly_factor_struct jarg2_);
  public final static native void fmpz_poly_factor_print(long jarg1, fmpz_poly_factor_struct jarg1_);
  public final static native void fmpz_poly_factor_zassenhaus_recombination(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2, fmpz_poly_factor_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, long jarg4, int jarg5);
  public final static native void fmpz_poly_factor_squarefree(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void fmpz_poly_factor_mignotte(long jarg1, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_factor_zassenhaus(long jarg1, fmpz_poly_factor_struct jarg1_, int jarg2, long jarg3, fmpz_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void fmpz_poly_factor_zassenhaus(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpz_poly_factor_quadratic(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native int _fmpz_poly_factor_CLD_mat(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_factor_struct jarg3_, long jarg4, long jarg5);
  public final static native int fmpz_poly_factor_van_hoeij_check_if_solved(long jarg1, fmpz_mat_struct jarg1_, long jarg2, fmpz_poly_factor_struct jarg2_, long jarg3, fmpz_poly_factor_struct jarg3_, long jarg4, fmpz_poly_struct jarg4_, long jarg5, int jarg6, long jarg7);
  public final static native void fmpz_poly_factor_van_hoeij(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2, nmod_poly_factor_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4, long jarg5);
  public final static native void fmpz_poly_factor(long jarg1, fmpz_poly_factor_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void fmpz_poly_factor_get_fmpz_poly(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpz_poly_factor_struct jarg2_, int jarg3);
  public final static native void fmpz_poly_factor_get_fmpz(long jarg1, long jarg2, fmpz_poly_factor_struct jarg2_);
  public final static native void fmpq_poly_struct_coeffs_set(long jarg1, fmpq_poly_struct jarg1_, long jarg2);
  public final static native long fmpq_poly_struct_coeffs_get(long jarg1, fmpq_poly_struct jarg1_);
  public final static native void fmpq_poly_struct_den_set(long jarg1, fmpq_poly_struct jarg1_, long jarg2);
  public final static native long fmpq_poly_struct_den_get(long jarg1, fmpq_poly_struct jarg1_);
  public final static native void fmpq_poly_struct_alloc_set(long jarg1, fmpq_poly_struct jarg1_, int jarg2);
  public final static native int fmpq_poly_struct_alloc_get(long jarg1, fmpq_poly_struct jarg1_);
  public final static native void fmpq_poly_struct_length_set(long jarg1, fmpq_poly_struct jarg1_, int jarg2);
  public final static native int fmpq_poly_struct_length_get(long jarg1, fmpq_poly_struct jarg1_);
  public final static native long new_fmpq_poly_struct();
  public final static native void delete_fmpq_poly_struct(long jarg1);
  public final static native void fmpq_poly_powers_precomp_struct_powers_set(long jarg1, fmpq_poly_powers_precomp_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native long fmpq_poly_powers_precomp_struct_powers_get(long jarg1, fmpq_poly_powers_precomp_struct jarg1_);
  public final static native void fmpq_poly_powers_precomp_struct_len_set(long jarg1, fmpq_poly_powers_precomp_struct jarg1_, int jarg2);
  public final static native int fmpq_poly_powers_precomp_struct_len_get(long jarg1, fmpq_poly_powers_precomp_struct jarg1_);
  public final static native long new_fmpq_poly_powers_precomp_struct();
  public final static native void delete_fmpq_poly_powers_precomp_struct(long jarg1);
  public final static native int WEAK_CANONICALISE_CUTOFF_get();
  public final static native void fmpq_poly_init(long jarg1, fmpq_poly_struct jarg1_);
  public final static native void fmpq_poly_init2(long jarg1, fmpq_poly_struct jarg1_, int jarg2);
  public final static native void fmpq_poly_realloc(long jarg1, fmpq_poly_struct jarg1_, int jarg2);
  public final static native void fmpq_poly_fit_length(long jarg1, fmpq_poly_struct jarg1_, int jarg2);
  public final static native void _fmpq_poly_set_length(long jarg1, fmpq_poly_struct jarg1_, int jarg2);
  public final static native void fmpq_poly_clear(long jarg1, fmpq_poly_struct jarg1_);
  public final static native void _fmpq_poly_normalise(long jarg1, fmpq_poly_struct jarg1_);
  public final static native void fmpq_poly_get_numerator(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void fmpq_poly_get_denominator(long jarg1, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void _fmpq_poly_canonicalise(long jarg1, long jarg2, int jarg3);
  public final static native void fmpq_poly_canonicalise(long jarg1, fmpq_poly_struct jarg1_);
  public final static native int _fmpq_poly_is_canonical(long jarg1, long jarg2, int jarg3);
  public final static native int fmpq_poly_is_canonical(long jarg1, fmpq_poly_struct jarg1_);
  public final static native int fmpq_poly_degree(long jarg1, fmpq_poly_struct jarg1_);
  public final static native int fmpq_poly_length(long jarg1, fmpq_poly_struct jarg1_);
  public final static native void fmpq_poly_randtest(long jarg1, fmpq_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, long jarg4);
  public final static native void fmpq_poly_randtest_unsigned(long jarg1, fmpq_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, long jarg4);
  public final static native void fmpq_poly_randtest_not_zero(long jarg1, fmpq_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, long jarg4);
  public final static native void fmpq_poly_set(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void fmpq_poly_set_si(long jarg1, fmpq_poly_struct jarg1_, int jarg2);
  public final static native void fmpq_poly_set_ui(long jarg1, fmpq_poly_struct jarg1_, long jarg2);
  public final static native void fmpq_poly_set_fmpz(long jarg1, fmpq_poly_struct jarg1_, long jarg2);
  public final static native void fmpq_poly_set_fmpq(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq jarg2_);
  public final static native void fmpq_poly_set_mpz(long jarg1, fmpq_poly_struct jarg1_, long jarg2, __mpz_struct jarg2_);
  public final static native void fmpq_poly_set_mpq(long jarg1, fmpq_poly_struct jarg1_, long jarg2, __mpq_struct jarg2_);
  public final static native void fmpq_poly_set_fmpz_poly(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native void _fmpq_poly_get_nmod_poly(long jarg1, nmod_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void fmpq_poly_get_nmod_poly_den(long jarg1, nmod_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void fmpq_poly_get_nmod_poly(long jarg1, nmod_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void fmpq_poly_set_nmod_poly(long jarg1, fmpq_poly_struct jarg1_, long jarg2, nmod_poly_struct jarg2_);
  public final static native void _fmpq_poly_set_array_mpq(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void fmpq_poly_set_array_mpq(long jarg1, fmpq_poly_struct jarg1_, long jarg2, int jarg3);
  public final static native int _fmpq_poly_set_str(long jarg1, long jarg2, String jarg3, int jarg4);
  public final static native int fmpq_poly_set_str(long jarg1, fmpq_poly_struct jarg1_, String jarg2);
  public final static native String fmpq_poly_get_str(long jarg1, fmpq_poly_struct jarg1_);
  public final static native String fmpq_poly_get_str_pretty(long jarg1, fmpq_poly_struct jarg1_, String jarg2);
  public final static native String _fmpq_poly_get_str_pretty(long jarg1, long jarg2, int jarg3, String jarg4);
  public final static native void fmpq_poly_zero(long jarg1, fmpq_poly_struct jarg1_);
  public final static native void fmpq_poly_one(long jarg1, fmpq_poly_struct jarg1_);
  public final static native void fmpq_poly_neg(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void fmpq_poly_inv(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void fmpq_poly_swap(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void fmpq_poly_truncate(long jarg1, fmpq_poly_struct jarg1_, int jarg2);
  public final static native void fmpq_poly_set_trunc(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void fmpq_poly_get_slice(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void fmpq_poly_reverse(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void fmpq_poly_get_coeff_fmpz(long jarg1, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void fmpq_poly_get_coeff_fmpq(long jarg1, fmpq jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void fmpq_poly_get_coeff_mpq(long jarg1, __mpq_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void fmpq_poly_set_coeff_si(long jarg1, fmpq_poly_struct jarg1_, int jarg2, int jarg3);
  public final static native void fmpq_poly_set_coeff_ui(long jarg1, fmpq_poly_struct jarg1_, int jarg2, long jarg3);
  public final static native void fmpq_poly_set_coeff_fmpz(long jarg1, fmpq_poly_struct jarg1_, int jarg2, long jarg3);
  public final static native void fmpq_poly_set_coeff_fmpq(long jarg1, fmpq_poly_struct jarg1_, int jarg2, long jarg3, fmpq jarg3_);
  public final static native void fmpq_poly_set_coeff_mpz(long jarg1, fmpq_poly_struct jarg1_, int jarg2, long jarg3, __mpz_struct jarg3_);
  public final static native void fmpq_poly_set_coeff_mpq(long jarg1, fmpq_poly_struct jarg1_, int jarg2, long jarg3, __mpq_struct jarg3_);
  public final static native int fmpq_poly_equal(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native int _fmpq_poly_cmp(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native int fmpq_poly_cmp(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native int _fmpq_poly_equal_trunc(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native int fmpq_poly_equal_trunc(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native int fmpq_poly_is_zero(long jarg1, fmpq_poly_struct jarg1_);
  public final static native int fmpq_poly_is_one(long jarg1, fmpq_poly_struct jarg1_);
  public final static native int fmpq_poly_is_gen(long jarg1, fmpq_poly_struct jarg1_);
  public final static native void fmpq_poly_add_si(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void fmpq_poly_sub_si(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void fmpq_poly_si_sub(long jarg1, fmpq_poly_struct jarg1_, int jarg2, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void fmpq_poly_add_fmpz(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3);
  public final static native void fmpq_poly_sub_fmpz(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3);
  public final static native void fmpq_poly_fmpz_sub(long jarg1, fmpq_poly_struct jarg1_, long jarg2, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void fmpq_poly_add_fmpq(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq jarg3_);
  public final static native void fmpq_poly_sub_fmpq(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq jarg3_);
  public final static native void fmpq_poly_fmpq_sub(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void _fmpq_poly_add(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8);
  public final static native void fmpq_poly_add(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void _fmpq_poly_add_can(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void fmpq_poly_add_can(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, int jarg4);
  public final static native void _fmpq_poly_add_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void fmpq_poly_add_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, int jarg4);
  public final static native void _fmpq_poly_add_series_can(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10);
  public final static native void fmpq_poly_add_series_can(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _fmpq_poly_sub(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8);
  public final static native void fmpq_poly_sub(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void _fmpq_poly_sub_can(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void fmpq_poly_sub_can(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, int jarg4);
  public final static native void _fmpq_poly_sub_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void fmpq_poly_sub_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, int jarg4);
  public final static native void _fmpq_poly_sub_series_can(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, int jarg9, int jarg10);
  public final static native void fmpq_poly_sub_series_can(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _fmpq_poly_scalar_mul_si(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void _fmpq_poly_scalar_mul_ui(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6);
  public final static native void _fmpq_poly_scalar_mul_fmpz(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6);
  public final static native void _fmpq_poly_scalar_mul_fmpq(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7);
  public final static native void fmpq_poly_scalar_mul_si(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void fmpq_poly_scalar_mul_ui(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3);
  public final static native void fmpq_poly_scalar_mul_fmpz(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3);
  public final static native void fmpq_poly_scalar_mul_fmpq(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq jarg3_);
  public final static native void fmpq_poly_scalar_mul_mpz(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void fmpq_poly_scalar_mul_mpq(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, __mpq_struct jarg3_);
  public final static native void _fmpq_poly_scalar_div_si(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void _fmpq_poly_scalar_div_ui(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6);
  public final static native void _fmpq_poly_scalar_div_fmpz(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6);
  public final static native void _fmpq_poly_scalar_div_fmpq(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7);
  public final static native void fmpq_poly_scalar_div_si(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void fmpq_poly_scalar_div_ui(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3);
  public final static native void fmpq_poly_scalar_div_fmpz(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3);
  public final static native void fmpq_poly_scalar_div_fmpq(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq jarg3_);
  public final static native void fmpq_poly_scalar_div_mpz(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void fmpq_poly_scalar_div_mpq(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, __mpq_struct jarg3_);
  public final static native void _fmpq_poly_mul(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8);
  public final static native void fmpq_poly_mul(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void _fmpq_poly_mullow(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void fmpq_poly_mullow(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, int jarg4);
  public final static native void fmpq_poly_addmul(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void fmpq_poly_submul(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void _fmpq_poly_pow(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6);
  public final static native void fmpq_poly_pow(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3);
  public final static native void _fmpq_poly_pow_trunc(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, int jarg7);
  public final static native void fmpq_poly_pow_trunc(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, int jarg4);
  public final static native void fmpq_poly_shift_left(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void fmpq_poly_shift_right(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_divrem(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7, long jarg8, long jarg9, int jarg10, long jarg11, fmpz_preinvn_struct jarg11_);
  public final static native void fmpq_poly_divrem(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, long jarg4, fmpq_poly_struct jarg4_);
  public final static native void _fmpq_poly_div(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, long jarg9, fmpz_preinvn_struct jarg9_);
  public final static native void fmpq_poly_div(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void _fmpq_poly_rem(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, long jarg9, fmpz_preinvn_struct jarg9_);
  public final static native void fmpq_poly_rem(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native long _fmpq_poly_powers_precompute(long jarg1, long jarg2, int jarg3);
  public final static native void fmpq_poly_powers_precompute(long jarg1, fmpq_poly_powers_precomp_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void _fmpq_poly_powers_clear(long jarg1, fmpq_poly_struct jarg1_, int jarg2);
  public final static native void fmpq_poly_powers_clear(long jarg1, fmpq_poly_powers_precomp_struct jarg1_);
  public final static native void _fmpq_poly_rem_powers_precomp(long jarg1, long jarg2, int jarg3, long jarg4, long jarg5, int jarg6, long jarg7, fmpq_poly_struct jarg7_);
  public final static native void fmpq_poly_rem_powers_precomp(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, long jarg4, fmpq_poly_powers_precomp_struct jarg4_);
  public final static native int _fmpq_poly_divides(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8);
  public final static native int fmpq_poly_divides(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native int fmpq_poly_remove(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void _fmpq_poly_inv_series_newton(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_inv_series_newton(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_inv_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_inv_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_div_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void fmpq_poly_div_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, int jarg4);
  public final static native void _fmpq_poly_gcd(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6);
  public final static native void fmpq_poly_gcd(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void _fmpq_poly_xgcd(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7, long jarg8, int jarg9, long jarg10, long jarg11, int jarg12);
  public final static native void fmpq_poly_xgcd(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, long jarg4, fmpq_poly_struct jarg4_, long jarg5, fmpq_poly_struct jarg5_);
  public final static native void _fmpq_poly_lcm(long jarg1, long jarg2, long jarg3, int jarg4, long jarg5, int jarg6);
  public final static native void fmpq_poly_lcm(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void _fmpq_poly_resultant(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8);
  public final static native void fmpq_poly_resultant(long jarg1, fmpq jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void _fmpq_poly_resultant_div(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, long jarg9, int jarg10);
  public final static native void fmpq_poly_resultant_div(long jarg1, fmpq jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, long jarg4, int jarg5);
  public final static native void _fmpq_poly_derivative(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void fmpq_poly_derivative(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void _fmpq_poly_integral(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void fmpq_poly_integral(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void _fmpq_poly_invsqrt_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_invsqrt_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_sqrt_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_sqrt_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_power_sums(long jarg1, long jarg2, long jarg3, int jarg4, int jarg5);
  public final static native void fmpq_poly_power_sums(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_power_sums_to_poly(long jarg1, long jarg2, long jarg3, int jarg4);
  public final static native void fmpq_poly_power_sums_to_fmpz_poly(long jarg1, fmpz_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void fmpq_poly_power_sums_to_poly(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void _fmpq_poly_log_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_log_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_exp_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_exp_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_atan_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_atan_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_atanh_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_atanh_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_asin_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_asin_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_asinh_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_asinh_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_tan_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_tan_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_sin_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_sin_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_cos_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_cos_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_sin_cos_series(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, int jarg7, int jarg8);
  public final static native void fmpq_poly_sin_cos_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, int jarg4);
  public final static native void _fmpq_poly_sinh_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_sinh_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_cosh_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_cosh_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_tanh_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_tanh_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_legendre_p(long jarg1, long jarg2, long jarg3);
  public final static native void fmpq_poly_legendre_p(long jarg1, fmpq_poly_struct jarg1_, long jarg2);
  public final static native void _fmpq_poly_laguerre_l(long jarg1, long jarg2, long jarg3);
  public final static native void fmpq_poly_laguerre_l(long jarg1, fmpq_poly_struct jarg1_, long jarg2);
  public final static native void _fmpq_poly_gegenbauer_c(long jarg1, long jarg2, long jarg3, long jarg4, fmpq jarg4_);
  public final static native void fmpq_poly_gegenbauer_c(long jarg1, fmpq_poly_struct jarg1_, long jarg2, long jarg3, fmpq jarg3_);
  public final static native void _fmpq_poly_evaluate_fmpz(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6);
  public final static native void fmpq_poly_evaluate_fmpz(long jarg1, fmpq jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3);
  public final static native void _fmpq_poly_evaluate_fmpq(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7);
  public final static native void fmpq_poly_evaluate_fmpq(long jarg1, fmpq jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq jarg3_);
  public final static native void fmpq_poly_evaluate_mpz(long jarg1, __mpq_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, __mpz_struct jarg3_);
  public final static native void fmpq_poly_evaluate_mpq(long jarg1, __mpq_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, __mpq_struct jarg3_);
  public final static native void _fmpq_poly_interpolate_fmpz_vec(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void fmpq_poly_interpolate_fmpz_vec(long jarg1, fmpq_poly_struct jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void _fmpq_poly_compose(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8);
  public final static native void fmpq_poly_compose(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_);
  public final static native void _fmpq_poly_rescale(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7);
  public final static native void fmpq_poly_rescale(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq jarg3_);
  public final static native void _fmpq_poly_compose_series_horner(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void fmpq_poly_compose_series_horner(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, int jarg4);
  public final static native void _fmpq_poly_compose_series_brent_kung(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void fmpq_poly_compose_series_brent_kung(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, int jarg4);
  public final static native void _fmpq_poly_compose_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, long jarg6, long jarg7, int jarg8, int jarg9);
  public final static native void fmpq_poly_compose_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, int jarg4);
  public final static native void _fmpq_poly_revert_series_lagrange(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_revert_series_lagrange(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_revert_series_lagrange_fast(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_revert_series_lagrange_fast(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_revert_series_newton(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_revert_series_newton(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_revert_series(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void fmpq_poly_revert_series(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void _fmpq_poly_content(long jarg1, fmpq jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native void fmpq_poly_content(long jarg1, fmpq jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native void _fmpq_poly_primitive_part(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void fmpq_poly_primitive_part(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native int _fmpq_poly_is_monic(long jarg1, long jarg2, int jarg3);
  public final static native int fmpq_poly_is_monic(long jarg1, fmpq_poly_struct jarg1_);
  public final static native void _fmpq_poly_make_monic(long jarg1, long jarg2, long jarg3, long jarg4, int jarg5);
  public final static native void fmpq_poly_make_monic(long jarg1, fmpq_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native int fmpq_poly_is_squarefree(long jarg1, fmpq_poly_struct jarg1_);
  public final static native int fmpq_poly_debug(long jarg1, fmpq_poly_struct jarg1_);
  public final static native int _fmpq_poly_fprint(long jarg1, _IO_FILE jarg1_, long jarg2, long jarg3, int jarg4);
  public final static native int fmpq_poly_fprint(long jarg1, _IO_FILE jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native int _fmpq_poly_fprint_pretty(long jarg1, _IO_FILE jarg1_, long jarg2, long jarg3, int jarg4, String jarg5);
  public final static native int fmpq_poly_fprint_pretty(long jarg1, _IO_FILE jarg1_, long jarg2, fmpq_poly_struct jarg2_, String jarg3);
  public final static native int _fmpq_poly_print(long jarg1, long jarg2, int jarg3);
  public final static native int fmpq_poly_print(long jarg1, fmpq_poly_struct jarg1_);
  public final static native int _fmpq_poly_print_pretty(long jarg1, long jarg2, int jarg3, String jarg4);
  public final static native int fmpq_poly_print_pretty(long jarg1, fmpq_poly_struct jarg1_, String jarg2);
  public final static native int fmpq_poly_fread(long jarg1, _IO_FILE jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native int fmpq_poly_read(long jarg1, fmpq_poly_struct jarg1_);
  public final static native void arb_poly_struct_coeffs_set(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native long arb_poly_struct_coeffs_get(long jarg1, arb_poly_struct jarg1_);
  public final static native void arb_poly_struct_length_set(long jarg1, arb_poly_struct jarg1_, int jarg2);
  public final static native int arb_poly_struct_length_get(long jarg1, arb_poly_struct jarg1_);
  public final static native void arb_poly_struct_alloc_set(long jarg1, arb_poly_struct jarg1_, int jarg2);
  public final static native int arb_poly_struct_alloc_get(long jarg1, arb_poly_struct jarg1_);
  public final static native long new_arb_poly_struct();
  public final static native void delete_arb_poly_struct(long jarg1);
  public final static native void arb_poly_init(long jarg1, arb_poly_struct jarg1_);
  public final static native void arb_poly_init2(long jarg1, arb_poly_struct jarg1_, int jarg2);
  public final static native void arb_poly_clear(long jarg1, arb_poly_struct jarg1_);
  public final static native void arb_poly_fit_length(long jarg1, arb_poly_struct jarg1_, int jarg2);
  public final static native void _arb_poly_set_length(long jarg1, arb_poly_struct jarg1_, int jarg2);
  public final static native void _arb_poly_normalise(long jarg1, arb_poly_struct jarg1_);
  public final static native void arb_poly_swap(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_);
  public final static native void arb_poly_set(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_);
  public final static native void arb_poly_set_round(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3);
  public final static native void arb_poly_set_trunc(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3);
  public final static native void arb_poly_set_trunc_round(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native int arb_poly_length(long jarg1, arb_poly_struct jarg1_);
  public final static native int arb_poly_degree(long jarg1, arb_poly_struct jarg1_);
  public final static native int arb_poly_valuation(long jarg1, arb_poly_struct jarg1_);
  public final static native int arb_poly_is_zero(long jarg1, arb_poly_struct jarg1_);
  public final static native int arb_poly_is_one(long jarg1, arb_poly_struct jarg1_);
  public final static native int arb_poly_is_x(long jarg1, arb_poly_struct jarg1_);
  public final static native void arb_poly_zero(long jarg1, arb_poly_struct jarg1_);
  public final static native void arb_poly_one(long jarg1, arb_poly_struct jarg1_);
  public final static native void arb_poly_set_coeff_si(long jarg1, arb_poly_struct jarg1_, int jarg2, int jarg3);
  public final static native void arb_poly_set_coeff_arb(long jarg1, arb_poly_struct jarg1_, int jarg2, long jarg3, arb_struct jarg3_);
  public final static native void arb_poly_get_coeff_arb(long jarg1, arb_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3);
  public final static native void _arb_poly_reverse(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_shift_right(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_poly_shift_right(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3);
  public final static native void _arb_poly_shift_left(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_poly_shift_left(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3);
  public final static native void arb_poly_truncate(long jarg1, arb_poly_struct jarg1_, int jarg2);
  public final static native void arb_poly_set_fmpz_poly(long jarg1, arb_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void arb_poly_set_fmpq_poly(long jarg1, arb_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void arb_poly_set_arb(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void arb_poly_set_si(long jarg1, arb_poly_struct jarg1_, int jarg2);
  public final static native int arb_poly_get_unique_fmpz_poly(long jarg1, fmpz_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_);
  public final static native int arb_poly_contains(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_);
  public final static native int arb_poly_contains_fmpz_poly(long jarg1, arb_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native int arb_poly_contains_fmpq_poly(long jarg1, arb_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native int arb_poly_equal(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_);
  public final static native int _arb_poly_overlaps(long jarg1, arb_struct jarg1_, int jarg2, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native int arb_poly_overlaps(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_);
  public final static native void _arb_poly_majorant(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_poly_majorant(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3);
  public final static native void arb_poly_fprintd(long jarg1, _IO_FILE jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3);
  public final static native void arb_poly_printd(long jarg1, arb_poly_struct jarg1_, int jarg2);
  public final static native void arb_poly_randtest(long jarg1, arb_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void _arb_poly_add(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void arb_poly_add(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4);
  public final static native void arb_poly_add_si(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_sub(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void arb_poly_sub(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4);
  public final static native void arb_poly_add_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void arb_poly_sub_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void arb_poly_neg(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_);
  public final static native void arb_poly_scalar_mul_2exp_si(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3);
  public final static native void arb_poly_scalar_mul(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void arb_poly_scalar_div(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void _arb_poly_mullow_ztrunc(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void arb_poly_mullow_ztrunc(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_mullow_classical(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void arb_poly_mullow_classical(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_mullow_block(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void arb_poly_mullow_block(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_mullow(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void arb_poly_mullow(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_mul(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void arb_poly_mul(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4);
  public final static native void _arb_poly_mul_monic(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void _arb_poly_inv_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_inv_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_div_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void arb_poly_div_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_div(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void _arb_poly_divrem(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, long jarg5, arb_struct jarg5_, int jarg6, int jarg7);
  public final static native void _arb_poly_rem(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native int arb_poly_divrem(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, long jarg4, arb_poly_struct jarg4_, int jarg5);
  public final static native void _arb_poly_div_root(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, long jarg5, arb_struct jarg5_, int jarg6);
  public final static native void _arb_poly_product_roots(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_poly_product_roots(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_product_roots_complex(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void arb_poly_product_roots_complex(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native long _arb_poly_tree_alloc(int jarg1);
  public final static native void _arb_poly_tree_free(long jarg1, int jarg2);
  public final static native void _arb_poly_tree_build(long jarg1, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_taylor_shift_horner(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_poly_taylor_shift_horner(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void _arb_poly_taylor_shift_divconquer(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_poly_taylor_shift_divconquer(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void _arb_poly_taylor_shift_convolution(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_poly_taylor_shift_convolution(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void _arb_poly_taylor_shift(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_poly_taylor_shift(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void _arb_poly_compose(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void arb_poly_compose(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4);
  public final static native void _arb_poly_compose_horner(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void arb_poly_compose_horner(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4);
  public final static native void _arb_poly_compose_divconquer(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void arb_poly_compose_divconquer(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4);
  public final static native void _arb_poly_compose_series_horner(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void arb_poly_compose_series_horner(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_compose_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void arb_poly_compose_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_revert_series_lagrange(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_revert_series_lagrange(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_revert_series_newton(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_revert_series_newton(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_revert_series_lagrange_fast(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_revert_series_lagrange_fast(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_revert_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_revert_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_evaluate_horner(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void arb_poly_evaluate_horner(long jarg1, arb_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void _arb_poly_evaluate_rectangular(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void arb_poly_evaluate_rectangular(long jarg1, arb_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void _arb_poly_evaluate(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void arb_poly_evaluate(long jarg1, arb_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void _arb_poly_evaluate2_horner(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, long jarg5, arb_struct jarg5_, int jarg6);
  public final static native void arb_poly_evaluate2_horner(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_poly_struct jarg3_, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void _arb_poly_evaluate2_rectangular(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, long jarg5, arb_struct jarg5_, int jarg6);
  public final static native void arb_poly_evaluate2_rectangular(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_poly_struct jarg3_, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void _arb_poly_evaluate2(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, long jarg5, arb_struct jarg5_, int jarg6);
  public final static native void arb_poly_evaluate2(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_poly_struct jarg3_, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void _arb_poly_evaluate_vec_iter(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void arb_poly_evaluate_vec_iter(long jarg1, arb_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_evaluate_vec_fast_precomp(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void _arb_poly_evaluate_vec_fast(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void arb_poly_evaluate_vec_fast(long jarg1, arb_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_interpolate_newton(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void arb_poly_interpolate_newton(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_interpolate_barycentric(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void arb_poly_interpolate_barycentric(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_interpolation_weights(long jarg1, arb_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void _arb_poly_interpolate_fast_precomp(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void _arb_poly_interpolate_fast(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void arb_poly_interpolate_fast(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_derivative(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_poly_derivative(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3);
  public final static native void _arb_poly_integral(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_poly_integral(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3);
  public final static native void arb_poly_borel_transform(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3);
  public final static native void _arb_poly_borel_transform(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void arb_poly_inv_borel_transform(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3);
  public final static native void _arb_poly_inv_borel_transform(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_binomial_transform_basecase(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_binomial_transform_basecase(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_binomial_transform_convolution(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_binomial_transform_convolution(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_binomial_transform(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_binomial_transform(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_pow_ui_trunc_binexp(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void arb_poly_pow_ui_trunc_binexp(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native void _arb_poly_pow_ui(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, int jarg5);
  public final static native void arb_poly_pow_ui(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, int jarg4);
  public final static native void _arb_poly_pow_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void arb_poly_pow_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_pow_arb_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void arb_poly_pow_arb_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_binomial_pow_arb_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void _arb_poly_rsqrt_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_rsqrt_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_sqrt_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_sqrt_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_log_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_log_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_log1p_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_log1p_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_atan_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_atan_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_asin_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_asin_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_acos_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_acos_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_exp_series_basecase(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_exp_series_basecase(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_exp_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_exp_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_sinh_cosh_series_basecase(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void arb_poly_sinh_cosh_series_basecase(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_sinh_cosh_series_exponential(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void arb_poly_sinh_cosh_series_exponential(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_sinh_cosh_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void arb_poly_sinh_cosh_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_sinh_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_sinh_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_cosh_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_cosh_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_sin_cos_series_basecase(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void arb_poly_sin_cos_series_basecase(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void _arb_poly_sin_cos_series_tangent(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void arb_poly_sin_cos_series_tangent(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void _arb_poly_sin_cos_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void arb_poly_sin_cos_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_sin_cos_pi_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void arb_poly_sin_cos_pi_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_sin_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_sin_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_cos_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_cos_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_sin_pi_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_sin_pi_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_cos_pi_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_cos_pi_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_cot_pi_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_cot_pi_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_tan_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_tan_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_sinc_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_sinc_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_sinc_pi_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_sinc_pi_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_compose_series_brent_kung(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void arb_poly_compose_series_brent_kung(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _arb_poly_evaluate_acb_horner(long jarg1, acb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void arb_poly_evaluate_acb_horner(long jarg1, acb_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void _arb_poly_evaluate_acb_rectangular(long jarg1, acb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void arb_poly_evaluate_acb_rectangular(long jarg1, acb_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void _arb_poly_evaluate_acb(long jarg1, acb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void arb_poly_evaluate_acb(long jarg1, acb_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void _arb_poly_evaluate2_acb_horner(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, long jarg5, acb_struct jarg5_, int jarg6);
  public final static native void arb_poly_evaluate2_acb_horner(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_poly_struct jarg3_, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void _arb_poly_evaluate2_acb_rectangular(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, long jarg5, acb_struct jarg5_, int jarg6);
  public final static native void arb_poly_evaluate2_acb_rectangular(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_poly_struct jarg3_, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void _arb_poly_evaluate2_acb(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, long jarg5, acb_struct jarg5_, int jarg6);
  public final static native void arb_poly_evaluate2_acb(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_poly_struct jarg3_, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void _arb_poly_lambertw_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void arb_poly_lambertw_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void _arb_poly_gamma_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_gamma_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_rgamma_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_rgamma_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_lgamma_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_lgamma_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_digamma_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_digamma_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_rising_ui_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void arb_poly_rising_ui_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native void _arb_poly_zeta_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void arb_poly_zeta_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void _arb_poly_riemann_siegel_theta_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_riemann_siegel_theta_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _arb_poly_riemann_siegel_z_series(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void arb_poly_riemann_siegel_z_series(long jarg1, arb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native int _arb_poly_swinnerton_dyer_ui_prec(long jarg1);
  public final static native void _arb_poly_swinnerton_dyer_ui(long jarg1, arb_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void arb_poly_swinnerton_dyer_ui(long jarg1, arb_poly_struct jarg1_, long jarg2, int jarg3);
  public final static native void _arb_poly_newton_convergence_factor(long jarg1, arf_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native int _arb_poly_newton_step(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, long jarg5, arb_struct jarg5_, long jarg6, arf_struct jarg6_, int jarg7);
  public final static native void _arb_poly_newton_refine_root(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, long jarg5, arb_struct jarg5_, long jarg6, arf_struct jarg6_, int jarg7, int jarg8);
  public final static native void _arb_poly_root_bound_fujiwara(long jarg1, mag_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void arb_poly_root_bound_fujiwara(long jarg1, mag_struct jarg1_, long jarg2, arb_poly_struct jarg2_);
  public final static native int arb_poly_allocated_bytes(long jarg1, arb_poly_struct jarg1_);
  public final static native int n_zerobits(long jarg1);
  public final static native int poly_pow_length(int jarg1, long jarg2, int jarg3);
  public final static native void acb_poly_struct_coeffs_set(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native long acb_poly_struct_coeffs_get(long jarg1, acb_poly_struct jarg1_);
  public final static native void acb_poly_struct_length_set(long jarg1, acb_poly_struct jarg1_, int jarg2);
  public final static native int acb_poly_struct_length_get(long jarg1, acb_poly_struct jarg1_);
  public final static native void acb_poly_struct_alloc_set(long jarg1, acb_poly_struct jarg1_, int jarg2);
  public final static native int acb_poly_struct_alloc_get(long jarg1, acb_poly_struct jarg1_);
  public final static native long new_acb_poly_struct();
  public final static native void delete_acb_poly_struct(long jarg1);
  public final static native void acb_poly_init(long jarg1, acb_poly_struct jarg1_);
  public final static native void acb_poly_init2(long jarg1, acb_poly_struct jarg1_, int jarg2);
  public final static native void acb_poly_clear(long jarg1, acb_poly_struct jarg1_);
  public final static native void acb_poly_fit_length(long jarg1, acb_poly_struct jarg1_, int jarg2);
  public final static native void _acb_poly_set_length(long jarg1, acb_poly_struct jarg1_, int jarg2);
  public final static native void _acb_poly_normalise(long jarg1, acb_poly_struct jarg1_);
  public final static native void acb_poly_swap(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_);
  public final static native int acb_poly_length(long jarg1, acb_poly_struct jarg1_);
  public final static native int acb_poly_degree(long jarg1, acb_poly_struct jarg1_);
  public final static native int acb_poly_valuation(long jarg1, acb_poly_struct jarg1_);
  public final static native int acb_poly_is_zero(long jarg1, acb_poly_struct jarg1_);
  public final static native int acb_poly_is_one(long jarg1, acb_poly_struct jarg1_);
  public final static native int acb_poly_is_x(long jarg1, acb_poly_struct jarg1_);
  public final static native void acb_poly_zero(long jarg1, acb_poly_struct jarg1_);
  public final static native void acb_poly_one(long jarg1, acb_poly_struct jarg1_);
  public final static native void acb_poly_set_coeff_si(long jarg1, acb_poly_struct jarg1_, int jarg2, int jarg3);
  public final static native void acb_poly_set_coeff_acb(long jarg1, acb_poly_struct jarg1_, int jarg2, long jarg3, acb_struct jarg3_);
  public final static native void acb_poly_get_coeff_acb(long jarg1, acb_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3);
  public final static native void _acb_poly_shift_right(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_poly_shift_right(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3);
  public final static native void _acb_poly_shift_left(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_poly_shift_left(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3);
  public final static native void acb_poly_truncate(long jarg1, acb_poly_struct jarg1_, int jarg2);
  public final static native void _acb_poly_majorant(long jarg1, arb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_poly_majorant(long jarg1, arb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3);
  public final static native void acb_poly_fprintd(long jarg1, _IO_FILE jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3);
  public final static native void acb_poly_printd(long jarg1, acb_poly_struct jarg1_, int jarg2);
  public final static native void _acb_poly_evaluate_horner(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void acb_poly_evaluate_horner(long jarg1, acb_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void _acb_poly_evaluate_rectangular(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void acb_poly_evaluate_rectangular(long jarg1, acb_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void _acb_poly_evaluate(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void acb_poly_evaluate(long jarg1, acb_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void _acb_poly_evaluate2_horner(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, long jarg5, acb_struct jarg5_, int jarg6);
  public final static native void acb_poly_evaluate2_horner(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_poly_struct jarg3_, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void _acb_poly_evaluate2_rectangular(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, long jarg5, acb_struct jarg5_, int jarg6);
  public final static native void acb_poly_evaluate2_rectangular(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_poly_struct jarg3_, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void _acb_poly_evaluate2(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, long jarg5, acb_struct jarg5_, int jarg6);
  public final static native void acb_poly_evaluate2(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_poly_struct jarg3_, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void _acb_poly_derivative(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_poly_derivative(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3);
  public final static native void _acb_poly_integral(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_poly_integral(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3);
  public final static native void acb_poly_borel_transform(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3);
  public final static native void _acb_poly_borel_transform(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_poly_inv_borel_transform(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3);
  public final static native void _acb_poly_inv_borel_transform(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_binomial_transform_basecase(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_binomial_transform_basecase(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_binomial_transform_convolution(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_binomial_transform_convolution(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_binomial_transform(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_binomial_transform(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_poly_set(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_);
  public final static native void acb_poly_set_round(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3);
  public final static native void acb_poly_set_trunc(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3);
  public final static native void acb_poly_set_trunc_round(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_poly_set_arb_poly(long jarg1, acb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_);
  public final static native void acb_poly_set2_arb_poly(long jarg1, acb_poly_struct jarg1_, long jarg2, arb_poly_struct jarg2_, long jarg3, arb_poly_struct jarg3_);
  public final static native void acb_poly_set_fmpq_poly(long jarg1, acb_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, int jarg3);
  public final static native void acb_poly_set2_fmpq_poly(long jarg1, acb_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_, long jarg3, fmpq_poly_struct jarg3_, int jarg4);
  public final static native void acb_poly_set_fmpz_poly(long jarg1, acb_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, int jarg3);
  public final static native void acb_poly_set2_fmpz_poly(long jarg1, acb_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_, long jarg3, fmpz_poly_struct jarg3_, int jarg4);
  public final static native int acb_poly_get_unique_fmpz_poly(long jarg1, fmpz_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_);
  public final static native void acb_poly_set_acb(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_poly_set_si(long jarg1, acb_poly_struct jarg1_, int jarg2);
  public final static native void acb_poly_randtest(long jarg1, acb_poly_struct jarg1_, long jarg2, flint_rand_s jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native int acb_poly_equal(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_);
  public final static native int acb_poly_contains_fmpz_poly(long jarg1, acb_poly_struct jarg1_, long jarg2, fmpz_poly_struct jarg2_);
  public final static native int acb_poly_contains_fmpq_poly(long jarg1, acb_poly_struct jarg1_, long jarg2, fmpq_poly_struct jarg2_);
  public final static native int _acb_poly_overlaps(long jarg1, acb_struct jarg1_, int jarg2, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native int acb_poly_overlaps(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_);
  public final static native int acb_poly_contains(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_);
  public final static native int acb_poly_is_real(long jarg1, acb_poly_struct jarg1_);
  public final static native void _acb_poly_add(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_poly_add(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4);
  public final static native void acb_poly_add_si(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_sub(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_poly_sub(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4);
  public final static native void acb_poly_add_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_poly_sub_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_poly_neg(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_);
  public final static native void acb_poly_scalar_mul_2exp_si(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3);
  public final static native void acb_poly_scalar_mul(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_poly_scalar_div(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_poly_mullow_classical(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_mullow_classical(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void _acb_poly_mullow_transpose(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void acb_poly_mullow_transpose(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_mullow_transpose_gauss(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void acb_poly_mullow_transpose_gauss(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_mullow(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void acb_poly_mullow(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_mul(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_poly_mul(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4);
  public final static native void _acb_poly_mul_monic(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void _acb_poly_inv_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_inv_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_div_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void acb_poly_div_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_reverse(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_div(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void _acb_poly_divrem(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, long jarg5, acb_struct jarg5_, int jarg6, int jarg7);
  public final static native void _acb_poly_rem(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native int acb_poly_divrem(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, long jarg4, acb_poly_struct jarg4_, int jarg5);
  public final static native void _acb_poly_div_root(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, long jarg5, acb_struct jarg5_, int jarg6);
  public final static native void _acb_poly_taylor_shift_horner(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_poly_taylor_shift_horner(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void _acb_poly_taylor_shift_divconquer(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_poly_taylor_shift_divconquer(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void _acb_poly_taylor_shift_convolution(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_poly_taylor_shift_convolution(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void _acb_poly_taylor_shift(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_poly_taylor_shift(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void _acb_poly_compose(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_poly_compose(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4);
  public final static native void _acb_poly_compose_horner(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_poly_compose_horner(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4);
  public final static native void _acb_poly_compose_divconquer(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_poly_compose_divconquer(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4);
  public final static native void _acb_poly_compose_series_horner(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void acb_poly_compose_series_horner(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_compose_series_brent_kung(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void acb_poly_compose_series_brent_kung(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_compose_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void acb_poly_compose_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_revert_series_lagrange(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_revert_series_lagrange(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_revert_series_newton(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_revert_series_newton(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_revert_series_lagrange_fast(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_revert_series_lagrange_fast(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_revert_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_revert_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_evaluate_vec_fast_precomp(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void _acb_poly_evaluate_vec_fast(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_poly_evaluate_vec_fast(long jarg1, acb_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_evaluate_vec_iter(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_poly_evaluate_vec_iter(long jarg1, acb_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_interpolate_barycentric(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_poly_interpolate_barycentric(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_interpolation_weights(long jarg1, acb_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void _acb_poly_interpolate_fast_precomp(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void _acb_poly_interpolate_fast(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_poly_interpolate_fast(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_interpolate_newton(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_poly_interpolate_newton(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_product_roots(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_poly_product_roots(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native long _acb_poly_tree_alloc(int jarg1);
  public final static native void _acb_poly_tree_free(long jarg1, int jarg2);
  public final static native void _acb_poly_tree_build(long jarg1, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_root_inclusion(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native int _acb_poly_validate_roots(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_refine_roots_durand_kerner(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native int _acb_poly_find_roots(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native int acb_poly_find_roots(long jarg1, acb_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_root_bound_fujiwara(long jarg1, mag_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_poly_root_bound_fujiwara(long jarg1, mag_struct jarg1_, long jarg2, acb_poly_struct jarg2_);
  public final static native int _acb_poly_validate_real_roots(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native int acb_poly_validate_real_roots(long jarg1, acb_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3);
  public final static native void _acb_poly_pow_ui_trunc_binexp(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void acb_poly_pow_ui_trunc_binexp(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native void _acb_poly_pow_ui(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, int jarg5);
  public final static native void acb_poly_pow_ui(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, int jarg4);
  public final static native void _acb_poly_rsqrt_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_rsqrt_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_sqrt_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_sqrt_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_log_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_log_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_log1p_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_log1p_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_atan_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_atan_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_exp_series_basecase(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_exp_series_basecase(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_exp_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_exp_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_exp_pi_i_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_exp_pi_i_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_sinh_cosh_series_basecase(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void acb_poly_sinh_cosh_series_basecase(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_sinh_cosh_series_exponential(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void acb_poly_sinh_cosh_series_exponential(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_sinh_cosh_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void acb_poly_sinh_cosh_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_sinh_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_sinh_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_cosh_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_cosh_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_sin_cos_series_basecase(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void acb_poly_sin_cos_series_basecase(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void _acb_poly_sin_cos_series_tangent(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void acb_poly_sin_cos_series_tangent(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void _acb_poly_sin_cos_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void acb_poly_sin_cos_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_sin_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_sin_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_cos_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_cos_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_sin_cos_pi_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void acb_poly_sin_cos_pi_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_sin_pi_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_sin_pi_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_cos_pi_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_cos_pi_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_cot_pi_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_cot_pi_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_tan_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_tan_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_sinc_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_sinc_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_lambertw_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void acb_poly_lambertw_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void _acb_poly_gamma_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_gamma_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_rgamma_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_rgamma_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_lgamma_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_lgamma_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_digamma_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_digamma_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_rising_ui_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, int jarg5, int jarg6);
  public final static native void acb_poly_rising_ui_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native void _acb_poly_pow_acb_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_poly_pow_acb_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_pow_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void acb_poly_pow_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_poly_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_binomial_pow_acb_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void _acb_poly_acb_pow_cpx(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_acb_invpow_cpx(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_mullow_cpx(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void _acb_poly_powsum_series_naive(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void _acb_poly_powsum_series_naive_threaded(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void _acb_poly_powsum_one_series_sieved(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void _acb_poly_zeta_em_sum(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, long jarg5, long jarg6, int jarg7, int jarg8);
  public final static native void _acb_poly_zeta_em_choose_param(long jarg1, mag_struct jarg1_, long jarg2, long jarg3, long jarg4, acb_struct jarg4_, long jarg5, acb_struct jarg5_, int jarg6, int jarg7, int jarg8);
  public final static native void _acb_poly_zeta_em_bound1(long jarg1, mag_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void _acb_poly_zeta_em_bound(long jarg1, arb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, long jarg4, long jarg5, int jarg6, int jarg7);
  public final static native void _acb_poly_zeta_em_tail_naive(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void _acb_poly_zeta_em_tail_bsplit(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void _acb_poly_zeta_cpx_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void _acb_poly_zeta_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void acb_poly_zeta_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5, int jarg6);
  public final static native void _acb_poly_polylog_cpx_zeta(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_polylog_cpx_small(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_polylog_cpx(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_polylog_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_poly_polylog_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_agm1_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_agm1_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_elliptic_k_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_elliptic_k_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native void _acb_poly_elliptic_p_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, acb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_poly_elliptic_p_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4, int jarg5);
  public final static native void _acb_poly_erf_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_poly_erf_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, int jarg3, int jarg4);
  public final static native int acb_poly_allocated_bytes(long jarg1, acb_poly_struct jarg1_);
  public final static native int DLOG_MODPE_get();
  public final static native int DLOG_CRT_get();
  public final static native int DLOG_POWER_get();
  public final static native int DLOG_BSGS_get();
  public final static native int DLOG_TABLE_get();
  public final static native int DLOG_23_get();
  public final static native void dlog_1modpe_struct_inv1p_set(long jarg1, dlog_1modpe_struct jarg1_, long jarg2);
  public final static native long dlog_1modpe_struct_inv1p_get(long jarg1, dlog_1modpe_struct jarg1_);
  public final static native void dlog_1modpe_struct_invloga1_set(long jarg1, dlog_1modpe_struct jarg1_, long jarg2);
  public final static native long dlog_1modpe_struct_invloga1_get(long jarg1, dlog_1modpe_struct jarg1_);
  public final static native long new_dlog_1modpe_struct();
  public final static native void delete_dlog_1modpe_struct(long jarg1);
  public final static native void dlog_modpe_struct_p_set(long jarg1, dlog_modpe_struct jarg1_, long jarg2);
  public final static native long dlog_modpe_struct_p_get(long jarg1, dlog_modpe_struct jarg1_);
  public final static native void dlog_modpe_struct_e_set(long jarg1, dlog_modpe_struct jarg1_, long jarg2);
  public final static native long dlog_modpe_struct_e_get(long jarg1, dlog_modpe_struct jarg1_);
  public final static native void dlog_modpe_struct_pe1_set(long jarg1, dlog_modpe_struct jarg1_, long jarg2);
  public final static native long dlog_modpe_struct_pe1_get(long jarg1, dlog_modpe_struct jarg1_);
  public final static native void dlog_modpe_struct_inva_set(long jarg1, dlog_modpe_struct jarg1_, long jarg2);
  public final static native long dlog_modpe_struct_inva_get(long jarg1, dlog_modpe_struct jarg1_);
  public final static native void dlog_modpe_struct_pe_set(long jarg1, dlog_modpe_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long dlog_modpe_struct_pe_get(long jarg1, dlog_modpe_struct jarg1_);
  public final static native void dlog_modpe_struct_modp_set(long jarg1, dlog_modpe_struct jarg1_, long jarg2, dlog_precomp_struct jarg2_);
  public final static native long dlog_modpe_struct_modp_get(long jarg1, dlog_modpe_struct jarg1_);
  public final static native void dlog_modpe_struct_modpe_set(long jarg1, dlog_modpe_struct jarg1_, long jarg2, dlog_1modpe_struct jarg2_);
  public final static native long dlog_modpe_struct_modpe_get(long jarg1, dlog_modpe_struct jarg1_);
  public final static native long new_dlog_modpe_struct();
  public final static native void delete_dlog_modpe_struct(long jarg1);
  public final static native void dlog_table_struct_mod_set(long jarg1, dlog_table_struct jarg1_, long jarg2);
  public final static native long dlog_table_struct_mod_get(long jarg1, dlog_table_struct jarg1_);
  public final static native void dlog_table_struct_table_set(long jarg1, dlog_table_struct jarg1_, long jarg2);
  public final static native long dlog_table_struct_table_get(long jarg1, dlog_table_struct jarg1_);
  public final static native long new_dlog_table_struct();
  public final static native void delete_dlog_table_struct(long jarg1);
  public final static native void apow_t_k_set(long jarg1, apow_t jarg1_, long jarg2);
  public final static native long apow_t_k_get(long jarg1, apow_t jarg1_);
  public final static native void apow_t_ak_set(long jarg1, apow_t jarg1_, long jarg2);
  public final static native long apow_t_ak_get(long jarg1, apow_t jarg1_);
  public final static native long new_apow_t();
  public final static native void delete_apow_t(long jarg1);
  public final static native int apow_cmp(long jarg1, apow_t jarg1_, long jarg2, apow_t jarg2_);
  public final static native void dlog_bsgs_struct_mod_set(long jarg1, dlog_bsgs_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long dlog_bsgs_struct_mod_get(long jarg1, dlog_bsgs_struct jarg1_);
  public final static native void dlog_bsgs_struct_m_set(long jarg1, dlog_bsgs_struct jarg1_, long jarg2);
  public final static native long dlog_bsgs_struct_m_get(long jarg1, dlog_bsgs_struct jarg1_);
  public final static native void dlog_bsgs_struct_am_set(long jarg1, dlog_bsgs_struct jarg1_, long jarg2);
  public final static native long dlog_bsgs_struct_am_get(long jarg1, dlog_bsgs_struct jarg1_);
  public final static native void dlog_bsgs_struct_g_set(long jarg1, dlog_bsgs_struct jarg1_, long jarg2);
  public final static native long dlog_bsgs_struct_g_get(long jarg1, dlog_bsgs_struct jarg1_);
  public final static native void dlog_bsgs_struct_table_set(long jarg1, dlog_bsgs_struct jarg1_, long jarg2, apow_t jarg2_);
  public final static native long dlog_bsgs_struct_table_get(long jarg1, dlog_bsgs_struct jarg1_);
  public final static native long new_dlog_bsgs_struct();
  public final static native void delete_dlog_bsgs_struct(long jarg1);
  public final static native void dlog_rho_struct_a_set(long jarg1, dlog_rho_struct jarg1_, long jarg2);
  public final static native long dlog_rho_struct_a_get(long jarg1, dlog_rho_struct jarg1_);
  public final static native void dlog_rho_struct_n_set(long jarg1, dlog_rho_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long dlog_rho_struct_n_get(long jarg1, dlog_rho_struct jarg1_);
  public final static native void dlog_rho_struct_mod_set(long jarg1, dlog_rho_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long dlog_rho_struct_mod_get(long jarg1, dlog_rho_struct jarg1_);
  public final static native void dlog_rho_struct_nisprime_set(long jarg1, dlog_rho_struct jarg1_, int jarg2);
  public final static native int dlog_rho_struct_nisprime_get(long jarg1, dlog_rho_struct jarg1_);
  public final static native long new_dlog_rho_struct();
  public final static native void delete_dlog_rho_struct(long jarg1);
  public final static native void dlog_crt_struct_mod_set(long jarg1, dlog_crt_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long dlog_crt_struct_mod_get(long jarg1, dlog_crt_struct jarg1_);
  public final static native void dlog_crt_struct_n_set(long jarg1, dlog_crt_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long dlog_crt_struct_n_get(long jarg1, dlog_crt_struct jarg1_);
  public final static native void dlog_crt_struct_num_set(long jarg1, dlog_crt_struct jarg1_, long jarg2);
  public final static native long dlog_crt_struct_num_get(long jarg1, dlog_crt_struct jarg1_);
  public final static native void dlog_crt_struct_expo_set(long jarg1, dlog_crt_struct jarg1_, long jarg2);
  public final static native long dlog_crt_struct_expo_get(long jarg1, dlog_crt_struct jarg1_);
  public final static native void dlog_crt_struct_crt_coeffs_set(long jarg1, dlog_crt_struct jarg1_, long jarg2);
  public final static native long dlog_crt_struct_crt_coeffs_get(long jarg1, dlog_crt_struct jarg1_);
  public final static native void dlog_crt_struct_pre_set(long jarg1, dlog_crt_struct jarg1_, long jarg2, dlog_precomp_struct jarg2_);
  public final static native long dlog_crt_struct_pre_get(long jarg1, dlog_crt_struct jarg1_);
  public final static native long new_dlog_crt_struct();
  public final static native void delete_dlog_crt_struct(long jarg1);
  public final static native void dlog_power_struct_mod_set(long jarg1, dlog_power_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long dlog_power_struct_mod_get(long jarg1, dlog_power_struct jarg1_);
  public final static native void dlog_power_struct_p_set(long jarg1, dlog_power_struct jarg1_, long jarg2);
  public final static native long dlog_power_struct_p_get(long jarg1, dlog_power_struct jarg1_);
  public final static native void dlog_power_struct_e_set(long jarg1, dlog_power_struct jarg1_, long jarg2);
  public final static native long dlog_power_struct_e_get(long jarg1, dlog_power_struct jarg1_);
  public final static native void dlog_power_struct_apk_set(long jarg1, dlog_power_struct jarg1_, long jarg2);
  public final static native long dlog_power_struct_apk_get(long jarg1, dlog_power_struct jarg1_);
  public final static native void dlog_power_struct_pre_set(long jarg1, dlog_power_struct jarg1_, long jarg2, dlog_precomp_struct jarg2_);
  public final static native long dlog_power_struct_pre_get(long jarg1, dlog_power_struct jarg1_);
  public final static native long new_dlog_power_struct();
  public final static native void delete_dlog_power_struct(long jarg1);
  public final static native void dlog_precomp_struct_type_set(long jarg1, dlog_precomp_struct jarg1_, int jarg2);
  public final static native int dlog_precomp_struct_type_get(long jarg1, dlog_precomp_struct jarg1_);
  public final static native void dlog_precomp_struct_cost_set(long jarg1, dlog_precomp_struct jarg1_, long jarg2);
  public final static native long dlog_precomp_struct_cost_get(long jarg1, dlog_precomp_struct jarg1_);
  public final static native long new_dlog_precomp_struct();
  public final static native void delete_dlog_precomp_struct(long jarg1);
  public final static native void dlog_precomp_modpe_init(long jarg1, dlog_precomp_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native void dlog_precomp_small_init(long jarg1, dlog_precomp_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void dlog_precomp_n_init(long jarg1, dlog_precomp_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void dlog_precomp_p_init(long jarg1, dlog_precomp_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void dlog_precomp_pe_init(long jarg1, dlog_precomp_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6, long jarg7);
  public final static native void dlog_precomp_clear(long jarg1, dlog_precomp_struct jarg1_);
  public final static native long dlog_precomp(long jarg1, dlog_precomp_struct jarg1_, long jarg2);
  public final static native long dlog_order23_init(long jarg1, long jarg2);
  public final static native long dlog_table_init(long jarg1, dlog_table_struct jarg1_, long jarg2, long jarg3);
  public final static native long dlog_crt_init(long jarg1, dlog_crt_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native long dlog_power_init(long jarg1, dlog_power_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long dlog_modpe_init(long jarg1, dlog_modpe_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, long jarg6);
  public final static native long dlog_bsgs_init(long jarg1, dlog_bsgs_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5);
  public final static native void dlog_1modpe_init(long jarg1, dlog_1modpe_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, nmod_t jarg5_);
  public final static native void dlog_rho_init(long jarg1, dlog_rho_struct jarg1_, long jarg2, long jarg3, long jarg4);
  public final static native long dlog_once(long jarg1, long jarg2, long jarg3, nmod_t jarg3_, long jarg4);
  public final static native void dlog_order23_clear(long jarg1);
  public final static native void dlog_table_clear(long jarg1, dlog_table_struct jarg1_);
  public final static native void dlog_crt_clear(long jarg1, dlog_crt_struct jarg1_);
  public final static native void dlog_power_clear(long jarg1, dlog_power_struct jarg1_);
  public final static native void dlog_modpe_clear(long jarg1, dlog_modpe_struct jarg1_);
  public final static native void dlog_bsgs_clear(long jarg1, dlog_bsgs_struct jarg1_);
  public final static native void dlog_rho_clear(long jarg1, dlog_rho_struct jarg1_);
  public final static native long dlog_bsgs_size(long jarg1, long jarg2);
  public final static native long dlog_order23(long jarg1, long jarg2);
  public final static native long dlog_table(long jarg1, dlog_table_struct jarg1_, long jarg2);
  public final static native long dlog_crt(long jarg1, dlog_crt_struct jarg1_, long jarg2);
  public final static native long dlog_power(long jarg1, dlog_power_struct jarg1_, long jarg2);
  public final static native long dlog_modpe(long jarg1, dlog_modpe_struct jarg1_, long jarg2);
  public final static native long dlog_bsgs(long jarg1, dlog_bsgs_struct jarg1_, long jarg2);
  public final static native long dlog_rho(long jarg1, dlog_rho_struct jarg1_, long jarg2);
  public final static native long dlog_1modpe_1modp(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, nmod_t jarg5_);
  public final static native long dlog_1modpe(long jarg1, dlog_1modpe_struct jarg1_, long jarg2, long jarg3, long jarg4, long jarg5, nmod_t jarg5_);
  public final static native long dlog_mod2e_1mod4(long jarg1, long jarg2, long jarg3, long jarg4, nmod_t jarg4_);
  public final static native long dlog_mod2e(long jarg1, dlog_modpe_struct jarg1_, long jarg2);
  public final static native int DLOG_SMALL_LIM_get();
  public final static native int DLOG_TABLE_LIM_get();
  public final static native int DLOG_TABLE_P_LIM_get();
  public final static native int DLOG_TABLE_MODPE_LIM_get();
  public final static native int DLOG_TABLE_PE_LIM_get();
  public final static native int DLOG_TABLE_N_LIM_get();
  public final static native int DLOG_BSGS_LIM_get();
  public final static native int DLOG_LOOP_MAX_FACTOR_get();
  public final static native int DLOG_G_SMALL_get();
  public final static native int DLOG_G_BIG_get();
  public final static native void dlog_n_factor_group(long jarg1, n_factor_t jarg1_, long jarg2);
  public final static native long dlog_vec_pindex_factorgcd(long jarg1, long jarg2, long jarg3, long jarg4, nmod_t jarg4_, long jarg5, long jarg6, long jarg7, long jarg8, long jarg9, nmod_t jarg9_, int jarg10);
  public final static native void dlog_vec_fill(long jarg1, long jarg2, long jarg3);
  public final static native void dlog_vec_set_not_found(long jarg1, long jarg2, long jarg3, nmod_t jarg3_);
  public final static native void dlog_vec_loop(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, nmod_t jarg5_, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void dlog_vec_loop_add(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, nmod_t jarg5_, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void dlog_vec_eratos_add(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, nmod_t jarg5_, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void dlog_vec_eratos(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, nmod_t jarg5_, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void dlog_vec_sieve_add(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, nmod_t jarg5_, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void dlog_vec_sieve(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, nmod_t jarg5_, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void dlog_vec_add(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, nmod_t jarg5_, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void dlog_vec(long jarg1, long jarg2, long jarg3, long jarg4, long jarg5, nmod_t jarg5_, long jarg6, long jarg7, nmod_t jarg7_);
  public final static native void dlog_vec_sieve_precomp(long jarg1, long jarg2, long jarg3, dlog_precomp_struct jarg3_, long jarg4, long jarg5, long jarg6, nmod_t jarg6_, long jarg7, long jarg8, nmod_t jarg8_);
  public final static native void dlog_vec_sieve_add_precomp(long jarg1, long jarg2, long jarg3, dlog_precomp_struct jarg3_, long jarg4, long jarg5, long jarg6, nmod_t jarg6_, long jarg7, long jarg8, nmod_t jarg8_);
  public final static native void dlog_vec_add_precomp(long jarg1, long jarg2, long jarg3, dlog_precomp_struct jarg3_, long jarg4, long jarg5, long jarg6, nmod_t jarg6_, long jarg7, long jarg8, nmod_t jarg8_);
  public final static native int MAX_FACTORS_get();
  public final static native void dirichlet_prime_group_struct_p_set(long jarg1, dirichlet_prime_group_struct jarg1_, long jarg2);
  public final static native long dirichlet_prime_group_struct_p_get(long jarg1, dirichlet_prime_group_struct jarg1_);
  public final static native void dirichlet_prime_group_struct_e_set(long jarg1, dirichlet_prime_group_struct jarg1_, int jarg2);
  public final static native int dirichlet_prime_group_struct_e_get(long jarg1, dirichlet_prime_group_struct jarg1_);
  public final static native void dirichlet_prime_group_struct_pe_set(long jarg1, dirichlet_prime_group_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long dirichlet_prime_group_struct_pe_get(long jarg1, dirichlet_prime_group_struct jarg1_);
  public final static native void dirichlet_prime_group_struct_phi_set(long jarg1, dirichlet_prime_group_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long dirichlet_prime_group_struct_phi_get(long jarg1, dirichlet_prime_group_struct jarg1_);
  public final static native void dirichlet_prime_group_struct_g_set(long jarg1, dirichlet_prime_group_struct jarg1_, long jarg2);
  public final static native long dirichlet_prime_group_struct_g_get(long jarg1, dirichlet_prime_group_struct jarg1_);
  public final static native void dirichlet_prime_group_struct_dlog_set(long jarg1, dirichlet_prime_group_struct jarg1_, long jarg2, dlog_precomp_struct jarg2_);
  public final static native long dirichlet_prime_group_struct_dlog_get(long jarg1, dirichlet_prime_group_struct jarg1_);
  public final static native long new_dirichlet_prime_group_struct();
  public final static native void delete_dirichlet_prime_group_struct(long jarg1);
  public final static native void dirichlet_group_struct_q_set(long jarg1, dirichlet_group_struct jarg1_, long jarg2);
  public final static native long dirichlet_group_struct_q_get(long jarg1, dirichlet_group_struct jarg1_);
  public final static native void dirichlet_group_struct_q_even_set(long jarg1, dirichlet_group_struct jarg1_, long jarg2);
  public final static native long dirichlet_group_struct_q_even_get(long jarg1, dirichlet_group_struct jarg1_);
  public final static native void dirichlet_group_struct_mod_set(long jarg1, dirichlet_group_struct jarg1_, long jarg2, nmod_t jarg2_);
  public final static native long dirichlet_group_struct_mod_get(long jarg1, dirichlet_group_struct jarg1_);
  public final static native void dirichlet_group_struct_rad_q_set(long jarg1, dirichlet_group_struct jarg1_, long jarg2);
  public final static native long dirichlet_group_struct_rad_q_get(long jarg1, dirichlet_group_struct jarg1_);
  public final static native void dirichlet_group_struct_phi_q_set(long jarg1, dirichlet_group_struct jarg1_, long jarg2);
  public final static native long dirichlet_group_struct_phi_q_get(long jarg1, dirichlet_group_struct jarg1_);
  public final static native void dirichlet_group_struct_neven_set(long jarg1, dirichlet_group_struct jarg1_, int jarg2);
  public final static native int dirichlet_group_struct_neven_get(long jarg1, dirichlet_group_struct jarg1_);
  public final static native void dirichlet_group_struct_num_set(long jarg1, dirichlet_group_struct jarg1_, int jarg2);
  public final static native int dirichlet_group_struct_num_get(long jarg1, dirichlet_group_struct jarg1_);
  public final static native void dirichlet_group_struct_expo_set(long jarg1, dirichlet_group_struct jarg1_, long jarg2);
  public final static native long dirichlet_group_struct_expo_get(long jarg1, dirichlet_group_struct jarg1_);
  public final static native void dirichlet_group_struct_P_set(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_prime_group_struct jarg2_);
  public final static native long dirichlet_group_struct_P_get(long jarg1, dirichlet_group_struct jarg1_);
  public final static native void dirichlet_group_struct_generators_set(long jarg1, dirichlet_group_struct jarg1_, long jarg2);
  public final static native long dirichlet_group_struct_generators_get(long jarg1, dirichlet_group_struct jarg1_);
  public final static native void dirichlet_group_struct_PHI_set(long jarg1, dirichlet_group_struct jarg1_, long jarg2);
  public final static native long dirichlet_group_struct_PHI_get(long jarg1, dirichlet_group_struct jarg1_);
  public final static native long new_dirichlet_group_struct();
  public final static native void delete_dirichlet_group_struct(long jarg1);
  public final static native long dirichlet_group_size(long jarg1, dirichlet_group_struct jarg1_);
  public final static native long dirichlet_group_num_primitive(long jarg1, dirichlet_group_struct jarg1_);
  public final static native void dirichlet_group_init(long jarg1, dirichlet_group_struct jarg1_, long jarg2);
  public final static native void dirichlet_subgroup_init(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3);
  public final static native void dirichlet_group_clear(long jarg1, dirichlet_group_struct jarg1_);
  public final static native void dirichlet_group_dlog_precompute(long jarg1, dirichlet_group_struct jarg1_, long jarg2);
  public final static native void dirichlet_group_dlog_clear(long jarg1, dirichlet_group_struct jarg1_);
  public final static native long dirichlet_conductor_ui(long jarg1, dirichlet_group_struct jarg1_, long jarg2);
  public final static native int dirichlet_parity_ui(long jarg1, dirichlet_group_struct jarg1_, long jarg2);
  public final static native long dirichlet_order_ui(long jarg1, dirichlet_group_struct jarg1_, long jarg2);
  public final static native void dirichlet_char_struct_n_set(long jarg1, dirichlet_char_struct jarg1_, long jarg2);
  public final static native long dirichlet_char_struct_n_get(long jarg1, dirichlet_char_struct jarg1_);
  public final static native void dirichlet_char_struct_log_set(long jarg1, dirichlet_char_struct jarg1_, long jarg2);
  public final static native long dirichlet_char_struct_log_get(long jarg1, dirichlet_char_struct jarg1_);
  public final static native long new_dirichlet_char_struct();
  public final static native void delete_dirichlet_char_struct(long jarg1);
  public final static native void dirichlet_char_init(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_);
  public final static native void dirichlet_char_clear(long jarg1, dirichlet_char_struct jarg1_);
  public final static native void dirichlet_char_print(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_char_struct jarg2_);
  public final static native void dirichlet_char_set(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_);
  public final static native int dirichlet_char_eq(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_char_struct jarg2_);
  public final static native int dirichlet_char_eq_deep(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_char_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_);
  public final static native int dirichlet_parity_char(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_char_struct jarg2_);
  public final static native long dirichlet_conductor_char(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_char_struct jarg2_);
  public final static native long dirichlet_order_char(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_char_struct jarg2_);
  public final static native void dirichlet_char_log(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3);
  public final static native long dirichlet_char_exp(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_char_struct jarg2_);
  public final static native long _dirichlet_char_exp(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_);
  public final static native void dirichlet_char_index(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3);
  public final static native long dirichlet_index_char(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_char_struct jarg2_);
  public final static native void dirichlet_char_one(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_);
  public final static native void dirichlet_char_first_primitive(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_);
  public final static native int dirichlet_char_next(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_);
  public final static native int dirichlet_char_next_primitive(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_);
  public final static native void dirichlet_char_mul(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_);
  public final static native void dirichlet_char_pow(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4);
  public final static native void dirichlet_char_lower(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4, dirichlet_group_struct jarg4_);
  public final static native void dirichlet_char_lift(long jarg1, dirichlet_char_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4, dirichlet_group_struct jarg4_);
  public final static native long dirichlet_pairing(long jarg1, dirichlet_group_struct jarg1_, long jarg2, long jarg3);
  public final static native long dirichlet_pairing_char(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_char_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_);
  public final static native int dirichlet_char_is_principal(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_char_struct jarg2_);
  public final static native int dirichlet_char_is_real(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_char_struct jarg2_);
  public final static native int dirichlet_char_is_primitive(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_char_struct jarg2_);
  public final static native long dirichlet_chi(long jarg1, dirichlet_group_struct jarg1_, long jarg2, dirichlet_char_struct jarg2_, long jarg3);
  public final static native void dirichlet_vec_set_null(long jarg1, long jarg2, dirichlet_group_struct jarg2_, int jarg3);
  public final static native void dirichlet_chi_vec_loop(long jarg1, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, int jarg4);
  public final static native void dirichlet_chi_vec_primeloop(long jarg1, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, int jarg4);
  public final static native void dirichlet_chi_vec(long jarg1, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, int jarg4);
  public final static native void dirichlet_chi_vec_loop_order(long jarg1, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4, int jarg5);
  public final static native void dirichlet_chi_vec_primeloop_order(long jarg1, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4, int jarg5);
  public final static native void dirichlet_chi_vec_order(long jarg1, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4, int jarg5);
  public final static native void acb_dirichlet_powsum_term(long jarg1, acb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, long jarg4, acb_struct jarg4_, long jarg5, int jarg6, int jarg7, int jarg8, int jarg9);
  public final static native void acb_dirichlet_powsum_sieved(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native void acb_dirichlet_powsum_smooth(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, int jarg4, int jarg5);
  public final static native void acb_dirichlet_zeta_bound(long jarg1, mag_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native void acb_dirichlet_zeta_deriv_bound(long jarg1, mag_struct jarg1_, long jarg2, mag_struct jarg2_, long jarg3, acb_struct jarg3_);
  public final static native void acb_dirichlet_zeta_rs_f_coeffs(long jarg1, acb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_dirichlet_zeta_rs_d_coeffs(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_dirichlet_zeta_rs_bound(long jarg1, mag_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_dirichlet_zeta_rs_r(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_dirichlet_zeta_rs(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_dirichlet_zeta(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_dirichlet_zeta_jet_rs(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4);
  public final static native void acb_dirichlet_zeta_jet(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_dirichlet_hurwitz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_dirichlet_stieltjes(long jarg1, acb_struct jarg1_, long jarg2, long jarg3, acb_struct jarg3_, int jarg4);
  public final static native void acb_dirichlet_hurwitz_precomp_struct_s_set(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native long acb_dirichlet_hurwitz_precomp_struct_s_get(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_);
  public final static native void acb_dirichlet_hurwitz_precomp_struct_err_set(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_, long jarg2, mag_struct jarg2_);
  public final static native long acb_dirichlet_hurwitz_precomp_struct_err_get(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_);
  public final static native void acb_dirichlet_hurwitz_precomp_struct_coeffs_set(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native long acb_dirichlet_hurwitz_precomp_struct_coeffs_get(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_);
  public final static native void acb_dirichlet_hurwitz_precomp_struct_deflate_set(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_, int jarg2);
  public final static native int acb_dirichlet_hurwitz_precomp_struct_deflate_get(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_);
  public final static native void acb_dirichlet_hurwitz_precomp_struct_A_set(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_, int jarg2);
  public final static native int acb_dirichlet_hurwitz_precomp_struct_A_get(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_);
  public final static native void acb_dirichlet_hurwitz_precomp_struct_N_set(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_, int jarg2);
  public final static native int acb_dirichlet_hurwitz_precomp_struct_N_get(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_);
  public final static native void acb_dirichlet_hurwitz_precomp_struct_K_set(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_, int jarg2);
  public final static native int acb_dirichlet_hurwitz_precomp_struct_K_get(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_);
  public final static native long new_acb_dirichlet_hurwitz_precomp_struct();
  public final static native void delete_acb_dirichlet_hurwitz_precomp_struct(long jarg1);
  public final static native void acb_dirichlet_hurwitz_precomp_init(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5, int jarg6, int jarg7);
  public final static native void acb_dirichlet_hurwitz_precomp_init_num(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, double jarg4, int jarg5);
  public final static native void acb_dirichlet_hurwitz_precomp_clear(long jarg1, acb_dirichlet_hurwitz_precomp_struct jarg1_);
  public final static native void acb_dirichlet_hurwitz_precomp_bound(long jarg1, mag_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, int jarg4, int jarg5);
  public final static native void acb_dirichlet_hurwitz_precomp_eval(long jarg1, acb_struct jarg1_, long jarg2, acb_dirichlet_hurwitz_precomp_struct jarg2_, long jarg3, long jarg4, int jarg5);
  public final static native void acb_dirichlet_hurwitz_precomp_choose_param(long jarg1, long jarg2, long jarg3, long jarg4, acb_struct jarg4_, double jarg5, int jarg6);
  public final static native void _acb_dirichlet_euler_product_real_ui(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, int jarg4, int jarg5, int jarg6);
  public final static native void acb_dirichlet_eta(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_dirichlet_xi(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3);
  public final static native void acb_dirichlet_pairing(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, long jarg4, int jarg5);
  public final static native void acb_dirichlet_pairing_char(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5);
  public final static native void acb_dirichlet_roots_struct_order_set(long jarg1, acb_dirichlet_roots_struct jarg1_, long jarg2);
  public final static native long acb_dirichlet_roots_struct_order_get(long jarg1, acb_dirichlet_roots_struct jarg1_);
  public final static native void acb_dirichlet_roots_struct_reduced_order_set(long jarg1, acb_dirichlet_roots_struct jarg1_, long jarg2);
  public final static native long acb_dirichlet_roots_struct_reduced_order_get(long jarg1, acb_dirichlet_roots_struct jarg1_);
  public final static native void acb_dirichlet_roots_struct_z_set(long jarg1, acb_dirichlet_roots_struct jarg1_, long jarg2, acb_struct jarg2_);
  public final static native long acb_dirichlet_roots_struct_z_get(long jarg1, acb_dirichlet_roots_struct jarg1_);
  public final static native void acb_dirichlet_roots_struct_size_set(long jarg1, acb_dirichlet_roots_struct jarg1_, int jarg2);
  public final static native int acb_dirichlet_roots_struct_size_get(long jarg1, acb_dirichlet_roots_struct jarg1_);
  public final static native void acb_dirichlet_roots_struct_depth_set(long jarg1, acb_dirichlet_roots_struct jarg1_, int jarg2);
  public final static native int acb_dirichlet_roots_struct_depth_get(long jarg1, acb_dirichlet_roots_struct jarg1_);
  public final static native void acb_dirichlet_roots_struct_Zptr_set(long jarg1, acb_dirichlet_roots_struct jarg1_, long jarg2);
  public final static native long acb_dirichlet_roots_struct_Zptr_get(long jarg1, acb_dirichlet_roots_struct jarg1_);
  public final static native void acb_dirichlet_roots_struct_use_pow_set(long jarg1, acb_dirichlet_roots_struct jarg1_, int jarg2);
  public final static native int acb_dirichlet_roots_struct_use_pow_get(long jarg1, acb_dirichlet_roots_struct jarg1_);
  public final static native long new_acb_dirichlet_roots_struct();
  public final static native void delete_acb_dirichlet_roots_struct(long jarg1);
  public final static native void acb_dirichlet_roots_init(long jarg1, acb_dirichlet_roots_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void acb_dirichlet_roots_clear(long jarg1, acb_dirichlet_roots_struct jarg1_);
  public final static native void acb_dirichlet_root(long jarg1, acb_struct jarg1_, long jarg2, acb_dirichlet_roots_struct jarg2_, long jarg3, int jarg4);
  public final static native void acb_dirichlet_chi(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4, int jarg5);
  public final static native void acb_dirichlet_chi_vec(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_dirichlet_arb_quadratic_powers(long jarg1, arb_struct jarg1_, int jarg2, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void acb_dirichlet_qseries_arb(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_dirichlet_qseries_arb_powers_naive(long jarg1, acb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, long jarg5, acb_dirichlet_roots_struct jarg5_, int jarg6, int jarg7);
  public final static native void acb_dirichlet_qseries_arb_powers_smallorder(long jarg1, acb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, long jarg5, acb_dirichlet_roots_struct jarg5_, int jarg6, int jarg7);
  public final static native long acb_dirichlet_theta_length_d(long jarg1, double jarg2, int jarg3);
  public final static native long acb_dirichlet_theta_length(long jarg1, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void mag_tail_kexpk2_arb(long jarg1, mag_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3);
  public final static native void _acb_dirichlet_theta_argument_at_arb(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, arb_struct jarg3_, int jarg4);
  public final static native void acb_dirichlet_theta_arb(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void acb_dirichlet_ui_theta_arb(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void acb_dirichlet_gauss_sum_naive(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, int jarg4);
  public final static native void acb_dirichlet_gauss_sum_factor(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, int jarg4);
  public final static native void acb_dirichlet_gauss_sum_order2(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, int jarg4);
  public final static native void acb_dirichlet_gauss_sum_theta(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, int jarg4);
  public final static native void acb_dirichlet_gauss_sum(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, int jarg4);
  public final static native void acb_dirichlet_root_number_theta(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, int jarg4);
  public final static native void acb_dirichlet_root_number(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, int jarg4);
  public final static native void acb_dirichlet_si_poly_evaluate(long jarg1, acb_struct jarg1_, long jarg2, int jarg3, long jarg4, acb_struct jarg4_, int jarg5);
  public final static native void acb_dirichlet_jacobi_sum_naive(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5);
  public final static native long jacobi_one_prime(long jarg1, long jarg2, long jarg3, long jarg4);
  public final static native void acb_dirichlet_jacobi_sum_factor(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5);
  public final static native void acb_dirichlet_jacobi_sum_gauss(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5);
  public final static native void acb_dirichlet_jacobi_sum(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, dirichlet_char_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5);
  public final static native void acb_dirichlet_jacobi_sum_ui(long jarg1, acb_struct jarg1_, long jarg2, dirichlet_group_struct jarg2_, long jarg3, long jarg4, int jarg5);
  public final static native void acb_dirichlet_l_euler_product(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, dirichlet_group_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5);
  public final static native void acb_dirichlet_l_hurwitz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_dirichlet_hurwitz_precomp_struct jarg3_, long jarg4, dirichlet_group_struct jarg4_, long jarg5, dirichlet_char_struct jarg5_, int jarg6);
  public final static native void acb_dirichlet_l(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, dirichlet_group_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5);
  public final static native void acb_dirichlet_l_vec_hurwitz(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, acb_dirichlet_hurwitz_precomp_struct jarg3_, long jarg4, dirichlet_group_struct jarg4_, int jarg5);
  public final static native void acb_dirichlet_l_jet(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, dirichlet_group_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void _acb_dirichlet_l_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, dirichlet_group_struct jarg4_, long jarg5, dirichlet_char_struct jarg5_, int jarg6, int jarg7, int jarg8);
  public final static native void acb_dirichlet_l_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, dirichlet_group_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void acb_dirichlet_hardy_theta(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, dirichlet_group_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_dirichlet_hardy_z(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, dirichlet_group_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5, int jarg6);
  public final static native void _acb_dirichlet_hardy_theta_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, dirichlet_group_struct jarg4_, long jarg5, dirichlet_char_struct jarg5_, int jarg6, int jarg7);
  public final static native void acb_dirichlet_hardy_theta_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, dirichlet_group_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5, int jarg6);
  public final static native void _acb_dirichlet_hardy_z_series(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, int jarg3, long jarg4, dirichlet_group_struct jarg4_, long jarg5, dirichlet_char_struct jarg5_, int jarg6, int jarg7);
  public final static native void acb_dirichlet_hardy_z_series(long jarg1, acb_poly_struct jarg1_, long jarg2, acb_poly_struct jarg2_, long jarg3, dirichlet_group_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_dirichlet_gram_point(long jarg1, arb_struct jarg1_, long jarg2, long jarg3, dirichlet_group_struct jarg3_, long jarg4, dirichlet_char_struct jarg4_, int jarg5);
  public final static native long acb_dirichlet_turing_method_bound(long jarg1);
  public final static native int _acb_dirichlet_definite_hardy_z(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3);
  public final static native void _acb_dirichlet_isolate_gram_hardy_z_zero(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3);
  public final static native void _acb_dirichlet_isolate_rosser_hardy_z_zero(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3);
  public final static native void _acb_dirichlet_isolate_turing_hardy_z_zero(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3);
  public final static native void acb_dirichlet_isolate_hardy_z_zero(long jarg1, arf_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3);
  public final static native void _acb_dirichlet_refine_hardy_z_zero(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arf_struct jarg3_, int jarg4);
  public final static native void acb_dirichlet_hardy_z_zeros(long jarg1, arb_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void acb_dirichlet_zeta_zeros(long jarg1, acb_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void _acb_dirichlet_exact_zeta_nzeros(long jarg1, long jarg2, arf_struct jarg2_);
  public final static native void acb_dirichlet_zeta_nzeros(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void acb_dirichlet_backlund_s(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void acb_dirichlet_backlund_s_bound(long jarg1, mag_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native void acb_dirichlet_zeta_nzeros_gram(long jarg1, long jarg2);
  public final static native int acb_dirichlet_backlund_s_gram(long jarg1);
  public final static native void acb_dirichlet_hardy_z_zero(long jarg1, arb_struct jarg1_, long jarg2, int jarg3);
  public final static native void acb_dirichlet_zeta_zero(long jarg1, acb_struct jarg1_, long jarg2, int jarg3);
  public final static native void acb_dirichlet_platt_c_precomp_struct_len_set(long jarg1, acb_dirichlet_platt_c_precomp_struct jarg1_, int jarg2);
  public final static native int acb_dirichlet_platt_c_precomp_struct_len_get(long jarg1, acb_dirichlet_platt_c_precomp_struct jarg1_);
  public final static native void acb_dirichlet_platt_c_precomp_struct_p_set(long jarg1, acb_dirichlet_platt_c_precomp_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native long acb_dirichlet_platt_c_precomp_struct_p_get(long jarg1, acb_dirichlet_platt_c_precomp_struct jarg1_);
  public final static native void acb_dirichlet_platt_c_precomp_struct_Xa_set(long jarg1, acb_dirichlet_platt_c_precomp_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native long acb_dirichlet_platt_c_precomp_struct_Xa_get(long jarg1, acb_dirichlet_platt_c_precomp_struct jarg1_);
  public final static native void acb_dirichlet_platt_c_precomp_struct_Xb_set(long jarg1, acb_dirichlet_platt_c_precomp_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native long acb_dirichlet_platt_c_precomp_struct_Xb_get(long jarg1, acb_dirichlet_platt_c_precomp_struct jarg1_);
  public final static native long new_acb_dirichlet_platt_c_precomp_struct();
  public final static native void delete_acb_dirichlet_platt_c_precomp_struct(long jarg1);
  public final static native void acb_dirichlet_platt_i_precomp_struct_c1_set(long jarg1, acb_dirichlet_platt_i_precomp_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native long acb_dirichlet_platt_i_precomp_struct_c1_get(long jarg1, acb_dirichlet_platt_i_precomp_struct jarg1_);
  public final static native void acb_dirichlet_platt_i_precomp_struct_c2_set(long jarg1, acb_dirichlet_platt_i_precomp_struct jarg1_, long jarg2, arb_struct jarg2_);
  public final static native long acb_dirichlet_platt_i_precomp_struct_c2_get(long jarg1, acb_dirichlet_platt_i_precomp_struct jarg1_);
  public final static native long new_acb_dirichlet_platt_i_precomp_struct();
  public final static native void delete_acb_dirichlet_platt_i_precomp_struct(long jarg1);
  public final static native void acb_dirichlet_platt_ws_precomp_struct_pre_c_set(long jarg1, acb_dirichlet_platt_ws_precomp_struct jarg1_, long jarg2, acb_dirichlet_platt_c_precomp_struct jarg2_);
  public final static native long acb_dirichlet_platt_ws_precomp_struct_pre_c_get(long jarg1, acb_dirichlet_platt_ws_precomp_struct jarg1_);
  public final static native void acb_dirichlet_platt_ws_precomp_struct_pre_i_set(long jarg1, acb_dirichlet_platt_ws_precomp_struct jarg1_, long jarg2, acb_dirichlet_platt_i_precomp_struct jarg2_);
  public final static native long acb_dirichlet_platt_ws_precomp_struct_pre_i_get(long jarg1, acb_dirichlet_platt_ws_precomp_struct jarg1_);
  public final static native long new_acb_dirichlet_platt_ws_precomp_struct();
  public final static native void delete_acb_dirichlet_platt_ws_precomp_struct(long jarg1);
  public final static native void acb_dirichlet_platt_c_precomp_init(long jarg1, acb_dirichlet_platt_c_precomp_struct jarg1_, int jarg2, long jarg3, arb_struct jarg3_, long jarg4, int jarg5);
  public final static native void acb_dirichlet_platt_c_precomp_clear(long jarg1, acb_dirichlet_platt_c_precomp_struct jarg1_);
  public final static native void acb_dirichlet_platt_c_bound_precomp(long jarg1, arb_struct jarg1_, long jarg2, acb_dirichlet_platt_c_precomp_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, long jarg5, arb_struct jarg5_, int jarg6, int jarg7);
  public final static native void acb_dirichlet_platt_c_bound(long jarg1, arb_struct jarg1_, int jarg2, long jarg3, arb_struct jarg3_, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_dirichlet_platt_i_precomp_init(long jarg1, acb_dirichlet_platt_i_precomp_struct jarg1_, int jarg2, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_dirichlet_platt_i_precomp_clear(long jarg1, acb_dirichlet_platt_i_precomp_struct jarg1_);
  public final static native void acb_dirichlet_platt_i_bound_precomp(long jarg1, arb_struct jarg1_, long jarg2, acb_dirichlet_platt_i_precomp_struct jarg2_, long jarg3, acb_dirichlet_platt_c_precomp_struct jarg3_, long jarg4, arb_struct jarg4_, int jarg5, long jarg6, arb_struct jarg6_, int jarg7, int jarg8);
  public final static native void acb_dirichlet_platt_i_bound(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_dirichlet_platt_ws_precomp_init(long jarg1, acb_dirichlet_platt_ws_precomp_struct jarg1_, int jarg2, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_dirichlet_platt_ws_precomp_clear(long jarg1, acb_dirichlet_platt_ws_precomp_struct jarg1_);
  public final static native void acb_dirichlet_platt_ws_interpolation_precomp(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, acb_dirichlet_platt_ws_precomp_struct jarg3_, long jarg4, arb_struct jarg4_, long jarg5, arb_struct jarg5_, long jarg6, int jarg7, int jarg8, int jarg9, long jarg10, arb_struct jarg10_, int jarg11, int jarg12);
  public final static native void acb_dirichlet_platt_ws_interpolation(long jarg1, arb_struct jarg1_, long jarg2, arf_struct jarg2_, long jarg3, arb_struct jarg3_, long jarg4, arb_struct jarg4_, long jarg5, int jarg6, int jarg7, int jarg8, long jarg9, arb_struct jarg9_, int jarg10, int jarg11);
  public final static native void acb_dirichlet_platt_bound_C3(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_dirichlet_platt_scaled_lambda(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void acb_dirichlet_platt_scaled_lambda_vec(long jarg1, arb_struct jarg1_, long jarg2, int jarg3, int jarg4, int jarg5);
  public final static native void acb_dirichlet_platt_beta(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, int jarg3);
  public final static native void acb_dirichlet_platt_lemma_32(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void acb_dirichlet_platt_lemma_A5(long jarg1, arb_struct jarg1_, int jarg2, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_dirichlet_platt_lemma_A7(long jarg1, arb_struct jarg1_, int jarg2, long jarg3, arb_struct jarg3_, long jarg4, arb_struct jarg4_, int jarg5, int jarg6, int jarg7);
  public final static native void acb_dirichlet_platt_lemma_A9(long jarg1, arb_struct jarg1_, int jarg2, long jarg3, arb_struct jarg3_, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_dirichlet_platt_lemma_A11(long jarg1, arb_struct jarg1_, long jarg2, arb_struct jarg2_, long jarg3, arb_struct jarg3_, int jarg4, int jarg5);
  public final static native void acb_dirichlet_platt_lemma_B1(long jarg1, arb_struct jarg1_, int jarg2, long jarg3, arb_struct jarg3_, long jarg4, arb_struct jarg4_, int jarg5, int jarg6);
  public final static native void acb_dirichlet_platt_lemma_B2(long jarg1, arb_struct jarg1_, int jarg2, long jarg3, arb_struct jarg3_, long jarg4, arb_struct jarg4_, int jarg5);
  public final static native void acb_dirichlet_platt_multieval(long jarg1, arb_struct jarg1_, long jarg2, int jarg3, int jarg4, long jarg5, arb_struct jarg5_, int jarg6, int jarg7, int jarg8, int jarg9);
  public final static native int _acb_dirichlet_platt_local_hardy_z_zeros(long jarg1, arb_struct jarg1_, long jarg2, int jarg3, long jarg4, int jarg5, int jarg6, long jarg7, arb_struct jarg7_, int jarg8, int jarg9, int jarg10, int jarg11, long jarg12, arb_struct jarg12_, int jarg13, int jarg14);
  public final static native int acb_dirichlet_platt_local_hardy_z_zeros(long jarg1, arb_struct jarg1_, long jarg2, int jarg3, int jarg4);
  public final static native void acb_dirichlet_dft_index(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, dirichlet_group_struct jarg3_, int jarg4);
  public final static native void acb_dirichlet_dft(long jarg1, acb_struct jarg1_, long jarg2, acb_struct jarg2_, long jarg3, dirichlet_group_struct jarg3_, int jarg4);
  public final static native void acb_vec_printd(long jarg1, acb_struct jarg1_, int jarg2, int jarg3);
}
